
The Knowledge Scheme currently contains the following lemmas:
	(forall ((Lst) (Lst)) ((append _qv_0 _qv_1)=(append _qv_1 _qv_0)))
	(forall ((Lst) (Lst) (Lst)) ((append (append _qv_2 _qv_3) _qv_4)=(append _qv_2 (append _qv_3 _qv_4))))
	(forall ((Lst)) ((rev (rev _qv_5))=_qv_5))
	(forall ((Lst) (Lst)) ((qreva _qv_6 _qv_7)=(qreva _qv_7 _qv_6)))
	(forall ((Lst) (Lst) (Lst)) ((qreva (qreva _qv_8 _qv_9) _qv_10)=(qreva _qv_8 (qreva _qv_9 _qv_10))))
	(forall ((Lst) (Lst) (Lst)) ((qreva _qv_11 (append _qv_12 _qv_13))=(append (qreva _qv_11 _qv_12) (qreva _qv_11 _qv_13))))
	(forall ((Lst) (Lst) (Lst)) ((append _qv_14 (qreva _qv_15 _qv_16))=(qreva (append _qv_14 _qv_15) (append _qv_14 _qv_16))))
	(forall ((Lst) (Lst)) ((rev (append _qv_17 _qv_18))=(append (rev _qv_17) (rev _qv_18))))
	(forall ((Lst) (Lst)) ((rev (append _qv_17 _qv_18))=(append (rev _qv_18) (rev _qv_17))))
	(forall ((Lst) (Lst)) ((rev (qreva _qv_19 _qv_20))=(qreva (rev _qv_19) (rev _qv_20))))
	(forall ((Lst) (Lst)) ((rev (qreva _qv_19 _qv_20))=(qreva (rev _qv_20) (rev _qv_19))))

Simplified goal: (forall ((Lst) (Lst)) ((append (rev x) y)=(qreva x y)))


Base case:       ((append (rev nil) _v_21)=(qreva nil _v_21))
{
  proven trivially
}
Inductive step:  ((append (rev (cons _t_22 _t_23)) _v_21)=(qreva (cons _t_22 _t_23) _v_21))
{
  {
    ====================
    | Assumptions [0]: ((rev nil)=nil)
    | Assumptions [1]: (forall ((Lst)) ((append nil _qv_1)=_qv_1))
    | Assumptions [2]: (forall (INT (Lst) (Lst)) ((append (cons _qv_2 _qv_3) _qv_4)=(cons _qv_2 (append _qv_3 _qv_4))))
    | Assumptions [3]: (forall (INT (Lst)) ((rev (cons _qv_5 _qv_6))=(append (rev _qv_6) (cons _qv_5 nil))))
    | Assumptions [4]: (forall ((Lst)) ((qreva nil _qv_7)=_qv_7))
    | Assumptions [5]: (forall ((Lst) (Lst) INT) ((qreva (cons _qv_10 _qv_8) _qv_9)=(qreva _qv_8 (cons _qv_10 _qv_9))))
    | Assumptions [6]: (forall ((Lst)) ((append (rev _t_23) y)=(qreva _t_23 y)))
    | Assumptions [7]: (forall ((Lst)) ((qreva _t_23 y)=(append (rev _t_23) y)))
    ====================
  }
  rewritten [3]: ((append (append (rev _t_23) (cons _t_22 nil)) _v_21)=(qreva (cons _t_22 _t_23) _v_21))
  rewritten [5]: ((append (append (rev _t_23) (cons _t_22 nil)) _v_21)=(qreva _t_23 (cons _t_22 _v_21)))
  rewritten [6]: ((append (qreva _t_23 (cons _t_22 nil)) _v_21)=(qreva _t_23 (cons _t_22 _v_21)))
  rewritten [7]: ((append (qreva _t_23 (cons _t_22 nil)) _v_21)=(append (rev _t_23) (cons _t_22 _v_21)))
  rewritten [7]: ((append (append (rev _t_23) (cons _t_22 nil)) _v_21)=(append (rev _t_23) (cons _t_22 _v_21)))

The Knowledge Scheme currently contains the following lemmas:
	(forall ((Lst) (Lst)) ((append _qv_25 _qv_26)=(append _qv_26 _qv_25)))
	(forall ((Lst) (Lst) (Lst)) ((append (append _qv_27 _qv_28) _qv_29)=(append _qv_27 (append _qv_28 _qv_29))))
	(forall ((Lst)) ((rev (rev _qv_30))=_qv_30))
	(forall ((Lst) (Lst)) ((qreva _qv_31 _qv_32)=(qreva _qv_32 _qv_31)))
	(forall ((Lst) (Lst) (Lst)) ((qreva (qreva _qv_33 _qv_34) _qv_35)=(qreva _qv_33 (qreva _qv_34 _qv_35))))
	(forall ((Lst) (Lst) (Lst)) ((qreva _qv_36 (append _qv_37 _qv_38))=(append (qreva _qv_36 _qv_37) (qreva _qv_36 _qv_38))))
	(forall ((Lst) (Lst) (Lst)) ((append _qv_39 (qreva _qv_40 _qv_41))=(qreva (append _qv_39 _qv_40) (append _qv_39 _qv_41))))
	(forall ((Lst) (Lst)) ((rev (append _qv_42 _qv_43))=(append (rev _qv_42) (rev _qv_43))))
	(forall ((Lst) (Lst)) ((rev (append _qv_42 _qv_43))=(append (rev _qv_43) (rev _qv_42))))
	(forall ((Lst) (Lst)) ((rev (qreva _qv_44 _qv_45))=(qreva (rev _qv_44) (rev _qv_45))))
	(forall ((Lst) (Lst)) ((rev (qreva _qv_44 _qv_45))=(qreva (rev _qv_45) (rev _qv_44))))

  proven by induction: ((append (append _w_24 (cons _t_22 nil)) _v_21)=(append _w_24 (cons _t_22 _v_21)))
  rewriting done
  rewriting done
  rewriting done
  rewriting done
}

Proved
unsat
