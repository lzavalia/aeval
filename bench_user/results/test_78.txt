
The Knowledge Scheme currently contains the following lemmas:
	(forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
	(forall ((Nat) (Nat)) ((plus _qv_1 _qv_2)=(plus _qv_2 _qv_1)))
	(forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_3 _qv_4) _qv_5)=(plus _qv_3 (plus _qv_4 _qv_5))))
	(forall ((Nat) (Nat)) ((mult _qv_6 _qv_7)=(mult _qv_7 _qv_6)))
	(forall ((Nat) (Nat) (Nat)) ((mult (mult _qv_8 _qv_9) _qv_10)=(mult _qv_8 (mult _qv_9 _qv_10))))
	(forall ((Nat)) ((tri (tri _qv_11))=_qv_11))
	(forall ((Nat)) ((cubes (cubes _qv_12))=_qv_12))
	(forall ((Nat)) (0<=(nat-to-int _qv_13)))
	(forall ((Nat)) ((nat-to-int (succ _qv_14))=(nat-to-int _qv_14)))
	(forall ((Nat)) ((nat-to-int (tri _qv_15))=(nat-to-int _qv_15)))
	(forall ((Nat)) ((nat-to-int (cubes _qv_16))=(nat-to-int _qv_16)))
	(forall ((Nat) (Nat) (Nat)) ((mult _qv_17 (plus _qv_18 _qv_19))=(plus (mult _qv_17 _qv_18) (mult _qv_17 _qv_19))))
	(forall ((Nat) (Nat) (Nat)) ((plus _qv_20 (mult _qv_21 _qv_22))=(mult (plus _qv_20 _qv_21) (plus _qv_20 _qv_22))))
	(forall ((Nat) (Nat)) ((succ (plus _qv_23 _qv_24))=(plus (succ _qv_23) (succ _qv_24))))
	(forall ((Nat) (Nat)) ((succ (plus _qv_23 _qv_24))=(plus (succ _qv_24) (succ _qv_23))))
	(forall ((Nat) (Nat)) ((succ (mult _qv_25 _qv_26))=(mult (succ _qv_25) (succ _qv_26))))
	(forall ((Nat) (Nat)) ((succ (mult _qv_25 _qv_26))=(mult (succ _qv_26) (succ _qv_25))))
	(forall ((Nat) (Nat)) ((tri (plus _qv_27 _qv_28))=(plus (tri _qv_27) (tri _qv_28))))
	(forall ((Nat) (Nat)) ((tri (plus _qv_27 _qv_28))=(plus (tri _qv_28) (tri _qv_27))))
	(forall ((Nat) (Nat)) ((tri (mult _qv_29 _qv_30))=(mult (tri _qv_29) (tri _qv_30))))
	(forall ((Nat) (Nat)) ((tri (mult _qv_29 _qv_30))=(mult (tri _qv_30) (tri _qv_29))))
	(forall ((Nat) (Nat)) ((cubes (plus _qv_31 _qv_32))=(plus (cubes _qv_31) (cubes _qv_32))))
	(forall ((Nat) (Nat)) ((cubes (plus _qv_31 _qv_32))=(plus (cubes _qv_32) (cubes _qv_31))))
	(forall ((Nat) (Nat)) ((cubes (mult _qv_33 _qv_34))=(mult (cubes _qv_33) (cubes _qv_34))))
	(forall ((Nat) (Nat)) ((cubes (mult _qv_33 _qv_34))=(mult (cubes _qv_34) (cubes _qv_33))))

Simplified goal: (forall ((Nat) (Nat)) ((mult x (plus y y))=(mult y (plus x x))))


Base case:       ((mult zero (plus _v_35 _v_35))=(mult _v_35 (plus zero zero)))
{
  {
    ====================
    | Assumptions [0]: ((tri zero)=zero)
    | Assumptions [1]: ((cubes zero)=zero)
    | Assumptions [2]: ((nat-to-int zero)=0)
    | Assumptions [3]: (forall ((Nat)) ((plus zero _qv_1)=_qv_1))
    | Assumptions [4]: (forall ((Nat) (Nat)) ((plus (succ _qv_2) _qv_3)=(succ (plus _qv_2 _qv_3))))
    | Assumptions [5]: (forall ((Nat)) ((mult zero _qv_4)=zero))
    | Assumptions [6]: (forall ((Nat) (Nat)) ((mult (succ _qv_5) _qv_6)=(plus (mult _qv_5 _qv_6) _qv_6)))
    | Assumptions [7]: (forall ((Nat)) ((tri (succ _qv_7))=(plus (tri _qv_7) (succ _qv_7))))
    | Assumptions [8]: (forall ((Nat)) ((cubes (succ _qv_8))=(plus (cubes _qv_8) (mult (succ _qv_8) (mult (succ _qv_8) (succ _qv_8))))))
    | Assumptions [9]: (forall ((Nat)) ((nat-to-int _qv_9)>=0))
    | Assumptions [10]: (forall ((Nat) (Nat)) (((nat-to-int _qv_10)=(nat-to-int _qv_11))->(_qv_10=_qv_11)))
    | Assumptions [11]: (forall ((Nat)) ((nat-to-int (succ _qv_12))=(1+(nat-to-int _qv_12))))
    | Assumptions [12]: (forall ((Nat) (Nat)) ((nat-to-int (plus _qv_13 _qv_14))=((nat-to-int _qv_13)+(nat-to-int _qv_14))))
    | Assumptions [13]: (forall ((Nat) (Nat)) ((plus _qv_15 _qv_16)=(plus _qv_16 _qv_15)))
    | Assumptions [14]: (forall ((Nat) (Nat) (Nat)) ((plus _qv_17 (plus _qv_18 _qv_19))=(plus (plus _qv_18 _qv_17) _qv_19)))
    | Assumptions [15]: (forall ((Nat) (Nat)) ((mult _qv_20 _qv_21)=(mult _qv_21 _qv_20)))
    | Assumptions [16]: (forall ((Nat) (Nat) (Nat)) ((mult _qv_22 (mult _qv_23 _qv_24))=(mult (mult _qv_23 _qv_22) _qv_24)))
    ====================
  }
  rewritten [3]: ((mult zero (plus _v_35 _v_35))=(mult _v_35 zero))
  rewritten [5]: (zero=(mult _v_35 zero))
  rewritten [10]: ((nat-to-int zero)=(nat-to-int (mult _v_35 zero)))
  rewritten [2]: (0=(nat-to-int (mult _v_35 zero)))
  rewritten [15]: (0=(nat-to-int (mult zero _v_35)))
  rewritten [5]: (0=(nat-to-int zero))
  applied [2]
  rewriting done
  rewriting done
  rewriting done
  rewriting done
  rewriting done
  rewriting done
}
Inductive step:  ((mult (succ _t_36) (plus _v_35 _v_35))=(mult _v_35 (plus (succ _t_36) (succ _t_36))))
{
  {
    ====================
    | Assumptions [0]: ((tri zero)=zero)
    | Assumptions [1]: ((cubes zero)=zero)
    | Assumptions [2]: ((nat-to-int zero)=0)
    | Assumptions [3]: (forall ((Nat)) ((plus zero _qv_1)=_qv_1))
    | Assumptions [4]: (forall ((Nat) (Nat)) ((plus (succ _qv_2) _qv_3)=(succ (plus _qv_2 _qv_3))))
    | Assumptions [5]: (forall ((Nat)) ((mult zero _qv_4)=zero))
    | Assumptions [6]: (forall ((Nat) (Nat)) ((mult (succ _qv_5) _qv_6)=(plus (mult _qv_5 _qv_6) _qv_6)))
    | Assumptions [7]: (forall ((Nat)) ((tri (succ _qv_7))=(plus (tri _qv_7) (succ _qv_7))))
    | Assumptions [8]: (forall ((Nat)) ((cubes (succ _qv_8))=(plus (cubes _qv_8) (mult (succ _qv_8) (mult (succ _qv_8) (succ _qv_8))))))
    | Assumptions [9]: (forall ((Nat)) ((nat-to-int _qv_9)>=0))
    | Assumptions [10]: (forall ((Nat) (Nat)) (((nat-to-int _qv_10)=(nat-to-int _qv_11))->(_qv_10=_qv_11)))
    | Assumptions [11]: (forall ((Nat)) ((nat-to-int (succ _qv_12))=(1+(nat-to-int _qv_12))))
    | Assumptions [12]: (forall ((Nat) (Nat)) ((nat-to-int (plus _qv_13 _qv_14))=((nat-to-int _qv_13)+(nat-to-int _qv_14))))
    | Assumptions [13]: (forall ((Nat) (Nat)) ((plus _qv_15 _qv_16)=(plus _qv_16 _qv_15)))
    | Assumptions [14]: (forall ((Nat) (Nat) (Nat)) ((plus _qv_17 (plus _qv_18 _qv_19))=(plus (plus _qv_18 _qv_17) _qv_19)))
    | Assumptions [15]: (forall ((Nat) (Nat)) ((mult _qv_20 _qv_21)=(mult _qv_21 _qv_20)))
    | Assumptions [16]: (forall ((Nat) (Nat) (Nat)) ((mult _qv_22 (mult _qv_23 _qv_24))=(mult (mult _qv_23 _qv_22) _qv_24)))
    | Assumptions [17]: (forall ((Nat)) ((mult _t_36 (plus y y))=(mult y (plus _t_36 _t_36))))
    | Assumptions [18]: (forall ((Nat)) ((mult y (plus _t_36 _t_36))=(mult _t_36 (plus y y))))
    ====================
  }
  rewritten [4]: ((mult (succ _t_36) (plus _v_35 _v_35))=(mult _v_35 (succ (plus _t_36 (succ _t_36)))))
  rewritten [6]: ((plus (mult _t_36 (plus _v_35 _v_35)) (plus _v_35 _v_35))=(mult _v_35 (succ (plus _t_36 (succ _t_36)))))
  rewritten [10]: ((nat-to-int (plus (mult _t_36 (plus _v_35 _v_35)) (plus _v_35 _v_35)))=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
  rewritten [12]: (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(nat-to-int (plus _v_35 _v_35)))=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
  rewritten [12]: (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+((nat-to-int _v_35)+(nat-to-int _v_35)))=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
  rewritten [2]: (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(2*(nat-to-int _v_35)))=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
  rewritten [13]: (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(2*(nat-to-int _v_35)))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
  Maximum recursion depth reached
CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(2*(nat-to-int _v_35)))=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(2*(nat-to-int _v_35)))=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_1 _qv_2)=(plus _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(2*(nat-to-int _v_35)))=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_3 _qv_4) _qv_5)=(plus _qv_3 (plus _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(2*(nat-to-int _v_35)))=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((mult _qv_6 _qv_7)=(mult _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(2*(nat-to-int _v_35)))=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((mult (mult _qv_8 _qv_9) _qv_10)=(mult _qv_8 (mult _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(2*(nat-to-int _v_35)))=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat)) ((tri (tri _qv_11))=_qv_11))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(2*(nat-to-int _v_35)))=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat)) ((cubes (cubes _qv_12))=_qv_12))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(2*(nat-to-int _v_35)))=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(2*(nat-to-int _v_35)))=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_14))=(nat-to-int _qv_14)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(2*(nat-to-int _v_35)))=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat)) ((nat-to-int (tri _qv_15))=(nat-to-int _qv_15)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(2*(nat-to-int _v_35)))=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat)) ((nat-to-int (cubes _qv_16))=(nat-to-int _qv_16)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(2*(nat-to-int _v_35)))=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((mult _qv_17 (plus _qv_18 _qv_19))=(plus (mult _qv_17 _qv_18) (mult _qv_17 _qv_19))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(2*(nat-to-int _v_35)))=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus _qv_20 (mult _qv_21 _qv_22))=(mult (plus _qv_20 _qv_21) (plus _qv_20 _qv_22))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(2*(nat-to-int _v_35)))=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_23 _qv_24))=(plus (succ _qv_23) (succ _qv_24))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(2*(nat-to-int _v_35)))=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_23 _qv_24))=(plus (succ _qv_24) (succ _qv_23))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(2*(nat-to-int _v_35)))=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (mult _qv_25 _qv_26))=(mult (succ _qv_25) (succ _qv_26))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(2*(nat-to-int _v_35)))=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (mult _qv_25 _qv_26))=(mult (succ _qv_26) (succ _qv_25))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(2*(nat-to-int _v_35)))=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((tri (plus _qv_27 _qv_28))=(plus (tri _qv_27) (tri _qv_28))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(2*(nat-to-int _v_35)))=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((tri (plus _qv_27 _qv_28))=(plus (tri _qv_28) (tri _qv_27))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(2*(nat-to-int _v_35)))=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((tri (mult _qv_29 _qv_30))=(mult (tri _qv_29) (tri _qv_30))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(2*(nat-to-int _v_35)))=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((tri (mult _qv_29 _qv_30))=(mult (tri _qv_30) (tri _qv_29))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(2*(nat-to-int _v_35)))=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((cubes (plus _qv_31 _qv_32))=(plus (cubes _qv_31) (cubes _qv_32))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(2*(nat-to-int _v_35)))=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((cubes (plus _qv_31 _qv_32))=(plus (cubes _qv_32) (cubes _qv_31))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(2*(nat-to-int _v_35)))=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((cubes (mult _qv_33 _qv_34))=(mult (cubes _qv_33) (cubes _qv_34))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(2*(nat-to-int _v_35)))=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((cubes (mult _qv_33 _qv_34))=(mult (cubes _qv_34) (cubes _qv_33))))
USE ASSUMPTION FAILED

  backtrack to: (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(2*(nat-to-int _v_35)))=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
  rewritten [15]: (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(2*(nat-to-int _v_35)))=(nat-to-int (mult (succ (plus _t_36 (succ _t_36))) _v_35)))
  Maximum recursion depth reached
CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(2*(nat-to-int _v_35)))=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(2*(nat-to-int _v_35)))=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_1 _qv_2)=(plus _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(2*(nat-to-int _v_35)))=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_3 _qv_4) _qv_5)=(plus _qv_3 (plus _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(2*(nat-to-int _v_35)))=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((mult _qv_6 _qv_7)=(mult _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(2*(nat-to-int _v_35)))=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((mult (mult _qv_8 _qv_9) _qv_10)=(mult _qv_8 (mult _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(2*(nat-to-int _v_35)))=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat)) ((tri (tri _qv_11))=_qv_11))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(2*(nat-to-int _v_35)))=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat)) ((cubes (cubes _qv_12))=_qv_12))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(2*(nat-to-int _v_35)))=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(2*(nat-to-int _v_35)))=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_14))=(nat-to-int _qv_14)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(2*(nat-to-int _v_35)))=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat)) ((nat-to-int (tri _qv_15))=(nat-to-int _qv_15)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(2*(nat-to-int _v_35)))=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat)) ((nat-to-int (cubes _qv_16))=(nat-to-int _qv_16)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(2*(nat-to-int _v_35)))=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((mult _qv_17 (plus _qv_18 _qv_19))=(plus (mult _qv_17 _qv_18) (mult _qv_17 _qv_19))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(2*(nat-to-int _v_35)))=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus _qv_20 (mult _qv_21 _qv_22))=(mult (plus _qv_20 _qv_21) (plus _qv_20 _qv_22))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(2*(nat-to-int _v_35)))=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_23 _qv_24))=(plus (succ _qv_23) (succ _qv_24))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(2*(nat-to-int _v_35)))=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_23 _qv_24))=(plus (succ _qv_24) (succ _qv_23))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(2*(nat-to-int _v_35)))=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (mult _qv_25 _qv_26))=(mult (succ _qv_25) (succ _qv_26))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(2*(nat-to-int _v_35)))=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (mult _qv_25 _qv_26))=(mult (succ _qv_26) (succ _qv_25))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(2*(nat-to-int _v_35)))=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((tri (plus _qv_27 _qv_28))=(plus (tri _qv_27) (tri _qv_28))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(2*(nat-to-int _v_35)))=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((tri (plus _qv_27 _qv_28))=(plus (tri _qv_28) (tri _qv_27))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(2*(nat-to-int _v_35)))=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((tri (mult _qv_29 _qv_30))=(mult (tri _qv_29) (tri _qv_30))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(2*(nat-to-int _v_35)))=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((tri (mult _qv_29 _qv_30))=(mult (tri _qv_30) (tri _qv_29))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(2*(nat-to-int _v_35)))=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((cubes (plus _qv_31 _qv_32))=(plus (cubes _qv_31) (cubes _qv_32))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(2*(nat-to-int _v_35)))=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((cubes (plus _qv_31 _qv_32))=(plus (cubes _qv_32) (cubes _qv_31))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(2*(nat-to-int _v_35)))=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((cubes (mult _qv_33 _qv_34))=(mult (cubes _qv_33) (cubes _qv_34))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(2*(nat-to-int _v_35)))=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((cubes (mult _qv_33 _qv_34))=(mult (cubes _qv_34) (cubes _qv_33))))
USE ASSUMPTION FAILED

  backtrack to: (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(2*(nat-to-int _v_35)))=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
  rewritten [15]: (((nat-to-int (mult (plus _v_35 _v_35) _t_36))+(2*(nat-to-int _v_35)))=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
  Maximum recursion depth reached
CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(2*(nat-to-int _v_35)))=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(2*(nat-to-int _v_35)))=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_1 _qv_2)=(plus _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(2*(nat-to-int _v_35)))=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_3 _qv_4) _qv_5)=(plus _qv_3 (plus _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(2*(nat-to-int _v_35)))=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((mult _qv_6 _qv_7)=(mult _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(2*(nat-to-int _v_35)))=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((mult (mult _qv_8 _qv_9) _qv_10)=(mult _qv_8 (mult _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(2*(nat-to-int _v_35)))=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat)) ((tri (tri _qv_11))=_qv_11))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(2*(nat-to-int _v_35)))=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat)) ((cubes (cubes _qv_12))=_qv_12))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(2*(nat-to-int _v_35)))=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(2*(nat-to-int _v_35)))=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_14))=(nat-to-int _qv_14)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(2*(nat-to-int _v_35)))=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat)) ((nat-to-int (tri _qv_15))=(nat-to-int _qv_15)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(2*(nat-to-int _v_35)))=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat)) ((nat-to-int (cubes _qv_16))=(nat-to-int _qv_16)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(2*(nat-to-int _v_35)))=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((mult _qv_17 (plus _qv_18 _qv_19))=(plus (mult _qv_17 _qv_18) (mult _qv_17 _qv_19))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(2*(nat-to-int _v_35)))=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus _qv_20 (mult _qv_21 _qv_22))=(mult (plus _qv_20 _qv_21) (plus _qv_20 _qv_22))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(2*(nat-to-int _v_35)))=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_23 _qv_24))=(plus (succ _qv_23) (succ _qv_24))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(2*(nat-to-int _v_35)))=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_23 _qv_24))=(plus (succ _qv_24) (succ _qv_23))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(2*(nat-to-int _v_35)))=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (mult _qv_25 _qv_26))=(mult (succ _qv_25) (succ _qv_26))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(2*(nat-to-int _v_35)))=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (mult _qv_25 _qv_26))=(mult (succ _qv_26) (succ _qv_25))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(2*(nat-to-int _v_35)))=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((tri (plus _qv_27 _qv_28))=(plus (tri _qv_27) (tri _qv_28))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(2*(nat-to-int _v_35)))=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((tri (plus _qv_27 _qv_28))=(plus (tri _qv_28) (tri _qv_27))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(2*(nat-to-int _v_35)))=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((tri (mult _qv_29 _qv_30))=(mult (tri _qv_29) (tri _qv_30))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(2*(nat-to-int _v_35)))=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((tri (mult _qv_29 _qv_30))=(mult (tri _qv_30) (tri _qv_29))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(2*(nat-to-int _v_35)))=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((cubes (plus _qv_31 _qv_32))=(plus (cubes _qv_31) (cubes _qv_32))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(2*(nat-to-int _v_35)))=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((cubes (plus _qv_31 _qv_32))=(plus (cubes _qv_32) (cubes _qv_31))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(2*(nat-to-int _v_35)))=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((cubes (mult _qv_33 _qv_34))=(mult (cubes _qv_33) (cubes _qv_34))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(2*(nat-to-int _v_35)))=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((cubes (mult _qv_33 _qv_34))=(mult (cubes _qv_34) (cubes _qv_33))))
USE ASSUMPTION FAILED

  backtrack to: (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(2*(nat-to-int _v_35)))=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
  rewritten [17]: (((nat-to-int (mult _v_35 (plus _t_36 _t_36)))+(2*(nat-to-int _v_35)))=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
  Maximum recursion depth reached
CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(2*(nat-to-int _v_35)))=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(2*(nat-to-int _v_35)))=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_1 _qv_2)=(plus _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(2*(nat-to-int _v_35)))=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_3 _qv_4) _qv_5)=(plus _qv_3 (plus _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(2*(nat-to-int _v_35)))=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((mult _qv_6 _qv_7)=(mult _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(2*(nat-to-int _v_35)))=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((mult (mult _qv_8 _qv_9) _qv_10)=(mult _qv_8 (mult _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(2*(nat-to-int _v_35)))=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat)) ((tri (tri _qv_11))=_qv_11))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(2*(nat-to-int _v_35)))=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat)) ((cubes (cubes _qv_12))=_qv_12))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(2*(nat-to-int _v_35)))=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(2*(nat-to-int _v_35)))=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_14))=(nat-to-int _qv_14)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(2*(nat-to-int _v_35)))=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat)) ((nat-to-int (tri _qv_15))=(nat-to-int _qv_15)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(2*(nat-to-int _v_35)))=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat)) ((nat-to-int (cubes _qv_16))=(nat-to-int _qv_16)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(2*(nat-to-int _v_35)))=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((mult _qv_17 (plus _qv_18 _qv_19))=(plus (mult _qv_17 _qv_18) (mult _qv_17 _qv_19))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(2*(nat-to-int _v_35)))=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus _qv_20 (mult _qv_21 _qv_22))=(mult (plus _qv_20 _qv_21) (plus _qv_20 _qv_22))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(2*(nat-to-int _v_35)))=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_23 _qv_24))=(plus (succ _qv_23) (succ _qv_24))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(2*(nat-to-int _v_35)))=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_23 _qv_24))=(plus (succ _qv_24) (succ _qv_23))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(2*(nat-to-int _v_35)))=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (mult _qv_25 _qv_26))=(mult (succ _qv_25) (succ _qv_26))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(2*(nat-to-int _v_35)))=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (mult _qv_25 _qv_26))=(mult (succ _qv_26) (succ _qv_25))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(2*(nat-to-int _v_35)))=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((tri (plus _qv_27 _qv_28))=(plus (tri _qv_27) (tri _qv_28))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(2*(nat-to-int _v_35)))=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((tri (plus _qv_27 _qv_28))=(plus (tri _qv_28) (tri _qv_27))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(2*(nat-to-int _v_35)))=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((tri (mult _qv_29 _qv_30))=(mult (tri _qv_29) (tri _qv_30))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(2*(nat-to-int _v_35)))=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((tri (mult _qv_29 _qv_30))=(mult (tri _qv_30) (tri _qv_29))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(2*(nat-to-int _v_35)))=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((cubes (plus _qv_31 _qv_32))=(plus (cubes _qv_31) (cubes _qv_32))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(2*(nat-to-int _v_35)))=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((cubes (plus _qv_31 _qv_32))=(plus (cubes _qv_32) (cubes _qv_31))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(2*(nat-to-int _v_35)))=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((cubes (mult _qv_33 _qv_34))=(mult (cubes _qv_33) (cubes _qv_34))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(2*(nat-to-int _v_35)))=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((cubes (mult _qv_33 _qv_34))=(mult (cubes _qv_34) (cubes _qv_33))))
USE ASSUMPTION FAILED

  backtrack to: (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(2*(nat-to-int _v_35)))=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
  rewritten [13]: (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(2*(nat-to-int _v_35)))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
  Maximum recursion depth reached
CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(2*(nat-to-int _v_35)))=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(2*(nat-to-int _v_35)))=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_1 _qv_2)=(plus _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(2*(nat-to-int _v_35)))=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_3 _qv_4) _qv_5)=(plus _qv_3 (plus _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(2*(nat-to-int _v_35)))=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((mult _qv_6 _qv_7)=(mult _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(2*(nat-to-int _v_35)))=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((mult (mult _qv_8 _qv_9) _qv_10)=(mult _qv_8 (mult _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(2*(nat-to-int _v_35)))=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat)) ((tri (tri _qv_11))=_qv_11))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(2*(nat-to-int _v_35)))=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat)) ((cubes (cubes _qv_12))=_qv_12))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(2*(nat-to-int _v_35)))=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(2*(nat-to-int _v_35)))=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_14))=(nat-to-int _qv_14)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(2*(nat-to-int _v_35)))=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat)) ((nat-to-int (tri _qv_15))=(nat-to-int _qv_15)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(2*(nat-to-int _v_35)))=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat)) ((nat-to-int (cubes _qv_16))=(nat-to-int _qv_16)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(2*(nat-to-int _v_35)))=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((mult _qv_17 (plus _qv_18 _qv_19))=(plus (mult _qv_17 _qv_18) (mult _qv_17 _qv_19))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(2*(nat-to-int _v_35)))=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus _qv_20 (mult _qv_21 _qv_22))=(mult (plus _qv_20 _qv_21) (plus _qv_20 _qv_22))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(2*(nat-to-int _v_35)))=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_23 _qv_24))=(plus (succ _qv_23) (succ _qv_24))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(2*(nat-to-int _v_35)))=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_23 _qv_24))=(plus (succ _qv_24) (succ _qv_23))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(2*(nat-to-int _v_35)))=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (mult _qv_25 _qv_26))=(mult (succ _qv_25) (succ _qv_26))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(2*(nat-to-int _v_35)))=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (mult _qv_25 _qv_26))=(mult (succ _qv_26) (succ _qv_25))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(2*(nat-to-int _v_35)))=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((tri (plus _qv_27 _qv_28))=(plus (tri _qv_27) (tri _qv_28))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(2*(nat-to-int _v_35)))=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((tri (plus _qv_27 _qv_28))=(plus (tri _qv_28) (tri _qv_27))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(2*(nat-to-int _v_35)))=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((tri (mult _qv_29 _qv_30))=(mult (tri _qv_29) (tri _qv_30))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(2*(nat-to-int _v_35)))=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((tri (mult _qv_29 _qv_30))=(mult (tri _qv_30) (tri _qv_29))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(2*(nat-to-int _v_35)))=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((cubes (plus _qv_31 _qv_32))=(plus (cubes _qv_31) (cubes _qv_32))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(2*(nat-to-int _v_35)))=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((cubes (plus _qv_31 _qv_32))=(plus (cubes _qv_32) (cubes _qv_31))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(2*(nat-to-int _v_35)))=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((cubes (mult _qv_33 _qv_34))=(mult (cubes _qv_33) (cubes _qv_34))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(2*(nat-to-int _v_35)))=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((cubes (mult _qv_33 _qv_34))=(mult (cubes _qv_34) (cubes _qv_33))))
USE ASSUMPTION FAILED

  backtrack to: (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(2*(nat-to-int _v_35)))=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
  rewritten [15]: (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(2*(nat-to-int _v_35)))=(nat-to-int (mult (succ (plus _t_36 (succ _t_36))) _v_35)))
  Maximum recursion depth reached
CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(2*(nat-to-int _v_35)))=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(2*(nat-to-int _v_35)))=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_1 _qv_2)=(plus _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(2*(nat-to-int _v_35)))=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_3 _qv_4) _qv_5)=(plus _qv_3 (plus _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(2*(nat-to-int _v_35)))=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((mult _qv_6 _qv_7)=(mult _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(2*(nat-to-int _v_35)))=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((mult (mult _qv_8 _qv_9) _qv_10)=(mult _qv_8 (mult _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(2*(nat-to-int _v_35)))=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat)) ((tri (tri _qv_11))=_qv_11))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(2*(nat-to-int _v_35)))=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat)) ((cubes (cubes _qv_12))=_qv_12))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(2*(nat-to-int _v_35)))=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(2*(nat-to-int _v_35)))=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_14))=(nat-to-int _qv_14)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(2*(nat-to-int _v_35)))=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat)) ((nat-to-int (tri _qv_15))=(nat-to-int _qv_15)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(2*(nat-to-int _v_35)))=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat)) ((nat-to-int (cubes _qv_16))=(nat-to-int _qv_16)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(2*(nat-to-int _v_35)))=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((mult _qv_17 (plus _qv_18 _qv_19))=(plus (mult _qv_17 _qv_18) (mult _qv_17 _qv_19))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(2*(nat-to-int _v_35)))=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus _qv_20 (mult _qv_21 _qv_22))=(mult (plus _qv_20 _qv_21) (plus _qv_20 _qv_22))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(2*(nat-to-int _v_35)))=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_23 _qv_24))=(plus (succ _qv_23) (succ _qv_24))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(2*(nat-to-int _v_35)))=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_23 _qv_24))=(plus (succ _qv_24) (succ _qv_23))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(2*(nat-to-int _v_35)))=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (mult _qv_25 _qv_26))=(mult (succ _qv_25) (succ _qv_26))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(2*(nat-to-int _v_35)))=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (mult _qv_25 _qv_26))=(mult (succ _qv_26) (succ _qv_25))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(2*(nat-to-int _v_35)))=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((tri (plus _qv_27 _qv_28))=(plus (tri _qv_27) (tri _qv_28))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(2*(nat-to-int _v_35)))=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((tri (plus _qv_27 _qv_28))=(plus (tri _qv_28) (tri _qv_27))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(2*(nat-to-int _v_35)))=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((tri (mult _qv_29 _qv_30))=(mult (tri _qv_29) (tri _qv_30))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(2*(nat-to-int _v_35)))=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((tri (mult _qv_29 _qv_30))=(mult (tri _qv_30) (tri _qv_29))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(2*(nat-to-int _v_35)))=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((cubes (plus _qv_31 _qv_32))=(plus (cubes _qv_31) (cubes _qv_32))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(2*(nat-to-int _v_35)))=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((cubes (plus _qv_31 _qv_32))=(plus (cubes _qv_32) (cubes _qv_31))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(2*(nat-to-int _v_35)))=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((cubes (mult _qv_33 _qv_34))=(mult (cubes _qv_33) (cubes _qv_34))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(2*(nat-to-int _v_35)))=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((cubes (mult _qv_33 _qv_34))=(mult (cubes _qv_34) (cubes _qv_33))))
USE ASSUMPTION FAILED

  backtrack to: (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(2*(nat-to-int _v_35)))=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
  rewritten [15]: (((nat-to-int (mult (plus _v_35 _v_35) _t_36))+(2*(nat-to-int _v_35)))=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
  Maximum recursion depth reached
CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(2*(nat-to-int _v_35)))=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(2*(nat-to-int _v_35)))=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_1 _qv_2)=(plus _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(2*(nat-to-int _v_35)))=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_3 _qv_4) _qv_5)=(plus _qv_3 (plus _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(2*(nat-to-int _v_35)))=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((mult _qv_6 _qv_7)=(mult _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(2*(nat-to-int _v_35)))=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((mult (mult _qv_8 _qv_9) _qv_10)=(mult _qv_8 (mult _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(2*(nat-to-int _v_35)))=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat)) ((tri (tri _qv_11))=_qv_11))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(2*(nat-to-int _v_35)))=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat)) ((cubes (cubes _qv_12))=_qv_12))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(2*(nat-to-int _v_35)))=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(2*(nat-to-int _v_35)))=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_14))=(nat-to-int _qv_14)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(2*(nat-to-int _v_35)))=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat)) ((nat-to-int (tri _qv_15))=(nat-to-int _qv_15)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(2*(nat-to-int _v_35)))=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat)) ((nat-to-int (cubes _qv_16))=(nat-to-int _qv_16)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(2*(nat-to-int _v_35)))=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((mult _qv_17 (plus _qv_18 _qv_19))=(plus (mult _qv_17 _qv_18) (mult _qv_17 _qv_19))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(2*(nat-to-int _v_35)))=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus _qv_20 (mult _qv_21 _qv_22))=(mult (plus _qv_20 _qv_21) (plus _qv_20 _qv_22))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(2*(nat-to-int _v_35)))=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_23 _qv_24))=(plus (succ _qv_23) (succ _qv_24))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(2*(nat-to-int _v_35)))=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_23 _qv_24))=(plus (succ _qv_24) (succ _qv_23))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(2*(nat-to-int _v_35)))=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (mult _qv_25 _qv_26))=(mult (succ _qv_25) (succ _qv_26))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(2*(nat-to-int _v_35)))=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (mult _qv_25 _qv_26))=(mult (succ _qv_26) (succ _qv_25))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(2*(nat-to-int _v_35)))=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((tri (plus _qv_27 _qv_28))=(plus (tri _qv_27) (tri _qv_28))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(2*(nat-to-int _v_35)))=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((tri (plus _qv_27 _qv_28))=(plus (tri _qv_28) (tri _qv_27))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(2*(nat-to-int _v_35)))=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((tri (mult _qv_29 _qv_30))=(mult (tri _qv_29) (tri _qv_30))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(2*(nat-to-int _v_35)))=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((tri (mult _qv_29 _qv_30))=(mult (tri _qv_30) (tri _qv_29))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(2*(nat-to-int _v_35)))=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((cubes (plus _qv_31 _qv_32))=(plus (cubes _qv_31) (cubes _qv_32))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(2*(nat-to-int _v_35)))=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((cubes (plus _qv_31 _qv_32))=(plus (cubes _qv_32) (cubes _qv_31))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(2*(nat-to-int _v_35)))=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((cubes (mult _qv_33 _qv_34))=(mult (cubes _qv_33) (cubes _qv_34))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(2*(nat-to-int _v_35)))=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((cubes (mult _qv_33 _qv_34))=(mult (cubes _qv_34) (cubes _qv_33))))
USE ASSUMPTION FAILED

  backtrack to: (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(2*(nat-to-int _v_35)))=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
  rewritten [17]: (((nat-to-int (mult _v_35 (plus _t_36 _t_36)))+(2*(nat-to-int _v_35)))=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
  Maximum recursion depth reached
CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(2*(nat-to-int _v_35)))=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(2*(nat-to-int _v_35)))=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_1 _qv_2)=(plus _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(2*(nat-to-int _v_35)))=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_3 _qv_4) _qv_5)=(plus _qv_3 (plus _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(2*(nat-to-int _v_35)))=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((mult _qv_6 _qv_7)=(mult _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(2*(nat-to-int _v_35)))=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((mult (mult _qv_8 _qv_9) _qv_10)=(mult _qv_8 (mult _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(2*(nat-to-int _v_35)))=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat)) ((tri (tri _qv_11))=_qv_11))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(2*(nat-to-int _v_35)))=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat)) ((cubes (cubes _qv_12))=_qv_12))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(2*(nat-to-int _v_35)))=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(2*(nat-to-int _v_35)))=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_14))=(nat-to-int _qv_14)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(2*(nat-to-int _v_35)))=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat)) ((nat-to-int (tri _qv_15))=(nat-to-int _qv_15)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(2*(nat-to-int _v_35)))=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat)) ((nat-to-int (cubes _qv_16))=(nat-to-int _qv_16)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(2*(nat-to-int _v_35)))=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((mult _qv_17 (plus _qv_18 _qv_19))=(plus (mult _qv_17 _qv_18) (mult _qv_17 _qv_19))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(2*(nat-to-int _v_35)))=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus _qv_20 (mult _qv_21 _qv_22))=(mult (plus _qv_20 _qv_21) (plus _qv_20 _qv_22))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(2*(nat-to-int _v_35)))=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_23 _qv_24))=(plus (succ _qv_23) (succ _qv_24))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(2*(nat-to-int _v_35)))=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_23 _qv_24))=(plus (succ _qv_24) (succ _qv_23))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(2*(nat-to-int _v_35)))=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (mult _qv_25 _qv_26))=(mult (succ _qv_25) (succ _qv_26))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(2*(nat-to-int _v_35)))=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (mult _qv_25 _qv_26))=(mult (succ _qv_26) (succ _qv_25))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(2*(nat-to-int _v_35)))=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((tri (plus _qv_27 _qv_28))=(plus (tri _qv_27) (tri _qv_28))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(2*(nat-to-int _v_35)))=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((tri (plus _qv_27 _qv_28))=(plus (tri _qv_28) (tri _qv_27))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(2*(nat-to-int _v_35)))=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((tri (mult _qv_29 _qv_30))=(mult (tri _qv_29) (tri _qv_30))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(2*(nat-to-int _v_35)))=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((tri (mult _qv_29 _qv_30))=(mult (tri _qv_30) (tri _qv_29))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(2*(nat-to-int _v_35)))=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((cubes (plus _qv_31 _qv_32))=(plus (cubes _qv_31) (cubes _qv_32))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(2*(nat-to-int _v_35)))=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((cubes (plus _qv_31 _qv_32))=(plus (cubes _qv_32) (cubes _qv_31))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(2*(nat-to-int _v_35)))=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((cubes (mult _qv_33 _qv_34))=(mult (cubes _qv_33) (cubes _qv_34))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(2*(nat-to-int _v_35)))=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((cubes (mult _qv_33 _qv_34))=(mult (cubes _qv_34) (cubes _qv_33))))
USE ASSUMPTION FAILED

  backtrack to: (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(2*(nat-to-int _v_35)))=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_1 _qv_2)=(plus _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_3 _qv_4) _qv_5)=(plus _qv_3 (plus _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((mult _qv_6 _qv_7)=(mult _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((mult (mult _qv_8 _qv_9) _qv_10)=(mult _qv_8 (mult _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat)) ((tri (tri _qv_11))=_qv_11))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat)) ((cubes (cubes _qv_12))=_qv_12))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_14))=(nat-to-int _qv_14)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat)) ((nat-to-int (tri _qv_15))=(nat-to-int _qv_15)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat)) ((nat-to-int (cubes _qv_16))=(nat-to-int _qv_16)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((mult _qv_17 (plus _qv_18 _qv_19))=(plus (mult _qv_17 _qv_18) (mult _qv_17 _qv_19))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus _qv_20 (mult _qv_21 _qv_22))=(mult (plus _qv_20 _qv_21) (plus _qv_20 _qv_22))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_23 _qv_24))=(plus (succ _qv_23) (succ _qv_24))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_23 _qv_24))=(plus (succ _qv_24) (succ _qv_23))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (mult _qv_25 _qv_26))=(mult (succ _qv_25) (succ _qv_26))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (mult _qv_25 _qv_26))=(mult (succ _qv_26) (succ _qv_25))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((tri (plus _qv_27 _qv_28))=(plus (tri _qv_27) (tri _qv_28))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((tri (plus _qv_27 _qv_28))=(plus (tri _qv_28) (tri _qv_27))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((tri (mult _qv_29 _qv_30))=(mult (tri _qv_29) (tri _qv_30))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((tri (mult _qv_29 _qv_30))=(mult (tri _qv_30) (tri _qv_29))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((cubes (plus _qv_31 _qv_32))=(plus (cubes _qv_31) (cubes _qv_32))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((cubes (plus _qv_31 _qv_32))=(plus (cubes _qv_32) (cubes _qv_31))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((cubes (mult _qv_33 _qv_34))=(mult (cubes _qv_33) (cubes _qv_34))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((cubes (mult _qv_33 _qv_34))=(mult (cubes _qv_34) (cubes _qv_33))))
USE ASSUMPTION FAILED

  backtrack to: ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
  rewritten [13]: ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
  rewritten [2]: (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(2*(nat-to-int _v_35)))=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
  Maximum recursion depth reached
CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_1 _qv_2)=(plus _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_3 _qv_4) _qv_5)=(plus _qv_3 (plus _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((mult _qv_6 _qv_7)=(mult _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((mult (mult _qv_8 _qv_9) _qv_10)=(mult _qv_8 (mult _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat)) ((tri (tri _qv_11))=_qv_11))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat)) ((cubes (cubes _qv_12))=_qv_12))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_14))=(nat-to-int _qv_14)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat)) ((nat-to-int (tri _qv_15))=(nat-to-int _qv_15)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat)) ((nat-to-int (cubes _qv_16))=(nat-to-int _qv_16)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((mult _qv_17 (plus _qv_18 _qv_19))=(plus (mult _qv_17 _qv_18) (mult _qv_17 _qv_19))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus _qv_20 (mult _qv_21 _qv_22))=(mult (plus _qv_20 _qv_21) (plus _qv_20 _qv_22))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_23 _qv_24))=(plus (succ _qv_23) (succ _qv_24))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_23 _qv_24))=(plus (succ _qv_24) (succ _qv_23))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (mult _qv_25 _qv_26))=(mult (succ _qv_25) (succ _qv_26))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (mult _qv_25 _qv_26))=(mult (succ _qv_26) (succ _qv_25))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((tri (plus _qv_27 _qv_28))=(plus (tri _qv_27) (tri _qv_28))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((tri (plus _qv_27 _qv_28))=(plus (tri _qv_28) (tri _qv_27))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((tri (mult _qv_29 _qv_30))=(mult (tri _qv_29) (tri _qv_30))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((tri (mult _qv_29 _qv_30))=(mult (tri _qv_30) (tri _qv_29))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((cubes (plus _qv_31 _qv_32))=(plus (cubes _qv_31) (cubes _qv_32))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((cubes (plus _qv_31 _qv_32))=(plus (cubes _qv_32) (cubes _qv_31))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((cubes (mult _qv_33 _qv_34))=(mult (cubes _qv_33) (cubes _qv_34))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((cubes (mult _qv_33 _qv_34))=(mult (cubes _qv_34) (cubes _qv_33))))
USE ASSUMPTION FAILED

  backtrack to: ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
  rewritten [13]: ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
  Maximum recursion depth reached
CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_1 _qv_2)=(plus _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_3 _qv_4) _qv_5)=(plus _qv_3 (plus _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((mult _qv_6 _qv_7)=(mult _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((mult (mult _qv_8 _qv_9) _qv_10)=(mult _qv_8 (mult _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat)) ((tri (tri _qv_11))=_qv_11))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat)) ((cubes (cubes _qv_12))=_qv_12))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_14))=(nat-to-int _qv_14)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat)) ((nat-to-int (tri _qv_15))=(nat-to-int _qv_15)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat)) ((nat-to-int (cubes _qv_16))=(nat-to-int _qv_16)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((mult _qv_17 (plus _qv_18 _qv_19))=(plus (mult _qv_17 _qv_18) (mult _qv_17 _qv_19))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus _qv_20 (mult _qv_21 _qv_22))=(mult (plus _qv_20 _qv_21) (plus _qv_20 _qv_22))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_23 _qv_24))=(plus (succ _qv_23) (succ _qv_24))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_23 _qv_24))=(plus (succ _qv_24) (succ _qv_23))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (mult _qv_25 _qv_26))=(mult (succ _qv_25) (succ _qv_26))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (mult _qv_25 _qv_26))=(mult (succ _qv_26) (succ _qv_25))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((tri (plus _qv_27 _qv_28))=(plus (tri _qv_27) (tri _qv_28))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((tri (plus _qv_27 _qv_28))=(plus (tri _qv_28) (tri _qv_27))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((tri (mult _qv_29 _qv_30))=(mult (tri _qv_29) (tri _qv_30))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((tri (mult _qv_29 _qv_30))=(mult (tri _qv_30) (tri _qv_29))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((cubes (plus _qv_31 _qv_32))=(plus (cubes _qv_31) (cubes _qv_32))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((cubes (plus _qv_31 _qv_32))=(plus (cubes _qv_32) (cubes _qv_31))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((cubes (mult _qv_33 _qv_34))=(mult (cubes _qv_33) (cubes _qv_34))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((cubes (mult _qv_33 _qv_34))=(mult (cubes _qv_34) (cubes _qv_33))))
USE ASSUMPTION FAILED

  backtrack to: ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
  rewritten [15]: ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult (succ (plus _t_36 (succ _t_36))) _v_35)))
  Maximum recursion depth reached
CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_1 _qv_2)=(plus _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_3 _qv_4) _qv_5)=(plus _qv_3 (plus _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((mult _qv_6 _qv_7)=(mult _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((mult (mult _qv_8 _qv_9) _qv_10)=(mult _qv_8 (mult _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat)) ((tri (tri _qv_11))=_qv_11))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat)) ((cubes (cubes _qv_12))=_qv_12))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_14))=(nat-to-int _qv_14)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat)) ((nat-to-int (tri _qv_15))=(nat-to-int _qv_15)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat)) ((nat-to-int (cubes _qv_16))=(nat-to-int _qv_16)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((mult _qv_17 (plus _qv_18 _qv_19))=(plus (mult _qv_17 _qv_18) (mult _qv_17 _qv_19))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus _qv_20 (mult _qv_21 _qv_22))=(mult (plus _qv_20 _qv_21) (plus _qv_20 _qv_22))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_23 _qv_24))=(plus (succ _qv_23) (succ _qv_24))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_23 _qv_24))=(plus (succ _qv_24) (succ _qv_23))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (mult _qv_25 _qv_26))=(mult (succ _qv_25) (succ _qv_26))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (mult _qv_25 _qv_26))=(mult (succ _qv_26) (succ _qv_25))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((tri (plus _qv_27 _qv_28))=(plus (tri _qv_27) (tri _qv_28))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((tri (plus _qv_27 _qv_28))=(plus (tri _qv_28) (tri _qv_27))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((tri (mult _qv_29 _qv_30))=(mult (tri _qv_29) (tri _qv_30))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((tri (mult _qv_29 _qv_30))=(mult (tri _qv_30) (tri _qv_29))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((cubes (plus _qv_31 _qv_32))=(plus (cubes _qv_31) (cubes _qv_32))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((cubes (plus _qv_31 _qv_32))=(plus (cubes _qv_32) (cubes _qv_31))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((cubes (mult _qv_33 _qv_34))=(mult (cubes _qv_33) (cubes _qv_34))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((cubes (mult _qv_33 _qv_34))=(mult (cubes _qv_34) (cubes _qv_33))))
USE ASSUMPTION FAILED

  backtrack to: ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
  rewritten [15]: ([+    (nat-to-int (mult (plus _v_35 _v_35) _t_36))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
  Maximum recursion depth reached
CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_1 _qv_2)=(plus _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_3 _qv_4) _qv_5)=(plus _qv_3 (plus _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((mult _qv_6 _qv_7)=(mult _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((mult (mult _qv_8 _qv_9) _qv_10)=(mult _qv_8 (mult _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat)) ((tri (tri _qv_11))=_qv_11))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat)) ((cubes (cubes _qv_12))=_qv_12))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_14))=(nat-to-int _qv_14)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat)) ((nat-to-int (tri _qv_15))=(nat-to-int _qv_15)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat)) ((nat-to-int (cubes _qv_16))=(nat-to-int _qv_16)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((mult _qv_17 (plus _qv_18 _qv_19))=(plus (mult _qv_17 _qv_18) (mult _qv_17 _qv_19))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus _qv_20 (mult _qv_21 _qv_22))=(mult (plus _qv_20 _qv_21) (plus _qv_20 _qv_22))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_23 _qv_24))=(plus (succ _qv_23) (succ _qv_24))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_23 _qv_24))=(plus (succ _qv_24) (succ _qv_23))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (mult _qv_25 _qv_26))=(mult (succ _qv_25) (succ _qv_26))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (mult _qv_25 _qv_26))=(mult (succ _qv_26) (succ _qv_25))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((tri (plus _qv_27 _qv_28))=(plus (tri _qv_27) (tri _qv_28))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((tri (plus _qv_27 _qv_28))=(plus (tri _qv_28) (tri _qv_27))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((tri (mult _qv_29 _qv_30))=(mult (tri _qv_29) (tri _qv_30))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((tri (mult _qv_29 _qv_30))=(mult (tri _qv_30) (tri _qv_29))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((cubes (plus _qv_31 _qv_32))=(plus (cubes _qv_31) (cubes _qv_32))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((cubes (plus _qv_31 _qv_32))=(plus (cubes _qv_32) (cubes _qv_31))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((cubes (mult _qv_33 _qv_34))=(mult (cubes _qv_33) (cubes _qv_34))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((cubes (mult _qv_33 _qv_34))=(mult (cubes _qv_34) (cubes _qv_33))))
USE ASSUMPTION FAILED

  backtrack to: ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
  rewritten [17]: ([+    (nat-to-int (mult _v_35 (plus _t_36 _t_36)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
  Maximum recursion depth reached
CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_1 _qv_2)=(plus _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_3 _qv_4) _qv_5)=(plus _qv_3 (plus _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((mult _qv_6 _qv_7)=(mult _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((mult (mult _qv_8 _qv_9) _qv_10)=(mult _qv_8 (mult _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat)) ((tri (tri _qv_11))=_qv_11))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat)) ((cubes (cubes _qv_12))=_qv_12))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_14))=(nat-to-int _qv_14)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat)) ((nat-to-int (tri _qv_15))=(nat-to-int _qv_15)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat)) ((nat-to-int (cubes _qv_16))=(nat-to-int _qv_16)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((mult _qv_17 (plus _qv_18 _qv_19))=(plus (mult _qv_17 _qv_18) (mult _qv_17 _qv_19))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus _qv_20 (mult _qv_21 _qv_22))=(mult (plus _qv_20 _qv_21) (plus _qv_20 _qv_22))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_23 _qv_24))=(plus (succ _qv_23) (succ _qv_24))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_23 _qv_24))=(plus (succ _qv_24) (succ _qv_23))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (mult _qv_25 _qv_26))=(mult (succ _qv_25) (succ _qv_26))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (mult _qv_25 _qv_26))=(mult (succ _qv_26) (succ _qv_25))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((tri (plus _qv_27 _qv_28))=(plus (tri _qv_27) (tri _qv_28))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((tri (plus _qv_27 _qv_28))=(plus (tri _qv_28) (tri _qv_27))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((tri (mult _qv_29 _qv_30))=(mult (tri _qv_29) (tri _qv_30))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((tri (mult _qv_29 _qv_30))=(mult (tri _qv_30) (tri _qv_29))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((cubes (plus _qv_31 _qv_32))=(plus (cubes _qv_31) (cubes _qv_32))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((cubes (plus _qv_31 _qv_32))=(plus (cubes _qv_32) (cubes _qv_31))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((cubes (mult _qv_33 _qv_34))=(mult (cubes _qv_33) (cubes _qv_34))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((cubes (mult _qv_33 _qv_34))=(mult (cubes _qv_34) (cubes _qv_33))))
USE ASSUMPTION FAILED

  backtrack to: ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
  rewritten [2]: (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(2*(nat-to-int _v_35)))=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
  Maximum recursion depth reached
CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_1 _qv_2)=(plus _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_3 _qv_4) _qv_5)=(plus _qv_3 (plus _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((mult _qv_6 _qv_7)=(mult _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((mult (mult _qv_8 _qv_9) _qv_10)=(mult _qv_8 (mult _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat)) ((tri (tri _qv_11))=_qv_11))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat)) ((cubes (cubes _qv_12))=_qv_12))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_14))=(nat-to-int _qv_14)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat)) ((nat-to-int (tri _qv_15))=(nat-to-int _qv_15)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat)) ((nat-to-int (cubes _qv_16))=(nat-to-int _qv_16)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((mult _qv_17 (plus _qv_18 _qv_19))=(plus (mult _qv_17 _qv_18) (mult _qv_17 _qv_19))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus _qv_20 (mult _qv_21 _qv_22))=(mult (plus _qv_20 _qv_21) (plus _qv_20 _qv_22))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_23 _qv_24))=(plus (succ _qv_23) (succ _qv_24))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_23 _qv_24))=(plus (succ _qv_24) (succ _qv_23))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (mult _qv_25 _qv_26))=(mult (succ _qv_25) (succ _qv_26))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (mult _qv_25 _qv_26))=(mult (succ _qv_26) (succ _qv_25))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((tri (plus _qv_27 _qv_28))=(plus (tri _qv_27) (tri _qv_28))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((tri (plus _qv_27 _qv_28))=(plus (tri _qv_28) (tri _qv_27))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((tri (mult _qv_29 _qv_30))=(mult (tri _qv_29) (tri _qv_30))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((tri (mult _qv_29 _qv_30))=(mult (tri _qv_30) (tri _qv_29))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((cubes (plus _qv_31 _qv_32))=(plus (cubes _qv_31) (cubes _qv_32))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((cubes (plus _qv_31 _qv_32))=(plus (cubes _qv_32) (cubes _qv_31))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((cubes (mult _qv_33 _qv_34))=(mult (cubes _qv_33) (cubes _qv_34))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((cubes (mult _qv_33 _qv_34))=(mult (cubes _qv_34) (cubes _qv_33))))
USE ASSUMPTION FAILED

  backtrack to: ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
  rewritten [13]: ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
  Maximum recursion depth reached
CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_1 _qv_2)=(plus _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_3 _qv_4) _qv_5)=(plus _qv_3 (plus _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((mult _qv_6 _qv_7)=(mult _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((mult (mult _qv_8 _qv_9) _qv_10)=(mult _qv_8 (mult _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat)) ((tri (tri _qv_11))=_qv_11))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat)) ((cubes (cubes _qv_12))=_qv_12))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_14))=(nat-to-int _qv_14)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat)) ((nat-to-int (tri _qv_15))=(nat-to-int _qv_15)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat)) ((nat-to-int (cubes _qv_16))=(nat-to-int _qv_16)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((mult _qv_17 (plus _qv_18 _qv_19))=(plus (mult _qv_17 _qv_18) (mult _qv_17 _qv_19))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus _qv_20 (mult _qv_21 _qv_22))=(mult (plus _qv_20 _qv_21) (plus _qv_20 _qv_22))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_23 _qv_24))=(plus (succ _qv_23) (succ _qv_24))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_23 _qv_24))=(plus (succ _qv_24) (succ _qv_23))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (mult _qv_25 _qv_26))=(mult (succ _qv_25) (succ _qv_26))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (mult _qv_25 _qv_26))=(mult (succ _qv_26) (succ _qv_25))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((tri (plus _qv_27 _qv_28))=(plus (tri _qv_27) (tri _qv_28))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((tri (plus _qv_27 _qv_28))=(plus (tri _qv_28) (tri _qv_27))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((tri (mult _qv_29 _qv_30))=(mult (tri _qv_29) (tri _qv_30))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((tri (mult _qv_29 _qv_30))=(mult (tri _qv_30) (tri _qv_29))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((cubes (plus _qv_31 _qv_32))=(plus (cubes _qv_31) (cubes _qv_32))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((cubes (plus _qv_31 _qv_32))=(plus (cubes _qv_32) (cubes _qv_31))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((cubes (mult _qv_33 _qv_34))=(mult (cubes _qv_33) (cubes _qv_34))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((cubes (mult _qv_33 _qv_34))=(mult (cubes _qv_34) (cubes _qv_33))))
USE ASSUMPTION FAILED

  backtrack to: ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
  rewritten [15]: ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult (succ (plus _t_36 (succ _t_36))) _v_35)))
  Maximum recursion depth reached
CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_1 _qv_2)=(plus _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_3 _qv_4) _qv_5)=(plus _qv_3 (plus _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((mult _qv_6 _qv_7)=(mult _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((mult (mult _qv_8 _qv_9) _qv_10)=(mult _qv_8 (mult _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat)) ((tri (tri _qv_11))=_qv_11))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat)) ((cubes (cubes _qv_12))=_qv_12))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_14))=(nat-to-int _qv_14)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat)) ((nat-to-int (tri _qv_15))=(nat-to-int _qv_15)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat)) ((nat-to-int (cubes _qv_16))=(nat-to-int _qv_16)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((mult _qv_17 (plus _qv_18 _qv_19))=(plus (mult _qv_17 _qv_18) (mult _qv_17 _qv_19))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus _qv_20 (mult _qv_21 _qv_22))=(mult (plus _qv_20 _qv_21) (plus _qv_20 _qv_22))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_23 _qv_24))=(plus (succ _qv_23) (succ _qv_24))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_23 _qv_24))=(plus (succ _qv_24) (succ _qv_23))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (mult _qv_25 _qv_26))=(mult (succ _qv_25) (succ _qv_26))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (mult _qv_25 _qv_26))=(mult (succ _qv_26) (succ _qv_25))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((tri (plus _qv_27 _qv_28))=(plus (tri _qv_27) (tri _qv_28))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((tri (plus _qv_27 _qv_28))=(plus (tri _qv_28) (tri _qv_27))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((tri (mult _qv_29 _qv_30))=(mult (tri _qv_29) (tri _qv_30))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((tri (mult _qv_29 _qv_30))=(mult (tri _qv_30) (tri _qv_29))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((cubes (plus _qv_31 _qv_32))=(plus (cubes _qv_31) (cubes _qv_32))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((cubes (plus _qv_31 _qv_32))=(plus (cubes _qv_32) (cubes _qv_31))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((cubes (mult _qv_33 _qv_34))=(mult (cubes _qv_33) (cubes _qv_34))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((cubes (mult _qv_33 _qv_34))=(mult (cubes _qv_34) (cubes _qv_33))))
USE ASSUMPTION FAILED

  backtrack to: ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
  rewritten [15]: ([+    (nat-to-int (mult (plus _v_35 _v_35) _t_36))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
  Maximum recursion depth reached
CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_1 _qv_2)=(plus _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_3 _qv_4) _qv_5)=(plus _qv_3 (plus _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((mult _qv_6 _qv_7)=(mult _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((mult (mult _qv_8 _qv_9) _qv_10)=(mult _qv_8 (mult _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat)) ((tri (tri _qv_11))=_qv_11))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat)) ((cubes (cubes _qv_12))=_qv_12))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_14))=(nat-to-int _qv_14)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat)) ((nat-to-int (tri _qv_15))=(nat-to-int _qv_15)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat)) ((nat-to-int (cubes _qv_16))=(nat-to-int _qv_16)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((mult _qv_17 (plus _qv_18 _qv_19))=(plus (mult _qv_17 _qv_18) (mult _qv_17 _qv_19))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus _qv_20 (mult _qv_21 _qv_22))=(mult (plus _qv_20 _qv_21) (plus _qv_20 _qv_22))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_23 _qv_24))=(plus (succ _qv_23) (succ _qv_24))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_23 _qv_24))=(plus (succ _qv_24) (succ _qv_23))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (mult _qv_25 _qv_26))=(mult (succ _qv_25) (succ _qv_26))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (mult _qv_25 _qv_26))=(mult (succ _qv_26) (succ _qv_25))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((tri (plus _qv_27 _qv_28))=(plus (tri _qv_27) (tri _qv_28))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((tri (plus _qv_27 _qv_28))=(plus (tri _qv_28) (tri _qv_27))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((tri (mult _qv_29 _qv_30))=(mult (tri _qv_29) (tri _qv_30))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((tri (mult _qv_29 _qv_30))=(mult (tri _qv_30) (tri _qv_29))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((cubes (plus _qv_31 _qv_32))=(plus (cubes _qv_31) (cubes _qv_32))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((cubes (plus _qv_31 _qv_32))=(plus (cubes _qv_32) (cubes _qv_31))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((cubes (mult _qv_33 _qv_34))=(mult (cubes _qv_33) (cubes _qv_34))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((cubes (mult _qv_33 _qv_34))=(mult (cubes _qv_34) (cubes _qv_33))))
USE ASSUMPTION FAILED

  backtrack to: ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
  rewritten [17]: ([+    (nat-to-int (mult _v_35 (plus _t_36 _t_36)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
  Maximum recursion depth reached
CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_1 _qv_2)=(plus _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_3 _qv_4) _qv_5)=(plus _qv_3 (plus _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((mult _qv_6 _qv_7)=(mult _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((mult (mult _qv_8 _qv_9) _qv_10)=(mult _qv_8 (mult _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat)) ((tri (tri _qv_11))=_qv_11))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat)) ((cubes (cubes _qv_12))=_qv_12))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_14))=(nat-to-int _qv_14)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat)) ((nat-to-int (tri _qv_15))=(nat-to-int _qv_15)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat)) ((nat-to-int (cubes _qv_16))=(nat-to-int _qv_16)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((mult _qv_17 (plus _qv_18 _qv_19))=(plus (mult _qv_17 _qv_18) (mult _qv_17 _qv_19))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus _qv_20 (mult _qv_21 _qv_22))=(mult (plus _qv_20 _qv_21) (plus _qv_20 _qv_22))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_23 _qv_24))=(plus (succ _qv_23) (succ _qv_24))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_23 _qv_24))=(plus (succ _qv_24) (succ _qv_23))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (mult _qv_25 _qv_26))=(mult (succ _qv_25) (succ _qv_26))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (mult _qv_25 _qv_26))=(mult (succ _qv_26) (succ _qv_25))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((tri (plus _qv_27 _qv_28))=(plus (tri _qv_27) (tri _qv_28))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((tri (plus _qv_27 _qv_28))=(plus (tri _qv_28) (tri _qv_27))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((tri (mult _qv_29 _qv_30))=(mult (tri _qv_29) (tri _qv_30))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((tri (mult _qv_29 _qv_30))=(mult (tri _qv_30) (tri _qv_29))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((cubes (plus _qv_31 _qv_32))=(plus (cubes _qv_31) (cubes _qv_32))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((cubes (plus _qv_31 _qv_32))=(plus (cubes _qv_32) (cubes _qv_31))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((cubes (mult _qv_33 _qv_34))=(mult (cubes _qv_33) (cubes _qv_34))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((cubes (mult _qv_33 _qv_34))=(mult (cubes _qv_34) (cubes _qv_33))))
USE ASSUMPTION FAILED

  backtrack to: ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_1 _qv_2)=(plus _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_3 _qv_4) _qv_5)=(plus _qv_3 (plus _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((mult _qv_6 _qv_7)=(mult _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((mult (mult _qv_8 _qv_9) _qv_10)=(mult _qv_8 (mult _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat)) ((tri (tri _qv_11))=_qv_11))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat)) ((cubes (cubes _qv_12))=_qv_12))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_14))=(nat-to-int _qv_14)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat)) ((nat-to-int (tri _qv_15))=(nat-to-int _qv_15)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat)) ((nat-to-int (cubes _qv_16))=(nat-to-int _qv_16)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((mult _qv_17 (plus _qv_18 _qv_19))=(plus (mult _qv_17 _qv_18) (mult _qv_17 _qv_19))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus _qv_20 (mult _qv_21 _qv_22))=(mult (plus _qv_20 _qv_21) (plus _qv_20 _qv_22))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_23 _qv_24))=(plus (succ _qv_23) (succ _qv_24))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_23 _qv_24))=(plus (succ _qv_24) (succ _qv_23))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (mult _qv_25 _qv_26))=(mult (succ _qv_25) (succ _qv_26))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (mult _qv_25 _qv_26))=(mult (succ _qv_26) (succ _qv_25))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((tri (plus _qv_27 _qv_28))=(plus (tri _qv_27) (tri _qv_28))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((tri (plus _qv_27 _qv_28))=(plus (tri _qv_28) (tri _qv_27))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((tri (mult _qv_29 _qv_30))=(mult (tri _qv_29) (tri _qv_30))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((tri (mult _qv_29 _qv_30))=(mult (tri _qv_30) (tri _qv_29))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((cubes (plus _qv_31 _qv_32))=(plus (cubes _qv_31) (cubes _qv_32))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((cubes (plus _qv_31 _qv_32))=(plus (cubes _qv_32) (cubes _qv_31))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((cubes (mult _qv_33 _qv_34))=(mult (cubes _qv_33) (cubes _qv_34))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((cubes (mult _qv_33 _qv_34))=(mult (cubes _qv_34) (cubes _qv_33))))
USE ASSUMPTION FAILED

  backtrack to: ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
  rewritten [13]: ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
  rewritten [2]: (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(2*(nat-to-int _v_35)))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
  Maximum recursion depth reached
CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_1 _qv_2)=(plus _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_3 _qv_4) _qv_5)=(plus _qv_3 (plus _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((mult _qv_6 _qv_7)=(mult _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((mult (mult _qv_8 _qv_9) _qv_10)=(mult _qv_8 (mult _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat)) ((tri (tri _qv_11))=_qv_11))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat)) ((cubes (cubes _qv_12))=_qv_12))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_14))=(nat-to-int _qv_14)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat)) ((nat-to-int (tri _qv_15))=(nat-to-int _qv_15)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat)) ((nat-to-int (cubes _qv_16))=(nat-to-int _qv_16)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((mult _qv_17 (plus _qv_18 _qv_19))=(plus (mult _qv_17 _qv_18) (mult _qv_17 _qv_19))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus _qv_20 (mult _qv_21 _qv_22))=(mult (plus _qv_20 _qv_21) (plus _qv_20 _qv_22))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_23 _qv_24))=(plus (succ _qv_23) (succ _qv_24))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_23 _qv_24))=(plus (succ _qv_24) (succ _qv_23))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (mult _qv_25 _qv_26))=(mult (succ _qv_25) (succ _qv_26))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (mult _qv_25 _qv_26))=(mult (succ _qv_26) (succ _qv_25))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((tri (plus _qv_27 _qv_28))=(plus (tri _qv_27) (tri _qv_28))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((tri (plus _qv_27 _qv_28))=(plus (tri _qv_28) (tri _qv_27))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((tri (mult _qv_29 _qv_30))=(mult (tri _qv_29) (tri _qv_30))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((tri (mult _qv_29 _qv_30))=(mult (tri _qv_30) (tri _qv_29))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((cubes (plus _qv_31 _qv_32))=(plus (cubes _qv_31) (cubes _qv_32))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((cubes (plus _qv_31 _qv_32))=(plus (cubes _qv_32) (cubes _qv_31))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((cubes (mult _qv_33 _qv_34))=(mult (cubes _qv_33) (cubes _qv_34))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((cubes (mult _qv_33 _qv_34))=(mult (cubes _qv_34) (cubes _qv_33))))
USE ASSUMPTION FAILED

  backtrack to: ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
  rewritten [4]: ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (succ (plus _t_36 _t_36))))))
  Maximum recursion depth reached
CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_1 _qv_2)=(plus _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_3 _qv_4) _qv_5)=(plus _qv_3 (plus _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((mult _qv_6 _qv_7)=(mult _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((mult (mult _qv_8 _qv_9) _qv_10)=(mult _qv_8 (mult _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat)) ((tri (tri _qv_11))=_qv_11))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat)) ((cubes (cubes _qv_12))=_qv_12))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_14))=(nat-to-int _qv_14)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat)) ((nat-to-int (tri _qv_15))=(nat-to-int _qv_15)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat)) ((nat-to-int (cubes _qv_16))=(nat-to-int _qv_16)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((mult _qv_17 (plus _qv_18 _qv_19))=(plus (mult _qv_17 _qv_18) (mult _qv_17 _qv_19))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus _qv_20 (mult _qv_21 _qv_22))=(mult (plus _qv_20 _qv_21) (plus _qv_20 _qv_22))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_23 _qv_24))=(plus (succ _qv_23) (succ _qv_24))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_23 _qv_24))=(plus (succ _qv_24) (succ _qv_23))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (mult _qv_25 _qv_26))=(mult (succ _qv_25) (succ _qv_26))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (mult _qv_25 _qv_26))=(mult (succ _qv_26) (succ _qv_25))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((tri (plus _qv_27 _qv_28))=(plus (tri _qv_27) (tri _qv_28))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((tri (plus _qv_27 _qv_28))=(plus (tri _qv_28) (tri _qv_27))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((tri (mult _qv_29 _qv_30))=(mult (tri _qv_29) (tri _qv_30))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((tri (mult _qv_29 _qv_30))=(mult (tri _qv_30) (tri _qv_29))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((cubes (plus _qv_31 _qv_32))=(plus (cubes _qv_31) (cubes _qv_32))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((cubes (plus _qv_31 _qv_32))=(plus (cubes _qv_32) (cubes _qv_31))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((cubes (mult _qv_33 _qv_34))=(mult (cubes _qv_33) (cubes _qv_34))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((cubes (mult _qv_33 _qv_34))=(mult (cubes _qv_34) (cubes _qv_33))))
USE ASSUMPTION FAILED

  backtrack to: ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
  rewritten [13]: ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
  Maximum recursion depth reached
CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_1 _qv_2)=(plus _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_3 _qv_4) _qv_5)=(plus _qv_3 (plus _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((mult _qv_6 _qv_7)=(mult _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((mult (mult _qv_8 _qv_9) _qv_10)=(mult _qv_8 (mult _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat)) ((tri (tri _qv_11))=_qv_11))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat)) ((cubes (cubes _qv_12))=_qv_12))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_14))=(nat-to-int _qv_14)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat)) ((nat-to-int (tri _qv_15))=(nat-to-int _qv_15)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat)) ((nat-to-int (cubes _qv_16))=(nat-to-int _qv_16)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((mult _qv_17 (plus _qv_18 _qv_19))=(plus (mult _qv_17 _qv_18) (mult _qv_17 _qv_19))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus _qv_20 (mult _qv_21 _qv_22))=(mult (plus _qv_20 _qv_21) (plus _qv_20 _qv_22))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_23 _qv_24))=(plus (succ _qv_23) (succ _qv_24))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_23 _qv_24))=(plus (succ _qv_24) (succ _qv_23))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (mult _qv_25 _qv_26))=(mult (succ _qv_25) (succ _qv_26))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (mult _qv_25 _qv_26))=(mult (succ _qv_26) (succ _qv_25))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((tri (plus _qv_27 _qv_28))=(plus (tri _qv_27) (tri _qv_28))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((tri (plus _qv_27 _qv_28))=(plus (tri _qv_28) (tri _qv_27))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((tri (mult _qv_29 _qv_30))=(mult (tri _qv_29) (tri _qv_30))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((tri (mult _qv_29 _qv_30))=(mult (tri _qv_30) (tri _qv_29))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((cubes (plus _qv_31 _qv_32))=(plus (cubes _qv_31) (cubes _qv_32))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((cubes (plus _qv_31 _qv_32))=(plus (cubes _qv_32) (cubes _qv_31))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((cubes (mult _qv_33 _qv_34))=(mult (cubes _qv_33) (cubes _qv_34))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((cubes (mult _qv_33 _qv_34))=(mult (cubes _qv_34) (cubes _qv_33))))
USE ASSUMPTION FAILED

  backtrack to: ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
  rewritten [15]: ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult (succ (plus (succ _t_36) _t_36)) _v_35)))
  Maximum recursion depth reached
CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_1 _qv_2)=(plus _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_3 _qv_4) _qv_5)=(plus _qv_3 (plus _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((mult _qv_6 _qv_7)=(mult _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((mult (mult _qv_8 _qv_9) _qv_10)=(mult _qv_8 (mult _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat)) ((tri (tri _qv_11))=_qv_11))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat)) ((cubes (cubes _qv_12))=_qv_12))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_14))=(nat-to-int _qv_14)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat)) ((nat-to-int (tri _qv_15))=(nat-to-int _qv_15)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat)) ((nat-to-int (cubes _qv_16))=(nat-to-int _qv_16)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((mult _qv_17 (plus _qv_18 _qv_19))=(plus (mult _qv_17 _qv_18) (mult _qv_17 _qv_19))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus _qv_20 (mult _qv_21 _qv_22))=(mult (plus _qv_20 _qv_21) (plus _qv_20 _qv_22))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_23 _qv_24))=(plus (succ _qv_23) (succ _qv_24))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_23 _qv_24))=(plus (succ _qv_24) (succ _qv_23))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (mult _qv_25 _qv_26))=(mult (succ _qv_25) (succ _qv_26))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (mult _qv_25 _qv_26))=(mult (succ _qv_26) (succ _qv_25))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((tri (plus _qv_27 _qv_28))=(plus (tri _qv_27) (tri _qv_28))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((tri (plus _qv_27 _qv_28))=(plus (tri _qv_28) (tri _qv_27))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((tri (mult _qv_29 _qv_30))=(mult (tri _qv_29) (tri _qv_30))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((tri (mult _qv_29 _qv_30))=(mult (tri _qv_30) (tri _qv_29))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((cubes (plus _qv_31 _qv_32))=(plus (cubes _qv_31) (cubes _qv_32))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((cubes (plus _qv_31 _qv_32))=(plus (cubes _qv_32) (cubes _qv_31))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((cubes (mult _qv_33 _qv_34))=(mult (cubes _qv_33) (cubes _qv_34))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((cubes (mult _qv_33 _qv_34))=(mult (cubes _qv_34) (cubes _qv_33))))
USE ASSUMPTION FAILED

  backtrack to: ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
  rewritten [15]: ([+    (nat-to-int (mult (plus _v_35 _v_35) _t_36))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
  Maximum recursion depth reached
CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_1 _qv_2)=(plus _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_3 _qv_4) _qv_5)=(plus _qv_3 (plus _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((mult _qv_6 _qv_7)=(mult _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((mult (mult _qv_8 _qv_9) _qv_10)=(mult _qv_8 (mult _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat)) ((tri (tri _qv_11))=_qv_11))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat)) ((cubes (cubes _qv_12))=_qv_12))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_14))=(nat-to-int _qv_14)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat)) ((nat-to-int (tri _qv_15))=(nat-to-int _qv_15)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat)) ((nat-to-int (cubes _qv_16))=(nat-to-int _qv_16)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((mult _qv_17 (plus _qv_18 _qv_19))=(plus (mult _qv_17 _qv_18) (mult _qv_17 _qv_19))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus _qv_20 (mult _qv_21 _qv_22))=(mult (plus _qv_20 _qv_21) (plus _qv_20 _qv_22))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_23 _qv_24))=(plus (succ _qv_23) (succ _qv_24))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_23 _qv_24))=(plus (succ _qv_24) (succ _qv_23))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (mult _qv_25 _qv_26))=(mult (succ _qv_25) (succ _qv_26))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (mult _qv_25 _qv_26))=(mult (succ _qv_26) (succ _qv_25))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((tri (plus _qv_27 _qv_28))=(plus (tri _qv_27) (tri _qv_28))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((tri (plus _qv_27 _qv_28))=(plus (tri _qv_28) (tri _qv_27))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((tri (mult _qv_29 _qv_30))=(mult (tri _qv_29) (tri _qv_30))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((tri (mult _qv_29 _qv_30))=(mult (tri _qv_30) (tri _qv_29))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((cubes (plus _qv_31 _qv_32))=(plus (cubes _qv_31) (cubes _qv_32))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((cubes (plus _qv_31 _qv_32))=(plus (cubes _qv_32) (cubes _qv_31))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((cubes (mult _qv_33 _qv_34))=(mult (cubes _qv_33) (cubes _qv_34))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((cubes (mult _qv_33 _qv_34))=(mult (cubes _qv_34) (cubes _qv_33))))
USE ASSUMPTION FAILED

  backtrack to: ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
  rewritten [17]: ([+    (nat-to-int (mult _v_35 (plus _t_36 _t_36)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
  Maximum recursion depth reached
CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_1 _qv_2)=(plus _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_3 _qv_4) _qv_5)=(plus _qv_3 (plus _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((mult _qv_6 _qv_7)=(mult _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((mult (mult _qv_8 _qv_9) _qv_10)=(mult _qv_8 (mult _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat)) ((tri (tri _qv_11))=_qv_11))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat)) ((cubes (cubes _qv_12))=_qv_12))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_14))=(nat-to-int _qv_14)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat)) ((nat-to-int (tri _qv_15))=(nat-to-int _qv_15)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat)) ((nat-to-int (cubes _qv_16))=(nat-to-int _qv_16)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((mult _qv_17 (plus _qv_18 _qv_19))=(plus (mult _qv_17 _qv_18) (mult _qv_17 _qv_19))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus _qv_20 (mult _qv_21 _qv_22))=(mult (plus _qv_20 _qv_21) (plus _qv_20 _qv_22))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_23 _qv_24))=(plus (succ _qv_23) (succ _qv_24))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_23 _qv_24))=(plus (succ _qv_24) (succ _qv_23))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (mult _qv_25 _qv_26))=(mult (succ _qv_25) (succ _qv_26))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (mult _qv_25 _qv_26))=(mult (succ _qv_26) (succ _qv_25))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((tri (plus _qv_27 _qv_28))=(plus (tri _qv_27) (tri _qv_28))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((tri (plus _qv_27 _qv_28))=(plus (tri _qv_28) (tri _qv_27))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((tri (mult _qv_29 _qv_30))=(mult (tri _qv_29) (tri _qv_30))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((tri (mult _qv_29 _qv_30))=(mult (tri _qv_30) (tri _qv_29))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((cubes (plus _qv_31 _qv_32))=(plus (cubes _qv_31) (cubes _qv_32))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((cubes (plus _qv_31 _qv_32))=(plus (cubes _qv_32) (cubes _qv_31))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((cubes (mult _qv_33 _qv_34))=(mult (cubes _qv_33) (cubes _qv_34))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((cubes (mult _qv_33 _qv_34))=(mult (cubes _qv_34) (cubes _qv_33))))
USE ASSUMPTION FAILED

  backtrack to: ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
  rewritten [2]: (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(2*(nat-to-int _v_35)))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
  Maximum recursion depth reached
CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_1 _qv_2)=(plus _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_3 _qv_4) _qv_5)=(plus _qv_3 (plus _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((mult _qv_6 _qv_7)=(mult _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((mult (mult _qv_8 _qv_9) _qv_10)=(mult _qv_8 (mult _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat)) ((tri (tri _qv_11))=_qv_11))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat)) ((cubes (cubes _qv_12))=_qv_12))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_14))=(nat-to-int _qv_14)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat)) ((nat-to-int (tri _qv_15))=(nat-to-int _qv_15)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat)) ((nat-to-int (cubes _qv_16))=(nat-to-int _qv_16)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((mult _qv_17 (plus _qv_18 _qv_19))=(plus (mult _qv_17 _qv_18) (mult _qv_17 _qv_19))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus _qv_20 (mult _qv_21 _qv_22))=(mult (plus _qv_20 _qv_21) (plus _qv_20 _qv_22))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_23 _qv_24))=(plus (succ _qv_23) (succ _qv_24))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_23 _qv_24))=(plus (succ _qv_24) (succ _qv_23))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (mult _qv_25 _qv_26))=(mult (succ _qv_25) (succ _qv_26))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (mult _qv_25 _qv_26))=(mult (succ _qv_26) (succ _qv_25))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((tri (plus _qv_27 _qv_28))=(plus (tri _qv_27) (tri _qv_28))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((tri (plus _qv_27 _qv_28))=(plus (tri _qv_28) (tri _qv_27))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((tri (mult _qv_29 _qv_30))=(mult (tri _qv_29) (tri _qv_30))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((tri (mult _qv_29 _qv_30))=(mult (tri _qv_30) (tri _qv_29))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((cubes (plus _qv_31 _qv_32))=(plus (cubes _qv_31) (cubes _qv_32))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((cubes (plus _qv_31 _qv_32))=(plus (cubes _qv_32) (cubes _qv_31))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((cubes (mult _qv_33 _qv_34))=(mult (cubes _qv_33) (cubes _qv_34))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((cubes (mult _qv_33 _qv_34))=(mult (cubes _qv_34) (cubes _qv_33))))
USE ASSUMPTION FAILED

  backtrack to: ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
  rewritten [4]: ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (succ (plus _t_36 _t_36))))))
  Maximum recursion depth reached
CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_1 _qv_2)=(plus _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_3 _qv_4) _qv_5)=(plus _qv_3 (plus _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((mult _qv_6 _qv_7)=(mult _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((mult (mult _qv_8 _qv_9) _qv_10)=(mult _qv_8 (mult _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat)) ((tri (tri _qv_11))=_qv_11))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat)) ((cubes (cubes _qv_12))=_qv_12))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_14))=(nat-to-int _qv_14)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat)) ((nat-to-int (tri _qv_15))=(nat-to-int _qv_15)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat)) ((nat-to-int (cubes _qv_16))=(nat-to-int _qv_16)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((mult _qv_17 (plus _qv_18 _qv_19))=(plus (mult _qv_17 _qv_18) (mult _qv_17 _qv_19))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus _qv_20 (mult _qv_21 _qv_22))=(mult (plus _qv_20 _qv_21) (plus _qv_20 _qv_22))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_23 _qv_24))=(plus (succ _qv_23) (succ _qv_24))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_23 _qv_24))=(plus (succ _qv_24) (succ _qv_23))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (mult _qv_25 _qv_26))=(mult (succ _qv_25) (succ _qv_26))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (mult _qv_25 _qv_26))=(mult (succ _qv_26) (succ _qv_25))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((tri (plus _qv_27 _qv_28))=(plus (tri _qv_27) (tri _qv_28))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((tri (plus _qv_27 _qv_28))=(plus (tri _qv_28) (tri _qv_27))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((tri (mult _qv_29 _qv_30))=(mult (tri _qv_29) (tri _qv_30))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((tri (mult _qv_29 _qv_30))=(mult (tri _qv_30) (tri _qv_29))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((cubes (plus _qv_31 _qv_32))=(plus (cubes _qv_31) (cubes _qv_32))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((cubes (plus _qv_31 _qv_32))=(plus (cubes _qv_32) (cubes _qv_31))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((cubes (mult _qv_33 _qv_34))=(mult (cubes _qv_33) (cubes _qv_34))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((cubes (mult _qv_33 _qv_34))=(mult (cubes _qv_34) (cubes _qv_33))))
USE ASSUMPTION FAILED

  backtrack to: ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
  rewritten [13]: ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
  Maximum recursion depth reached
CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_1 _qv_2)=(plus _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_3 _qv_4) _qv_5)=(plus _qv_3 (plus _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((mult _qv_6 _qv_7)=(mult _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((mult (mult _qv_8 _qv_9) _qv_10)=(mult _qv_8 (mult _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat)) ((tri (tri _qv_11))=_qv_11))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat)) ((cubes (cubes _qv_12))=_qv_12))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_14))=(nat-to-int _qv_14)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat)) ((nat-to-int (tri _qv_15))=(nat-to-int _qv_15)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat)) ((nat-to-int (cubes _qv_16))=(nat-to-int _qv_16)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((mult _qv_17 (plus _qv_18 _qv_19))=(plus (mult _qv_17 _qv_18) (mult _qv_17 _qv_19))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus _qv_20 (mult _qv_21 _qv_22))=(mult (plus _qv_20 _qv_21) (plus _qv_20 _qv_22))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_23 _qv_24))=(plus (succ _qv_23) (succ _qv_24))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_23 _qv_24))=(plus (succ _qv_24) (succ _qv_23))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (mult _qv_25 _qv_26))=(mult (succ _qv_25) (succ _qv_26))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (mult _qv_25 _qv_26))=(mult (succ _qv_26) (succ _qv_25))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((tri (plus _qv_27 _qv_28))=(plus (tri _qv_27) (tri _qv_28))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((tri (plus _qv_27 _qv_28))=(plus (tri _qv_28) (tri _qv_27))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((tri (mult _qv_29 _qv_30))=(mult (tri _qv_29) (tri _qv_30))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((tri (mult _qv_29 _qv_30))=(mult (tri _qv_30) (tri _qv_29))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((cubes (plus _qv_31 _qv_32))=(plus (cubes _qv_31) (cubes _qv_32))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((cubes (plus _qv_31 _qv_32))=(plus (cubes _qv_32) (cubes _qv_31))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((cubes (mult _qv_33 _qv_34))=(mult (cubes _qv_33) (cubes _qv_34))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((cubes (mult _qv_33 _qv_34))=(mult (cubes _qv_34) (cubes _qv_33))))
USE ASSUMPTION FAILED

  backtrack to: ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
  rewritten [15]: ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult (succ (plus (succ _t_36) _t_36)) _v_35)))
  Maximum recursion depth reached
CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_1 _qv_2)=(plus _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_3 _qv_4) _qv_5)=(plus _qv_3 (plus _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((mult _qv_6 _qv_7)=(mult _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((mult (mult _qv_8 _qv_9) _qv_10)=(mult _qv_8 (mult _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat)) ((tri (tri _qv_11))=_qv_11))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat)) ((cubes (cubes _qv_12))=_qv_12))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_14))=(nat-to-int _qv_14)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat)) ((nat-to-int (tri _qv_15))=(nat-to-int _qv_15)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat)) ((nat-to-int (cubes _qv_16))=(nat-to-int _qv_16)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((mult _qv_17 (plus _qv_18 _qv_19))=(plus (mult _qv_17 _qv_18) (mult _qv_17 _qv_19))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus _qv_20 (mult _qv_21 _qv_22))=(mult (plus _qv_20 _qv_21) (plus _qv_20 _qv_22))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_23 _qv_24))=(plus (succ _qv_23) (succ _qv_24))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_23 _qv_24))=(plus (succ _qv_24) (succ _qv_23))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (mult _qv_25 _qv_26))=(mult (succ _qv_25) (succ _qv_26))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (mult _qv_25 _qv_26))=(mult (succ _qv_26) (succ _qv_25))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((tri (plus _qv_27 _qv_28))=(plus (tri _qv_27) (tri _qv_28))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((tri (plus _qv_27 _qv_28))=(plus (tri _qv_28) (tri _qv_27))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((tri (mult _qv_29 _qv_30))=(mult (tri _qv_29) (tri _qv_30))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((tri (mult _qv_29 _qv_30))=(mult (tri _qv_30) (tri _qv_29))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((cubes (plus _qv_31 _qv_32))=(plus (cubes _qv_31) (cubes _qv_32))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((cubes (plus _qv_31 _qv_32))=(plus (cubes _qv_32) (cubes _qv_31))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((cubes (mult _qv_33 _qv_34))=(mult (cubes _qv_33) (cubes _qv_34))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((cubes (mult _qv_33 _qv_34))=(mult (cubes _qv_34) (cubes _qv_33))))
USE ASSUMPTION FAILED

  backtrack to: ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
  rewritten [15]: ([+    (nat-to-int (mult (plus _v_35 _v_35) _t_36))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
  Maximum recursion depth reached
CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_1 _qv_2)=(plus _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_3 _qv_4) _qv_5)=(plus _qv_3 (plus _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((mult _qv_6 _qv_7)=(mult _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((mult (mult _qv_8 _qv_9) _qv_10)=(mult _qv_8 (mult _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat)) ((tri (tri _qv_11))=_qv_11))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat)) ((cubes (cubes _qv_12))=_qv_12))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_14))=(nat-to-int _qv_14)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat)) ((nat-to-int (tri _qv_15))=(nat-to-int _qv_15)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat)) ((nat-to-int (cubes _qv_16))=(nat-to-int _qv_16)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((mult _qv_17 (plus _qv_18 _qv_19))=(plus (mult _qv_17 _qv_18) (mult _qv_17 _qv_19))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus _qv_20 (mult _qv_21 _qv_22))=(mult (plus _qv_20 _qv_21) (plus _qv_20 _qv_22))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_23 _qv_24))=(plus (succ _qv_23) (succ _qv_24))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_23 _qv_24))=(plus (succ _qv_24) (succ _qv_23))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (mult _qv_25 _qv_26))=(mult (succ _qv_25) (succ _qv_26))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (mult _qv_25 _qv_26))=(mult (succ _qv_26) (succ _qv_25))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((tri (plus _qv_27 _qv_28))=(plus (tri _qv_27) (tri _qv_28))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((tri (plus _qv_27 _qv_28))=(plus (tri _qv_28) (tri _qv_27))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((tri (mult _qv_29 _qv_30))=(mult (tri _qv_29) (tri _qv_30))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((tri (mult _qv_29 _qv_30))=(mult (tri _qv_30) (tri _qv_29))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((cubes (plus _qv_31 _qv_32))=(plus (cubes _qv_31) (cubes _qv_32))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((cubes (plus _qv_31 _qv_32))=(plus (cubes _qv_32) (cubes _qv_31))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((cubes (mult _qv_33 _qv_34))=(mult (cubes _qv_33) (cubes _qv_34))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((cubes (mult _qv_33 _qv_34))=(mult (cubes _qv_34) (cubes _qv_33))))
USE ASSUMPTION FAILED

  backtrack to: ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
  rewritten [17]: ([+    (nat-to-int (mult _v_35 (plus _t_36 _t_36)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
  Maximum recursion depth reached
CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_1 _qv_2)=(plus _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_3 _qv_4) _qv_5)=(plus _qv_3 (plus _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((mult _qv_6 _qv_7)=(mult _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((mult (mult _qv_8 _qv_9) _qv_10)=(mult _qv_8 (mult _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat)) ((tri (tri _qv_11))=_qv_11))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat)) ((cubes (cubes _qv_12))=_qv_12))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_14))=(nat-to-int _qv_14)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat)) ((nat-to-int (tri _qv_15))=(nat-to-int _qv_15)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat)) ((nat-to-int (cubes _qv_16))=(nat-to-int _qv_16)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((mult _qv_17 (plus _qv_18 _qv_19))=(plus (mult _qv_17 _qv_18) (mult _qv_17 _qv_19))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus _qv_20 (mult _qv_21 _qv_22))=(mult (plus _qv_20 _qv_21) (plus _qv_20 _qv_22))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_23 _qv_24))=(plus (succ _qv_23) (succ _qv_24))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_23 _qv_24))=(plus (succ _qv_24) (succ _qv_23))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (mult _qv_25 _qv_26))=(mult (succ _qv_25) (succ _qv_26))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (mult _qv_25 _qv_26))=(mult (succ _qv_26) (succ _qv_25))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((tri (plus _qv_27 _qv_28))=(plus (tri _qv_27) (tri _qv_28))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((tri (plus _qv_27 _qv_28))=(plus (tri _qv_28) (tri _qv_27))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((tri (mult _qv_29 _qv_30))=(mult (tri _qv_29) (tri _qv_30))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((tri (mult _qv_29 _qv_30))=(mult (tri _qv_30) (tri _qv_29))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((cubes (plus _qv_31 _qv_32))=(plus (cubes _qv_31) (cubes _qv_32))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((cubes (plus _qv_31 _qv_32))=(plus (cubes _qv_32) (cubes _qv_31))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((cubes (mult _qv_33 _qv_34))=(mult (cubes _qv_33) (cubes _qv_34))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((cubes (mult _qv_33 _qv_34))=(mult (cubes _qv_34) (cubes _qv_33))))
USE ASSUMPTION FAILED

  backtrack to: ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_1 _qv_2)=(plus _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_3 _qv_4) _qv_5)=(plus _qv_3 (plus _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((mult _qv_6 _qv_7)=(mult _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((mult (mult _qv_8 _qv_9) _qv_10)=(mult _qv_8 (mult _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat)) ((tri (tri _qv_11))=_qv_11))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat)) ((cubes (cubes _qv_12))=_qv_12))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_14))=(nat-to-int _qv_14)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat)) ((nat-to-int (tri _qv_15))=(nat-to-int _qv_15)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat)) ((nat-to-int (cubes _qv_16))=(nat-to-int _qv_16)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((mult _qv_17 (plus _qv_18 _qv_19))=(plus (mult _qv_17 _qv_18) (mult _qv_17 _qv_19))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus _qv_20 (mult _qv_21 _qv_22))=(mult (plus _qv_20 _qv_21) (plus _qv_20 _qv_22))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_23 _qv_24))=(plus (succ _qv_23) (succ _qv_24))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_23 _qv_24))=(plus (succ _qv_24) (succ _qv_23))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (mult _qv_25 _qv_26))=(mult (succ _qv_25) (succ _qv_26))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (mult _qv_25 _qv_26))=(mult (succ _qv_26) (succ _qv_25))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((tri (plus _qv_27 _qv_28))=(plus (tri _qv_27) (tri _qv_28))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((tri (plus _qv_27 _qv_28))=(plus (tri _qv_28) (tri _qv_27))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((tri (mult _qv_29 _qv_30))=(mult (tri _qv_29) (tri _qv_30))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((tri (mult _qv_29 _qv_30))=(mult (tri _qv_30) (tri _qv_29))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((cubes (plus _qv_31 _qv_32))=(plus (cubes _qv_31) (cubes _qv_32))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((cubes (plus _qv_31 _qv_32))=(plus (cubes _qv_32) (cubes _qv_31))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((cubes (mult _qv_33 _qv_34))=(mult (cubes _qv_33) (cubes _qv_34))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((cubes (mult _qv_33 _qv_34))=(mult (cubes _qv_34) (cubes _qv_33))))
USE ASSUMPTION FAILED

  backtrack to: ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
  rewritten [15]: ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult (succ (plus _t_36 (succ _t_36))) _v_35)))
  rewritten [2]: (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(2*(nat-to-int _v_35)))=(nat-to-int (mult (succ (plus _t_36 (succ _t_36))) _v_35)))
  Maximum recursion depth reached
CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult (succ (plus _t_36 (succ _t_36))) _v_35)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult (succ (plus _t_36 (succ _t_36))) _v_35)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_1 _qv_2)=(plus _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult (succ (plus _t_36 (succ _t_36))) _v_35)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_3 _qv_4) _qv_5)=(plus _qv_3 (plus _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult (succ (plus _t_36 (succ _t_36))) _v_35)))
NOW TESTING (forall ((Nat) (Nat)) ((mult _qv_6 _qv_7)=(mult _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult (succ (plus _t_36 (succ _t_36))) _v_35)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((mult (mult _qv_8 _qv_9) _qv_10)=(mult _qv_8 (mult _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult (succ (plus _t_36 (succ _t_36))) _v_35)))
NOW TESTING (forall ((Nat)) ((tri (tri _qv_11))=_qv_11))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult (succ (plus _t_36 (succ _t_36))) _v_35)))
NOW TESTING (forall ((Nat)) ((cubes (cubes _qv_12))=_qv_12))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult (succ (plus _t_36 (succ _t_36))) _v_35)))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult (succ (plus _t_36 (succ _t_36))) _v_35)))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_14))=(nat-to-int _qv_14)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult (succ (plus _t_36 (succ _t_36))) _v_35)))
NOW TESTING (forall ((Nat)) ((nat-to-int (tri _qv_15))=(nat-to-int _qv_15)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult (succ (plus _t_36 (succ _t_36))) _v_35)))
NOW TESTING (forall ((Nat)) ((nat-to-int (cubes _qv_16))=(nat-to-int _qv_16)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult (succ (plus _t_36 (succ _t_36))) _v_35)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((mult _qv_17 (plus _qv_18 _qv_19))=(plus (mult _qv_17 _qv_18) (mult _qv_17 _qv_19))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult (succ (plus _t_36 (succ _t_36))) _v_35)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus _qv_20 (mult _qv_21 _qv_22))=(mult (plus _qv_20 _qv_21) (plus _qv_20 _qv_22))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult (succ (plus _t_36 (succ _t_36))) _v_35)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_23 _qv_24))=(plus (succ _qv_23) (succ _qv_24))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult (succ (plus _t_36 (succ _t_36))) _v_35)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_23 _qv_24))=(plus (succ _qv_24) (succ _qv_23))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult (succ (plus _t_36 (succ _t_36))) _v_35)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (mult _qv_25 _qv_26))=(mult (succ _qv_25) (succ _qv_26))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult (succ (plus _t_36 (succ _t_36))) _v_35)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (mult _qv_25 _qv_26))=(mult (succ _qv_26) (succ _qv_25))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult (succ (plus _t_36 (succ _t_36))) _v_35)))
NOW TESTING (forall ((Nat) (Nat)) ((tri (plus _qv_27 _qv_28))=(plus (tri _qv_27) (tri _qv_28))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult (succ (plus _t_36 (succ _t_36))) _v_35)))
NOW TESTING (forall ((Nat) (Nat)) ((tri (plus _qv_27 _qv_28))=(plus (tri _qv_28) (tri _qv_27))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult (succ (plus _t_36 (succ _t_36))) _v_35)))
NOW TESTING (forall ((Nat) (Nat)) ((tri (mult _qv_29 _qv_30))=(mult (tri _qv_29) (tri _qv_30))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult (succ (plus _t_36 (succ _t_36))) _v_35)))
NOW TESTING (forall ((Nat) (Nat)) ((tri (mult _qv_29 _qv_30))=(mult (tri _qv_30) (tri _qv_29))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult (succ (plus _t_36 (succ _t_36))) _v_35)))
NOW TESTING (forall ((Nat) (Nat)) ((cubes (plus _qv_31 _qv_32))=(plus (cubes _qv_31) (cubes _qv_32))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult (succ (plus _t_36 (succ _t_36))) _v_35)))
NOW TESTING (forall ((Nat) (Nat)) ((cubes (plus _qv_31 _qv_32))=(plus (cubes _qv_32) (cubes _qv_31))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult (succ (plus _t_36 (succ _t_36))) _v_35)))
NOW TESTING (forall ((Nat) (Nat)) ((cubes (mult _qv_33 _qv_34))=(mult (cubes _qv_33) (cubes _qv_34))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult (succ (plus _t_36 (succ _t_36))) _v_35)))
NOW TESTING (forall ((Nat) (Nat)) ((cubes (mult _qv_33 _qv_34))=(mult (cubes _qv_34) (cubes _qv_33))))
USE ASSUMPTION FAILED

  backtrack to: ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult (succ (plus _t_36 (succ _t_36))) _v_35)))
  rewritten [6]: ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (plus (mult (plus _t_36 (succ _t_36)) _v_35) _v_35)))
  Maximum recursion depth reached
CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult (succ (plus _t_36 (succ _t_36))) _v_35)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult (succ (plus _t_36 (succ _t_36))) _v_35)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_1 _qv_2)=(plus _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult (succ (plus _t_36 (succ _t_36))) _v_35)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_3 _qv_4) _qv_5)=(plus _qv_3 (plus _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult (succ (plus _t_36 (succ _t_36))) _v_35)))
NOW TESTING (forall ((Nat) (Nat)) ((mult _qv_6 _qv_7)=(mult _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult (succ (plus _t_36 (succ _t_36))) _v_35)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((mult (mult _qv_8 _qv_9) _qv_10)=(mult _qv_8 (mult _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult (succ (plus _t_36 (succ _t_36))) _v_35)))
NOW TESTING (forall ((Nat)) ((tri (tri _qv_11))=_qv_11))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult (succ (plus _t_36 (succ _t_36))) _v_35)))
NOW TESTING (forall ((Nat)) ((cubes (cubes _qv_12))=_qv_12))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult (succ (plus _t_36 (succ _t_36))) _v_35)))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult (succ (plus _t_36 (succ _t_36))) _v_35)))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_14))=(nat-to-int _qv_14)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult (succ (plus _t_36 (succ _t_36))) _v_35)))
NOW TESTING (forall ((Nat)) ((nat-to-int (tri _qv_15))=(nat-to-int _qv_15)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult (succ (plus _t_36 (succ _t_36))) _v_35)))
NOW TESTING (forall ((Nat)) ((nat-to-int (cubes _qv_16))=(nat-to-int _qv_16)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult (succ (plus _t_36 (succ _t_36))) _v_35)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((mult _qv_17 (plus _qv_18 _qv_19))=(plus (mult _qv_17 _qv_18) (mult _qv_17 _qv_19))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult (succ (plus _t_36 (succ _t_36))) _v_35)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus _qv_20 (mult _qv_21 _qv_22))=(mult (plus _qv_20 _qv_21) (plus _qv_20 _qv_22))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult (succ (plus _t_36 (succ _t_36))) _v_35)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_23 _qv_24))=(plus (succ _qv_23) (succ _qv_24))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult (succ (plus _t_36 (succ _t_36))) _v_35)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_23 _qv_24))=(plus (succ _qv_24) (succ _qv_23))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult (succ (plus _t_36 (succ _t_36))) _v_35)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (mult _qv_25 _qv_26))=(mult (succ _qv_25) (succ _qv_26))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult (succ (plus _t_36 (succ _t_36))) _v_35)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (mult _qv_25 _qv_26))=(mult (succ _qv_26) (succ _qv_25))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult (succ (plus _t_36 (succ _t_36))) _v_35)))
NOW TESTING (forall ((Nat) (Nat)) ((tri (plus _qv_27 _qv_28))=(plus (tri _qv_27) (tri _qv_28))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult (succ (plus _t_36 (succ _t_36))) _v_35)))
NOW TESTING (forall ((Nat) (Nat)) ((tri (plus _qv_27 _qv_28))=(plus (tri _qv_28) (tri _qv_27))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult (succ (plus _t_36 (succ _t_36))) _v_35)))
NOW TESTING (forall ((Nat) (Nat)) ((tri (mult _qv_29 _qv_30))=(mult (tri _qv_29) (tri _qv_30))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult (succ (plus _t_36 (succ _t_36))) _v_35)))
NOW TESTING (forall ((Nat) (Nat)) ((tri (mult _qv_29 _qv_30))=(mult (tri _qv_30) (tri _qv_29))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult (succ (plus _t_36 (succ _t_36))) _v_35)))
NOW TESTING (forall ((Nat) (Nat)) ((cubes (plus _qv_31 _qv_32))=(plus (cubes _qv_31) (cubes _qv_32))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult (succ (plus _t_36 (succ _t_36))) _v_35)))
NOW TESTING (forall ((Nat) (Nat)) ((cubes (plus _qv_31 _qv_32))=(plus (cubes _qv_32) (cubes _qv_31))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult (succ (plus _t_36 (succ _t_36))) _v_35)))
NOW TESTING (forall ((Nat) (Nat)) ((cubes (mult _qv_33 _qv_34))=(mult (cubes _qv_33) (cubes _qv_34))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult (succ (plus _t_36 (succ _t_36))) _v_35)))
NOW TESTING (forall ((Nat) (Nat)) ((cubes (mult _qv_33 _qv_34))=(mult (cubes _qv_34) (cubes _qv_33))))
USE ASSUMPTION FAILED

  backtrack to: ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult (succ (plus _t_36 (succ _t_36))) _v_35)))
  rewritten [13]: ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult (succ (plus (succ _t_36) _t_36)) _v_35)))
  Maximum recursion depth reached
CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult (succ (plus _t_36 (succ _t_36))) _v_35)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult (succ (plus _t_36 (succ _t_36))) _v_35)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_1 _qv_2)=(plus _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult (succ (plus _t_36 (succ _t_36))) _v_35)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_3 _qv_4) _qv_5)=(plus _qv_3 (plus _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult (succ (plus _t_36 (succ _t_36))) _v_35)))
NOW TESTING (forall ((Nat) (Nat)) ((mult _qv_6 _qv_7)=(mult _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult (succ (plus _t_36 (succ _t_36))) _v_35)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((mult (mult _qv_8 _qv_9) _qv_10)=(mult _qv_8 (mult _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult (succ (plus _t_36 (succ _t_36))) _v_35)))
NOW TESTING (forall ((Nat)) ((tri (tri _qv_11))=_qv_11))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult (succ (plus _t_36 (succ _t_36))) _v_35)))
NOW TESTING (forall ((Nat)) ((cubes (cubes _qv_12))=_qv_12))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult (succ (plus _t_36 (succ _t_36))) _v_35)))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult (succ (plus _t_36 (succ _t_36))) _v_35)))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_14))=(nat-to-int _qv_14)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult (succ (plus _t_36 (succ _t_36))) _v_35)))
NOW TESTING (forall ((Nat)) ((nat-to-int (tri _qv_15))=(nat-to-int _qv_15)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult (succ (plus _t_36 (succ _t_36))) _v_35)))
NOW TESTING (forall ((Nat)) ((nat-to-int (cubes _qv_16))=(nat-to-int _qv_16)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult (succ (plus _t_36 (succ _t_36))) _v_35)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((mult _qv_17 (plus _qv_18 _qv_19))=(plus (mult _qv_17 _qv_18) (mult _qv_17 _qv_19))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult (succ (plus _t_36 (succ _t_36))) _v_35)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus _qv_20 (mult _qv_21 _qv_22))=(mult (plus _qv_20 _qv_21) (plus _qv_20 _qv_22))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult (succ (plus _t_36 (succ _t_36))) _v_35)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_23 _qv_24))=(plus (succ _qv_23) (succ _qv_24))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult (succ (plus _t_36 (succ _t_36))) _v_35)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_23 _qv_24))=(plus (succ _qv_24) (succ _qv_23))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult (succ (plus _t_36 (succ _t_36))) _v_35)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (mult _qv_25 _qv_26))=(mult (succ _qv_25) (succ _qv_26))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult (succ (plus _t_36 (succ _t_36))) _v_35)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (mult _qv_25 _qv_26))=(mult (succ _qv_26) (succ _qv_25))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult (succ (plus _t_36 (succ _t_36))) _v_35)))
NOW TESTING (forall ((Nat) (Nat)) ((tri (plus _qv_27 _qv_28))=(plus (tri _qv_27) (tri _qv_28))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult (succ (plus _t_36 (succ _t_36))) _v_35)))
NOW TESTING (forall ((Nat) (Nat)) ((tri (plus _qv_27 _qv_28))=(plus (tri _qv_28) (tri _qv_27))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult (succ (plus _t_36 (succ _t_36))) _v_35)))
NOW TESTING (forall ((Nat) (Nat)) ((tri (mult _qv_29 _qv_30))=(mult (tri _qv_29) (tri _qv_30))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult (succ (plus _t_36 (succ _t_36))) _v_35)))
NOW TESTING (forall ((Nat) (Nat)) ((tri (mult _qv_29 _qv_30))=(mult (tri _qv_30) (tri _qv_29))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult (succ (plus _t_36 (succ _t_36))) _v_35)))
NOW TESTING (forall ((Nat) (Nat)) ((cubes (plus _qv_31 _qv_32))=(plus (cubes _qv_31) (cubes _qv_32))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult (succ (plus _t_36 (succ _t_36))) _v_35)))
NOW TESTING (forall ((Nat) (Nat)) ((cubes (plus _qv_31 _qv_32))=(plus (cubes _qv_32) (cubes _qv_31))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult (succ (plus _t_36 (succ _t_36))) _v_35)))
NOW TESTING (forall ((Nat) (Nat)) ((cubes (mult _qv_33 _qv_34))=(mult (cubes _qv_33) (cubes _qv_34))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult (succ (plus _t_36 (succ _t_36))) _v_35)))
NOW TESTING (forall ((Nat) (Nat)) ((cubes (mult _qv_33 _qv_34))=(mult (cubes _qv_34) (cubes _qv_33))))
USE ASSUMPTION FAILED

  backtrack to: ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult (succ (plus _t_36 (succ _t_36))) _v_35)))
  rewritten [15]: ([+    (nat-to-int (mult (plus _v_35 _v_35) _t_36))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult (succ (plus _t_36 (succ _t_36))) _v_35)))
  Maximum recursion depth reached
CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult (succ (plus _t_36 (succ _t_36))) _v_35)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult (succ (plus _t_36 (succ _t_36))) _v_35)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_1 _qv_2)=(plus _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult (succ (plus _t_36 (succ _t_36))) _v_35)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_3 _qv_4) _qv_5)=(plus _qv_3 (plus _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult (succ (plus _t_36 (succ _t_36))) _v_35)))
NOW TESTING (forall ((Nat) (Nat)) ((mult _qv_6 _qv_7)=(mult _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult (succ (plus _t_36 (succ _t_36))) _v_35)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((mult (mult _qv_8 _qv_9) _qv_10)=(mult _qv_8 (mult _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult (succ (plus _t_36 (succ _t_36))) _v_35)))
NOW TESTING (forall ((Nat)) ((tri (tri _qv_11))=_qv_11))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult (succ (plus _t_36 (succ _t_36))) _v_35)))
NOW TESTING (forall ((Nat)) ((cubes (cubes _qv_12))=_qv_12))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult (succ (plus _t_36 (succ _t_36))) _v_35)))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult (succ (plus _t_36 (succ _t_36))) _v_35)))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_14))=(nat-to-int _qv_14)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult (succ (plus _t_36 (succ _t_36))) _v_35)))
NOW TESTING (forall ((Nat)) ((nat-to-int (tri _qv_15))=(nat-to-int _qv_15)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult (succ (plus _t_36 (succ _t_36))) _v_35)))
NOW TESTING (forall ((Nat)) ((nat-to-int (cubes _qv_16))=(nat-to-int _qv_16)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult (succ (plus _t_36 (succ _t_36))) _v_35)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((mult _qv_17 (plus _qv_18 _qv_19))=(plus (mult _qv_17 _qv_18) (mult _qv_17 _qv_19))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult (succ (plus _t_36 (succ _t_36))) _v_35)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus _qv_20 (mult _qv_21 _qv_22))=(mult (plus _qv_20 _qv_21) (plus _qv_20 _qv_22))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult (succ (plus _t_36 (succ _t_36))) _v_35)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_23 _qv_24))=(plus (succ _qv_23) (succ _qv_24))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult (succ (plus _t_36 (succ _t_36))) _v_35)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_23 _qv_24))=(plus (succ _qv_24) (succ _qv_23))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult (succ (plus _t_36 (succ _t_36))) _v_35)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (mult _qv_25 _qv_26))=(mult (succ _qv_25) (succ _qv_26))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult (succ (plus _t_36 (succ _t_36))) _v_35)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (mult _qv_25 _qv_26))=(mult (succ _qv_26) (succ _qv_25))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult (succ (plus _t_36 (succ _t_36))) _v_35)))
NOW TESTING (forall ((Nat) (Nat)) ((tri (plus _qv_27 _qv_28))=(plus (tri _qv_27) (tri _qv_28))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult (succ (plus _t_36 (succ _t_36))) _v_35)))
NOW TESTING (forall ((Nat) (Nat)) ((tri (plus _qv_27 _qv_28))=(plus (tri _qv_28) (tri _qv_27))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult (succ (plus _t_36 (succ _t_36))) _v_35)))
NOW TESTING (forall ((Nat) (Nat)) ((tri (mult _qv_29 _qv_30))=(mult (tri _qv_29) (tri _qv_30))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult (succ (plus _t_36 (succ _t_36))) _v_35)))
NOW TESTING (forall ((Nat) (Nat)) ((tri (mult _qv_29 _qv_30))=(mult (tri _qv_30) (tri _qv_29))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult (succ (plus _t_36 (succ _t_36))) _v_35)))
NOW TESTING (forall ((Nat) (Nat)) ((cubes (plus _qv_31 _qv_32))=(plus (cubes _qv_31) (cubes _qv_32))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult (succ (plus _t_36 (succ _t_36))) _v_35)))
NOW TESTING (forall ((Nat) (Nat)) ((cubes (plus _qv_31 _qv_32))=(plus (cubes _qv_32) (cubes _qv_31))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult (succ (plus _t_36 (succ _t_36))) _v_35)))
NOW TESTING (forall ((Nat) (Nat)) ((cubes (mult _qv_33 _qv_34))=(mult (cubes _qv_33) (cubes _qv_34))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult (succ (plus _t_36 (succ _t_36))) _v_35)))
NOW TESTING (forall ((Nat) (Nat)) ((cubes (mult _qv_33 _qv_34))=(mult (cubes _qv_34) (cubes _qv_33))))
USE ASSUMPTION FAILED

  backtrack to: ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult (succ (plus _t_36 (succ _t_36))) _v_35)))
  rewritten [15]: ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
  Maximum recursion depth reached
CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult (succ (plus _t_36 (succ _t_36))) _v_35)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult (succ (plus _t_36 (succ _t_36))) _v_35)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_1 _qv_2)=(plus _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult (succ (plus _t_36 (succ _t_36))) _v_35)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_3 _qv_4) _qv_5)=(plus _qv_3 (plus _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult (succ (plus _t_36 (succ _t_36))) _v_35)))
NOW TESTING (forall ((Nat) (Nat)) ((mult _qv_6 _qv_7)=(mult _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult (succ (plus _t_36 (succ _t_36))) _v_35)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((mult (mult _qv_8 _qv_9) _qv_10)=(mult _qv_8 (mult _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult (succ (plus _t_36 (succ _t_36))) _v_35)))
NOW TESTING (forall ((Nat)) ((tri (tri _qv_11))=_qv_11))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult (succ (plus _t_36 (succ _t_36))) _v_35)))
NOW TESTING (forall ((Nat)) ((cubes (cubes _qv_12))=_qv_12))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult (succ (plus _t_36 (succ _t_36))) _v_35)))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult (succ (plus _t_36 (succ _t_36))) _v_35)))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_14))=(nat-to-int _qv_14)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult (succ (plus _t_36 (succ _t_36))) _v_35)))
NOW TESTING (forall ((Nat)) ((nat-to-int (tri _qv_15))=(nat-to-int _qv_15)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult (succ (plus _t_36 (succ _t_36))) _v_35)))
NOW TESTING (forall ((Nat)) ((nat-to-int (cubes _qv_16))=(nat-to-int _qv_16)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult (succ (plus _t_36 (succ _t_36))) _v_35)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((mult _qv_17 (plus _qv_18 _qv_19))=(plus (mult _qv_17 _qv_18) (mult _qv_17 _qv_19))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult (succ (plus _t_36 (succ _t_36))) _v_35)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus _qv_20 (mult _qv_21 _qv_22))=(mult (plus _qv_20 _qv_21) (plus _qv_20 _qv_22))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult (succ (plus _t_36 (succ _t_36))) _v_35)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_23 _qv_24))=(plus (succ _qv_23) (succ _qv_24))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult (succ (plus _t_36 (succ _t_36))) _v_35)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_23 _qv_24))=(plus (succ _qv_24) (succ _qv_23))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult (succ (plus _t_36 (succ _t_36))) _v_35)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (mult _qv_25 _qv_26))=(mult (succ _qv_25) (succ _qv_26))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult (succ (plus _t_36 (succ _t_36))) _v_35)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (mult _qv_25 _qv_26))=(mult (succ _qv_26) (succ _qv_25))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult (succ (plus _t_36 (succ _t_36))) _v_35)))
NOW TESTING (forall ((Nat) (Nat)) ((tri (plus _qv_27 _qv_28))=(plus (tri _qv_27) (tri _qv_28))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult (succ (plus _t_36 (succ _t_36))) _v_35)))
NOW TESTING (forall ((Nat) (Nat)) ((tri (plus _qv_27 _qv_28))=(plus (tri _qv_28) (tri _qv_27))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult (succ (plus _t_36 (succ _t_36))) _v_35)))
NOW TESTING (forall ((Nat) (Nat)) ((tri (mult _qv_29 _qv_30))=(mult (tri _qv_29) (tri _qv_30))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult (succ (plus _t_36 (succ _t_36))) _v_35)))
NOW TESTING (forall ((Nat) (Nat)) ((tri (mult _qv_29 _qv_30))=(mult (tri _qv_30) (tri _qv_29))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult (succ (plus _t_36 (succ _t_36))) _v_35)))
NOW TESTING (forall ((Nat) (Nat)) ((cubes (plus _qv_31 _qv_32))=(plus (cubes _qv_31) (cubes _qv_32))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult (succ (plus _t_36 (succ _t_36))) _v_35)))
NOW TESTING (forall ((Nat) (Nat)) ((cubes (plus _qv_31 _qv_32))=(plus (cubes _qv_32) (cubes _qv_31))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult (succ (plus _t_36 (succ _t_36))) _v_35)))
NOW TESTING (forall ((Nat) (Nat)) ((cubes (mult _qv_33 _qv_34))=(mult (cubes _qv_33) (cubes _qv_34))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult (succ (plus _t_36 (succ _t_36))) _v_35)))
NOW TESTING (forall ((Nat) (Nat)) ((cubes (mult _qv_33 _qv_34))=(mult (cubes _qv_34) (cubes _qv_33))))
USE ASSUMPTION FAILED

  backtrack to: ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult (succ (plus _t_36 (succ _t_36))) _v_35)))
  rewritten [17]: ([+    (nat-to-int (mult _v_35 (plus _t_36 _t_36)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult (succ (plus _t_36 (succ _t_36))) _v_35)))
  Maximum recursion depth reached
CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult (succ (plus _t_36 (succ _t_36))) _v_35)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult (succ (plus _t_36 (succ _t_36))) _v_35)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_1 _qv_2)=(plus _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult (succ (plus _t_36 (succ _t_36))) _v_35)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_3 _qv_4) _qv_5)=(plus _qv_3 (plus _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult (succ (plus _t_36 (succ _t_36))) _v_35)))
NOW TESTING (forall ((Nat) (Nat)) ((mult _qv_6 _qv_7)=(mult _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult (succ (plus _t_36 (succ _t_36))) _v_35)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((mult (mult _qv_8 _qv_9) _qv_10)=(mult _qv_8 (mult _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult (succ (plus _t_36 (succ _t_36))) _v_35)))
NOW TESTING (forall ((Nat)) ((tri (tri _qv_11))=_qv_11))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult (succ (plus _t_36 (succ _t_36))) _v_35)))
NOW TESTING (forall ((Nat)) ((cubes (cubes _qv_12))=_qv_12))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult (succ (plus _t_36 (succ _t_36))) _v_35)))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult (succ (plus _t_36 (succ _t_36))) _v_35)))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_14))=(nat-to-int _qv_14)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult (succ (plus _t_36 (succ _t_36))) _v_35)))
NOW TESTING (forall ((Nat)) ((nat-to-int (tri _qv_15))=(nat-to-int _qv_15)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult (succ (plus _t_36 (succ _t_36))) _v_35)))
NOW TESTING (forall ((Nat)) ((nat-to-int (cubes _qv_16))=(nat-to-int _qv_16)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult (succ (plus _t_36 (succ _t_36))) _v_35)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((mult _qv_17 (plus _qv_18 _qv_19))=(plus (mult _qv_17 _qv_18) (mult _qv_17 _qv_19))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult (succ (plus _t_36 (succ _t_36))) _v_35)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus _qv_20 (mult _qv_21 _qv_22))=(mult (plus _qv_20 _qv_21) (plus _qv_20 _qv_22))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult (succ (plus _t_36 (succ _t_36))) _v_35)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_23 _qv_24))=(plus (succ _qv_23) (succ _qv_24))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult (succ (plus _t_36 (succ _t_36))) _v_35)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_23 _qv_24))=(plus (succ _qv_24) (succ _qv_23))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult (succ (plus _t_36 (succ _t_36))) _v_35)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (mult _qv_25 _qv_26))=(mult (succ _qv_25) (succ _qv_26))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult (succ (plus _t_36 (succ _t_36))) _v_35)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (mult _qv_25 _qv_26))=(mult (succ _qv_26) (succ _qv_25))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult (succ (plus _t_36 (succ _t_36))) _v_35)))
NOW TESTING (forall ((Nat) (Nat)) ((tri (plus _qv_27 _qv_28))=(plus (tri _qv_27) (tri _qv_28))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult (succ (plus _t_36 (succ _t_36))) _v_35)))
NOW TESTING (forall ((Nat) (Nat)) ((tri (plus _qv_27 _qv_28))=(plus (tri _qv_28) (tri _qv_27))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult (succ (plus _t_36 (succ _t_36))) _v_35)))
NOW TESTING (forall ((Nat) (Nat)) ((tri (mult _qv_29 _qv_30))=(mult (tri _qv_29) (tri _qv_30))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult (succ (plus _t_36 (succ _t_36))) _v_35)))
NOW TESTING (forall ((Nat) (Nat)) ((tri (mult _qv_29 _qv_30))=(mult (tri _qv_30) (tri _qv_29))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult (succ (plus _t_36 (succ _t_36))) _v_35)))
NOW TESTING (forall ((Nat) (Nat)) ((cubes (plus _qv_31 _qv_32))=(plus (cubes _qv_31) (cubes _qv_32))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult (succ (plus _t_36 (succ _t_36))) _v_35)))
NOW TESTING (forall ((Nat) (Nat)) ((cubes (plus _qv_31 _qv_32))=(plus (cubes _qv_32) (cubes _qv_31))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult (succ (plus _t_36 (succ _t_36))) _v_35)))
NOW TESTING (forall ((Nat) (Nat)) ((cubes (mult _qv_33 _qv_34))=(mult (cubes _qv_33) (cubes _qv_34))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult (succ (plus _t_36 (succ _t_36))) _v_35)))
NOW TESTING (forall ((Nat) (Nat)) ((cubes (mult _qv_33 _qv_34))=(mult (cubes _qv_34) (cubes _qv_33))))
USE ASSUMPTION FAILED

  backtrack to: ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult (succ (plus _t_36 (succ _t_36))) _v_35)))
  rewritten [2]: (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(2*(nat-to-int _v_35)))=(nat-to-int (mult (succ (plus _t_36 (succ _t_36))) _v_35)))
  Maximum recursion depth reached
CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult (succ (plus _t_36 (succ _t_36))) _v_35)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult (succ (plus _t_36 (succ _t_36))) _v_35)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_1 _qv_2)=(plus _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult (succ (plus _t_36 (succ _t_36))) _v_35)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_3 _qv_4) _qv_5)=(plus _qv_3 (plus _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult (succ (plus _t_36 (succ _t_36))) _v_35)))
NOW TESTING (forall ((Nat) (Nat)) ((mult _qv_6 _qv_7)=(mult _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult (succ (plus _t_36 (succ _t_36))) _v_35)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((mult (mult _qv_8 _qv_9) _qv_10)=(mult _qv_8 (mult _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult (succ (plus _t_36 (succ _t_36))) _v_35)))
NOW TESTING (forall ((Nat)) ((tri (tri _qv_11))=_qv_11))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult (succ (plus _t_36 (succ _t_36))) _v_35)))
NOW TESTING (forall ((Nat)) ((cubes (cubes _qv_12))=_qv_12))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult (succ (plus _t_36 (succ _t_36))) _v_35)))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult (succ (plus _t_36 (succ _t_36))) _v_35)))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_14))=(nat-to-int _qv_14)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult (succ (plus _t_36 (succ _t_36))) _v_35)))
NOW TESTING (forall ((Nat)) ((nat-to-int (tri _qv_15))=(nat-to-int _qv_15)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult (succ (plus _t_36 (succ _t_36))) _v_35)))
NOW TESTING (forall ((Nat)) ((nat-to-int (cubes _qv_16))=(nat-to-int _qv_16)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult (succ (plus _t_36 (succ _t_36))) _v_35)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((mult _qv_17 (plus _qv_18 _qv_19))=(plus (mult _qv_17 _qv_18) (mult _qv_17 _qv_19))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult (succ (plus _t_36 (succ _t_36))) _v_35)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus _qv_20 (mult _qv_21 _qv_22))=(mult (plus _qv_20 _qv_21) (plus _qv_20 _qv_22))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult (succ (plus _t_36 (succ _t_36))) _v_35)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_23 _qv_24))=(plus (succ _qv_23) (succ _qv_24))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult (succ (plus _t_36 (succ _t_36))) _v_35)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_23 _qv_24))=(plus (succ _qv_24) (succ _qv_23))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult (succ (plus _t_36 (succ _t_36))) _v_35)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (mult _qv_25 _qv_26))=(mult (succ _qv_25) (succ _qv_26))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult (succ (plus _t_36 (succ _t_36))) _v_35)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (mult _qv_25 _qv_26))=(mult (succ _qv_26) (succ _qv_25))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult (succ (plus _t_36 (succ _t_36))) _v_35)))
NOW TESTING (forall ((Nat) (Nat)) ((tri (plus _qv_27 _qv_28))=(plus (tri _qv_27) (tri _qv_28))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult (succ (plus _t_36 (succ _t_36))) _v_35)))
NOW TESTING (forall ((Nat) (Nat)) ((tri (plus _qv_27 _qv_28))=(plus (tri _qv_28) (tri _qv_27))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult (succ (plus _t_36 (succ _t_36))) _v_35)))
NOW TESTING (forall ((Nat) (Nat)) ((tri (mult _qv_29 _qv_30))=(mult (tri _qv_29) (tri _qv_30))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult (succ (plus _t_36 (succ _t_36))) _v_35)))
NOW TESTING (forall ((Nat) (Nat)) ((tri (mult _qv_29 _qv_30))=(mult (tri _qv_30) (tri _qv_29))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult (succ (plus _t_36 (succ _t_36))) _v_35)))
NOW TESTING (forall ((Nat) (Nat)) ((cubes (plus _qv_31 _qv_32))=(plus (cubes _qv_31) (cubes _qv_32))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult (succ (plus _t_36 (succ _t_36))) _v_35)))
NOW TESTING (forall ((Nat) (Nat)) ((cubes (plus _qv_31 _qv_32))=(plus (cubes _qv_32) (cubes _qv_31))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult (succ (plus _t_36 (succ _t_36))) _v_35)))
NOW TESTING (forall ((Nat) (Nat)) ((cubes (mult _qv_33 _qv_34))=(mult (cubes _qv_33) (cubes _qv_34))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult (succ (plus _t_36 (succ _t_36))) _v_35)))
NOW TESTING (forall ((Nat) (Nat)) ((cubes (mult _qv_33 _qv_34))=(mult (cubes _qv_34) (cubes _qv_33))))
USE ASSUMPTION FAILED

  backtrack to: ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult (succ (plus _t_36 (succ _t_36))) _v_35)))
  rewritten [6]: ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (plus (mult (plus _t_36 (succ _t_36)) _v_35) _v_35)))
  Maximum recursion depth reached
CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult (succ (plus _t_36 (succ _t_36))) _v_35)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult (succ (plus _t_36 (succ _t_36))) _v_35)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_1 _qv_2)=(plus _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult (succ (plus _t_36 (succ _t_36))) _v_35)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_3 _qv_4) _qv_5)=(plus _qv_3 (plus _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult (succ (plus _t_36 (succ _t_36))) _v_35)))
NOW TESTING (forall ((Nat) (Nat)) ((mult _qv_6 _qv_7)=(mult _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult (succ (plus _t_36 (succ _t_36))) _v_35)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((mult (mult _qv_8 _qv_9) _qv_10)=(mult _qv_8 (mult _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult (succ (plus _t_36 (succ _t_36))) _v_35)))
NOW TESTING (forall ((Nat)) ((tri (tri _qv_11))=_qv_11))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult (succ (plus _t_36 (succ _t_36))) _v_35)))
NOW TESTING (forall ((Nat)) ((cubes (cubes _qv_12))=_qv_12))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult (succ (plus _t_36 (succ _t_36))) _v_35)))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult (succ (plus _t_36 (succ _t_36))) _v_35)))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_14))=(nat-to-int _qv_14)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult (succ (plus _t_36 (succ _t_36))) _v_35)))
NOW TESTING (forall ((Nat)) ((nat-to-int (tri _qv_15))=(nat-to-int _qv_15)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult (succ (plus _t_36 (succ _t_36))) _v_35)))
NOW TESTING (forall ((Nat)) ((nat-to-int (cubes _qv_16))=(nat-to-int _qv_16)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult (succ (plus _t_36 (succ _t_36))) _v_35)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((mult _qv_17 (plus _qv_18 _qv_19))=(plus (mult _qv_17 _qv_18) (mult _qv_17 _qv_19))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult (succ (plus _t_36 (succ _t_36))) _v_35)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus _qv_20 (mult _qv_21 _qv_22))=(mult (plus _qv_20 _qv_21) (plus _qv_20 _qv_22))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult (succ (plus _t_36 (succ _t_36))) _v_35)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_23 _qv_24))=(plus (succ _qv_23) (succ _qv_24))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult (succ (plus _t_36 (succ _t_36))) _v_35)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_23 _qv_24))=(plus (succ _qv_24) (succ _qv_23))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult (succ (plus _t_36 (succ _t_36))) _v_35)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (mult _qv_25 _qv_26))=(mult (succ _qv_25) (succ _qv_26))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult (succ (plus _t_36 (succ _t_36))) _v_35)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (mult _qv_25 _qv_26))=(mult (succ _qv_26) (succ _qv_25))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult (succ (plus _t_36 (succ _t_36))) _v_35)))
NOW TESTING (forall ((Nat) (Nat)) ((tri (plus _qv_27 _qv_28))=(plus (tri _qv_27) (tri _qv_28))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult (succ (plus _t_36 (succ _t_36))) _v_35)))
NOW TESTING (forall ((Nat) (Nat)) ((tri (plus _qv_27 _qv_28))=(plus (tri _qv_28) (tri _qv_27))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult (succ (plus _t_36 (succ _t_36))) _v_35)))
NOW TESTING (forall ((Nat) (Nat)) ((tri (mult _qv_29 _qv_30))=(mult (tri _qv_29) (tri _qv_30))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult (succ (plus _t_36 (succ _t_36))) _v_35)))
NOW TESTING (forall ((Nat) (Nat)) ((tri (mult _qv_29 _qv_30))=(mult (tri _qv_30) (tri _qv_29))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult (succ (plus _t_36 (succ _t_36))) _v_35)))
NOW TESTING (forall ((Nat) (Nat)) ((cubes (plus _qv_31 _qv_32))=(plus (cubes _qv_31) (cubes _qv_32))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult (succ (plus _t_36 (succ _t_36))) _v_35)))
NOW TESTING (forall ((Nat) (Nat)) ((cubes (plus _qv_31 _qv_32))=(plus (cubes _qv_32) (cubes _qv_31))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult (succ (plus _t_36 (succ _t_36))) _v_35)))
NOW TESTING (forall ((Nat) (Nat)) ((cubes (mult _qv_33 _qv_34))=(mult (cubes _qv_33) (cubes _qv_34))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult (succ (plus _t_36 (succ _t_36))) _v_35)))
NOW TESTING (forall ((Nat) (Nat)) ((cubes (mult _qv_33 _qv_34))=(mult (cubes _qv_34) (cubes _qv_33))))
USE ASSUMPTION FAILED

  backtrack to: ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult (succ (plus _t_36 (succ _t_36))) _v_35)))
  rewritten [13]: ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult (succ (plus (succ _t_36) _t_36)) _v_35)))
  Maximum recursion depth reached
CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult (succ (plus _t_36 (succ _t_36))) _v_35)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult (succ (plus _t_36 (succ _t_36))) _v_35)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_1 _qv_2)=(plus _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult (succ (plus _t_36 (succ _t_36))) _v_35)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_3 _qv_4) _qv_5)=(plus _qv_3 (plus _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult (succ (plus _t_36 (succ _t_36))) _v_35)))
NOW TESTING (forall ((Nat) (Nat)) ((mult _qv_6 _qv_7)=(mult _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult (succ (plus _t_36 (succ _t_36))) _v_35)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((mult (mult _qv_8 _qv_9) _qv_10)=(mult _qv_8 (mult _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult (succ (plus _t_36 (succ _t_36))) _v_35)))
NOW TESTING (forall ((Nat)) ((tri (tri _qv_11))=_qv_11))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult (succ (plus _t_36 (succ _t_36))) _v_35)))
NOW TESTING (forall ((Nat)) ((cubes (cubes _qv_12))=_qv_12))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult (succ (plus _t_36 (succ _t_36))) _v_35)))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult (succ (plus _t_36 (succ _t_36))) _v_35)))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_14))=(nat-to-int _qv_14)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult (succ (plus _t_36 (succ _t_36))) _v_35)))
NOW TESTING (forall ((Nat)) ((nat-to-int (tri _qv_15))=(nat-to-int _qv_15)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult (succ (plus _t_36 (succ _t_36))) _v_35)))
NOW TESTING (forall ((Nat)) ((nat-to-int (cubes _qv_16))=(nat-to-int _qv_16)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult (succ (plus _t_36 (succ _t_36))) _v_35)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((mult _qv_17 (plus _qv_18 _qv_19))=(plus (mult _qv_17 _qv_18) (mult _qv_17 _qv_19))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult (succ (plus _t_36 (succ _t_36))) _v_35)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus _qv_20 (mult _qv_21 _qv_22))=(mult (plus _qv_20 _qv_21) (plus _qv_20 _qv_22))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult (succ (plus _t_36 (succ _t_36))) _v_35)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_23 _qv_24))=(plus (succ _qv_23) (succ _qv_24))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult (succ (plus _t_36 (succ _t_36))) _v_35)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_23 _qv_24))=(plus (succ _qv_24) (succ _qv_23))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult (succ (plus _t_36 (succ _t_36))) _v_35)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (mult _qv_25 _qv_26))=(mult (succ _qv_25) (succ _qv_26))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult (succ (plus _t_36 (succ _t_36))) _v_35)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (mult _qv_25 _qv_26))=(mult (succ _qv_26) (succ _qv_25))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult (succ (plus _t_36 (succ _t_36))) _v_35)))
NOW TESTING (forall ((Nat) (Nat)) ((tri (plus _qv_27 _qv_28))=(plus (tri _qv_27) (tri _qv_28))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult (succ (plus _t_36 (succ _t_36))) _v_35)))
NOW TESTING (forall ((Nat) (Nat)) ((tri (plus _qv_27 _qv_28))=(plus (tri _qv_28) (tri _qv_27))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult (succ (plus _t_36 (succ _t_36))) _v_35)))
NOW TESTING (forall ((Nat) (Nat)) ((tri (mult _qv_29 _qv_30))=(mult (tri _qv_29) (tri _qv_30))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult (succ (plus _t_36 (succ _t_36))) _v_35)))
NOW TESTING (forall ((Nat) (Nat)) ((tri (mult _qv_29 _qv_30))=(mult (tri _qv_30) (tri _qv_29))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult (succ (plus _t_36 (succ _t_36))) _v_35)))
NOW TESTING (forall ((Nat) (Nat)) ((cubes (plus _qv_31 _qv_32))=(plus (cubes _qv_31) (cubes _qv_32))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult (succ (plus _t_36 (succ _t_36))) _v_35)))
NOW TESTING (forall ((Nat) (Nat)) ((cubes (plus _qv_31 _qv_32))=(plus (cubes _qv_32) (cubes _qv_31))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult (succ (plus _t_36 (succ _t_36))) _v_35)))
NOW TESTING (forall ((Nat) (Nat)) ((cubes (mult _qv_33 _qv_34))=(mult (cubes _qv_33) (cubes _qv_34))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult (succ (plus _t_36 (succ _t_36))) _v_35)))
NOW TESTING (forall ((Nat) (Nat)) ((cubes (mult _qv_33 _qv_34))=(mult (cubes _qv_34) (cubes _qv_33))))
USE ASSUMPTION FAILED

  backtrack to: ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult (succ (plus _t_36 (succ _t_36))) _v_35)))
  rewritten [15]: ([+    (nat-to-int (mult (plus _v_35 _v_35) _t_36))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult (succ (plus _t_36 (succ _t_36))) _v_35)))
  Maximum recursion depth reached
CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult (succ (plus _t_36 (succ _t_36))) _v_35)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult (succ (plus _t_36 (succ _t_36))) _v_35)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_1 _qv_2)=(plus _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult (succ (plus _t_36 (succ _t_36))) _v_35)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_3 _qv_4) _qv_5)=(plus _qv_3 (plus _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult (succ (plus _t_36 (succ _t_36))) _v_35)))
NOW TESTING (forall ((Nat) (Nat)) ((mult _qv_6 _qv_7)=(mult _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult (succ (plus _t_36 (succ _t_36))) _v_35)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((mult (mult _qv_8 _qv_9) _qv_10)=(mult _qv_8 (mult _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult (succ (plus _t_36 (succ _t_36))) _v_35)))
NOW TESTING (forall ((Nat)) ((tri (tri _qv_11))=_qv_11))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult (succ (plus _t_36 (succ _t_36))) _v_35)))
NOW TESTING (forall ((Nat)) ((cubes (cubes _qv_12))=_qv_12))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult (succ (plus _t_36 (succ _t_36))) _v_35)))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult (succ (plus _t_36 (succ _t_36))) _v_35)))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_14))=(nat-to-int _qv_14)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult (succ (plus _t_36 (succ _t_36))) _v_35)))
NOW TESTING (forall ((Nat)) ((nat-to-int (tri _qv_15))=(nat-to-int _qv_15)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult (succ (plus _t_36 (succ _t_36))) _v_35)))
NOW TESTING (forall ((Nat)) ((nat-to-int (cubes _qv_16))=(nat-to-int _qv_16)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult (succ (plus _t_36 (succ _t_36))) _v_35)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((mult _qv_17 (plus _qv_18 _qv_19))=(plus (mult _qv_17 _qv_18) (mult _qv_17 _qv_19))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult (succ (plus _t_36 (succ _t_36))) _v_35)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus _qv_20 (mult _qv_21 _qv_22))=(mult (plus _qv_20 _qv_21) (plus _qv_20 _qv_22))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult (succ (plus _t_36 (succ _t_36))) _v_35)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_23 _qv_24))=(plus (succ _qv_23) (succ _qv_24))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult (succ (plus _t_36 (succ _t_36))) _v_35)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_23 _qv_24))=(plus (succ _qv_24) (succ _qv_23))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult (succ (plus _t_36 (succ _t_36))) _v_35)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (mult _qv_25 _qv_26))=(mult (succ _qv_25) (succ _qv_26))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult (succ (plus _t_36 (succ _t_36))) _v_35)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (mult _qv_25 _qv_26))=(mult (succ _qv_26) (succ _qv_25))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult (succ (plus _t_36 (succ _t_36))) _v_35)))
NOW TESTING (forall ((Nat) (Nat)) ((tri (plus _qv_27 _qv_28))=(plus (tri _qv_27) (tri _qv_28))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult (succ (plus _t_36 (succ _t_36))) _v_35)))
NOW TESTING (forall ((Nat) (Nat)) ((tri (plus _qv_27 _qv_28))=(plus (tri _qv_28) (tri _qv_27))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult (succ (plus _t_36 (succ _t_36))) _v_35)))
NOW TESTING (forall ((Nat) (Nat)) ((tri (mult _qv_29 _qv_30))=(mult (tri _qv_29) (tri _qv_30))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult (succ (plus _t_36 (succ _t_36))) _v_35)))
NOW TESTING (forall ((Nat) (Nat)) ((tri (mult _qv_29 _qv_30))=(mult (tri _qv_30) (tri _qv_29))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult (succ (plus _t_36 (succ _t_36))) _v_35)))
NOW TESTING (forall ((Nat) (Nat)) ((cubes (plus _qv_31 _qv_32))=(plus (cubes _qv_31) (cubes _qv_32))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult (succ (plus _t_36 (succ _t_36))) _v_35)))
NOW TESTING (forall ((Nat) (Nat)) ((cubes (plus _qv_31 _qv_32))=(plus (cubes _qv_32) (cubes _qv_31))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult (succ (plus _t_36 (succ _t_36))) _v_35)))
NOW TESTING (forall ((Nat) (Nat)) ((cubes (mult _qv_33 _qv_34))=(mult (cubes _qv_33) (cubes _qv_34))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult (succ (plus _t_36 (succ _t_36))) _v_35)))
NOW TESTING (forall ((Nat) (Nat)) ((cubes (mult _qv_33 _qv_34))=(mult (cubes _qv_34) (cubes _qv_33))))
USE ASSUMPTION FAILED

  backtrack to: ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult (succ (plus _t_36 (succ _t_36))) _v_35)))
  rewritten [15]: ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
  Maximum recursion depth reached
CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult (succ (plus _t_36 (succ _t_36))) _v_35)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult (succ (plus _t_36 (succ _t_36))) _v_35)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_1 _qv_2)=(plus _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult (succ (plus _t_36 (succ _t_36))) _v_35)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_3 _qv_4) _qv_5)=(plus _qv_3 (plus _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult (succ (plus _t_36 (succ _t_36))) _v_35)))
NOW TESTING (forall ((Nat) (Nat)) ((mult _qv_6 _qv_7)=(mult _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult (succ (plus _t_36 (succ _t_36))) _v_35)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((mult (mult _qv_8 _qv_9) _qv_10)=(mult _qv_8 (mult _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult (succ (plus _t_36 (succ _t_36))) _v_35)))
NOW TESTING (forall ((Nat)) ((tri (tri _qv_11))=_qv_11))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult (succ (plus _t_36 (succ _t_36))) _v_35)))
NOW TESTING (forall ((Nat)) ((cubes (cubes _qv_12))=_qv_12))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult (succ (plus _t_36 (succ _t_36))) _v_35)))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult (succ (plus _t_36 (succ _t_36))) _v_35)))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_14))=(nat-to-int _qv_14)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult (succ (plus _t_36 (succ _t_36))) _v_35)))
NOW TESTING (forall ((Nat)) ((nat-to-int (tri _qv_15))=(nat-to-int _qv_15)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult (succ (plus _t_36 (succ _t_36))) _v_35)))
NOW TESTING (forall ((Nat)) ((nat-to-int (cubes _qv_16))=(nat-to-int _qv_16)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult (succ (plus _t_36 (succ _t_36))) _v_35)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((mult _qv_17 (plus _qv_18 _qv_19))=(plus (mult _qv_17 _qv_18) (mult _qv_17 _qv_19))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult (succ (plus _t_36 (succ _t_36))) _v_35)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus _qv_20 (mult _qv_21 _qv_22))=(mult (plus _qv_20 _qv_21) (plus _qv_20 _qv_22))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult (succ (plus _t_36 (succ _t_36))) _v_35)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_23 _qv_24))=(plus (succ _qv_23) (succ _qv_24))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult (succ (plus _t_36 (succ _t_36))) _v_35)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_23 _qv_24))=(plus (succ _qv_24) (succ _qv_23))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult (succ (plus _t_36 (succ _t_36))) _v_35)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (mult _qv_25 _qv_26))=(mult (succ _qv_25) (succ _qv_26))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult (succ (plus _t_36 (succ _t_36))) _v_35)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (mult _qv_25 _qv_26))=(mult (succ _qv_26) (succ _qv_25))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult (succ (plus _t_36 (succ _t_36))) _v_35)))
NOW TESTING (forall ((Nat) (Nat)) ((tri (plus _qv_27 _qv_28))=(plus (tri _qv_27) (tri _qv_28))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult (succ (plus _t_36 (succ _t_36))) _v_35)))
NOW TESTING (forall ((Nat) (Nat)) ((tri (plus _qv_27 _qv_28))=(plus (tri _qv_28) (tri _qv_27))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult (succ (plus _t_36 (succ _t_36))) _v_35)))
NOW TESTING (forall ((Nat) (Nat)) ((tri (mult _qv_29 _qv_30))=(mult (tri _qv_29) (tri _qv_30))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult (succ (plus _t_36 (succ _t_36))) _v_35)))
NOW TESTING (forall ((Nat) (Nat)) ((tri (mult _qv_29 _qv_30))=(mult (tri _qv_30) (tri _qv_29))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult (succ (plus _t_36 (succ _t_36))) _v_35)))
NOW TESTING (forall ((Nat) (Nat)) ((cubes (plus _qv_31 _qv_32))=(plus (cubes _qv_31) (cubes _qv_32))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult (succ (plus _t_36 (succ _t_36))) _v_35)))
NOW TESTING (forall ((Nat) (Nat)) ((cubes (plus _qv_31 _qv_32))=(plus (cubes _qv_32) (cubes _qv_31))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult (succ (plus _t_36 (succ _t_36))) _v_35)))
NOW TESTING (forall ((Nat) (Nat)) ((cubes (mult _qv_33 _qv_34))=(mult (cubes _qv_33) (cubes _qv_34))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult (succ (plus _t_36 (succ _t_36))) _v_35)))
NOW TESTING (forall ((Nat) (Nat)) ((cubes (mult _qv_33 _qv_34))=(mult (cubes _qv_34) (cubes _qv_33))))
USE ASSUMPTION FAILED

  backtrack to: ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult (succ (plus _t_36 (succ _t_36))) _v_35)))
  rewritten [17]: ([+    (nat-to-int (mult _v_35 (plus _t_36 _t_36)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult (succ (plus _t_36 (succ _t_36))) _v_35)))
  Maximum recursion depth reached
CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult (succ (plus _t_36 (succ _t_36))) _v_35)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult (succ (plus _t_36 (succ _t_36))) _v_35)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_1 _qv_2)=(plus _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult (succ (plus _t_36 (succ _t_36))) _v_35)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_3 _qv_4) _qv_5)=(plus _qv_3 (plus _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult (succ (plus _t_36 (succ _t_36))) _v_35)))
NOW TESTING (forall ((Nat) (Nat)) ((mult _qv_6 _qv_7)=(mult _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult (succ (plus _t_36 (succ _t_36))) _v_35)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((mult (mult _qv_8 _qv_9) _qv_10)=(mult _qv_8 (mult _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult (succ (plus _t_36 (succ _t_36))) _v_35)))
NOW TESTING (forall ((Nat)) ((tri (tri _qv_11))=_qv_11))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult (succ (plus _t_36 (succ _t_36))) _v_35)))
NOW TESTING (forall ((Nat)) ((cubes (cubes _qv_12))=_qv_12))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult (succ (plus _t_36 (succ _t_36))) _v_35)))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult (succ (plus _t_36 (succ _t_36))) _v_35)))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_14))=(nat-to-int _qv_14)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult (succ (plus _t_36 (succ _t_36))) _v_35)))
NOW TESTING (forall ((Nat)) ((nat-to-int (tri _qv_15))=(nat-to-int _qv_15)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult (succ (plus _t_36 (succ _t_36))) _v_35)))
NOW TESTING (forall ((Nat)) ((nat-to-int (cubes _qv_16))=(nat-to-int _qv_16)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult (succ (plus _t_36 (succ _t_36))) _v_35)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((mult _qv_17 (plus _qv_18 _qv_19))=(plus (mult _qv_17 _qv_18) (mult _qv_17 _qv_19))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult (succ (plus _t_36 (succ _t_36))) _v_35)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus _qv_20 (mult _qv_21 _qv_22))=(mult (plus _qv_20 _qv_21) (plus _qv_20 _qv_22))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult (succ (plus _t_36 (succ _t_36))) _v_35)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_23 _qv_24))=(plus (succ _qv_23) (succ _qv_24))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult (succ (plus _t_36 (succ _t_36))) _v_35)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_23 _qv_24))=(plus (succ _qv_24) (succ _qv_23))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult (succ (plus _t_36 (succ _t_36))) _v_35)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (mult _qv_25 _qv_26))=(mult (succ _qv_25) (succ _qv_26))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult (succ (plus _t_36 (succ _t_36))) _v_35)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (mult _qv_25 _qv_26))=(mult (succ _qv_26) (succ _qv_25))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult (succ (plus _t_36 (succ _t_36))) _v_35)))
NOW TESTING (forall ((Nat) (Nat)) ((tri (plus _qv_27 _qv_28))=(plus (tri _qv_27) (tri _qv_28))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult (succ (plus _t_36 (succ _t_36))) _v_35)))
NOW TESTING (forall ((Nat) (Nat)) ((tri (plus _qv_27 _qv_28))=(plus (tri _qv_28) (tri _qv_27))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult (succ (plus _t_36 (succ _t_36))) _v_35)))
NOW TESTING (forall ((Nat) (Nat)) ((tri (mult _qv_29 _qv_30))=(mult (tri _qv_29) (tri _qv_30))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult (succ (plus _t_36 (succ _t_36))) _v_35)))
NOW TESTING (forall ((Nat) (Nat)) ((tri (mult _qv_29 _qv_30))=(mult (tri _qv_30) (tri _qv_29))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult (succ (plus _t_36 (succ _t_36))) _v_35)))
NOW TESTING (forall ((Nat) (Nat)) ((cubes (plus _qv_31 _qv_32))=(plus (cubes _qv_31) (cubes _qv_32))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult (succ (plus _t_36 (succ _t_36))) _v_35)))
NOW TESTING (forall ((Nat) (Nat)) ((cubes (plus _qv_31 _qv_32))=(plus (cubes _qv_32) (cubes _qv_31))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult (succ (plus _t_36 (succ _t_36))) _v_35)))
NOW TESTING (forall ((Nat) (Nat)) ((cubes (mult _qv_33 _qv_34))=(mult (cubes _qv_33) (cubes _qv_34))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult (succ (plus _t_36 (succ _t_36))) _v_35)))
NOW TESTING (forall ((Nat) (Nat)) ((cubes (mult _qv_33 _qv_34))=(mult (cubes _qv_34) (cubes _qv_33))))
USE ASSUMPTION FAILED

  backtrack to: ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult (succ (plus _t_36 (succ _t_36))) _v_35)))
CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_1 _qv_2)=(plus _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_3 _qv_4) _qv_5)=(plus _qv_3 (plus _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((mult _qv_6 _qv_7)=(mult _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((mult (mult _qv_8 _qv_9) _qv_10)=(mult _qv_8 (mult _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat)) ((tri (tri _qv_11))=_qv_11))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat)) ((cubes (cubes _qv_12))=_qv_12))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_14))=(nat-to-int _qv_14)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat)) ((nat-to-int (tri _qv_15))=(nat-to-int _qv_15)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat)) ((nat-to-int (cubes _qv_16))=(nat-to-int _qv_16)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((mult _qv_17 (plus _qv_18 _qv_19))=(plus (mult _qv_17 _qv_18) (mult _qv_17 _qv_19))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus _qv_20 (mult _qv_21 _qv_22))=(mult (plus _qv_20 _qv_21) (plus _qv_20 _qv_22))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_23 _qv_24))=(plus (succ _qv_23) (succ _qv_24))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_23 _qv_24))=(plus (succ _qv_24) (succ _qv_23))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (mult _qv_25 _qv_26))=(mult (succ _qv_25) (succ _qv_26))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (mult _qv_25 _qv_26))=(mult (succ _qv_26) (succ _qv_25))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((tri (plus _qv_27 _qv_28))=(plus (tri _qv_27) (tri _qv_28))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((tri (plus _qv_27 _qv_28))=(plus (tri _qv_28) (tri _qv_27))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((tri (mult _qv_29 _qv_30))=(mult (tri _qv_29) (tri _qv_30))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((tri (mult _qv_29 _qv_30))=(mult (tri _qv_30) (tri _qv_29))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((cubes (plus _qv_31 _qv_32))=(plus (cubes _qv_31) (cubes _qv_32))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((cubes (plus _qv_31 _qv_32))=(plus (cubes _qv_32) (cubes _qv_31))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((cubes (mult _qv_33 _qv_34))=(mult (cubes _qv_33) (cubes _qv_34))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((cubes (mult _qv_33 _qv_34))=(mult (cubes _qv_34) (cubes _qv_33))))
USE ASSUMPTION FAILED

  backtrack to: ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
  rewritten [15]: ([+    (nat-to-int (mult (plus _v_35 _v_35) _t_36))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
  rewritten [2]: (((2*(nat-to-int _v_35))+(nat-to-int (mult (plus _v_35 _v_35) _t_36)))=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
  Maximum recursion depth reached
CURRENT SUBGOAL ([+    (nat-to-int _v_35)    (nat-to-int _v_35)    (nat-to-int (mult (plus _v_35 _v_35) _t_36))]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int _v_35)    (nat-to-int _v_35)    (nat-to-int (mult (plus _v_35 _v_35) _t_36))]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_1 _qv_2)=(plus _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int _v_35)    (nat-to-int _v_35)    (nat-to-int (mult (plus _v_35 _v_35) _t_36))]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_3 _qv_4) _qv_5)=(plus _qv_3 (plus _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int _v_35)    (nat-to-int _v_35)    (nat-to-int (mult (plus _v_35 _v_35) _t_36))]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((mult _qv_6 _qv_7)=(mult _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int _v_35)    (nat-to-int _v_35)    (nat-to-int (mult (plus _v_35 _v_35) _t_36))]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((mult (mult _qv_8 _qv_9) _qv_10)=(mult _qv_8 (mult _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int _v_35)    (nat-to-int _v_35)    (nat-to-int (mult (plus _v_35 _v_35) _t_36))]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat)) ((tri (tri _qv_11))=_qv_11))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int _v_35)    (nat-to-int _v_35)    (nat-to-int (mult (plus _v_35 _v_35) _t_36))]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat)) ((cubes (cubes _qv_12))=_qv_12))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int _v_35)    (nat-to-int _v_35)    (nat-to-int (mult (plus _v_35 _v_35) _t_36))]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int _v_35)    (nat-to-int _v_35)    (nat-to-int (mult (plus _v_35 _v_35) _t_36))]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_14))=(nat-to-int _qv_14)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int _v_35)    (nat-to-int _v_35)    (nat-to-int (mult (plus _v_35 _v_35) _t_36))]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat)) ((nat-to-int (tri _qv_15))=(nat-to-int _qv_15)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int _v_35)    (nat-to-int _v_35)    (nat-to-int (mult (plus _v_35 _v_35) _t_36))]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat)) ((nat-to-int (cubes _qv_16))=(nat-to-int _qv_16)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int _v_35)    (nat-to-int _v_35)    (nat-to-int (mult (plus _v_35 _v_35) _t_36))]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((mult _qv_17 (plus _qv_18 _qv_19))=(plus (mult _qv_17 _qv_18) (mult _qv_17 _qv_19))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int _v_35)    (nat-to-int _v_35)    (nat-to-int (mult (plus _v_35 _v_35) _t_36))]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus _qv_20 (mult _qv_21 _qv_22))=(mult (plus _qv_20 _qv_21) (plus _qv_20 _qv_22))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int _v_35)    (nat-to-int _v_35)    (nat-to-int (mult (plus _v_35 _v_35) _t_36))]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_23 _qv_24))=(plus (succ _qv_23) (succ _qv_24))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int _v_35)    (nat-to-int _v_35)    (nat-to-int (mult (plus _v_35 _v_35) _t_36))]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_23 _qv_24))=(plus (succ _qv_24) (succ _qv_23))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int _v_35)    (nat-to-int _v_35)    (nat-to-int (mult (plus _v_35 _v_35) _t_36))]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (mult _qv_25 _qv_26))=(mult (succ _qv_25) (succ _qv_26))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int _v_35)    (nat-to-int _v_35)    (nat-to-int (mult (plus _v_35 _v_35) _t_36))]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (mult _qv_25 _qv_26))=(mult (succ _qv_26) (succ _qv_25))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int _v_35)    (nat-to-int _v_35)    (nat-to-int (mult (plus _v_35 _v_35) _t_36))]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((tri (plus _qv_27 _qv_28))=(plus (tri _qv_27) (tri _qv_28))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int _v_35)    (nat-to-int _v_35)    (nat-to-int (mult (plus _v_35 _v_35) _t_36))]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((tri (plus _qv_27 _qv_28))=(plus (tri _qv_28) (tri _qv_27))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int _v_35)    (nat-to-int _v_35)    (nat-to-int (mult (plus _v_35 _v_35) _t_36))]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((tri (mult _qv_29 _qv_30))=(mult (tri _qv_29) (tri _qv_30))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int _v_35)    (nat-to-int _v_35)    (nat-to-int (mult (plus _v_35 _v_35) _t_36))]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((tri (mult _qv_29 _qv_30))=(mult (tri _qv_30) (tri _qv_29))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int _v_35)    (nat-to-int _v_35)    (nat-to-int (mult (plus _v_35 _v_35) _t_36))]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((cubes (plus _qv_31 _qv_32))=(plus (cubes _qv_31) (cubes _qv_32))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int _v_35)    (nat-to-int _v_35)    (nat-to-int (mult (plus _v_35 _v_35) _t_36))]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((cubes (plus _qv_31 _qv_32))=(plus (cubes _qv_32) (cubes _qv_31))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int _v_35)    (nat-to-int _v_35)    (nat-to-int (mult (plus _v_35 _v_35) _t_36))]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((cubes (mult _qv_33 _qv_34))=(mult (cubes _qv_33) (cubes _qv_34))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int _v_35)    (nat-to-int _v_35)    (nat-to-int (mult (plus _v_35 _v_35) _t_36))]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((cubes (mult _qv_33 _qv_34))=(mult (cubes _qv_34) (cubes _qv_33))))
USE ASSUMPTION FAILED

  backtrack to: ([+    (nat-to-int _v_35)    (nat-to-int _v_35)    (nat-to-int (mult (plus _v_35 _v_35) _t_36))]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
  rewritten [13]: ([+    (nat-to-int _v_35)    (nat-to-int _v_35)    (nat-to-int (mult (plus _v_35 _v_35) _t_36))]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
  Maximum recursion depth reached
CURRENT SUBGOAL ([+    (nat-to-int _v_35)    (nat-to-int _v_35)    (nat-to-int (mult (plus _v_35 _v_35) _t_36))]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int _v_35)    (nat-to-int _v_35)    (nat-to-int (mult (plus _v_35 _v_35) _t_36))]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_1 _qv_2)=(plus _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int _v_35)    (nat-to-int _v_35)    (nat-to-int (mult (plus _v_35 _v_35) _t_36))]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_3 _qv_4) _qv_5)=(plus _qv_3 (plus _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int _v_35)    (nat-to-int _v_35)    (nat-to-int (mult (plus _v_35 _v_35) _t_36))]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((mult _qv_6 _qv_7)=(mult _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int _v_35)    (nat-to-int _v_35)    (nat-to-int (mult (plus _v_35 _v_35) _t_36))]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((mult (mult _qv_8 _qv_9) _qv_10)=(mult _qv_8 (mult _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int _v_35)    (nat-to-int _v_35)    (nat-to-int (mult (plus _v_35 _v_35) _t_36))]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat)) ((tri (tri _qv_11))=_qv_11))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int _v_35)    (nat-to-int _v_35)    (nat-to-int (mult (plus _v_35 _v_35) _t_36))]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat)) ((cubes (cubes _qv_12))=_qv_12))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int _v_35)    (nat-to-int _v_35)    (nat-to-int (mult (plus _v_35 _v_35) _t_36))]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int _v_35)    (nat-to-int _v_35)    (nat-to-int (mult (plus _v_35 _v_35) _t_36))]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_14))=(nat-to-int _qv_14)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int _v_35)    (nat-to-int _v_35)    (nat-to-int (mult (plus _v_35 _v_35) _t_36))]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat)) ((nat-to-int (tri _qv_15))=(nat-to-int _qv_15)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int _v_35)    (nat-to-int _v_35)    (nat-to-int (mult (plus _v_35 _v_35) _t_36))]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat)) ((nat-to-int (cubes _qv_16))=(nat-to-int _qv_16)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int _v_35)    (nat-to-int _v_35)    (nat-to-int (mult (plus _v_35 _v_35) _t_36))]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((mult _qv_17 (plus _qv_18 _qv_19))=(plus (mult _qv_17 _qv_18) (mult _qv_17 _qv_19))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int _v_35)    (nat-to-int _v_35)    (nat-to-int (mult (plus _v_35 _v_35) _t_36))]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus _qv_20 (mult _qv_21 _qv_22))=(mult (plus _qv_20 _qv_21) (plus _qv_20 _qv_22))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int _v_35)    (nat-to-int _v_35)    (nat-to-int (mult (plus _v_35 _v_35) _t_36))]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_23 _qv_24))=(plus (succ _qv_23) (succ _qv_24))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int _v_35)    (nat-to-int _v_35)    (nat-to-int (mult (plus _v_35 _v_35) _t_36))]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_23 _qv_24))=(plus (succ _qv_24) (succ _qv_23))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int _v_35)    (nat-to-int _v_35)    (nat-to-int (mult (plus _v_35 _v_35) _t_36))]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (mult _qv_25 _qv_26))=(mult (succ _qv_25) (succ _qv_26))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int _v_35)    (nat-to-int _v_35)    (nat-to-int (mult (plus _v_35 _v_35) _t_36))]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (mult _qv_25 _qv_26))=(mult (succ _qv_26) (succ _qv_25))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int _v_35)    (nat-to-int _v_35)    (nat-to-int (mult (plus _v_35 _v_35) _t_36))]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((tri (plus _qv_27 _qv_28))=(plus (tri _qv_27) (tri _qv_28))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int _v_35)    (nat-to-int _v_35)    (nat-to-int (mult (plus _v_35 _v_35) _t_36))]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((tri (plus _qv_27 _qv_28))=(plus (tri _qv_28) (tri _qv_27))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int _v_35)    (nat-to-int _v_35)    (nat-to-int (mult (plus _v_35 _v_35) _t_36))]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((tri (mult _qv_29 _qv_30))=(mult (tri _qv_29) (tri _qv_30))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int _v_35)    (nat-to-int _v_35)    (nat-to-int (mult (plus _v_35 _v_35) _t_36))]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((tri (mult _qv_29 _qv_30))=(mult (tri _qv_30) (tri _qv_29))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int _v_35)    (nat-to-int _v_35)    (nat-to-int (mult (plus _v_35 _v_35) _t_36))]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((cubes (plus _qv_31 _qv_32))=(plus (cubes _qv_31) (cubes _qv_32))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int _v_35)    (nat-to-int _v_35)    (nat-to-int (mult (plus _v_35 _v_35) _t_36))]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((cubes (plus _qv_31 _qv_32))=(plus (cubes _qv_32) (cubes _qv_31))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int _v_35)    (nat-to-int _v_35)    (nat-to-int (mult (plus _v_35 _v_35) _t_36))]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((cubes (mult _qv_33 _qv_34))=(mult (cubes _qv_33) (cubes _qv_34))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int _v_35)    (nat-to-int _v_35)    (nat-to-int (mult (plus _v_35 _v_35) _t_36))]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((cubes (mult _qv_33 _qv_34))=(mult (cubes _qv_34) (cubes _qv_33))))
USE ASSUMPTION FAILED

  backtrack to: ([+    (nat-to-int _v_35)    (nat-to-int _v_35)    (nat-to-int (mult (plus _v_35 _v_35) _t_36))]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
  rewritten [13]: ([+    (nat-to-int _v_35)    (nat-to-int _v_35)    (nat-to-int (mult (plus _v_35 _v_35) _t_36))]=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
  Maximum recursion depth reached
CURRENT SUBGOAL ([+    (nat-to-int _v_35)    (nat-to-int _v_35)    (nat-to-int (mult (plus _v_35 _v_35) _t_36))]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int _v_35)    (nat-to-int _v_35)    (nat-to-int (mult (plus _v_35 _v_35) _t_36))]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_1 _qv_2)=(plus _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int _v_35)    (nat-to-int _v_35)    (nat-to-int (mult (plus _v_35 _v_35) _t_36))]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_3 _qv_4) _qv_5)=(plus _qv_3 (plus _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int _v_35)    (nat-to-int _v_35)    (nat-to-int (mult (plus _v_35 _v_35) _t_36))]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((mult _qv_6 _qv_7)=(mult _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int _v_35)    (nat-to-int _v_35)    (nat-to-int (mult (plus _v_35 _v_35) _t_36))]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((mult (mult _qv_8 _qv_9) _qv_10)=(mult _qv_8 (mult _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int _v_35)    (nat-to-int _v_35)    (nat-to-int (mult (plus _v_35 _v_35) _t_36))]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat)) ((tri (tri _qv_11))=_qv_11))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int _v_35)    (nat-to-int _v_35)    (nat-to-int (mult (plus _v_35 _v_35) _t_36))]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat)) ((cubes (cubes _qv_12))=_qv_12))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int _v_35)    (nat-to-int _v_35)    (nat-to-int (mult (plus _v_35 _v_35) _t_36))]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int _v_35)    (nat-to-int _v_35)    (nat-to-int (mult (plus _v_35 _v_35) _t_36))]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_14))=(nat-to-int _qv_14)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int _v_35)    (nat-to-int _v_35)    (nat-to-int (mult (plus _v_35 _v_35) _t_36))]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat)) ((nat-to-int (tri _qv_15))=(nat-to-int _qv_15)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int _v_35)    (nat-to-int _v_35)    (nat-to-int (mult (plus _v_35 _v_35) _t_36))]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat)) ((nat-to-int (cubes _qv_16))=(nat-to-int _qv_16)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int _v_35)    (nat-to-int _v_35)    (nat-to-int (mult (plus _v_35 _v_35) _t_36))]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((mult _qv_17 (plus _qv_18 _qv_19))=(plus (mult _qv_17 _qv_18) (mult _qv_17 _qv_19))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int _v_35)    (nat-to-int _v_35)    (nat-to-int (mult (plus _v_35 _v_35) _t_36))]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus _qv_20 (mult _qv_21 _qv_22))=(mult (plus _qv_20 _qv_21) (plus _qv_20 _qv_22))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int _v_35)    (nat-to-int _v_35)    (nat-to-int (mult (plus _v_35 _v_35) _t_36))]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_23 _qv_24))=(plus (succ _qv_23) (succ _qv_24))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int _v_35)    (nat-to-int _v_35)    (nat-to-int (mult (plus _v_35 _v_35) _t_36))]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_23 _qv_24))=(plus (succ _qv_24) (succ _qv_23))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int _v_35)    (nat-to-int _v_35)    (nat-to-int (mult (plus _v_35 _v_35) _t_36))]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (mult _qv_25 _qv_26))=(mult (succ _qv_25) (succ _qv_26))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int _v_35)    (nat-to-int _v_35)    (nat-to-int (mult (plus _v_35 _v_35) _t_36))]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (mult _qv_25 _qv_26))=(mult (succ _qv_26) (succ _qv_25))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int _v_35)    (nat-to-int _v_35)    (nat-to-int (mult (plus _v_35 _v_35) _t_36))]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((tri (plus _qv_27 _qv_28))=(plus (tri _qv_27) (tri _qv_28))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int _v_35)    (nat-to-int _v_35)    (nat-to-int (mult (plus _v_35 _v_35) _t_36))]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((tri (plus _qv_27 _qv_28))=(plus (tri _qv_28) (tri _qv_27))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int _v_35)    (nat-to-int _v_35)    (nat-to-int (mult (plus _v_35 _v_35) _t_36))]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((tri (mult _qv_29 _qv_30))=(mult (tri _qv_29) (tri _qv_30))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int _v_35)    (nat-to-int _v_35)    (nat-to-int (mult (plus _v_35 _v_35) _t_36))]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((tri (mult _qv_29 _qv_30))=(mult (tri _qv_30) (tri _qv_29))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int _v_35)    (nat-to-int _v_35)    (nat-to-int (mult (plus _v_35 _v_35) _t_36))]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((cubes (plus _qv_31 _qv_32))=(plus (cubes _qv_31) (cubes _qv_32))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int _v_35)    (nat-to-int _v_35)    (nat-to-int (mult (plus _v_35 _v_35) _t_36))]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((cubes (plus _qv_31 _qv_32))=(plus (cubes _qv_32) (cubes _qv_31))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int _v_35)    (nat-to-int _v_35)    (nat-to-int (mult (plus _v_35 _v_35) _t_36))]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((cubes (mult _qv_33 _qv_34))=(mult (cubes _qv_33) (cubes _qv_34))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int _v_35)    (nat-to-int _v_35)    (nat-to-int (mult (plus _v_35 _v_35) _t_36))]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((cubes (mult _qv_33 _qv_34))=(mult (cubes _qv_34) (cubes _qv_33))))
USE ASSUMPTION FAILED

  backtrack to: ([+    (nat-to-int _v_35)    (nat-to-int _v_35)    (nat-to-int (mult (plus _v_35 _v_35) _t_36))]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
  rewritten [15]: ([+    (nat-to-int _v_35)    (nat-to-int _v_35)    (nat-to-int (mult (plus _v_35 _v_35) _t_36))]=(nat-to-int (mult (succ (plus _t_36 (succ _t_36))) _v_35)))
  Maximum recursion depth reached
CURRENT SUBGOAL ([+    (nat-to-int _v_35)    (nat-to-int _v_35)    (nat-to-int (mult (plus _v_35 _v_35) _t_36))]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int _v_35)    (nat-to-int _v_35)    (nat-to-int (mult (plus _v_35 _v_35) _t_36))]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_1 _qv_2)=(plus _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int _v_35)    (nat-to-int _v_35)    (nat-to-int (mult (plus _v_35 _v_35) _t_36))]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_3 _qv_4) _qv_5)=(plus _qv_3 (plus _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int _v_35)    (nat-to-int _v_35)    (nat-to-int (mult (plus _v_35 _v_35) _t_36))]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((mult _qv_6 _qv_7)=(mult _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int _v_35)    (nat-to-int _v_35)    (nat-to-int (mult (plus _v_35 _v_35) _t_36))]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((mult (mult _qv_8 _qv_9) _qv_10)=(mult _qv_8 (mult _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int _v_35)    (nat-to-int _v_35)    (nat-to-int (mult (plus _v_35 _v_35) _t_36))]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat)) ((tri (tri _qv_11))=_qv_11))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int _v_35)    (nat-to-int _v_35)    (nat-to-int (mult (plus _v_35 _v_35) _t_36))]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat)) ((cubes (cubes _qv_12))=_qv_12))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int _v_35)    (nat-to-int _v_35)    (nat-to-int (mult (plus _v_35 _v_35) _t_36))]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int _v_35)    (nat-to-int _v_35)    (nat-to-int (mult (plus _v_35 _v_35) _t_36))]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_14))=(nat-to-int _qv_14)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int _v_35)    (nat-to-int _v_35)    (nat-to-int (mult (plus _v_35 _v_35) _t_36))]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat)) ((nat-to-int (tri _qv_15))=(nat-to-int _qv_15)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int _v_35)    (nat-to-int _v_35)    (nat-to-int (mult (plus _v_35 _v_35) _t_36))]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat)) ((nat-to-int (cubes _qv_16))=(nat-to-int _qv_16)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int _v_35)    (nat-to-int _v_35)    (nat-to-int (mult (plus _v_35 _v_35) _t_36))]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((mult _qv_17 (plus _qv_18 _qv_19))=(plus (mult _qv_17 _qv_18) (mult _qv_17 _qv_19))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int _v_35)    (nat-to-int _v_35)    (nat-to-int (mult (plus _v_35 _v_35) _t_36))]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus _qv_20 (mult _qv_21 _qv_22))=(mult (plus _qv_20 _qv_21) (plus _qv_20 _qv_22))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int _v_35)    (nat-to-int _v_35)    (nat-to-int (mult (plus _v_35 _v_35) _t_36))]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_23 _qv_24))=(plus (succ _qv_23) (succ _qv_24))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int _v_35)    (nat-to-int _v_35)    (nat-to-int (mult (plus _v_35 _v_35) _t_36))]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_23 _qv_24))=(plus (succ _qv_24) (succ _qv_23))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int _v_35)    (nat-to-int _v_35)    (nat-to-int (mult (plus _v_35 _v_35) _t_36))]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (mult _qv_25 _qv_26))=(mult (succ _qv_25) (succ _qv_26))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int _v_35)    (nat-to-int _v_35)    (nat-to-int (mult (plus _v_35 _v_35) _t_36))]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (mult _qv_25 _qv_26))=(mult (succ _qv_26) (succ _qv_25))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int _v_35)    (nat-to-int _v_35)    (nat-to-int (mult (plus _v_35 _v_35) _t_36))]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((tri (plus _qv_27 _qv_28))=(plus (tri _qv_27) (tri _qv_28))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int _v_35)    (nat-to-int _v_35)    (nat-to-int (mult (plus _v_35 _v_35) _t_36))]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((tri (plus _qv_27 _qv_28))=(plus (tri _qv_28) (tri _qv_27))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int _v_35)    (nat-to-int _v_35)    (nat-to-int (mult (plus _v_35 _v_35) _t_36))]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((tri (mult _qv_29 _qv_30))=(mult (tri _qv_29) (tri _qv_30))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int _v_35)    (nat-to-int _v_35)    (nat-to-int (mult (plus _v_35 _v_35) _t_36))]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((tri (mult _qv_29 _qv_30))=(mult (tri _qv_30) (tri _qv_29))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int _v_35)    (nat-to-int _v_35)    (nat-to-int (mult (plus _v_35 _v_35) _t_36))]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((cubes (plus _qv_31 _qv_32))=(plus (cubes _qv_31) (cubes _qv_32))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int _v_35)    (nat-to-int _v_35)    (nat-to-int (mult (plus _v_35 _v_35) _t_36))]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((cubes (plus _qv_31 _qv_32))=(plus (cubes _qv_32) (cubes _qv_31))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int _v_35)    (nat-to-int _v_35)    (nat-to-int (mult (plus _v_35 _v_35) _t_36))]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((cubes (mult _qv_33 _qv_34))=(mult (cubes _qv_33) (cubes _qv_34))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int _v_35)    (nat-to-int _v_35)    (nat-to-int (mult (plus _v_35 _v_35) _t_36))]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((cubes (mult _qv_33 _qv_34))=(mult (cubes _qv_34) (cubes _qv_33))))
USE ASSUMPTION FAILED

  backtrack to: ([+    (nat-to-int _v_35)    (nat-to-int _v_35)    (nat-to-int (mult (plus _v_35 _v_35) _t_36))]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
  rewritten [15]: ([+    (nat-to-int _v_35)    (nat-to-int _v_35)    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
  Maximum recursion depth reached
CURRENT SUBGOAL ([+    (nat-to-int _v_35)    (nat-to-int _v_35)    (nat-to-int (mult (plus _v_35 _v_35) _t_36))]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int _v_35)    (nat-to-int _v_35)    (nat-to-int (mult (plus _v_35 _v_35) _t_36))]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_1 _qv_2)=(plus _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int _v_35)    (nat-to-int _v_35)    (nat-to-int (mult (plus _v_35 _v_35) _t_36))]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_3 _qv_4) _qv_5)=(plus _qv_3 (plus _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int _v_35)    (nat-to-int _v_35)    (nat-to-int (mult (plus _v_35 _v_35) _t_36))]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((mult _qv_6 _qv_7)=(mult _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int _v_35)    (nat-to-int _v_35)    (nat-to-int (mult (plus _v_35 _v_35) _t_36))]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((mult (mult _qv_8 _qv_9) _qv_10)=(mult _qv_8 (mult _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int _v_35)    (nat-to-int _v_35)    (nat-to-int (mult (plus _v_35 _v_35) _t_36))]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat)) ((tri (tri _qv_11))=_qv_11))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int _v_35)    (nat-to-int _v_35)    (nat-to-int (mult (plus _v_35 _v_35) _t_36))]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat)) ((cubes (cubes _qv_12))=_qv_12))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int _v_35)    (nat-to-int _v_35)    (nat-to-int (mult (plus _v_35 _v_35) _t_36))]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int _v_35)    (nat-to-int _v_35)    (nat-to-int (mult (plus _v_35 _v_35) _t_36))]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_14))=(nat-to-int _qv_14)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int _v_35)    (nat-to-int _v_35)    (nat-to-int (mult (plus _v_35 _v_35) _t_36))]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat)) ((nat-to-int (tri _qv_15))=(nat-to-int _qv_15)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int _v_35)    (nat-to-int _v_35)    (nat-to-int (mult (plus _v_35 _v_35) _t_36))]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat)) ((nat-to-int (cubes _qv_16))=(nat-to-int _qv_16)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int _v_35)    (nat-to-int _v_35)    (nat-to-int (mult (plus _v_35 _v_35) _t_36))]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((mult _qv_17 (plus _qv_18 _qv_19))=(plus (mult _qv_17 _qv_18) (mult _qv_17 _qv_19))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int _v_35)    (nat-to-int _v_35)    (nat-to-int (mult (plus _v_35 _v_35) _t_36))]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus _qv_20 (mult _qv_21 _qv_22))=(mult (plus _qv_20 _qv_21) (plus _qv_20 _qv_22))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int _v_35)    (nat-to-int _v_35)    (nat-to-int (mult (plus _v_35 _v_35) _t_36))]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_23 _qv_24))=(plus (succ _qv_23) (succ _qv_24))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int _v_35)    (nat-to-int _v_35)    (nat-to-int (mult (plus _v_35 _v_35) _t_36))]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_23 _qv_24))=(plus (succ _qv_24) (succ _qv_23))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int _v_35)    (nat-to-int _v_35)    (nat-to-int (mult (plus _v_35 _v_35) _t_36))]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (mult _qv_25 _qv_26))=(mult (succ _qv_25) (succ _qv_26))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int _v_35)    (nat-to-int _v_35)    (nat-to-int (mult (plus _v_35 _v_35) _t_36))]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (mult _qv_25 _qv_26))=(mult (succ _qv_26) (succ _qv_25))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int _v_35)    (nat-to-int _v_35)    (nat-to-int (mult (plus _v_35 _v_35) _t_36))]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((tri (plus _qv_27 _qv_28))=(plus (tri _qv_27) (tri _qv_28))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int _v_35)    (nat-to-int _v_35)    (nat-to-int (mult (plus _v_35 _v_35) _t_36))]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((tri (plus _qv_27 _qv_28))=(plus (tri _qv_28) (tri _qv_27))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int _v_35)    (nat-to-int _v_35)    (nat-to-int (mult (plus _v_35 _v_35) _t_36))]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((tri (mult _qv_29 _qv_30))=(mult (tri _qv_29) (tri _qv_30))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int _v_35)    (nat-to-int _v_35)    (nat-to-int (mult (plus _v_35 _v_35) _t_36))]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((tri (mult _qv_29 _qv_30))=(mult (tri _qv_30) (tri _qv_29))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int _v_35)    (nat-to-int _v_35)    (nat-to-int (mult (plus _v_35 _v_35) _t_36))]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((cubes (plus _qv_31 _qv_32))=(plus (cubes _qv_31) (cubes _qv_32))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int _v_35)    (nat-to-int _v_35)    (nat-to-int (mult (plus _v_35 _v_35) _t_36))]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((cubes (plus _qv_31 _qv_32))=(plus (cubes _qv_32) (cubes _qv_31))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int _v_35)    (nat-to-int _v_35)    (nat-to-int (mult (plus _v_35 _v_35) _t_36))]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((cubes (mult _qv_33 _qv_34))=(mult (cubes _qv_33) (cubes _qv_34))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int _v_35)    (nat-to-int _v_35)    (nat-to-int (mult (plus _v_35 _v_35) _t_36))]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((cubes (mult _qv_33 _qv_34))=(mult (cubes _qv_34) (cubes _qv_33))))
USE ASSUMPTION FAILED

  backtrack to: ([+    (nat-to-int _v_35)    (nat-to-int _v_35)    (nat-to-int (mult (plus _v_35 _v_35) _t_36))]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
  rewritten [2]: (((2*(nat-to-int _v_35))+(nat-to-int (mult (plus _v_35 _v_35) _t_36)))=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
  Maximum recursion depth reached
CURRENT SUBGOAL ([+    (nat-to-int _v_35)    (nat-to-int _v_35)    (nat-to-int (mult (plus _v_35 _v_35) _t_36))]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int _v_35)    (nat-to-int _v_35)    (nat-to-int (mult (plus _v_35 _v_35) _t_36))]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_1 _qv_2)=(plus _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int _v_35)    (nat-to-int _v_35)    (nat-to-int (mult (plus _v_35 _v_35) _t_36))]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_3 _qv_4) _qv_5)=(plus _qv_3 (plus _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int _v_35)    (nat-to-int _v_35)    (nat-to-int (mult (plus _v_35 _v_35) _t_36))]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((mult _qv_6 _qv_7)=(mult _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int _v_35)    (nat-to-int _v_35)    (nat-to-int (mult (plus _v_35 _v_35) _t_36))]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((mult (mult _qv_8 _qv_9) _qv_10)=(mult _qv_8 (mult _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int _v_35)    (nat-to-int _v_35)    (nat-to-int (mult (plus _v_35 _v_35) _t_36))]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat)) ((tri (tri _qv_11))=_qv_11))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int _v_35)    (nat-to-int _v_35)    (nat-to-int (mult (plus _v_35 _v_35) _t_36))]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat)) ((cubes (cubes _qv_12))=_qv_12))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int _v_35)    (nat-to-int _v_35)    (nat-to-int (mult (plus _v_35 _v_35) _t_36))]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int _v_35)    (nat-to-int _v_35)    (nat-to-int (mult (plus _v_35 _v_35) _t_36))]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_14))=(nat-to-int _qv_14)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int _v_35)    (nat-to-int _v_35)    (nat-to-int (mult (plus _v_35 _v_35) _t_36))]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat)) ((nat-to-int (tri _qv_15))=(nat-to-int _qv_15)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int _v_35)    (nat-to-int _v_35)    (nat-to-int (mult (plus _v_35 _v_35) _t_36))]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat)) ((nat-to-int (cubes _qv_16))=(nat-to-int _qv_16)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int _v_35)    (nat-to-int _v_35)    (nat-to-int (mult (plus _v_35 _v_35) _t_36))]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((mult _qv_17 (plus _qv_18 _qv_19))=(plus (mult _qv_17 _qv_18) (mult _qv_17 _qv_19))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int _v_35)    (nat-to-int _v_35)    (nat-to-int (mult (plus _v_35 _v_35) _t_36))]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus _qv_20 (mult _qv_21 _qv_22))=(mult (plus _qv_20 _qv_21) (plus _qv_20 _qv_22))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int _v_35)    (nat-to-int _v_35)    (nat-to-int (mult (plus _v_35 _v_35) _t_36))]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_23 _qv_24))=(plus (succ _qv_23) (succ _qv_24))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int _v_35)    (nat-to-int _v_35)    (nat-to-int (mult (plus _v_35 _v_35) _t_36))]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_23 _qv_24))=(plus (succ _qv_24) (succ _qv_23))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int _v_35)    (nat-to-int _v_35)    (nat-to-int (mult (plus _v_35 _v_35) _t_36))]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (mult _qv_25 _qv_26))=(mult (succ _qv_25) (succ _qv_26))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int _v_35)    (nat-to-int _v_35)    (nat-to-int (mult (plus _v_35 _v_35) _t_36))]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (mult _qv_25 _qv_26))=(mult (succ _qv_26) (succ _qv_25))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int _v_35)    (nat-to-int _v_35)    (nat-to-int (mult (plus _v_35 _v_35) _t_36))]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((tri (plus _qv_27 _qv_28))=(plus (tri _qv_27) (tri _qv_28))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int _v_35)    (nat-to-int _v_35)    (nat-to-int (mult (plus _v_35 _v_35) _t_36))]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((tri (plus _qv_27 _qv_28))=(plus (tri _qv_28) (tri _qv_27))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int _v_35)    (nat-to-int _v_35)    (nat-to-int (mult (plus _v_35 _v_35) _t_36))]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((tri (mult _qv_29 _qv_30))=(mult (tri _qv_29) (tri _qv_30))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int _v_35)    (nat-to-int _v_35)    (nat-to-int (mult (plus _v_35 _v_35) _t_36))]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((tri (mult _qv_29 _qv_30))=(mult (tri _qv_30) (tri _qv_29))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int _v_35)    (nat-to-int _v_35)    (nat-to-int (mult (plus _v_35 _v_35) _t_36))]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((cubes (plus _qv_31 _qv_32))=(plus (cubes _qv_31) (cubes _qv_32))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int _v_35)    (nat-to-int _v_35)    (nat-to-int (mult (plus _v_35 _v_35) _t_36))]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((cubes (plus _qv_31 _qv_32))=(plus (cubes _qv_32) (cubes _qv_31))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int _v_35)    (nat-to-int _v_35)    (nat-to-int (mult (plus _v_35 _v_35) _t_36))]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((cubes (mult _qv_33 _qv_34))=(mult (cubes _qv_33) (cubes _qv_34))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int _v_35)    (nat-to-int _v_35)    (nat-to-int (mult (plus _v_35 _v_35) _t_36))]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((cubes (mult _qv_33 _qv_34))=(mult (cubes _qv_34) (cubes _qv_33))))
USE ASSUMPTION FAILED

  backtrack to: ([+    (nat-to-int _v_35)    (nat-to-int _v_35)    (nat-to-int (mult (plus _v_35 _v_35) _t_36))]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
  rewritten [13]: ([+    (nat-to-int _v_35)    (nat-to-int _v_35)    (nat-to-int (mult (plus _v_35 _v_35) _t_36))]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
  Maximum recursion depth reached
CURRENT SUBGOAL ([+    (nat-to-int _v_35)    (nat-to-int _v_35)    (nat-to-int (mult (plus _v_35 _v_35) _t_36))]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int _v_35)    (nat-to-int _v_35)    (nat-to-int (mult (plus _v_35 _v_35) _t_36))]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_1 _qv_2)=(plus _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int _v_35)    (nat-to-int _v_35)    (nat-to-int (mult (plus _v_35 _v_35) _t_36))]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_3 _qv_4) _qv_5)=(plus _qv_3 (plus _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int _v_35)    (nat-to-int _v_35)    (nat-to-int (mult (plus _v_35 _v_35) _t_36))]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((mult _qv_6 _qv_7)=(mult _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int _v_35)    (nat-to-int _v_35)    (nat-to-int (mult (plus _v_35 _v_35) _t_36))]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((mult (mult _qv_8 _qv_9) _qv_10)=(mult _qv_8 (mult _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int _v_35)    (nat-to-int _v_35)    (nat-to-int (mult (plus _v_35 _v_35) _t_36))]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat)) ((tri (tri _qv_11))=_qv_11))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int _v_35)    (nat-to-int _v_35)    (nat-to-int (mult (plus _v_35 _v_35) _t_36))]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat)) ((cubes (cubes _qv_12))=_qv_12))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int _v_35)    (nat-to-int _v_35)    (nat-to-int (mult (plus _v_35 _v_35) _t_36))]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int _v_35)    (nat-to-int _v_35)    (nat-to-int (mult (plus _v_35 _v_35) _t_36))]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_14))=(nat-to-int _qv_14)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int _v_35)    (nat-to-int _v_35)    (nat-to-int (mult (plus _v_35 _v_35) _t_36))]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat)) ((nat-to-int (tri _qv_15))=(nat-to-int _qv_15)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int _v_35)    (nat-to-int _v_35)    (nat-to-int (mult (plus _v_35 _v_35) _t_36))]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat)) ((nat-to-int (cubes _qv_16))=(nat-to-int _qv_16)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int _v_35)    (nat-to-int _v_35)    (nat-to-int (mult (plus _v_35 _v_35) _t_36))]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((mult _qv_17 (plus _qv_18 _qv_19))=(plus (mult _qv_17 _qv_18) (mult _qv_17 _qv_19))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int _v_35)    (nat-to-int _v_35)    (nat-to-int (mult (plus _v_35 _v_35) _t_36))]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus _qv_20 (mult _qv_21 _qv_22))=(mult (plus _qv_20 _qv_21) (plus _qv_20 _qv_22))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int _v_35)    (nat-to-int _v_35)    (nat-to-int (mult (plus _v_35 _v_35) _t_36))]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_23 _qv_24))=(plus (succ _qv_23) (succ _qv_24))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int _v_35)    (nat-to-int _v_35)    (nat-to-int (mult (plus _v_35 _v_35) _t_36))]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_23 _qv_24))=(plus (succ _qv_24) (succ _qv_23))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int _v_35)    (nat-to-int _v_35)    (nat-to-int (mult (plus _v_35 _v_35) _t_36))]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (mult _qv_25 _qv_26))=(mult (succ _qv_25) (succ _qv_26))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int _v_35)    (nat-to-int _v_35)    (nat-to-int (mult (plus _v_35 _v_35) _t_36))]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (mult _qv_25 _qv_26))=(mult (succ _qv_26) (succ _qv_25))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int _v_35)    (nat-to-int _v_35)    (nat-to-int (mult (plus _v_35 _v_35) _t_36))]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((tri (plus _qv_27 _qv_28))=(plus (tri _qv_27) (tri _qv_28))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int _v_35)    (nat-to-int _v_35)    (nat-to-int (mult (plus _v_35 _v_35) _t_36))]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((tri (plus _qv_27 _qv_28))=(plus (tri _qv_28) (tri _qv_27))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int _v_35)    (nat-to-int _v_35)    (nat-to-int (mult (plus _v_35 _v_35) _t_36))]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((tri (mult _qv_29 _qv_30))=(mult (tri _qv_29) (tri _qv_30))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int _v_35)    (nat-to-int _v_35)    (nat-to-int (mult (plus _v_35 _v_35) _t_36))]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((tri (mult _qv_29 _qv_30))=(mult (tri _qv_30) (tri _qv_29))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int _v_35)    (nat-to-int _v_35)    (nat-to-int (mult (plus _v_35 _v_35) _t_36))]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((cubes (plus _qv_31 _qv_32))=(plus (cubes _qv_31) (cubes _qv_32))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int _v_35)    (nat-to-int _v_35)    (nat-to-int (mult (plus _v_35 _v_35) _t_36))]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((cubes (plus _qv_31 _qv_32))=(plus (cubes _qv_32) (cubes _qv_31))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int _v_35)    (nat-to-int _v_35)    (nat-to-int (mult (plus _v_35 _v_35) _t_36))]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((cubes (mult _qv_33 _qv_34))=(mult (cubes _qv_33) (cubes _qv_34))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int _v_35)    (nat-to-int _v_35)    (nat-to-int (mult (plus _v_35 _v_35) _t_36))]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((cubes (mult _qv_33 _qv_34))=(mult (cubes _qv_34) (cubes _qv_33))))
USE ASSUMPTION FAILED

  backtrack to: ([+    (nat-to-int _v_35)    (nat-to-int _v_35)    (nat-to-int (mult (plus _v_35 _v_35) _t_36))]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
  rewritten [13]: ([+    (nat-to-int _v_35)    (nat-to-int _v_35)    (nat-to-int (mult (plus _v_35 _v_35) _t_36))]=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
  Maximum recursion depth reached
CURRENT SUBGOAL ([+    (nat-to-int _v_35)    (nat-to-int _v_35)    (nat-to-int (mult (plus _v_35 _v_35) _t_36))]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int _v_35)    (nat-to-int _v_35)    (nat-to-int (mult (plus _v_35 _v_35) _t_36))]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_1 _qv_2)=(plus _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int _v_35)    (nat-to-int _v_35)    (nat-to-int (mult (plus _v_35 _v_35) _t_36))]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_3 _qv_4) _qv_5)=(plus _qv_3 (plus _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int _v_35)    (nat-to-int _v_35)    (nat-to-int (mult (plus _v_35 _v_35) _t_36))]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((mult _qv_6 _qv_7)=(mult _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int _v_35)    (nat-to-int _v_35)    (nat-to-int (mult (plus _v_35 _v_35) _t_36))]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((mult (mult _qv_8 _qv_9) _qv_10)=(mult _qv_8 (mult _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int _v_35)    (nat-to-int _v_35)    (nat-to-int (mult (plus _v_35 _v_35) _t_36))]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat)) ((tri (tri _qv_11))=_qv_11))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int _v_35)    (nat-to-int _v_35)    (nat-to-int (mult (plus _v_35 _v_35) _t_36))]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat)) ((cubes (cubes _qv_12))=_qv_12))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int _v_35)    (nat-to-int _v_35)    (nat-to-int (mult (plus _v_35 _v_35) _t_36))]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int _v_35)    (nat-to-int _v_35)    (nat-to-int (mult (plus _v_35 _v_35) _t_36))]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_14))=(nat-to-int _qv_14)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int _v_35)    (nat-to-int _v_35)    (nat-to-int (mult (plus _v_35 _v_35) _t_36))]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat)) ((nat-to-int (tri _qv_15))=(nat-to-int _qv_15)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int _v_35)    (nat-to-int _v_35)    (nat-to-int (mult (plus _v_35 _v_35) _t_36))]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat)) ((nat-to-int (cubes _qv_16))=(nat-to-int _qv_16)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int _v_35)    (nat-to-int _v_35)    (nat-to-int (mult (plus _v_35 _v_35) _t_36))]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((mult _qv_17 (plus _qv_18 _qv_19))=(plus (mult _qv_17 _qv_18) (mult _qv_17 _qv_19))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int _v_35)    (nat-to-int _v_35)    (nat-to-int (mult (plus _v_35 _v_35) _t_36))]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus _qv_20 (mult _qv_21 _qv_22))=(mult (plus _qv_20 _qv_21) (plus _qv_20 _qv_22))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int _v_35)    (nat-to-int _v_35)    (nat-to-int (mult (plus _v_35 _v_35) _t_36))]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_23 _qv_24))=(plus (succ _qv_23) (succ _qv_24))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int _v_35)    (nat-to-int _v_35)    (nat-to-int (mult (plus _v_35 _v_35) _t_36))]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_23 _qv_24))=(plus (succ _qv_24) (succ _qv_23))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int _v_35)    (nat-to-int _v_35)    (nat-to-int (mult (plus _v_35 _v_35) _t_36))]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (mult _qv_25 _qv_26))=(mult (succ _qv_25) (succ _qv_26))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int _v_35)    (nat-to-int _v_35)    (nat-to-int (mult (plus _v_35 _v_35) _t_36))]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (mult _qv_25 _qv_26))=(mult (succ _qv_26) (succ _qv_25))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int _v_35)    (nat-to-int _v_35)    (nat-to-int (mult (plus _v_35 _v_35) _t_36))]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((tri (plus _qv_27 _qv_28))=(plus (tri _qv_27) (tri _qv_28))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int _v_35)    (nat-to-int _v_35)    (nat-to-int (mult (plus _v_35 _v_35) _t_36))]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((tri (plus _qv_27 _qv_28))=(plus (tri _qv_28) (tri _qv_27))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int _v_35)    (nat-to-int _v_35)    (nat-to-int (mult (plus _v_35 _v_35) _t_36))]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((tri (mult _qv_29 _qv_30))=(mult (tri _qv_29) (tri _qv_30))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int _v_35)    (nat-to-int _v_35)    (nat-to-int (mult (plus _v_35 _v_35) _t_36))]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((tri (mult _qv_29 _qv_30))=(mult (tri _qv_30) (tri _qv_29))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int _v_35)    (nat-to-int _v_35)    (nat-to-int (mult (plus _v_35 _v_35) _t_36))]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((cubes (plus _qv_31 _qv_32))=(plus (cubes _qv_31) (cubes _qv_32))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int _v_35)    (nat-to-int _v_35)    (nat-to-int (mult (plus _v_35 _v_35) _t_36))]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((cubes (plus _qv_31 _qv_32))=(plus (cubes _qv_32) (cubes _qv_31))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int _v_35)    (nat-to-int _v_35)    (nat-to-int (mult (plus _v_35 _v_35) _t_36))]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((cubes (mult _qv_33 _qv_34))=(mult (cubes _qv_33) (cubes _qv_34))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int _v_35)    (nat-to-int _v_35)    (nat-to-int (mult (plus _v_35 _v_35) _t_36))]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((cubes (mult _qv_33 _qv_34))=(mult (cubes _qv_34) (cubes _qv_33))))
USE ASSUMPTION FAILED

  backtrack to: ([+    (nat-to-int _v_35)    (nat-to-int _v_35)    (nat-to-int (mult (plus _v_35 _v_35) _t_36))]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
  rewritten [15]: ([+    (nat-to-int _v_35)    (nat-to-int _v_35)    (nat-to-int (mult (plus _v_35 _v_35) _t_36))]=(nat-to-int (mult (succ (plus _t_36 (succ _t_36))) _v_35)))
  Maximum recursion depth reached
CURRENT SUBGOAL ([+    (nat-to-int _v_35)    (nat-to-int _v_35)    (nat-to-int (mult (plus _v_35 _v_35) _t_36))]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int _v_35)    (nat-to-int _v_35)    (nat-to-int (mult (plus _v_35 _v_35) _t_36))]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_1 _qv_2)=(plus _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int _v_35)    (nat-to-int _v_35)    (nat-to-int (mult (plus _v_35 _v_35) _t_36))]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_3 _qv_4) _qv_5)=(plus _qv_3 (plus _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int _v_35)    (nat-to-int _v_35)    (nat-to-int (mult (plus _v_35 _v_35) _t_36))]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((mult _qv_6 _qv_7)=(mult _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int _v_35)    (nat-to-int _v_35)    (nat-to-int (mult (plus _v_35 _v_35) _t_36))]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((mult (mult _qv_8 _qv_9) _qv_10)=(mult _qv_8 (mult _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int _v_35)    (nat-to-int _v_35)    (nat-to-int (mult (plus _v_35 _v_35) _t_36))]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat)) ((tri (tri _qv_11))=_qv_11))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int _v_35)    (nat-to-int _v_35)    (nat-to-int (mult (plus _v_35 _v_35) _t_36))]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat)) ((cubes (cubes _qv_12))=_qv_12))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int _v_35)    (nat-to-int _v_35)    (nat-to-int (mult (plus _v_35 _v_35) _t_36))]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int _v_35)    (nat-to-int _v_35)    (nat-to-int (mult (plus _v_35 _v_35) _t_36))]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_14))=(nat-to-int _qv_14)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int _v_35)    (nat-to-int _v_35)    (nat-to-int (mult (plus _v_35 _v_35) _t_36))]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat)) ((nat-to-int (tri _qv_15))=(nat-to-int _qv_15)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int _v_35)    (nat-to-int _v_35)    (nat-to-int (mult (plus _v_35 _v_35) _t_36))]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat)) ((nat-to-int (cubes _qv_16))=(nat-to-int _qv_16)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int _v_35)    (nat-to-int _v_35)    (nat-to-int (mult (plus _v_35 _v_35) _t_36))]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((mult _qv_17 (plus _qv_18 _qv_19))=(plus (mult _qv_17 _qv_18) (mult _qv_17 _qv_19))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int _v_35)    (nat-to-int _v_35)    (nat-to-int (mult (plus _v_35 _v_35) _t_36))]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus _qv_20 (mult _qv_21 _qv_22))=(mult (plus _qv_20 _qv_21) (plus _qv_20 _qv_22))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int _v_35)    (nat-to-int _v_35)    (nat-to-int (mult (plus _v_35 _v_35) _t_36))]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_23 _qv_24))=(plus (succ _qv_23) (succ _qv_24))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int _v_35)    (nat-to-int _v_35)    (nat-to-int (mult (plus _v_35 _v_35) _t_36))]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_23 _qv_24))=(plus (succ _qv_24) (succ _qv_23))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int _v_35)    (nat-to-int _v_35)    (nat-to-int (mult (plus _v_35 _v_35) _t_36))]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (mult _qv_25 _qv_26))=(mult (succ _qv_25) (succ _qv_26))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int _v_35)    (nat-to-int _v_35)    (nat-to-int (mult (plus _v_35 _v_35) _t_36))]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (mult _qv_25 _qv_26))=(mult (succ _qv_26) (succ _qv_25))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int _v_35)    (nat-to-int _v_35)    (nat-to-int (mult (plus _v_35 _v_35) _t_36))]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((tri (plus _qv_27 _qv_28))=(plus (tri _qv_27) (tri _qv_28))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int _v_35)    (nat-to-int _v_35)    (nat-to-int (mult (plus _v_35 _v_35) _t_36))]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((tri (plus _qv_27 _qv_28))=(plus (tri _qv_28) (tri _qv_27))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int _v_35)    (nat-to-int _v_35)    (nat-to-int (mult (plus _v_35 _v_35) _t_36))]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((tri (mult _qv_29 _qv_30))=(mult (tri _qv_29) (tri _qv_30))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int _v_35)    (nat-to-int _v_35)    (nat-to-int (mult (plus _v_35 _v_35) _t_36))]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((tri (mult _qv_29 _qv_30))=(mult (tri _qv_30) (tri _qv_29))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int _v_35)    (nat-to-int _v_35)    (nat-to-int (mult (plus _v_35 _v_35) _t_36))]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((cubes (plus _qv_31 _qv_32))=(plus (cubes _qv_31) (cubes _qv_32))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int _v_35)    (nat-to-int _v_35)    (nat-to-int (mult (plus _v_35 _v_35) _t_36))]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((cubes (plus _qv_31 _qv_32))=(plus (cubes _qv_32) (cubes _qv_31))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int _v_35)    (nat-to-int _v_35)    (nat-to-int (mult (plus _v_35 _v_35) _t_36))]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((cubes (mult _qv_33 _qv_34))=(mult (cubes _qv_33) (cubes _qv_34))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int _v_35)    (nat-to-int _v_35)    (nat-to-int (mult (plus _v_35 _v_35) _t_36))]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((cubes (mult _qv_33 _qv_34))=(mult (cubes _qv_34) (cubes _qv_33))))
USE ASSUMPTION FAILED

  backtrack to: ([+    (nat-to-int _v_35)    (nat-to-int _v_35)    (nat-to-int (mult (plus _v_35 _v_35) _t_36))]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
  rewritten [15]: ([+    (nat-to-int _v_35)    (nat-to-int _v_35)    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
  Maximum recursion depth reached
CURRENT SUBGOAL ([+    (nat-to-int _v_35)    (nat-to-int _v_35)    (nat-to-int (mult (plus _v_35 _v_35) _t_36))]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int _v_35)    (nat-to-int _v_35)    (nat-to-int (mult (plus _v_35 _v_35) _t_36))]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_1 _qv_2)=(plus _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int _v_35)    (nat-to-int _v_35)    (nat-to-int (mult (plus _v_35 _v_35) _t_36))]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_3 _qv_4) _qv_5)=(plus _qv_3 (plus _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int _v_35)    (nat-to-int _v_35)    (nat-to-int (mult (plus _v_35 _v_35) _t_36))]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((mult _qv_6 _qv_7)=(mult _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int _v_35)    (nat-to-int _v_35)    (nat-to-int (mult (plus _v_35 _v_35) _t_36))]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((mult (mult _qv_8 _qv_9) _qv_10)=(mult _qv_8 (mult _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int _v_35)    (nat-to-int _v_35)    (nat-to-int (mult (plus _v_35 _v_35) _t_36))]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat)) ((tri (tri _qv_11))=_qv_11))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int _v_35)    (nat-to-int _v_35)    (nat-to-int (mult (plus _v_35 _v_35) _t_36))]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat)) ((cubes (cubes _qv_12))=_qv_12))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int _v_35)    (nat-to-int _v_35)    (nat-to-int (mult (plus _v_35 _v_35) _t_36))]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int _v_35)    (nat-to-int _v_35)    (nat-to-int (mult (plus _v_35 _v_35) _t_36))]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_14))=(nat-to-int _qv_14)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int _v_35)    (nat-to-int _v_35)    (nat-to-int (mult (plus _v_35 _v_35) _t_36))]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat)) ((nat-to-int (tri _qv_15))=(nat-to-int _qv_15)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int _v_35)    (nat-to-int _v_35)    (nat-to-int (mult (plus _v_35 _v_35) _t_36))]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat)) ((nat-to-int (cubes _qv_16))=(nat-to-int _qv_16)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int _v_35)    (nat-to-int _v_35)    (nat-to-int (mult (plus _v_35 _v_35) _t_36))]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((mult _qv_17 (plus _qv_18 _qv_19))=(plus (mult _qv_17 _qv_18) (mult _qv_17 _qv_19))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int _v_35)    (nat-to-int _v_35)    (nat-to-int (mult (plus _v_35 _v_35) _t_36))]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus _qv_20 (mult _qv_21 _qv_22))=(mult (plus _qv_20 _qv_21) (plus _qv_20 _qv_22))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int _v_35)    (nat-to-int _v_35)    (nat-to-int (mult (plus _v_35 _v_35) _t_36))]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_23 _qv_24))=(plus (succ _qv_23) (succ _qv_24))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int _v_35)    (nat-to-int _v_35)    (nat-to-int (mult (plus _v_35 _v_35) _t_36))]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_23 _qv_24))=(plus (succ _qv_24) (succ _qv_23))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int _v_35)    (nat-to-int _v_35)    (nat-to-int (mult (plus _v_35 _v_35) _t_36))]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (mult _qv_25 _qv_26))=(mult (succ _qv_25) (succ _qv_26))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int _v_35)    (nat-to-int _v_35)    (nat-to-int (mult (plus _v_35 _v_35) _t_36))]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (mult _qv_25 _qv_26))=(mult (succ _qv_26) (succ _qv_25))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int _v_35)    (nat-to-int _v_35)    (nat-to-int (mult (plus _v_35 _v_35) _t_36))]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((tri (plus _qv_27 _qv_28))=(plus (tri _qv_27) (tri _qv_28))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int _v_35)    (nat-to-int _v_35)    (nat-to-int (mult (plus _v_35 _v_35) _t_36))]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((tri (plus _qv_27 _qv_28))=(plus (tri _qv_28) (tri _qv_27))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int _v_35)    (nat-to-int _v_35)    (nat-to-int (mult (plus _v_35 _v_35) _t_36))]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((tri (mult _qv_29 _qv_30))=(mult (tri _qv_29) (tri _qv_30))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int _v_35)    (nat-to-int _v_35)    (nat-to-int (mult (plus _v_35 _v_35) _t_36))]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((tri (mult _qv_29 _qv_30))=(mult (tri _qv_30) (tri _qv_29))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int _v_35)    (nat-to-int _v_35)    (nat-to-int (mult (plus _v_35 _v_35) _t_36))]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((cubes (plus _qv_31 _qv_32))=(plus (cubes _qv_31) (cubes _qv_32))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int _v_35)    (nat-to-int _v_35)    (nat-to-int (mult (plus _v_35 _v_35) _t_36))]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((cubes (plus _qv_31 _qv_32))=(plus (cubes _qv_32) (cubes _qv_31))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int _v_35)    (nat-to-int _v_35)    (nat-to-int (mult (plus _v_35 _v_35) _t_36))]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((cubes (mult _qv_33 _qv_34))=(mult (cubes _qv_33) (cubes _qv_34))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int _v_35)    (nat-to-int _v_35)    (nat-to-int (mult (plus _v_35 _v_35) _t_36))]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((cubes (mult _qv_33 _qv_34))=(mult (cubes _qv_34) (cubes _qv_33))))
USE ASSUMPTION FAILED

  backtrack to: ([+    (nat-to-int _v_35)    (nat-to-int _v_35)    (nat-to-int (mult (plus _v_35 _v_35) _t_36))]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_1 _qv_2)=(plus _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_3 _qv_4) _qv_5)=(plus _qv_3 (plus _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((mult _qv_6 _qv_7)=(mult _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((mult (mult _qv_8 _qv_9) _qv_10)=(mult _qv_8 (mult _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat)) ((tri (tri _qv_11))=_qv_11))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat)) ((cubes (cubes _qv_12))=_qv_12))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_14))=(nat-to-int _qv_14)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat)) ((nat-to-int (tri _qv_15))=(nat-to-int _qv_15)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat)) ((nat-to-int (cubes _qv_16))=(nat-to-int _qv_16)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((mult _qv_17 (plus _qv_18 _qv_19))=(plus (mult _qv_17 _qv_18) (mult _qv_17 _qv_19))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus _qv_20 (mult _qv_21 _qv_22))=(mult (plus _qv_20 _qv_21) (plus _qv_20 _qv_22))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_23 _qv_24))=(plus (succ _qv_23) (succ _qv_24))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_23 _qv_24))=(plus (succ _qv_24) (succ _qv_23))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (mult _qv_25 _qv_26))=(mult (succ _qv_25) (succ _qv_26))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (mult _qv_25 _qv_26))=(mult (succ _qv_26) (succ _qv_25))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((tri (plus _qv_27 _qv_28))=(plus (tri _qv_27) (tri _qv_28))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((tri (plus _qv_27 _qv_28))=(plus (tri _qv_28) (tri _qv_27))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((tri (mult _qv_29 _qv_30))=(mult (tri _qv_29) (tri _qv_30))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((tri (mult _qv_29 _qv_30))=(mult (tri _qv_30) (tri _qv_29))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((cubes (plus _qv_31 _qv_32))=(plus (cubes _qv_31) (cubes _qv_32))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((cubes (plus _qv_31 _qv_32))=(plus (cubes _qv_32) (cubes _qv_31))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((cubes (mult _qv_33 _qv_34))=(mult (cubes _qv_33) (cubes _qv_34))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((cubes (mult _qv_33 _qv_34))=(mult (cubes _qv_34) (cubes _qv_33))))
USE ASSUMPTION FAILED

  backtrack to: ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
  rewritten [17]: ([+    (nat-to-int (mult _v_35 (plus _t_36 _t_36)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
  rewritten [2]: (((2*(nat-to-int _v_35))+(nat-to-int (mult _v_35 (plus _t_36 _t_36))))=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
  Maximum recursion depth reached
CURRENT SUBGOAL ([+    (nat-to-int _v_35)    (nat-to-int _v_35)    (nat-to-int (mult _v_35 (plus _t_36 _t_36)))]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int _v_35)    (nat-to-int _v_35)    (nat-to-int (mult _v_35 (plus _t_36 _t_36)))]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_1 _qv_2)=(plus _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int _v_35)    (nat-to-int _v_35)    (nat-to-int (mult _v_35 (plus _t_36 _t_36)))]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_3 _qv_4) _qv_5)=(plus _qv_3 (plus _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int _v_35)    (nat-to-int _v_35)    (nat-to-int (mult _v_35 (plus _t_36 _t_36)))]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((mult _qv_6 _qv_7)=(mult _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int _v_35)    (nat-to-int _v_35)    (nat-to-int (mult _v_35 (plus _t_36 _t_36)))]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((mult (mult _qv_8 _qv_9) _qv_10)=(mult _qv_8 (mult _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int _v_35)    (nat-to-int _v_35)    (nat-to-int (mult _v_35 (plus _t_36 _t_36)))]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat)) ((tri (tri _qv_11))=_qv_11))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int _v_35)    (nat-to-int _v_35)    (nat-to-int (mult _v_35 (plus _t_36 _t_36)))]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat)) ((cubes (cubes _qv_12))=_qv_12))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int _v_35)    (nat-to-int _v_35)    (nat-to-int (mult _v_35 (plus _t_36 _t_36)))]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int _v_35)    (nat-to-int _v_35)    (nat-to-int (mult _v_35 (plus _t_36 _t_36)))]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_14))=(nat-to-int _qv_14)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int _v_35)    (nat-to-int _v_35)    (nat-to-int (mult _v_35 (plus _t_36 _t_36)))]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat)) ((nat-to-int (tri _qv_15))=(nat-to-int _qv_15)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int _v_35)    (nat-to-int _v_35)    (nat-to-int (mult _v_35 (plus _t_36 _t_36)))]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat)) ((nat-to-int (cubes _qv_16))=(nat-to-int _qv_16)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int _v_35)    (nat-to-int _v_35)    (nat-to-int (mult _v_35 (plus _t_36 _t_36)))]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((mult _qv_17 (plus _qv_18 _qv_19))=(plus (mult _qv_17 _qv_18) (mult _qv_17 _qv_19))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int _v_35)    (nat-to-int _v_35)    (nat-to-int (mult _v_35 (plus _t_36 _t_36)))]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus _qv_20 (mult _qv_21 _qv_22))=(mult (plus _qv_20 _qv_21) (plus _qv_20 _qv_22))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int _v_35)    (nat-to-int _v_35)    (nat-to-int (mult _v_35 (plus _t_36 _t_36)))]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_23 _qv_24))=(plus (succ _qv_23) (succ _qv_24))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int _v_35)    (nat-to-int _v_35)    (nat-to-int (mult _v_35 (plus _t_36 _t_36)))]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_23 _qv_24))=(plus (succ _qv_24) (succ _qv_23))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int _v_35)    (nat-to-int _v_35)    (nat-to-int (mult _v_35 (plus _t_36 _t_36)))]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (mult _qv_25 _qv_26))=(mult (succ _qv_25) (succ _qv_26))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int _v_35)    (nat-to-int _v_35)    (nat-to-int (mult _v_35 (plus _t_36 _t_36)))]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (mult _qv_25 _qv_26))=(mult (succ _qv_26) (succ _qv_25))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int _v_35)    (nat-to-int _v_35)    (nat-to-int (mult _v_35 (plus _t_36 _t_36)))]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((tri (plus _qv_27 _qv_28))=(plus (tri _qv_27) (tri _qv_28))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int _v_35)    (nat-to-int _v_35)    (nat-to-int (mult _v_35 (plus _t_36 _t_36)))]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((tri (plus _qv_27 _qv_28))=(plus (tri _qv_28) (tri _qv_27))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int _v_35)    (nat-to-int _v_35)    (nat-to-int (mult _v_35 (plus _t_36 _t_36)))]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((tri (mult _qv_29 _qv_30))=(mult (tri _qv_29) (tri _qv_30))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int _v_35)    (nat-to-int _v_35)    (nat-to-int (mult _v_35 (plus _t_36 _t_36)))]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((tri (mult _qv_29 _qv_30))=(mult (tri _qv_30) (tri _qv_29))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int _v_35)    (nat-to-int _v_35)    (nat-to-int (mult _v_35 (plus _t_36 _t_36)))]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((cubes (plus _qv_31 _qv_32))=(plus (cubes _qv_31) (cubes _qv_32))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int _v_35)    (nat-to-int _v_35)    (nat-to-int (mult _v_35 (plus _t_36 _t_36)))]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((cubes (plus _qv_31 _qv_32))=(plus (cubes _qv_32) (cubes _qv_31))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int _v_35)    (nat-to-int _v_35)    (nat-to-int (mult _v_35 (plus _t_36 _t_36)))]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((cubes (mult _qv_33 _qv_34))=(mult (cubes _qv_33) (cubes _qv_34))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int _v_35)    (nat-to-int _v_35)    (nat-to-int (mult _v_35 (plus _t_36 _t_36)))]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((cubes (mult _qv_33 _qv_34))=(mult (cubes _qv_34) (cubes _qv_33))))
USE ASSUMPTION FAILED

  backtrack to: ([+    (nat-to-int _v_35)    (nat-to-int _v_35)    (nat-to-int (mult _v_35 (plus _t_36 _t_36)))]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
  rewritten [13]: ([+    (nat-to-int _v_35)    (nat-to-int _v_35)    (nat-to-int (mult _v_35 (plus _t_36 _t_36)))]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
  Maximum recursion depth reached
CURRENT SUBGOAL ([+    (nat-to-int _v_35)    (nat-to-int _v_35)    (nat-to-int (mult _v_35 (plus _t_36 _t_36)))]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int _v_35)    (nat-to-int _v_35)    (nat-to-int (mult _v_35 (plus _t_36 _t_36)))]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_1 _qv_2)=(plus _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int _v_35)    (nat-to-int _v_35)    (nat-to-int (mult _v_35 (plus _t_36 _t_36)))]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_3 _qv_4) _qv_5)=(plus _qv_3 (plus _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int _v_35)    (nat-to-int _v_35)    (nat-to-int (mult _v_35 (plus _t_36 _t_36)))]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((mult _qv_6 _qv_7)=(mult _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int _v_35)    (nat-to-int _v_35)    (nat-to-int (mult _v_35 (plus _t_36 _t_36)))]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((mult (mult _qv_8 _qv_9) _qv_10)=(mult _qv_8 (mult _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int _v_35)    (nat-to-int _v_35)    (nat-to-int (mult _v_35 (plus _t_36 _t_36)))]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat)) ((tri (tri _qv_11))=_qv_11))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int _v_35)    (nat-to-int _v_35)    (nat-to-int (mult _v_35 (plus _t_36 _t_36)))]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat)) ((cubes (cubes _qv_12))=_qv_12))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int _v_35)    (nat-to-int _v_35)    (nat-to-int (mult _v_35 (plus _t_36 _t_36)))]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int _v_35)    (nat-to-int _v_35)    (nat-to-int (mult _v_35 (plus _t_36 _t_36)))]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_14))=(nat-to-int _qv_14)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int _v_35)    (nat-to-int _v_35)    (nat-to-int (mult _v_35 (plus _t_36 _t_36)))]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat)) ((nat-to-int (tri _qv_15))=(nat-to-int _qv_15)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int _v_35)    (nat-to-int _v_35)    (nat-to-int (mult _v_35 (plus _t_36 _t_36)))]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat)) ((nat-to-int (cubes _qv_16))=(nat-to-int _qv_16)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int _v_35)    (nat-to-int _v_35)    (nat-to-int (mult _v_35 (plus _t_36 _t_36)))]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((mult _qv_17 (plus _qv_18 _qv_19))=(plus (mult _qv_17 _qv_18) (mult _qv_17 _qv_19))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int _v_35)    (nat-to-int _v_35)    (nat-to-int (mult _v_35 (plus _t_36 _t_36)))]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus _qv_20 (mult _qv_21 _qv_22))=(mult (plus _qv_20 _qv_21) (plus _qv_20 _qv_22))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int _v_35)    (nat-to-int _v_35)    (nat-to-int (mult _v_35 (plus _t_36 _t_36)))]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_23 _qv_24))=(plus (succ _qv_23) (succ _qv_24))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int _v_35)    (nat-to-int _v_35)    (nat-to-int (mult _v_35 (plus _t_36 _t_36)))]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_23 _qv_24))=(plus (succ _qv_24) (succ _qv_23))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int _v_35)    (nat-to-int _v_35)    (nat-to-int (mult _v_35 (plus _t_36 _t_36)))]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (mult _qv_25 _qv_26))=(mult (succ _qv_25) (succ _qv_26))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int _v_35)    (nat-to-int _v_35)    (nat-to-int (mult _v_35 (plus _t_36 _t_36)))]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (mult _qv_25 _qv_26))=(mult (succ _qv_26) (succ _qv_25))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int _v_35)    (nat-to-int _v_35)    (nat-to-int (mult _v_35 (plus _t_36 _t_36)))]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((tri (plus _qv_27 _qv_28))=(plus (tri _qv_27) (tri _qv_28))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int _v_35)    (nat-to-int _v_35)    (nat-to-int (mult _v_35 (plus _t_36 _t_36)))]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((tri (plus _qv_27 _qv_28))=(plus (tri _qv_28) (tri _qv_27))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int _v_35)    (nat-to-int _v_35)    (nat-to-int (mult _v_35 (plus _t_36 _t_36)))]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((tri (mult _qv_29 _qv_30))=(mult (tri _qv_29) (tri _qv_30))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int _v_35)    (nat-to-int _v_35)    (nat-to-int (mult _v_35 (plus _t_36 _t_36)))]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((tri (mult _qv_29 _qv_30))=(mult (tri _qv_30) (tri _qv_29))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int _v_35)    (nat-to-int _v_35)    (nat-to-int (mult _v_35 (plus _t_36 _t_36)))]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((cubes (plus _qv_31 _qv_32))=(plus (cubes _qv_31) (cubes _qv_32))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int _v_35)    (nat-to-int _v_35)    (nat-to-int (mult _v_35 (plus _t_36 _t_36)))]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((cubes (plus _qv_31 _qv_32))=(plus (cubes _qv_32) (cubes _qv_31))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int _v_35)    (nat-to-int _v_35)    (nat-to-int (mult _v_35 (plus _t_36 _t_36)))]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((cubes (mult _qv_33 _qv_34))=(mult (cubes _qv_33) (cubes _qv_34))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int _v_35)    (nat-to-int _v_35)    (nat-to-int (mult _v_35 (plus _t_36 _t_36)))]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((cubes (mult _qv_33 _qv_34))=(mult (cubes _qv_34) (cubes _qv_33))))
USE ASSUMPTION FAILED

  backtrack to: ([+    (nat-to-int _v_35)    (nat-to-int _v_35)    (nat-to-int (mult _v_35 (plus _t_36 _t_36)))]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
  rewritten [13]: ([+    (nat-to-int _v_35)    (nat-to-int _v_35)    (nat-to-int (mult _v_35 (plus _t_36 _t_36)))]=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
  Maximum recursion depth reached
CURRENT SUBGOAL ([+    (nat-to-int _v_35)    (nat-to-int _v_35)    (nat-to-int (mult _v_35 (plus _t_36 _t_36)))]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int _v_35)    (nat-to-int _v_35)    (nat-to-int (mult _v_35 (plus _t_36 _t_36)))]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_1 _qv_2)=(plus _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int _v_35)    (nat-to-int _v_35)    (nat-to-int (mult _v_35 (plus _t_36 _t_36)))]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_3 _qv_4) _qv_5)=(plus _qv_3 (plus _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int _v_35)    (nat-to-int _v_35)    (nat-to-int (mult _v_35 (plus _t_36 _t_36)))]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((mult _qv_6 _qv_7)=(mult _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int _v_35)    (nat-to-int _v_35)    (nat-to-int (mult _v_35 (plus _t_36 _t_36)))]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((mult (mult _qv_8 _qv_9) _qv_10)=(mult _qv_8 (mult _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int _v_35)    (nat-to-int _v_35)    (nat-to-int (mult _v_35 (plus _t_36 _t_36)))]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat)) ((tri (tri _qv_11))=_qv_11))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int _v_35)    (nat-to-int _v_35)    (nat-to-int (mult _v_35 (plus _t_36 _t_36)))]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat)) ((cubes (cubes _qv_12))=_qv_12))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int _v_35)    (nat-to-int _v_35)    (nat-to-int (mult _v_35 (plus _t_36 _t_36)))]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int _v_35)    (nat-to-int _v_35)    (nat-to-int (mult _v_35 (plus _t_36 _t_36)))]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_14))=(nat-to-int _qv_14)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int _v_35)    (nat-to-int _v_35)    (nat-to-int (mult _v_35 (plus _t_36 _t_36)))]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat)) ((nat-to-int (tri _qv_15))=(nat-to-int _qv_15)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int _v_35)    (nat-to-int _v_35)    (nat-to-int (mult _v_35 (plus _t_36 _t_36)))]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat)) ((nat-to-int (cubes _qv_16))=(nat-to-int _qv_16)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int _v_35)    (nat-to-int _v_35)    (nat-to-int (mult _v_35 (plus _t_36 _t_36)))]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((mult _qv_17 (plus _qv_18 _qv_19))=(plus (mult _qv_17 _qv_18) (mult _qv_17 _qv_19))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int _v_35)    (nat-to-int _v_35)    (nat-to-int (mult _v_35 (plus _t_36 _t_36)))]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus _qv_20 (mult _qv_21 _qv_22))=(mult (plus _qv_20 _qv_21) (plus _qv_20 _qv_22))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int _v_35)    (nat-to-int _v_35)    (nat-to-int (mult _v_35 (plus _t_36 _t_36)))]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_23 _qv_24))=(plus (succ _qv_23) (succ _qv_24))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int _v_35)    (nat-to-int _v_35)    (nat-to-int (mult _v_35 (plus _t_36 _t_36)))]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_23 _qv_24))=(plus (succ _qv_24) (succ _qv_23))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int _v_35)    (nat-to-int _v_35)    (nat-to-int (mult _v_35 (plus _t_36 _t_36)))]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (mult _qv_25 _qv_26))=(mult (succ _qv_25) (succ _qv_26))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int _v_35)    (nat-to-int _v_35)    (nat-to-int (mult _v_35 (plus _t_36 _t_36)))]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (mult _qv_25 _qv_26))=(mult (succ _qv_26) (succ _qv_25))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int _v_35)    (nat-to-int _v_35)    (nat-to-int (mult _v_35 (plus _t_36 _t_36)))]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((tri (plus _qv_27 _qv_28))=(plus (tri _qv_27) (tri _qv_28))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int _v_35)    (nat-to-int _v_35)    (nat-to-int (mult _v_35 (plus _t_36 _t_36)))]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((tri (plus _qv_27 _qv_28))=(plus (tri _qv_28) (tri _qv_27))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int _v_35)    (nat-to-int _v_35)    (nat-to-int (mult _v_35 (plus _t_36 _t_36)))]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((tri (mult _qv_29 _qv_30))=(mult (tri _qv_29) (tri _qv_30))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int _v_35)    (nat-to-int _v_35)    (nat-to-int (mult _v_35 (plus _t_36 _t_36)))]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((tri (mult _qv_29 _qv_30))=(mult (tri _qv_30) (tri _qv_29))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int _v_35)    (nat-to-int _v_35)    (nat-to-int (mult _v_35 (plus _t_36 _t_36)))]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((cubes (plus _qv_31 _qv_32))=(plus (cubes _qv_31) (cubes _qv_32))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int _v_35)    (nat-to-int _v_35)    (nat-to-int (mult _v_35 (plus _t_36 _t_36)))]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((cubes (plus _qv_31 _qv_32))=(plus (cubes _qv_32) (cubes _qv_31))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int _v_35)    (nat-to-int _v_35)    (nat-to-int (mult _v_35 (plus _t_36 _t_36)))]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((cubes (mult _qv_33 _qv_34))=(mult (cubes _qv_33) (cubes _qv_34))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int _v_35)    (nat-to-int _v_35)    (nat-to-int (mult _v_35 (plus _t_36 _t_36)))]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((cubes (mult _qv_33 _qv_34))=(mult (cubes _qv_34) (cubes _qv_33))))
USE ASSUMPTION FAILED

  backtrack to: ([+    (nat-to-int _v_35)    (nat-to-int _v_35)    (nat-to-int (mult _v_35 (plus _t_36 _t_36)))]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
  rewritten [15]: ([+    (nat-to-int _v_35)    (nat-to-int _v_35)    (nat-to-int (mult (plus _t_36 _t_36) _v_35))]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
  Maximum recursion depth reached
CURRENT SUBGOAL ([+    (nat-to-int _v_35)    (nat-to-int _v_35)    (nat-to-int (mult _v_35 (plus _t_36 _t_36)))]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int _v_35)    (nat-to-int _v_35)    (nat-to-int (mult _v_35 (plus _t_36 _t_36)))]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_1 _qv_2)=(plus _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int _v_35)    (nat-to-int _v_35)    (nat-to-int (mult _v_35 (plus _t_36 _t_36)))]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_3 _qv_4) _qv_5)=(plus _qv_3 (plus _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int _v_35)    (nat-to-int _v_35)    (nat-to-int (mult _v_35 (plus _t_36 _t_36)))]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((mult _qv_6 _qv_7)=(mult _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int _v_35)    (nat-to-int _v_35)    (nat-to-int (mult _v_35 (plus _t_36 _t_36)))]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((mult (mult _qv_8 _qv_9) _qv_10)=(mult _qv_8 (mult _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int _v_35)    (nat-to-int _v_35)    (nat-to-int (mult _v_35 (plus _t_36 _t_36)))]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat)) ((tri (tri _qv_11))=_qv_11))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int _v_35)    (nat-to-int _v_35)    (nat-to-int (mult _v_35 (plus _t_36 _t_36)))]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat)) ((cubes (cubes _qv_12))=_qv_12))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int _v_35)    (nat-to-int _v_35)    (nat-to-int (mult _v_35 (plus _t_36 _t_36)))]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int _v_35)    (nat-to-int _v_35)    (nat-to-int (mult _v_35 (plus _t_36 _t_36)))]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_14))=(nat-to-int _qv_14)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int _v_35)    (nat-to-int _v_35)    (nat-to-int (mult _v_35 (plus _t_36 _t_36)))]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat)) ((nat-to-int (tri _qv_15))=(nat-to-int _qv_15)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int _v_35)    (nat-to-int _v_35)    (nat-to-int (mult _v_35 (plus _t_36 _t_36)))]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat)) ((nat-to-int (cubes _qv_16))=(nat-to-int _qv_16)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int _v_35)    (nat-to-int _v_35)    (nat-to-int (mult _v_35 (plus _t_36 _t_36)))]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((mult _qv_17 (plus _qv_18 _qv_19))=(plus (mult _qv_17 _qv_18) (mult _qv_17 _qv_19))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int _v_35)    (nat-to-int _v_35)    (nat-to-int (mult _v_35 (plus _t_36 _t_36)))]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus _qv_20 (mult _qv_21 _qv_22))=(mult (plus _qv_20 _qv_21) (plus _qv_20 _qv_22))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int _v_35)    (nat-to-int _v_35)    (nat-to-int (mult _v_35 (plus _t_36 _t_36)))]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_23 _qv_24))=(plus (succ _qv_23) (succ _qv_24))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int _v_35)    (nat-to-int _v_35)    (nat-to-int (mult _v_35 (plus _t_36 _t_36)))]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_23 _qv_24))=(plus (succ _qv_24) (succ _qv_23))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int _v_35)    (nat-to-int _v_35)    (nat-to-int (mult _v_35 (plus _t_36 _t_36)))]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (mult _qv_25 _qv_26))=(mult (succ _qv_25) (succ _qv_26))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int _v_35)    (nat-to-int _v_35)    (nat-to-int (mult _v_35 (plus _t_36 _t_36)))]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (mult _qv_25 _qv_26))=(mult (succ _qv_26) (succ _qv_25))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int _v_35)    (nat-to-int _v_35)    (nat-to-int (mult _v_35 (plus _t_36 _t_36)))]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((tri (plus _qv_27 _qv_28))=(plus (tri _qv_27) (tri _qv_28))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int _v_35)    (nat-to-int _v_35)    (nat-to-int (mult _v_35 (plus _t_36 _t_36)))]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((tri (plus _qv_27 _qv_28))=(plus (tri _qv_28) (tri _qv_27))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int _v_35)    (nat-to-int _v_35)    (nat-to-int (mult _v_35 (plus _t_36 _t_36)))]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((tri (mult _qv_29 _qv_30))=(mult (tri _qv_29) (tri _qv_30))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int _v_35)    (nat-to-int _v_35)    (nat-to-int (mult _v_35 (plus _t_36 _t_36)))]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((tri (mult _qv_29 _qv_30))=(mult (tri _qv_30) (tri _qv_29))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int _v_35)    (nat-to-int _v_35)    (nat-to-int (mult _v_35 (plus _t_36 _t_36)))]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((cubes (plus _qv_31 _qv_32))=(plus (cubes _qv_31) (cubes _qv_32))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int _v_35)    (nat-to-int _v_35)    (nat-to-int (mult _v_35 (plus _t_36 _t_36)))]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((cubes (plus _qv_31 _qv_32))=(plus (cubes _qv_32) (cubes _qv_31))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int _v_35)    (nat-to-int _v_35)    (nat-to-int (mult _v_35 (plus _t_36 _t_36)))]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((cubes (mult _qv_33 _qv_34))=(mult (cubes _qv_33) (cubes _qv_34))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int _v_35)    (nat-to-int _v_35)    (nat-to-int (mult _v_35 (plus _t_36 _t_36)))]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((cubes (mult _qv_33 _qv_34))=(mult (cubes _qv_34) (cubes _qv_33))))
USE ASSUMPTION FAILED

  backtrack to: ([+    (nat-to-int _v_35)    (nat-to-int _v_35)    (nat-to-int (mult _v_35 (plus _t_36 _t_36)))]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
  rewritten [15]: ([+    (nat-to-int _v_35)    (nat-to-int _v_35)    (nat-to-int (mult _v_35 (plus _t_36 _t_36)))]=(nat-to-int (mult (succ (plus _t_36 (succ _t_36))) _v_35)))
  Maximum recursion depth reached
CURRENT SUBGOAL ([+    (nat-to-int _v_35)    (nat-to-int _v_35)    (nat-to-int (mult _v_35 (plus _t_36 _t_36)))]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int _v_35)    (nat-to-int _v_35)    (nat-to-int (mult _v_35 (plus _t_36 _t_36)))]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_1 _qv_2)=(plus _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int _v_35)    (nat-to-int _v_35)    (nat-to-int (mult _v_35 (plus _t_36 _t_36)))]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_3 _qv_4) _qv_5)=(plus _qv_3 (plus _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int _v_35)    (nat-to-int _v_35)    (nat-to-int (mult _v_35 (plus _t_36 _t_36)))]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((mult _qv_6 _qv_7)=(mult _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int _v_35)    (nat-to-int _v_35)    (nat-to-int (mult _v_35 (plus _t_36 _t_36)))]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((mult (mult _qv_8 _qv_9) _qv_10)=(mult _qv_8 (mult _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int _v_35)    (nat-to-int _v_35)    (nat-to-int (mult _v_35 (plus _t_36 _t_36)))]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat)) ((tri (tri _qv_11))=_qv_11))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int _v_35)    (nat-to-int _v_35)    (nat-to-int (mult _v_35 (plus _t_36 _t_36)))]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat)) ((cubes (cubes _qv_12))=_qv_12))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int _v_35)    (nat-to-int _v_35)    (nat-to-int (mult _v_35 (plus _t_36 _t_36)))]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int _v_35)    (nat-to-int _v_35)    (nat-to-int (mult _v_35 (plus _t_36 _t_36)))]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_14))=(nat-to-int _qv_14)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int _v_35)    (nat-to-int _v_35)    (nat-to-int (mult _v_35 (plus _t_36 _t_36)))]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat)) ((nat-to-int (tri _qv_15))=(nat-to-int _qv_15)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int _v_35)    (nat-to-int _v_35)    (nat-to-int (mult _v_35 (plus _t_36 _t_36)))]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat)) ((nat-to-int (cubes _qv_16))=(nat-to-int _qv_16)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int _v_35)    (nat-to-int _v_35)    (nat-to-int (mult _v_35 (plus _t_36 _t_36)))]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((mult _qv_17 (plus _qv_18 _qv_19))=(plus (mult _qv_17 _qv_18) (mult _qv_17 _qv_19))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int _v_35)    (nat-to-int _v_35)    (nat-to-int (mult _v_35 (plus _t_36 _t_36)))]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus _qv_20 (mult _qv_21 _qv_22))=(mult (plus _qv_20 _qv_21) (plus _qv_20 _qv_22))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int _v_35)    (nat-to-int _v_35)    (nat-to-int (mult _v_35 (plus _t_36 _t_36)))]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_23 _qv_24))=(plus (succ _qv_23) (succ _qv_24))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int _v_35)    (nat-to-int _v_35)    (nat-to-int (mult _v_35 (plus _t_36 _t_36)))]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_23 _qv_24))=(plus (succ _qv_24) (succ _qv_23))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int _v_35)    (nat-to-int _v_35)    (nat-to-int (mult _v_35 (plus _t_36 _t_36)))]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (mult _qv_25 _qv_26))=(mult (succ _qv_25) (succ _qv_26))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int _v_35)    (nat-to-int _v_35)    (nat-to-int (mult _v_35 (plus _t_36 _t_36)))]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (mult _qv_25 _qv_26))=(mult (succ _qv_26) (succ _qv_25))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int _v_35)    (nat-to-int _v_35)    (nat-to-int (mult _v_35 (plus _t_36 _t_36)))]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((tri (plus _qv_27 _qv_28))=(plus (tri _qv_27) (tri _qv_28))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int _v_35)    (nat-to-int _v_35)    (nat-to-int (mult _v_35 (plus _t_36 _t_36)))]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((tri (plus _qv_27 _qv_28))=(plus (tri _qv_28) (tri _qv_27))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int _v_35)    (nat-to-int _v_35)    (nat-to-int (mult _v_35 (plus _t_36 _t_36)))]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((tri (mult _qv_29 _qv_30))=(mult (tri _qv_29) (tri _qv_30))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int _v_35)    (nat-to-int _v_35)    (nat-to-int (mult _v_35 (plus _t_36 _t_36)))]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((tri (mult _qv_29 _qv_30))=(mult (tri _qv_30) (tri _qv_29))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int _v_35)    (nat-to-int _v_35)    (nat-to-int (mult _v_35 (plus _t_36 _t_36)))]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((cubes (plus _qv_31 _qv_32))=(plus (cubes _qv_31) (cubes _qv_32))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int _v_35)    (nat-to-int _v_35)    (nat-to-int (mult _v_35 (plus _t_36 _t_36)))]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((cubes (plus _qv_31 _qv_32))=(plus (cubes _qv_32) (cubes _qv_31))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int _v_35)    (nat-to-int _v_35)    (nat-to-int (mult _v_35 (plus _t_36 _t_36)))]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((cubes (mult _qv_33 _qv_34))=(mult (cubes _qv_33) (cubes _qv_34))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int _v_35)    (nat-to-int _v_35)    (nat-to-int (mult _v_35 (plus _t_36 _t_36)))]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((cubes (mult _qv_33 _qv_34))=(mult (cubes _qv_34) (cubes _qv_33))))
USE ASSUMPTION FAILED

  backtrack to: ([+    (nat-to-int _v_35)    (nat-to-int _v_35)    (nat-to-int (mult _v_35 (plus _t_36 _t_36)))]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
  rewritten [18]: ([+    (nat-to-int _v_35)    (nat-to-int _v_35)    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
  Maximum recursion depth reached
CURRENT SUBGOAL ([+    (nat-to-int _v_35)    (nat-to-int _v_35)    (nat-to-int (mult _v_35 (plus _t_36 _t_36)))]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int _v_35)    (nat-to-int _v_35)    (nat-to-int (mult _v_35 (plus _t_36 _t_36)))]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_1 _qv_2)=(plus _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int _v_35)    (nat-to-int _v_35)    (nat-to-int (mult _v_35 (plus _t_36 _t_36)))]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_3 _qv_4) _qv_5)=(plus _qv_3 (plus _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int _v_35)    (nat-to-int _v_35)    (nat-to-int (mult _v_35 (plus _t_36 _t_36)))]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((mult _qv_6 _qv_7)=(mult _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int _v_35)    (nat-to-int _v_35)    (nat-to-int (mult _v_35 (plus _t_36 _t_36)))]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((mult (mult _qv_8 _qv_9) _qv_10)=(mult _qv_8 (mult _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int _v_35)    (nat-to-int _v_35)    (nat-to-int (mult _v_35 (plus _t_36 _t_36)))]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat)) ((tri (tri _qv_11))=_qv_11))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int _v_35)    (nat-to-int _v_35)    (nat-to-int (mult _v_35 (plus _t_36 _t_36)))]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat)) ((cubes (cubes _qv_12))=_qv_12))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int _v_35)    (nat-to-int _v_35)    (nat-to-int (mult _v_35 (plus _t_36 _t_36)))]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int _v_35)    (nat-to-int _v_35)    (nat-to-int (mult _v_35 (plus _t_36 _t_36)))]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_14))=(nat-to-int _qv_14)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int _v_35)    (nat-to-int _v_35)    (nat-to-int (mult _v_35 (plus _t_36 _t_36)))]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat)) ((nat-to-int (tri _qv_15))=(nat-to-int _qv_15)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int _v_35)    (nat-to-int _v_35)    (nat-to-int (mult _v_35 (plus _t_36 _t_36)))]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat)) ((nat-to-int (cubes _qv_16))=(nat-to-int _qv_16)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int _v_35)    (nat-to-int _v_35)    (nat-to-int (mult _v_35 (plus _t_36 _t_36)))]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((mult _qv_17 (plus _qv_18 _qv_19))=(plus (mult _qv_17 _qv_18) (mult _qv_17 _qv_19))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int _v_35)    (nat-to-int _v_35)    (nat-to-int (mult _v_35 (plus _t_36 _t_36)))]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus _qv_20 (mult _qv_21 _qv_22))=(mult (plus _qv_20 _qv_21) (plus _qv_20 _qv_22))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int _v_35)    (nat-to-int _v_35)    (nat-to-int (mult _v_35 (plus _t_36 _t_36)))]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_23 _qv_24))=(plus (succ _qv_23) (succ _qv_24))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int _v_35)    (nat-to-int _v_35)    (nat-to-int (mult _v_35 (plus _t_36 _t_36)))]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_23 _qv_24))=(plus (succ _qv_24) (succ _qv_23))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int _v_35)    (nat-to-int _v_35)    (nat-to-int (mult _v_35 (plus _t_36 _t_36)))]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (mult _qv_25 _qv_26))=(mult (succ _qv_25) (succ _qv_26))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int _v_35)    (nat-to-int _v_35)    (nat-to-int (mult _v_35 (plus _t_36 _t_36)))]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (mult _qv_25 _qv_26))=(mult (succ _qv_26) (succ _qv_25))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int _v_35)    (nat-to-int _v_35)    (nat-to-int (mult _v_35 (plus _t_36 _t_36)))]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((tri (plus _qv_27 _qv_28))=(plus (tri _qv_27) (tri _qv_28))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int _v_35)    (nat-to-int _v_35)    (nat-to-int (mult _v_35 (plus _t_36 _t_36)))]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((tri (plus _qv_27 _qv_28))=(plus (tri _qv_28) (tri _qv_27))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int _v_35)    (nat-to-int _v_35)    (nat-to-int (mult _v_35 (plus _t_36 _t_36)))]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((tri (mult _qv_29 _qv_30))=(mult (tri _qv_29) (tri _qv_30))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int _v_35)    (nat-to-int _v_35)    (nat-to-int (mult _v_35 (plus _t_36 _t_36)))]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((tri (mult _qv_29 _qv_30))=(mult (tri _qv_30) (tri _qv_29))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int _v_35)    (nat-to-int _v_35)    (nat-to-int (mult _v_35 (plus _t_36 _t_36)))]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((cubes (plus _qv_31 _qv_32))=(plus (cubes _qv_31) (cubes _qv_32))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int _v_35)    (nat-to-int _v_35)    (nat-to-int (mult _v_35 (plus _t_36 _t_36)))]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((cubes (plus _qv_31 _qv_32))=(plus (cubes _qv_32) (cubes _qv_31))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int _v_35)    (nat-to-int _v_35)    (nat-to-int (mult _v_35 (plus _t_36 _t_36)))]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((cubes (mult _qv_33 _qv_34))=(mult (cubes _qv_33) (cubes _qv_34))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int _v_35)    (nat-to-int _v_35)    (nat-to-int (mult _v_35 (plus _t_36 _t_36)))]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((cubes (mult _qv_33 _qv_34))=(mult (cubes _qv_34) (cubes _qv_33))))
USE ASSUMPTION FAILED

  backtrack to: ([+    (nat-to-int _v_35)    (nat-to-int _v_35)    (nat-to-int (mult _v_35 (plus _t_36 _t_36)))]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
  rewritten [2]: (((2*(nat-to-int _v_35))+(nat-to-int (mult _v_35 (plus _t_36 _t_36))))=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
  Maximum recursion depth reached
CURRENT SUBGOAL ([+    (nat-to-int _v_35)    (nat-to-int _v_35)    (nat-to-int (mult _v_35 (plus _t_36 _t_36)))]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int _v_35)    (nat-to-int _v_35)    (nat-to-int (mult _v_35 (plus _t_36 _t_36)))]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_1 _qv_2)=(plus _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int _v_35)    (nat-to-int _v_35)    (nat-to-int (mult _v_35 (plus _t_36 _t_36)))]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_3 _qv_4) _qv_5)=(plus _qv_3 (plus _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int _v_35)    (nat-to-int _v_35)    (nat-to-int (mult _v_35 (plus _t_36 _t_36)))]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((mult _qv_6 _qv_7)=(mult _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int _v_35)    (nat-to-int _v_35)    (nat-to-int (mult _v_35 (plus _t_36 _t_36)))]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((mult (mult _qv_8 _qv_9) _qv_10)=(mult _qv_8 (mult _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int _v_35)    (nat-to-int _v_35)    (nat-to-int (mult _v_35 (plus _t_36 _t_36)))]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat)) ((tri (tri _qv_11))=_qv_11))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int _v_35)    (nat-to-int _v_35)    (nat-to-int (mult _v_35 (plus _t_36 _t_36)))]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat)) ((cubes (cubes _qv_12))=_qv_12))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int _v_35)    (nat-to-int _v_35)    (nat-to-int (mult _v_35 (plus _t_36 _t_36)))]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int _v_35)    (nat-to-int _v_35)    (nat-to-int (mult _v_35 (plus _t_36 _t_36)))]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_14))=(nat-to-int _qv_14)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int _v_35)    (nat-to-int _v_35)    (nat-to-int (mult _v_35 (plus _t_36 _t_36)))]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat)) ((nat-to-int (tri _qv_15))=(nat-to-int _qv_15)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int _v_35)    (nat-to-int _v_35)    (nat-to-int (mult _v_35 (plus _t_36 _t_36)))]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat)) ((nat-to-int (cubes _qv_16))=(nat-to-int _qv_16)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int _v_35)    (nat-to-int _v_35)    (nat-to-int (mult _v_35 (plus _t_36 _t_36)))]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((mult _qv_17 (plus _qv_18 _qv_19))=(plus (mult _qv_17 _qv_18) (mult _qv_17 _qv_19))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int _v_35)    (nat-to-int _v_35)    (nat-to-int (mult _v_35 (plus _t_36 _t_36)))]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus _qv_20 (mult _qv_21 _qv_22))=(mult (plus _qv_20 _qv_21) (plus _qv_20 _qv_22))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int _v_35)    (nat-to-int _v_35)    (nat-to-int (mult _v_35 (plus _t_36 _t_36)))]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_23 _qv_24))=(plus (succ _qv_23) (succ _qv_24))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int _v_35)    (nat-to-int _v_35)    (nat-to-int (mult _v_35 (plus _t_36 _t_36)))]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_23 _qv_24))=(plus (succ _qv_24) (succ _qv_23))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int _v_35)    (nat-to-int _v_35)    (nat-to-int (mult _v_35 (plus _t_36 _t_36)))]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (mult _qv_25 _qv_26))=(mult (succ _qv_25) (succ _qv_26))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int _v_35)    (nat-to-int _v_35)    (nat-to-int (mult _v_35 (plus _t_36 _t_36)))]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (mult _qv_25 _qv_26))=(mult (succ _qv_26) (succ _qv_25))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int _v_35)    (nat-to-int _v_35)    (nat-to-int (mult _v_35 (plus _t_36 _t_36)))]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((tri (plus _qv_27 _qv_28))=(plus (tri _qv_27) (tri _qv_28))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int _v_35)    (nat-to-int _v_35)    (nat-to-int (mult _v_35 (plus _t_36 _t_36)))]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((tri (plus _qv_27 _qv_28))=(plus (tri _qv_28) (tri _qv_27))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int _v_35)    (nat-to-int _v_35)    (nat-to-int (mult _v_35 (plus _t_36 _t_36)))]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((tri (mult _qv_29 _qv_30))=(mult (tri _qv_29) (tri _qv_30))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int _v_35)    (nat-to-int _v_35)    (nat-to-int (mult _v_35 (plus _t_36 _t_36)))]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((tri (mult _qv_29 _qv_30))=(mult (tri _qv_30) (tri _qv_29))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int _v_35)    (nat-to-int _v_35)    (nat-to-int (mult _v_35 (plus _t_36 _t_36)))]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((cubes (plus _qv_31 _qv_32))=(plus (cubes _qv_31) (cubes _qv_32))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int _v_35)    (nat-to-int _v_35)    (nat-to-int (mult _v_35 (plus _t_36 _t_36)))]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((cubes (plus _qv_31 _qv_32))=(plus (cubes _qv_32) (cubes _qv_31))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int _v_35)    (nat-to-int _v_35)    (nat-to-int (mult _v_35 (plus _t_36 _t_36)))]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((cubes (mult _qv_33 _qv_34))=(mult (cubes _qv_33) (cubes _qv_34))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int _v_35)    (nat-to-int _v_35)    (nat-to-int (mult _v_35 (plus _t_36 _t_36)))]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((cubes (mult _qv_33 _qv_34))=(mult (cubes _qv_34) (cubes _qv_33))))
USE ASSUMPTION FAILED

  backtrack to: ([+    (nat-to-int _v_35)    (nat-to-int _v_35)    (nat-to-int (mult _v_35 (plus _t_36 _t_36)))]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
  rewritten [13]: ([+    (nat-to-int _v_35)    (nat-to-int _v_35)    (nat-to-int (mult _v_35 (plus _t_36 _t_36)))]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
  Maximum recursion depth reached
CURRENT SUBGOAL ([+    (nat-to-int _v_35)    (nat-to-int _v_35)    (nat-to-int (mult _v_35 (plus _t_36 _t_36)))]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int _v_35)    (nat-to-int _v_35)    (nat-to-int (mult _v_35 (plus _t_36 _t_36)))]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_1 _qv_2)=(plus _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int _v_35)    (nat-to-int _v_35)    (nat-to-int (mult _v_35 (plus _t_36 _t_36)))]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_3 _qv_4) _qv_5)=(plus _qv_3 (plus _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int _v_35)    (nat-to-int _v_35)    (nat-to-int (mult _v_35 (plus _t_36 _t_36)))]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((mult _qv_6 _qv_7)=(mult _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int _v_35)    (nat-to-int _v_35)    (nat-to-int (mult _v_35 (plus _t_36 _t_36)))]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((mult (mult _qv_8 _qv_9) _qv_10)=(mult _qv_8 (mult _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int _v_35)    (nat-to-int _v_35)    (nat-to-int (mult _v_35 (plus _t_36 _t_36)))]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat)) ((tri (tri _qv_11))=_qv_11))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int _v_35)    (nat-to-int _v_35)    (nat-to-int (mult _v_35 (plus _t_36 _t_36)))]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat)) ((cubes (cubes _qv_12))=_qv_12))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int _v_35)    (nat-to-int _v_35)    (nat-to-int (mult _v_35 (plus _t_36 _t_36)))]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int _v_35)    (nat-to-int _v_35)    (nat-to-int (mult _v_35 (plus _t_36 _t_36)))]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_14))=(nat-to-int _qv_14)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int _v_35)    (nat-to-int _v_35)    (nat-to-int (mult _v_35 (plus _t_36 _t_36)))]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat)) ((nat-to-int (tri _qv_15))=(nat-to-int _qv_15)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int _v_35)    (nat-to-int _v_35)    (nat-to-int (mult _v_35 (plus _t_36 _t_36)))]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat)) ((nat-to-int (cubes _qv_16))=(nat-to-int _qv_16)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int _v_35)    (nat-to-int _v_35)    (nat-to-int (mult _v_35 (plus _t_36 _t_36)))]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((mult _qv_17 (plus _qv_18 _qv_19))=(plus (mult _qv_17 _qv_18) (mult _qv_17 _qv_19))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int _v_35)    (nat-to-int _v_35)    (nat-to-int (mult _v_35 (plus _t_36 _t_36)))]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus _qv_20 (mult _qv_21 _qv_22))=(mult (plus _qv_20 _qv_21) (plus _qv_20 _qv_22))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int _v_35)    (nat-to-int _v_35)    (nat-to-int (mult _v_35 (plus _t_36 _t_36)))]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_23 _qv_24))=(plus (succ _qv_23) (succ _qv_24))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int _v_35)    (nat-to-int _v_35)    (nat-to-int (mult _v_35 (plus _t_36 _t_36)))]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_23 _qv_24))=(plus (succ _qv_24) (succ _qv_23))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int _v_35)    (nat-to-int _v_35)    (nat-to-int (mult _v_35 (plus _t_36 _t_36)))]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (mult _qv_25 _qv_26))=(mult (succ _qv_25) (succ _qv_26))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int _v_35)    (nat-to-int _v_35)    (nat-to-int (mult _v_35 (plus _t_36 _t_36)))]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (mult _qv_25 _qv_26))=(mult (succ _qv_26) (succ _qv_25))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int _v_35)    (nat-to-int _v_35)    (nat-to-int (mult _v_35 (plus _t_36 _t_36)))]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((tri (plus _qv_27 _qv_28))=(plus (tri _qv_27) (tri _qv_28))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int _v_35)    (nat-to-int _v_35)    (nat-to-int (mult _v_35 (plus _t_36 _t_36)))]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((tri (plus _qv_27 _qv_28))=(plus (tri _qv_28) (tri _qv_27))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int _v_35)    (nat-to-int _v_35)    (nat-to-int (mult _v_35 (plus _t_36 _t_36)))]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((tri (mult _qv_29 _qv_30))=(mult (tri _qv_29) (tri _qv_30))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int _v_35)    (nat-to-int _v_35)    (nat-to-int (mult _v_35 (plus _t_36 _t_36)))]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((tri (mult _qv_29 _qv_30))=(mult (tri _qv_30) (tri _qv_29))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int _v_35)    (nat-to-int _v_35)    (nat-to-int (mult _v_35 (plus _t_36 _t_36)))]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((cubes (plus _qv_31 _qv_32))=(plus (cubes _qv_31) (cubes _qv_32))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int _v_35)    (nat-to-int _v_35)    (nat-to-int (mult _v_35 (plus _t_36 _t_36)))]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((cubes (plus _qv_31 _qv_32))=(plus (cubes _qv_32) (cubes _qv_31))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int _v_35)    (nat-to-int _v_35)    (nat-to-int (mult _v_35 (plus _t_36 _t_36)))]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((cubes (mult _qv_33 _qv_34))=(mult (cubes _qv_33) (cubes _qv_34))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int _v_35)    (nat-to-int _v_35)    (nat-to-int (mult _v_35 (plus _t_36 _t_36)))]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((cubes (mult _qv_33 _qv_34))=(mult (cubes _qv_34) (cubes _qv_33))))
USE ASSUMPTION FAILED

  backtrack to: ([+    (nat-to-int _v_35)    (nat-to-int _v_35)    (nat-to-int (mult _v_35 (plus _t_36 _t_36)))]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
  rewritten [13]: ([+    (nat-to-int _v_35)    (nat-to-int _v_35)    (nat-to-int (mult _v_35 (plus _t_36 _t_36)))]=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
  Maximum recursion depth reached
CURRENT SUBGOAL ([+    (nat-to-int _v_35)    (nat-to-int _v_35)    (nat-to-int (mult _v_35 (plus _t_36 _t_36)))]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int _v_35)    (nat-to-int _v_35)    (nat-to-int (mult _v_35 (plus _t_36 _t_36)))]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_1 _qv_2)=(plus _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int _v_35)    (nat-to-int _v_35)    (nat-to-int (mult _v_35 (plus _t_36 _t_36)))]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_3 _qv_4) _qv_5)=(plus _qv_3 (plus _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int _v_35)    (nat-to-int _v_35)    (nat-to-int (mult _v_35 (plus _t_36 _t_36)))]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((mult _qv_6 _qv_7)=(mult _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int _v_35)    (nat-to-int _v_35)    (nat-to-int (mult _v_35 (plus _t_36 _t_36)))]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((mult (mult _qv_8 _qv_9) _qv_10)=(mult _qv_8 (mult _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int _v_35)    (nat-to-int _v_35)    (nat-to-int (mult _v_35 (plus _t_36 _t_36)))]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat)) ((tri (tri _qv_11))=_qv_11))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int _v_35)    (nat-to-int _v_35)    (nat-to-int (mult _v_35 (plus _t_36 _t_36)))]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat)) ((cubes (cubes _qv_12))=_qv_12))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int _v_35)    (nat-to-int _v_35)    (nat-to-int (mult _v_35 (plus _t_36 _t_36)))]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int _v_35)    (nat-to-int _v_35)    (nat-to-int (mult _v_35 (plus _t_36 _t_36)))]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_14))=(nat-to-int _qv_14)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int _v_35)    (nat-to-int _v_35)    (nat-to-int (mult _v_35 (plus _t_36 _t_36)))]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat)) ((nat-to-int (tri _qv_15))=(nat-to-int _qv_15)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int _v_35)    (nat-to-int _v_35)    (nat-to-int (mult _v_35 (plus _t_36 _t_36)))]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat)) ((nat-to-int (cubes _qv_16))=(nat-to-int _qv_16)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int _v_35)    (nat-to-int _v_35)    (nat-to-int (mult _v_35 (plus _t_36 _t_36)))]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((mult _qv_17 (plus _qv_18 _qv_19))=(plus (mult _qv_17 _qv_18) (mult _qv_17 _qv_19))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int _v_35)    (nat-to-int _v_35)    (nat-to-int (mult _v_35 (plus _t_36 _t_36)))]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus _qv_20 (mult _qv_21 _qv_22))=(mult (plus _qv_20 _qv_21) (plus _qv_20 _qv_22))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int _v_35)    (nat-to-int _v_35)    (nat-to-int (mult _v_35 (plus _t_36 _t_36)))]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_23 _qv_24))=(plus (succ _qv_23) (succ _qv_24))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int _v_35)    (nat-to-int _v_35)    (nat-to-int (mult _v_35 (plus _t_36 _t_36)))]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_23 _qv_24))=(plus (succ _qv_24) (succ _qv_23))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int _v_35)    (nat-to-int _v_35)    (nat-to-int (mult _v_35 (plus _t_36 _t_36)))]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (mult _qv_25 _qv_26))=(mult (succ _qv_25) (succ _qv_26))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int _v_35)    (nat-to-int _v_35)    (nat-to-int (mult _v_35 (plus _t_36 _t_36)))]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (mult _qv_25 _qv_26))=(mult (succ _qv_26) (succ _qv_25))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int _v_35)    (nat-to-int _v_35)    (nat-to-int (mult _v_35 (plus _t_36 _t_36)))]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((tri (plus _qv_27 _qv_28))=(plus (tri _qv_27) (tri _qv_28))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int _v_35)    (nat-to-int _v_35)    (nat-to-int (mult _v_35 (plus _t_36 _t_36)))]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((tri (plus _qv_27 _qv_28))=(plus (tri _qv_28) (tri _qv_27))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int _v_35)    (nat-to-int _v_35)    (nat-to-int (mult _v_35 (plus _t_36 _t_36)))]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((tri (mult _qv_29 _qv_30))=(mult (tri _qv_29) (tri _qv_30))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int _v_35)    (nat-to-int _v_35)    (nat-to-int (mult _v_35 (plus _t_36 _t_36)))]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((tri (mult _qv_29 _qv_30))=(mult (tri _qv_30) (tri _qv_29))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int _v_35)    (nat-to-int _v_35)    (nat-to-int (mult _v_35 (plus _t_36 _t_36)))]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((cubes (plus _qv_31 _qv_32))=(plus (cubes _qv_31) (cubes _qv_32))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int _v_35)    (nat-to-int _v_35)    (nat-to-int (mult _v_35 (plus _t_36 _t_36)))]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((cubes (plus _qv_31 _qv_32))=(plus (cubes _qv_32) (cubes _qv_31))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int _v_35)    (nat-to-int _v_35)    (nat-to-int (mult _v_35 (plus _t_36 _t_36)))]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((cubes (mult _qv_33 _qv_34))=(mult (cubes _qv_33) (cubes _qv_34))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int _v_35)    (nat-to-int _v_35)    (nat-to-int (mult _v_35 (plus _t_36 _t_36)))]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((cubes (mult _qv_33 _qv_34))=(mult (cubes _qv_34) (cubes _qv_33))))
USE ASSUMPTION FAILED

  backtrack to: ([+    (nat-to-int _v_35)    (nat-to-int _v_35)    (nat-to-int (mult _v_35 (plus _t_36 _t_36)))]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
  rewritten [15]: ([+    (nat-to-int _v_35)    (nat-to-int _v_35)    (nat-to-int (mult (plus _t_36 _t_36) _v_35))]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
  Maximum recursion depth reached
CURRENT SUBGOAL ([+    (nat-to-int _v_35)    (nat-to-int _v_35)    (nat-to-int (mult _v_35 (plus _t_36 _t_36)))]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int _v_35)    (nat-to-int _v_35)    (nat-to-int (mult _v_35 (plus _t_36 _t_36)))]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_1 _qv_2)=(plus _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int _v_35)    (nat-to-int _v_35)    (nat-to-int (mult _v_35 (plus _t_36 _t_36)))]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_3 _qv_4) _qv_5)=(plus _qv_3 (plus _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int _v_35)    (nat-to-int _v_35)    (nat-to-int (mult _v_35 (plus _t_36 _t_36)))]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((mult _qv_6 _qv_7)=(mult _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int _v_35)    (nat-to-int _v_35)    (nat-to-int (mult _v_35 (plus _t_36 _t_36)))]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((mult (mult _qv_8 _qv_9) _qv_10)=(mult _qv_8 (mult _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int _v_35)    (nat-to-int _v_35)    (nat-to-int (mult _v_35 (plus _t_36 _t_36)))]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat)) ((tri (tri _qv_11))=_qv_11))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int _v_35)    (nat-to-int _v_35)    (nat-to-int (mult _v_35 (plus _t_36 _t_36)))]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat)) ((cubes (cubes _qv_12))=_qv_12))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int _v_35)    (nat-to-int _v_35)    (nat-to-int (mult _v_35 (plus _t_36 _t_36)))]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int _v_35)    (nat-to-int _v_35)    (nat-to-int (mult _v_35 (plus _t_36 _t_36)))]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_14))=(nat-to-int _qv_14)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int _v_35)    (nat-to-int _v_35)    (nat-to-int (mult _v_35 (plus _t_36 _t_36)))]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat)) ((nat-to-int (tri _qv_15))=(nat-to-int _qv_15)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int _v_35)    (nat-to-int _v_35)    (nat-to-int (mult _v_35 (plus _t_36 _t_36)))]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat)) ((nat-to-int (cubes _qv_16))=(nat-to-int _qv_16)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int _v_35)    (nat-to-int _v_35)    (nat-to-int (mult _v_35 (plus _t_36 _t_36)))]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((mult _qv_17 (plus _qv_18 _qv_19))=(plus (mult _qv_17 _qv_18) (mult _qv_17 _qv_19))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int _v_35)    (nat-to-int _v_35)    (nat-to-int (mult _v_35 (plus _t_36 _t_36)))]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus _qv_20 (mult _qv_21 _qv_22))=(mult (plus _qv_20 _qv_21) (plus _qv_20 _qv_22))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int _v_35)    (nat-to-int _v_35)    (nat-to-int (mult _v_35 (plus _t_36 _t_36)))]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_23 _qv_24))=(plus (succ _qv_23) (succ _qv_24))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int _v_35)    (nat-to-int _v_35)    (nat-to-int (mult _v_35 (plus _t_36 _t_36)))]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_23 _qv_24))=(plus (succ _qv_24) (succ _qv_23))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int _v_35)    (nat-to-int _v_35)    (nat-to-int (mult _v_35 (plus _t_36 _t_36)))]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (mult _qv_25 _qv_26))=(mult (succ _qv_25) (succ _qv_26))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int _v_35)    (nat-to-int _v_35)    (nat-to-int (mult _v_35 (plus _t_36 _t_36)))]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (mult _qv_25 _qv_26))=(mult (succ _qv_26) (succ _qv_25))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int _v_35)    (nat-to-int _v_35)    (nat-to-int (mult _v_35 (plus _t_36 _t_36)))]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((tri (plus _qv_27 _qv_28))=(plus (tri _qv_27) (tri _qv_28))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int _v_35)    (nat-to-int _v_35)    (nat-to-int (mult _v_35 (plus _t_36 _t_36)))]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((tri (plus _qv_27 _qv_28))=(plus (tri _qv_28) (tri _qv_27))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int _v_35)    (nat-to-int _v_35)    (nat-to-int (mult _v_35 (plus _t_36 _t_36)))]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((tri (mult _qv_29 _qv_30))=(mult (tri _qv_29) (tri _qv_30))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int _v_35)    (nat-to-int _v_35)    (nat-to-int (mult _v_35 (plus _t_36 _t_36)))]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((tri (mult _qv_29 _qv_30))=(mult (tri _qv_30) (tri _qv_29))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int _v_35)    (nat-to-int _v_35)    (nat-to-int (mult _v_35 (plus _t_36 _t_36)))]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((cubes (plus _qv_31 _qv_32))=(plus (cubes _qv_31) (cubes _qv_32))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int _v_35)    (nat-to-int _v_35)    (nat-to-int (mult _v_35 (plus _t_36 _t_36)))]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((cubes (plus _qv_31 _qv_32))=(plus (cubes _qv_32) (cubes _qv_31))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int _v_35)    (nat-to-int _v_35)    (nat-to-int (mult _v_35 (plus _t_36 _t_36)))]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((cubes (mult _qv_33 _qv_34))=(mult (cubes _qv_33) (cubes _qv_34))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int _v_35)    (nat-to-int _v_35)    (nat-to-int (mult _v_35 (plus _t_36 _t_36)))]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((cubes (mult _qv_33 _qv_34))=(mult (cubes _qv_34) (cubes _qv_33))))
USE ASSUMPTION FAILED

  backtrack to: ([+    (nat-to-int _v_35)    (nat-to-int _v_35)    (nat-to-int (mult _v_35 (plus _t_36 _t_36)))]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
  rewritten [15]: ([+    (nat-to-int _v_35)    (nat-to-int _v_35)    (nat-to-int (mult _v_35 (plus _t_36 _t_36)))]=(nat-to-int (mult (succ (plus _t_36 (succ _t_36))) _v_35)))
  Maximum recursion depth reached
CURRENT SUBGOAL ([+    (nat-to-int _v_35)    (nat-to-int _v_35)    (nat-to-int (mult _v_35 (plus _t_36 _t_36)))]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int _v_35)    (nat-to-int _v_35)    (nat-to-int (mult _v_35 (plus _t_36 _t_36)))]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_1 _qv_2)=(plus _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int _v_35)    (nat-to-int _v_35)    (nat-to-int (mult _v_35 (plus _t_36 _t_36)))]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_3 _qv_4) _qv_5)=(plus _qv_3 (plus _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int _v_35)    (nat-to-int _v_35)    (nat-to-int (mult _v_35 (plus _t_36 _t_36)))]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((mult _qv_6 _qv_7)=(mult _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int _v_35)    (nat-to-int _v_35)    (nat-to-int (mult _v_35 (plus _t_36 _t_36)))]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((mult (mult _qv_8 _qv_9) _qv_10)=(mult _qv_8 (mult _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int _v_35)    (nat-to-int _v_35)    (nat-to-int (mult _v_35 (plus _t_36 _t_36)))]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat)) ((tri (tri _qv_11))=_qv_11))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int _v_35)    (nat-to-int _v_35)    (nat-to-int (mult _v_35 (plus _t_36 _t_36)))]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat)) ((cubes (cubes _qv_12))=_qv_12))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int _v_35)    (nat-to-int _v_35)    (nat-to-int (mult _v_35 (plus _t_36 _t_36)))]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int _v_35)    (nat-to-int _v_35)    (nat-to-int (mult _v_35 (plus _t_36 _t_36)))]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_14))=(nat-to-int _qv_14)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int _v_35)    (nat-to-int _v_35)    (nat-to-int (mult _v_35 (plus _t_36 _t_36)))]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat)) ((nat-to-int (tri _qv_15))=(nat-to-int _qv_15)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int _v_35)    (nat-to-int _v_35)    (nat-to-int (mult _v_35 (plus _t_36 _t_36)))]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat)) ((nat-to-int (cubes _qv_16))=(nat-to-int _qv_16)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int _v_35)    (nat-to-int _v_35)    (nat-to-int (mult _v_35 (plus _t_36 _t_36)))]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((mult _qv_17 (plus _qv_18 _qv_19))=(plus (mult _qv_17 _qv_18) (mult _qv_17 _qv_19))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int _v_35)    (nat-to-int _v_35)    (nat-to-int (mult _v_35 (plus _t_36 _t_36)))]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus _qv_20 (mult _qv_21 _qv_22))=(mult (plus _qv_20 _qv_21) (plus _qv_20 _qv_22))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int _v_35)    (nat-to-int _v_35)    (nat-to-int (mult _v_35 (plus _t_36 _t_36)))]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_23 _qv_24))=(plus (succ _qv_23) (succ _qv_24))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int _v_35)    (nat-to-int _v_35)    (nat-to-int (mult _v_35 (plus _t_36 _t_36)))]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_23 _qv_24))=(plus (succ _qv_24) (succ _qv_23))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int _v_35)    (nat-to-int _v_35)    (nat-to-int (mult _v_35 (plus _t_36 _t_36)))]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (mult _qv_25 _qv_26))=(mult (succ _qv_25) (succ _qv_26))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int _v_35)    (nat-to-int _v_35)    (nat-to-int (mult _v_35 (plus _t_36 _t_36)))]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (mult _qv_25 _qv_26))=(mult (succ _qv_26) (succ _qv_25))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int _v_35)    (nat-to-int _v_35)    (nat-to-int (mult _v_35 (plus _t_36 _t_36)))]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((tri (plus _qv_27 _qv_28))=(plus (tri _qv_27) (tri _qv_28))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int _v_35)    (nat-to-int _v_35)    (nat-to-int (mult _v_35 (plus _t_36 _t_36)))]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((tri (plus _qv_27 _qv_28))=(plus (tri _qv_28) (tri _qv_27))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int _v_35)    (nat-to-int _v_35)    (nat-to-int (mult _v_35 (plus _t_36 _t_36)))]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((tri (mult _qv_29 _qv_30))=(mult (tri _qv_29) (tri _qv_30))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int _v_35)    (nat-to-int _v_35)    (nat-to-int (mult _v_35 (plus _t_36 _t_36)))]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((tri (mult _qv_29 _qv_30))=(mult (tri _qv_30) (tri _qv_29))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int _v_35)    (nat-to-int _v_35)    (nat-to-int (mult _v_35 (plus _t_36 _t_36)))]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((cubes (plus _qv_31 _qv_32))=(plus (cubes _qv_31) (cubes _qv_32))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int _v_35)    (nat-to-int _v_35)    (nat-to-int (mult _v_35 (plus _t_36 _t_36)))]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((cubes (plus _qv_31 _qv_32))=(plus (cubes _qv_32) (cubes _qv_31))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int _v_35)    (nat-to-int _v_35)    (nat-to-int (mult _v_35 (plus _t_36 _t_36)))]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((cubes (mult _qv_33 _qv_34))=(mult (cubes _qv_33) (cubes _qv_34))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int _v_35)    (nat-to-int _v_35)    (nat-to-int (mult _v_35 (plus _t_36 _t_36)))]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((cubes (mult _qv_33 _qv_34))=(mult (cubes _qv_34) (cubes _qv_33))))
USE ASSUMPTION FAILED

  backtrack to: ([+    (nat-to-int _v_35)    (nat-to-int _v_35)    (nat-to-int (mult _v_35 (plus _t_36 _t_36)))]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
  rewritten [18]: ([+    (nat-to-int _v_35)    (nat-to-int _v_35)    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
  Maximum recursion depth reached
CURRENT SUBGOAL ([+    (nat-to-int _v_35)    (nat-to-int _v_35)    (nat-to-int (mult _v_35 (plus _t_36 _t_36)))]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int _v_35)    (nat-to-int _v_35)    (nat-to-int (mult _v_35 (plus _t_36 _t_36)))]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_1 _qv_2)=(plus _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int _v_35)    (nat-to-int _v_35)    (nat-to-int (mult _v_35 (plus _t_36 _t_36)))]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_3 _qv_4) _qv_5)=(plus _qv_3 (plus _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int _v_35)    (nat-to-int _v_35)    (nat-to-int (mult _v_35 (plus _t_36 _t_36)))]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((mult _qv_6 _qv_7)=(mult _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int _v_35)    (nat-to-int _v_35)    (nat-to-int (mult _v_35 (plus _t_36 _t_36)))]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((mult (mult _qv_8 _qv_9) _qv_10)=(mult _qv_8 (mult _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int _v_35)    (nat-to-int _v_35)    (nat-to-int (mult _v_35 (plus _t_36 _t_36)))]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat)) ((tri (tri _qv_11))=_qv_11))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int _v_35)    (nat-to-int _v_35)    (nat-to-int (mult _v_35 (plus _t_36 _t_36)))]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat)) ((cubes (cubes _qv_12))=_qv_12))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int _v_35)    (nat-to-int _v_35)    (nat-to-int (mult _v_35 (plus _t_36 _t_36)))]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int _v_35)    (nat-to-int _v_35)    (nat-to-int (mult _v_35 (plus _t_36 _t_36)))]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_14))=(nat-to-int _qv_14)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int _v_35)    (nat-to-int _v_35)    (nat-to-int (mult _v_35 (plus _t_36 _t_36)))]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat)) ((nat-to-int (tri _qv_15))=(nat-to-int _qv_15)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int _v_35)    (nat-to-int _v_35)    (nat-to-int (mult _v_35 (plus _t_36 _t_36)))]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat)) ((nat-to-int (cubes _qv_16))=(nat-to-int _qv_16)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int _v_35)    (nat-to-int _v_35)    (nat-to-int (mult _v_35 (plus _t_36 _t_36)))]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((mult _qv_17 (plus _qv_18 _qv_19))=(plus (mult _qv_17 _qv_18) (mult _qv_17 _qv_19))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int _v_35)    (nat-to-int _v_35)    (nat-to-int (mult _v_35 (plus _t_36 _t_36)))]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus _qv_20 (mult _qv_21 _qv_22))=(mult (plus _qv_20 _qv_21) (plus _qv_20 _qv_22))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int _v_35)    (nat-to-int _v_35)    (nat-to-int (mult _v_35 (plus _t_36 _t_36)))]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_23 _qv_24))=(plus (succ _qv_23) (succ _qv_24))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int _v_35)    (nat-to-int _v_35)    (nat-to-int (mult _v_35 (plus _t_36 _t_36)))]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_23 _qv_24))=(plus (succ _qv_24) (succ _qv_23))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int _v_35)    (nat-to-int _v_35)    (nat-to-int (mult _v_35 (plus _t_36 _t_36)))]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (mult _qv_25 _qv_26))=(mult (succ _qv_25) (succ _qv_26))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int _v_35)    (nat-to-int _v_35)    (nat-to-int (mult _v_35 (plus _t_36 _t_36)))]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (mult _qv_25 _qv_26))=(mult (succ _qv_26) (succ _qv_25))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int _v_35)    (nat-to-int _v_35)    (nat-to-int (mult _v_35 (plus _t_36 _t_36)))]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((tri (plus _qv_27 _qv_28))=(plus (tri _qv_27) (tri _qv_28))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int _v_35)    (nat-to-int _v_35)    (nat-to-int (mult _v_35 (plus _t_36 _t_36)))]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((tri (plus _qv_27 _qv_28))=(plus (tri _qv_28) (tri _qv_27))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int _v_35)    (nat-to-int _v_35)    (nat-to-int (mult _v_35 (plus _t_36 _t_36)))]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((tri (mult _qv_29 _qv_30))=(mult (tri _qv_29) (tri _qv_30))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int _v_35)    (nat-to-int _v_35)    (nat-to-int (mult _v_35 (plus _t_36 _t_36)))]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((tri (mult _qv_29 _qv_30))=(mult (tri _qv_30) (tri _qv_29))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int _v_35)    (nat-to-int _v_35)    (nat-to-int (mult _v_35 (plus _t_36 _t_36)))]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((cubes (plus _qv_31 _qv_32))=(plus (cubes _qv_31) (cubes _qv_32))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int _v_35)    (nat-to-int _v_35)    (nat-to-int (mult _v_35 (plus _t_36 _t_36)))]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((cubes (plus _qv_31 _qv_32))=(plus (cubes _qv_32) (cubes _qv_31))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int _v_35)    (nat-to-int _v_35)    (nat-to-int (mult _v_35 (plus _t_36 _t_36)))]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((cubes (mult _qv_33 _qv_34))=(mult (cubes _qv_33) (cubes _qv_34))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int _v_35)    (nat-to-int _v_35)    (nat-to-int (mult _v_35 (plus _t_36 _t_36)))]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((cubes (mult _qv_33 _qv_34))=(mult (cubes _qv_34) (cubes _qv_33))))
USE ASSUMPTION FAILED

  backtrack to: ([+    (nat-to-int _v_35)    (nat-to-int _v_35)    (nat-to-int (mult _v_35 (plus _t_36 _t_36)))]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_1 _qv_2)=(plus _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_3 _qv_4) _qv_5)=(plus _qv_3 (plus _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((mult _qv_6 _qv_7)=(mult _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((mult (mult _qv_8 _qv_9) _qv_10)=(mult _qv_8 (mult _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat)) ((tri (tri _qv_11))=_qv_11))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat)) ((cubes (cubes _qv_12))=_qv_12))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_14))=(nat-to-int _qv_14)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat)) ((nat-to-int (tri _qv_15))=(nat-to-int _qv_15)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat)) ((nat-to-int (cubes _qv_16))=(nat-to-int _qv_16)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((mult _qv_17 (plus _qv_18 _qv_19))=(plus (mult _qv_17 _qv_18) (mult _qv_17 _qv_19))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus _qv_20 (mult _qv_21 _qv_22))=(mult (plus _qv_20 _qv_21) (plus _qv_20 _qv_22))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_23 _qv_24))=(plus (succ _qv_23) (succ _qv_24))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_23 _qv_24))=(plus (succ _qv_24) (succ _qv_23))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (mult _qv_25 _qv_26))=(mult (succ _qv_25) (succ _qv_26))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (mult _qv_25 _qv_26))=(mult (succ _qv_26) (succ _qv_25))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((tri (plus _qv_27 _qv_28))=(plus (tri _qv_27) (tri _qv_28))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((tri (plus _qv_27 _qv_28))=(plus (tri _qv_28) (tri _qv_27))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((tri (mult _qv_29 _qv_30))=(mult (tri _qv_29) (tri _qv_30))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((tri (mult _qv_29 _qv_30))=(mult (tri _qv_30) (tri _qv_29))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((cubes (plus _qv_31 _qv_32))=(plus (cubes _qv_31) (cubes _qv_32))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((cubes (plus _qv_31 _qv_32))=(plus (cubes _qv_32) (cubes _qv_31))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((cubes (mult _qv_33 _qv_34))=(mult (cubes _qv_33) (cubes _qv_34))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((cubes (mult _qv_33 _qv_34))=(mult (cubes _qv_34) (cubes _qv_33))))
USE ASSUMPTION FAILED

  backtrack to: ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
  rewritten [2]: (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(2*(nat-to-int _v_35)))=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
  rewritten [13]: (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(2*(nat-to-int _v_35)))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
  Maximum recursion depth reached
CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(2*(nat-to-int _v_35)))=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(2*(nat-to-int _v_35)))=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_1 _qv_2)=(plus _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(2*(nat-to-int _v_35)))=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_3 _qv_4) _qv_5)=(plus _qv_3 (plus _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(2*(nat-to-int _v_35)))=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((mult _qv_6 _qv_7)=(mult _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(2*(nat-to-int _v_35)))=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((mult (mult _qv_8 _qv_9) _qv_10)=(mult _qv_8 (mult _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(2*(nat-to-int _v_35)))=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat)) ((tri (tri _qv_11))=_qv_11))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(2*(nat-to-int _v_35)))=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat)) ((cubes (cubes _qv_12))=_qv_12))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(2*(nat-to-int _v_35)))=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(2*(nat-to-int _v_35)))=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_14))=(nat-to-int _qv_14)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(2*(nat-to-int _v_35)))=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat)) ((nat-to-int (tri _qv_15))=(nat-to-int _qv_15)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(2*(nat-to-int _v_35)))=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat)) ((nat-to-int (cubes _qv_16))=(nat-to-int _qv_16)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(2*(nat-to-int _v_35)))=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((mult _qv_17 (plus _qv_18 _qv_19))=(plus (mult _qv_17 _qv_18) (mult _qv_17 _qv_19))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(2*(nat-to-int _v_35)))=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus _qv_20 (mult _qv_21 _qv_22))=(mult (plus _qv_20 _qv_21) (plus _qv_20 _qv_22))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(2*(nat-to-int _v_35)))=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_23 _qv_24))=(plus (succ _qv_23) (succ _qv_24))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(2*(nat-to-int _v_35)))=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_23 _qv_24))=(plus (succ _qv_24) (succ _qv_23))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(2*(nat-to-int _v_35)))=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (mult _qv_25 _qv_26))=(mult (succ _qv_25) (succ _qv_26))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(2*(nat-to-int _v_35)))=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (mult _qv_25 _qv_26))=(mult (succ _qv_26) (succ _qv_25))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(2*(nat-to-int _v_35)))=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((tri (plus _qv_27 _qv_28))=(plus (tri _qv_27) (tri _qv_28))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(2*(nat-to-int _v_35)))=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((tri (plus _qv_27 _qv_28))=(plus (tri _qv_28) (tri _qv_27))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(2*(nat-to-int _v_35)))=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((tri (mult _qv_29 _qv_30))=(mult (tri _qv_29) (tri _qv_30))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(2*(nat-to-int _v_35)))=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((tri (mult _qv_29 _qv_30))=(mult (tri _qv_30) (tri _qv_29))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(2*(nat-to-int _v_35)))=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((cubes (plus _qv_31 _qv_32))=(plus (cubes _qv_31) (cubes _qv_32))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(2*(nat-to-int _v_35)))=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((cubes (plus _qv_31 _qv_32))=(plus (cubes _qv_32) (cubes _qv_31))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(2*(nat-to-int _v_35)))=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((cubes (mult _qv_33 _qv_34))=(mult (cubes _qv_33) (cubes _qv_34))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(2*(nat-to-int _v_35)))=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((cubes (mult _qv_33 _qv_34))=(mult (cubes _qv_34) (cubes _qv_33))))
USE ASSUMPTION FAILED

  backtrack to: (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(2*(nat-to-int _v_35)))=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
  rewritten [15]: (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(2*(nat-to-int _v_35)))=(nat-to-int (mult (succ (plus _t_36 (succ _t_36))) _v_35)))
  Maximum recursion depth reached
CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(2*(nat-to-int _v_35)))=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(2*(nat-to-int _v_35)))=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_1 _qv_2)=(plus _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(2*(nat-to-int _v_35)))=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_3 _qv_4) _qv_5)=(plus _qv_3 (plus _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(2*(nat-to-int _v_35)))=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((mult _qv_6 _qv_7)=(mult _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(2*(nat-to-int _v_35)))=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((mult (mult _qv_8 _qv_9) _qv_10)=(mult _qv_8 (mult _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(2*(nat-to-int _v_35)))=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat)) ((tri (tri _qv_11))=_qv_11))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(2*(nat-to-int _v_35)))=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat)) ((cubes (cubes _qv_12))=_qv_12))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(2*(nat-to-int _v_35)))=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(2*(nat-to-int _v_35)))=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_14))=(nat-to-int _qv_14)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(2*(nat-to-int _v_35)))=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat)) ((nat-to-int (tri _qv_15))=(nat-to-int _qv_15)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(2*(nat-to-int _v_35)))=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat)) ((nat-to-int (cubes _qv_16))=(nat-to-int _qv_16)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(2*(nat-to-int _v_35)))=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((mult _qv_17 (plus _qv_18 _qv_19))=(plus (mult _qv_17 _qv_18) (mult _qv_17 _qv_19))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(2*(nat-to-int _v_35)))=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus _qv_20 (mult _qv_21 _qv_22))=(mult (plus _qv_20 _qv_21) (plus _qv_20 _qv_22))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(2*(nat-to-int _v_35)))=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_23 _qv_24))=(plus (succ _qv_23) (succ _qv_24))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(2*(nat-to-int _v_35)))=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_23 _qv_24))=(plus (succ _qv_24) (succ _qv_23))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(2*(nat-to-int _v_35)))=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (mult _qv_25 _qv_26))=(mult (succ _qv_25) (succ _qv_26))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(2*(nat-to-int _v_35)))=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (mult _qv_25 _qv_26))=(mult (succ _qv_26) (succ _qv_25))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(2*(nat-to-int _v_35)))=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((tri (plus _qv_27 _qv_28))=(plus (tri _qv_27) (tri _qv_28))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(2*(nat-to-int _v_35)))=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((tri (plus _qv_27 _qv_28))=(plus (tri _qv_28) (tri _qv_27))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(2*(nat-to-int _v_35)))=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((tri (mult _qv_29 _qv_30))=(mult (tri _qv_29) (tri _qv_30))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(2*(nat-to-int _v_35)))=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((tri (mult _qv_29 _qv_30))=(mult (tri _qv_30) (tri _qv_29))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(2*(nat-to-int _v_35)))=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((cubes (plus _qv_31 _qv_32))=(plus (cubes _qv_31) (cubes _qv_32))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(2*(nat-to-int _v_35)))=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((cubes (plus _qv_31 _qv_32))=(plus (cubes _qv_32) (cubes _qv_31))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(2*(nat-to-int _v_35)))=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((cubes (mult _qv_33 _qv_34))=(mult (cubes _qv_33) (cubes _qv_34))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(2*(nat-to-int _v_35)))=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((cubes (mult _qv_33 _qv_34))=(mult (cubes _qv_34) (cubes _qv_33))))
USE ASSUMPTION FAILED

  backtrack to: (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(2*(nat-to-int _v_35)))=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
  rewritten [15]: (((nat-to-int (mult (plus _v_35 _v_35) _t_36))+(2*(nat-to-int _v_35)))=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
  Maximum recursion depth reached
CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(2*(nat-to-int _v_35)))=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(2*(nat-to-int _v_35)))=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_1 _qv_2)=(plus _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(2*(nat-to-int _v_35)))=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_3 _qv_4) _qv_5)=(plus _qv_3 (plus _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(2*(nat-to-int _v_35)))=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((mult _qv_6 _qv_7)=(mult _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(2*(nat-to-int _v_35)))=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((mult (mult _qv_8 _qv_9) _qv_10)=(mult _qv_8 (mult _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(2*(nat-to-int _v_35)))=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat)) ((tri (tri _qv_11))=_qv_11))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(2*(nat-to-int _v_35)))=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat)) ((cubes (cubes _qv_12))=_qv_12))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(2*(nat-to-int _v_35)))=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(2*(nat-to-int _v_35)))=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_14))=(nat-to-int _qv_14)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(2*(nat-to-int _v_35)))=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat)) ((nat-to-int (tri _qv_15))=(nat-to-int _qv_15)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(2*(nat-to-int _v_35)))=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat)) ((nat-to-int (cubes _qv_16))=(nat-to-int _qv_16)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(2*(nat-to-int _v_35)))=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((mult _qv_17 (plus _qv_18 _qv_19))=(plus (mult _qv_17 _qv_18) (mult _qv_17 _qv_19))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(2*(nat-to-int _v_35)))=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus _qv_20 (mult _qv_21 _qv_22))=(mult (plus _qv_20 _qv_21) (plus _qv_20 _qv_22))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(2*(nat-to-int _v_35)))=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_23 _qv_24))=(plus (succ _qv_23) (succ _qv_24))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(2*(nat-to-int _v_35)))=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_23 _qv_24))=(plus (succ _qv_24) (succ _qv_23))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(2*(nat-to-int _v_35)))=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (mult _qv_25 _qv_26))=(mult (succ _qv_25) (succ _qv_26))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(2*(nat-to-int _v_35)))=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (mult _qv_25 _qv_26))=(mult (succ _qv_26) (succ _qv_25))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(2*(nat-to-int _v_35)))=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((tri (plus _qv_27 _qv_28))=(plus (tri _qv_27) (tri _qv_28))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(2*(nat-to-int _v_35)))=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((tri (plus _qv_27 _qv_28))=(plus (tri _qv_28) (tri _qv_27))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(2*(nat-to-int _v_35)))=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((tri (mult _qv_29 _qv_30))=(mult (tri _qv_29) (tri _qv_30))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(2*(nat-to-int _v_35)))=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((tri (mult _qv_29 _qv_30))=(mult (tri _qv_30) (tri _qv_29))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(2*(nat-to-int _v_35)))=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((cubes (plus _qv_31 _qv_32))=(plus (cubes _qv_31) (cubes _qv_32))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(2*(nat-to-int _v_35)))=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((cubes (plus _qv_31 _qv_32))=(plus (cubes _qv_32) (cubes _qv_31))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(2*(nat-to-int _v_35)))=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((cubes (mult _qv_33 _qv_34))=(mult (cubes _qv_33) (cubes _qv_34))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(2*(nat-to-int _v_35)))=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((cubes (mult _qv_33 _qv_34))=(mult (cubes _qv_34) (cubes _qv_33))))
USE ASSUMPTION FAILED

  backtrack to: (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(2*(nat-to-int _v_35)))=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
  rewritten [17]: (((nat-to-int (mult _v_35 (plus _t_36 _t_36)))+(2*(nat-to-int _v_35)))=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
  Maximum recursion depth reached
CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(2*(nat-to-int _v_35)))=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(2*(nat-to-int _v_35)))=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_1 _qv_2)=(plus _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(2*(nat-to-int _v_35)))=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_3 _qv_4) _qv_5)=(plus _qv_3 (plus _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(2*(nat-to-int _v_35)))=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((mult _qv_6 _qv_7)=(mult _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(2*(nat-to-int _v_35)))=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((mult (mult _qv_8 _qv_9) _qv_10)=(mult _qv_8 (mult _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(2*(nat-to-int _v_35)))=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat)) ((tri (tri _qv_11))=_qv_11))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(2*(nat-to-int _v_35)))=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat)) ((cubes (cubes _qv_12))=_qv_12))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(2*(nat-to-int _v_35)))=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(2*(nat-to-int _v_35)))=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_14))=(nat-to-int _qv_14)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(2*(nat-to-int _v_35)))=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat)) ((nat-to-int (tri _qv_15))=(nat-to-int _qv_15)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(2*(nat-to-int _v_35)))=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat)) ((nat-to-int (cubes _qv_16))=(nat-to-int _qv_16)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(2*(nat-to-int _v_35)))=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((mult _qv_17 (plus _qv_18 _qv_19))=(plus (mult _qv_17 _qv_18) (mult _qv_17 _qv_19))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(2*(nat-to-int _v_35)))=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus _qv_20 (mult _qv_21 _qv_22))=(mult (plus _qv_20 _qv_21) (plus _qv_20 _qv_22))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(2*(nat-to-int _v_35)))=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_23 _qv_24))=(plus (succ _qv_23) (succ _qv_24))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(2*(nat-to-int _v_35)))=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_23 _qv_24))=(plus (succ _qv_24) (succ _qv_23))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(2*(nat-to-int _v_35)))=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (mult _qv_25 _qv_26))=(mult (succ _qv_25) (succ _qv_26))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(2*(nat-to-int _v_35)))=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (mult _qv_25 _qv_26))=(mult (succ _qv_26) (succ _qv_25))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(2*(nat-to-int _v_35)))=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((tri (plus _qv_27 _qv_28))=(plus (tri _qv_27) (tri _qv_28))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(2*(nat-to-int _v_35)))=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((tri (plus _qv_27 _qv_28))=(plus (tri _qv_28) (tri _qv_27))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(2*(nat-to-int _v_35)))=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((tri (mult _qv_29 _qv_30))=(mult (tri _qv_29) (tri _qv_30))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(2*(nat-to-int _v_35)))=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((tri (mult _qv_29 _qv_30))=(mult (tri _qv_30) (tri _qv_29))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(2*(nat-to-int _v_35)))=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((cubes (plus _qv_31 _qv_32))=(plus (cubes _qv_31) (cubes _qv_32))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(2*(nat-to-int _v_35)))=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((cubes (plus _qv_31 _qv_32))=(plus (cubes _qv_32) (cubes _qv_31))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(2*(nat-to-int _v_35)))=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((cubes (mult _qv_33 _qv_34))=(mult (cubes _qv_33) (cubes _qv_34))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(2*(nat-to-int _v_35)))=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((cubes (mult _qv_33 _qv_34))=(mult (cubes _qv_34) (cubes _qv_33))))
USE ASSUMPTION FAILED

  backtrack to: (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(2*(nat-to-int _v_35)))=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
  rewritten [13]: (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(2*(nat-to-int _v_35)))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
  Maximum recursion depth reached
CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(2*(nat-to-int _v_35)))=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(2*(nat-to-int _v_35)))=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_1 _qv_2)=(plus _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(2*(nat-to-int _v_35)))=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_3 _qv_4) _qv_5)=(plus _qv_3 (plus _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(2*(nat-to-int _v_35)))=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((mult _qv_6 _qv_7)=(mult _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(2*(nat-to-int _v_35)))=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((mult (mult _qv_8 _qv_9) _qv_10)=(mult _qv_8 (mult _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(2*(nat-to-int _v_35)))=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat)) ((tri (tri _qv_11))=_qv_11))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(2*(nat-to-int _v_35)))=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat)) ((cubes (cubes _qv_12))=_qv_12))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(2*(nat-to-int _v_35)))=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(2*(nat-to-int _v_35)))=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_14))=(nat-to-int _qv_14)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(2*(nat-to-int _v_35)))=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat)) ((nat-to-int (tri _qv_15))=(nat-to-int _qv_15)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(2*(nat-to-int _v_35)))=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat)) ((nat-to-int (cubes _qv_16))=(nat-to-int _qv_16)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(2*(nat-to-int _v_35)))=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((mult _qv_17 (plus _qv_18 _qv_19))=(plus (mult _qv_17 _qv_18) (mult _qv_17 _qv_19))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(2*(nat-to-int _v_35)))=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus _qv_20 (mult _qv_21 _qv_22))=(mult (plus _qv_20 _qv_21) (plus _qv_20 _qv_22))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(2*(nat-to-int _v_35)))=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_23 _qv_24))=(plus (succ _qv_23) (succ _qv_24))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(2*(nat-to-int _v_35)))=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_23 _qv_24))=(plus (succ _qv_24) (succ _qv_23))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(2*(nat-to-int _v_35)))=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (mult _qv_25 _qv_26))=(mult (succ _qv_25) (succ _qv_26))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(2*(nat-to-int _v_35)))=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (mult _qv_25 _qv_26))=(mult (succ _qv_26) (succ _qv_25))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(2*(nat-to-int _v_35)))=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((tri (plus _qv_27 _qv_28))=(plus (tri _qv_27) (tri _qv_28))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(2*(nat-to-int _v_35)))=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((tri (plus _qv_27 _qv_28))=(plus (tri _qv_28) (tri _qv_27))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(2*(nat-to-int _v_35)))=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((tri (mult _qv_29 _qv_30))=(mult (tri _qv_29) (tri _qv_30))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(2*(nat-to-int _v_35)))=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((tri (mult _qv_29 _qv_30))=(mult (tri _qv_30) (tri _qv_29))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(2*(nat-to-int _v_35)))=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((cubes (plus _qv_31 _qv_32))=(plus (cubes _qv_31) (cubes _qv_32))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(2*(nat-to-int _v_35)))=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((cubes (plus _qv_31 _qv_32))=(plus (cubes _qv_32) (cubes _qv_31))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(2*(nat-to-int _v_35)))=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((cubes (mult _qv_33 _qv_34))=(mult (cubes _qv_33) (cubes _qv_34))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(2*(nat-to-int _v_35)))=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((cubes (mult _qv_33 _qv_34))=(mult (cubes _qv_34) (cubes _qv_33))))
USE ASSUMPTION FAILED

  backtrack to: (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(2*(nat-to-int _v_35)))=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
  rewritten [15]: (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(2*(nat-to-int _v_35)))=(nat-to-int (mult (succ (plus _t_36 (succ _t_36))) _v_35)))
  Maximum recursion depth reached
CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(2*(nat-to-int _v_35)))=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(2*(nat-to-int _v_35)))=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_1 _qv_2)=(plus _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(2*(nat-to-int _v_35)))=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_3 _qv_4) _qv_5)=(plus _qv_3 (plus _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(2*(nat-to-int _v_35)))=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((mult _qv_6 _qv_7)=(mult _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(2*(nat-to-int _v_35)))=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((mult (mult _qv_8 _qv_9) _qv_10)=(mult _qv_8 (mult _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(2*(nat-to-int _v_35)))=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat)) ((tri (tri _qv_11))=_qv_11))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(2*(nat-to-int _v_35)))=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat)) ((cubes (cubes _qv_12))=_qv_12))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(2*(nat-to-int _v_35)))=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(2*(nat-to-int _v_35)))=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_14))=(nat-to-int _qv_14)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(2*(nat-to-int _v_35)))=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat)) ((nat-to-int (tri _qv_15))=(nat-to-int _qv_15)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(2*(nat-to-int _v_35)))=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat)) ((nat-to-int (cubes _qv_16))=(nat-to-int _qv_16)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(2*(nat-to-int _v_35)))=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((mult _qv_17 (plus _qv_18 _qv_19))=(plus (mult _qv_17 _qv_18) (mult _qv_17 _qv_19))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(2*(nat-to-int _v_35)))=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus _qv_20 (mult _qv_21 _qv_22))=(mult (plus _qv_20 _qv_21) (plus _qv_20 _qv_22))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(2*(nat-to-int _v_35)))=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_23 _qv_24))=(plus (succ _qv_23) (succ _qv_24))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(2*(nat-to-int _v_35)))=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_23 _qv_24))=(plus (succ _qv_24) (succ _qv_23))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(2*(nat-to-int _v_35)))=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (mult _qv_25 _qv_26))=(mult (succ _qv_25) (succ _qv_26))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(2*(nat-to-int _v_35)))=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (mult _qv_25 _qv_26))=(mult (succ _qv_26) (succ _qv_25))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(2*(nat-to-int _v_35)))=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((tri (plus _qv_27 _qv_28))=(plus (tri _qv_27) (tri _qv_28))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(2*(nat-to-int _v_35)))=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((tri (plus _qv_27 _qv_28))=(plus (tri _qv_28) (tri _qv_27))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(2*(nat-to-int _v_35)))=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((tri (mult _qv_29 _qv_30))=(mult (tri _qv_29) (tri _qv_30))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(2*(nat-to-int _v_35)))=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((tri (mult _qv_29 _qv_30))=(mult (tri _qv_30) (tri _qv_29))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(2*(nat-to-int _v_35)))=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((cubes (plus _qv_31 _qv_32))=(plus (cubes _qv_31) (cubes _qv_32))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(2*(nat-to-int _v_35)))=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((cubes (plus _qv_31 _qv_32))=(plus (cubes _qv_32) (cubes _qv_31))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(2*(nat-to-int _v_35)))=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((cubes (mult _qv_33 _qv_34))=(mult (cubes _qv_33) (cubes _qv_34))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(2*(nat-to-int _v_35)))=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((cubes (mult _qv_33 _qv_34))=(mult (cubes _qv_34) (cubes _qv_33))))
USE ASSUMPTION FAILED

  backtrack to: (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(2*(nat-to-int _v_35)))=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
  rewritten [15]: (((nat-to-int (mult (plus _v_35 _v_35) _t_36))+(2*(nat-to-int _v_35)))=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
  Maximum recursion depth reached
CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(2*(nat-to-int _v_35)))=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(2*(nat-to-int _v_35)))=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_1 _qv_2)=(plus _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(2*(nat-to-int _v_35)))=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_3 _qv_4) _qv_5)=(plus _qv_3 (plus _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(2*(nat-to-int _v_35)))=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((mult _qv_6 _qv_7)=(mult _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(2*(nat-to-int _v_35)))=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((mult (mult _qv_8 _qv_9) _qv_10)=(mult _qv_8 (mult _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(2*(nat-to-int _v_35)))=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat)) ((tri (tri _qv_11))=_qv_11))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(2*(nat-to-int _v_35)))=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat)) ((cubes (cubes _qv_12))=_qv_12))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(2*(nat-to-int _v_35)))=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(2*(nat-to-int _v_35)))=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_14))=(nat-to-int _qv_14)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(2*(nat-to-int _v_35)))=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat)) ((nat-to-int (tri _qv_15))=(nat-to-int _qv_15)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(2*(nat-to-int _v_35)))=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat)) ((nat-to-int (cubes _qv_16))=(nat-to-int _qv_16)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(2*(nat-to-int _v_35)))=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((mult _qv_17 (plus _qv_18 _qv_19))=(plus (mult _qv_17 _qv_18) (mult _qv_17 _qv_19))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(2*(nat-to-int _v_35)))=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus _qv_20 (mult _qv_21 _qv_22))=(mult (plus _qv_20 _qv_21) (plus _qv_20 _qv_22))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(2*(nat-to-int _v_35)))=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_23 _qv_24))=(plus (succ _qv_23) (succ _qv_24))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(2*(nat-to-int _v_35)))=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_23 _qv_24))=(plus (succ _qv_24) (succ _qv_23))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(2*(nat-to-int _v_35)))=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (mult _qv_25 _qv_26))=(mult (succ _qv_25) (succ _qv_26))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(2*(nat-to-int _v_35)))=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (mult _qv_25 _qv_26))=(mult (succ _qv_26) (succ _qv_25))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(2*(nat-to-int _v_35)))=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((tri (plus _qv_27 _qv_28))=(plus (tri _qv_27) (tri _qv_28))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(2*(nat-to-int _v_35)))=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((tri (plus _qv_27 _qv_28))=(plus (tri _qv_28) (tri _qv_27))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(2*(nat-to-int _v_35)))=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((tri (mult _qv_29 _qv_30))=(mult (tri _qv_29) (tri _qv_30))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(2*(nat-to-int _v_35)))=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((tri (mult _qv_29 _qv_30))=(mult (tri _qv_30) (tri _qv_29))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(2*(nat-to-int _v_35)))=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((cubes (plus _qv_31 _qv_32))=(plus (cubes _qv_31) (cubes _qv_32))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(2*(nat-to-int _v_35)))=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((cubes (plus _qv_31 _qv_32))=(plus (cubes _qv_32) (cubes _qv_31))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(2*(nat-to-int _v_35)))=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((cubes (mult _qv_33 _qv_34))=(mult (cubes _qv_33) (cubes _qv_34))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(2*(nat-to-int _v_35)))=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((cubes (mult _qv_33 _qv_34))=(mult (cubes _qv_34) (cubes _qv_33))))
USE ASSUMPTION FAILED

  backtrack to: (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(2*(nat-to-int _v_35)))=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
  rewritten [17]: (((nat-to-int (mult _v_35 (plus _t_36 _t_36)))+(2*(nat-to-int _v_35)))=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
  Maximum recursion depth reached
CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(2*(nat-to-int _v_35)))=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(2*(nat-to-int _v_35)))=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_1 _qv_2)=(plus _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(2*(nat-to-int _v_35)))=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_3 _qv_4) _qv_5)=(plus _qv_3 (plus _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(2*(nat-to-int _v_35)))=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((mult _qv_6 _qv_7)=(mult _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(2*(nat-to-int _v_35)))=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((mult (mult _qv_8 _qv_9) _qv_10)=(mult _qv_8 (mult _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(2*(nat-to-int _v_35)))=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat)) ((tri (tri _qv_11))=_qv_11))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(2*(nat-to-int _v_35)))=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat)) ((cubes (cubes _qv_12))=_qv_12))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(2*(nat-to-int _v_35)))=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(2*(nat-to-int _v_35)))=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_14))=(nat-to-int _qv_14)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(2*(nat-to-int _v_35)))=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat)) ((nat-to-int (tri _qv_15))=(nat-to-int _qv_15)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(2*(nat-to-int _v_35)))=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat)) ((nat-to-int (cubes _qv_16))=(nat-to-int _qv_16)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(2*(nat-to-int _v_35)))=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((mult _qv_17 (plus _qv_18 _qv_19))=(plus (mult _qv_17 _qv_18) (mult _qv_17 _qv_19))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(2*(nat-to-int _v_35)))=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus _qv_20 (mult _qv_21 _qv_22))=(mult (plus _qv_20 _qv_21) (plus _qv_20 _qv_22))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(2*(nat-to-int _v_35)))=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_23 _qv_24))=(plus (succ _qv_23) (succ _qv_24))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(2*(nat-to-int _v_35)))=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_23 _qv_24))=(plus (succ _qv_24) (succ _qv_23))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(2*(nat-to-int _v_35)))=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (mult _qv_25 _qv_26))=(mult (succ _qv_25) (succ _qv_26))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(2*(nat-to-int _v_35)))=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (mult _qv_25 _qv_26))=(mult (succ _qv_26) (succ _qv_25))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(2*(nat-to-int _v_35)))=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((tri (plus _qv_27 _qv_28))=(plus (tri _qv_27) (tri _qv_28))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(2*(nat-to-int _v_35)))=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((tri (plus _qv_27 _qv_28))=(plus (tri _qv_28) (tri _qv_27))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(2*(nat-to-int _v_35)))=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((tri (mult _qv_29 _qv_30))=(mult (tri _qv_29) (tri _qv_30))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(2*(nat-to-int _v_35)))=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((tri (mult _qv_29 _qv_30))=(mult (tri _qv_30) (tri _qv_29))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(2*(nat-to-int _v_35)))=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((cubes (plus _qv_31 _qv_32))=(plus (cubes _qv_31) (cubes _qv_32))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(2*(nat-to-int _v_35)))=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((cubes (plus _qv_31 _qv_32))=(plus (cubes _qv_32) (cubes _qv_31))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(2*(nat-to-int _v_35)))=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((cubes (mult _qv_33 _qv_34))=(mult (cubes _qv_33) (cubes _qv_34))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(2*(nat-to-int _v_35)))=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((cubes (mult _qv_33 _qv_34))=(mult (cubes _qv_34) (cubes _qv_33))))
USE ASSUMPTION FAILED

  backtrack to: (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(2*(nat-to-int _v_35)))=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_1 _qv_2)=(plus _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_3 _qv_4) _qv_5)=(plus _qv_3 (plus _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((mult _qv_6 _qv_7)=(mult _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((mult (mult _qv_8 _qv_9) _qv_10)=(mult _qv_8 (mult _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat)) ((tri (tri _qv_11))=_qv_11))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat)) ((cubes (cubes _qv_12))=_qv_12))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_14))=(nat-to-int _qv_14)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat)) ((nat-to-int (tri _qv_15))=(nat-to-int _qv_15)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat)) ((nat-to-int (cubes _qv_16))=(nat-to-int _qv_16)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((mult _qv_17 (plus _qv_18 _qv_19))=(plus (mult _qv_17 _qv_18) (mult _qv_17 _qv_19))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus _qv_20 (mult _qv_21 _qv_22))=(mult (plus _qv_20 _qv_21) (plus _qv_20 _qv_22))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_23 _qv_24))=(plus (succ _qv_23) (succ _qv_24))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_23 _qv_24))=(plus (succ _qv_24) (succ _qv_23))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (mult _qv_25 _qv_26))=(mult (succ _qv_25) (succ _qv_26))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (mult _qv_25 _qv_26))=(mult (succ _qv_26) (succ _qv_25))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((tri (plus _qv_27 _qv_28))=(plus (tri _qv_27) (tri _qv_28))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((tri (plus _qv_27 _qv_28))=(plus (tri _qv_28) (tri _qv_27))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((tri (mult _qv_29 _qv_30))=(mult (tri _qv_29) (tri _qv_30))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((tri (mult _qv_29 _qv_30))=(mult (tri _qv_30) (tri _qv_29))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((cubes (plus _qv_31 _qv_32))=(plus (cubes _qv_31) (cubes _qv_32))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((cubes (plus _qv_31 _qv_32))=(plus (cubes _qv_32) (cubes _qv_31))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((cubes (mult _qv_33 _qv_34))=(mult (cubes _qv_33) (cubes _qv_34))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((cubes (mult _qv_33 _qv_34))=(mult (cubes _qv_34) (cubes _qv_33))))
USE ASSUMPTION FAILED

  backtrack to: ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
  rewritten [13]: ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
  rewritten [2]: (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(2*(nat-to-int _v_35)))=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
  Maximum recursion depth reached
CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_1 _qv_2)=(plus _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_3 _qv_4) _qv_5)=(plus _qv_3 (plus _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((mult _qv_6 _qv_7)=(mult _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((mult (mult _qv_8 _qv_9) _qv_10)=(mult _qv_8 (mult _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat)) ((tri (tri _qv_11))=_qv_11))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat)) ((cubes (cubes _qv_12))=_qv_12))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_14))=(nat-to-int _qv_14)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat)) ((nat-to-int (tri _qv_15))=(nat-to-int _qv_15)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat)) ((nat-to-int (cubes _qv_16))=(nat-to-int _qv_16)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((mult _qv_17 (plus _qv_18 _qv_19))=(plus (mult _qv_17 _qv_18) (mult _qv_17 _qv_19))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus _qv_20 (mult _qv_21 _qv_22))=(mult (plus _qv_20 _qv_21) (plus _qv_20 _qv_22))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_23 _qv_24))=(plus (succ _qv_23) (succ _qv_24))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_23 _qv_24))=(plus (succ _qv_24) (succ _qv_23))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (mult _qv_25 _qv_26))=(mult (succ _qv_25) (succ _qv_26))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (mult _qv_25 _qv_26))=(mult (succ _qv_26) (succ _qv_25))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((tri (plus _qv_27 _qv_28))=(plus (tri _qv_27) (tri _qv_28))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((tri (plus _qv_27 _qv_28))=(plus (tri _qv_28) (tri _qv_27))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((tri (mult _qv_29 _qv_30))=(mult (tri _qv_29) (tri _qv_30))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((tri (mult _qv_29 _qv_30))=(mult (tri _qv_30) (tri _qv_29))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((cubes (plus _qv_31 _qv_32))=(plus (cubes _qv_31) (cubes _qv_32))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((cubes (plus _qv_31 _qv_32))=(plus (cubes _qv_32) (cubes _qv_31))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((cubes (mult _qv_33 _qv_34))=(mult (cubes _qv_33) (cubes _qv_34))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((cubes (mult _qv_33 _qv_34))=(mult (cubes _qv_34) (cubes _qv_33))))
USE ASSUMPTION FAILED

  backtrack to: ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
  rewritten [13]: ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
  Maximum recursion depth reached
CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_1 _qv_2)=(plus _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_3 _qv_4) _qv_5)=(plus _qv_3 (plus _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((mult _qv_6 _qv_7)=(mult _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((mult (mult _qv_8 _qv_9) _qv_10)=(mult _qv_8 (mult _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat)) ((tri (tri _qv_11))=_qv_11))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat)) ((cubes (cubes _qv_12))=_qv_12))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_14))=(nat-to-int _qv_14)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat)) ((nat-to-int (tri _qv_15))=(nat-to-int _qv_15)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat)) ((nat-to-int (cubes _qv_16))=(nat-to-int _qv_16)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((mult _qv_17 (plus _qv_18 _qv_19))=(plus (mult _qv_17 _qv_18) (mult _qv_17 _qv_19))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus _qv_20 (mult _qv_21 _qv_22))=(mult (plus _qv_20 _qv_21) (plus _qv_20 _qv_22))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_23 _qv_24))=(plus (succ _qv_23) (succ _qv_24))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_23 _qv_24))=(plus (succ _qv_24) (succ _qv_23))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (mult _qv_25 _qv_26))=(mult (succ _qv_25) (succ _qv_26))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (mult _qv_25 _qv_26))=(mult (succ _qv_26) (succ _qv_25))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((tri (plus _qv_27 _qv_28))=(plus (tri _qv_27) (tri _qv_28))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((tri (plus _qv_27 _qv_28))=(plus (tri _qv_28) (tri _qv_27))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((tri (mult _qv_29 _qv_30))=(mult (tri _qv_29) (tri _qv_30))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((tri (mult _qv_29 _qv_30))=(mult (tri _qv_30) (tri _qv_29))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((cubes (plus _qv_31 _qv_32))=(plus (cubes _qv_31) (cubes _qv_32))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((cubes (plus _qv_31 _qv_32))=(plus (cubes _qv_32) (cubes _qv_31))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((cubes (mult _qv_33 _qv_34))=(mult (cubes _qv_33) (cubes _qv_34))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((cubes (mult _qv_33 _qv_34))=(mult (cubes _qv_34) (cubes _qv_33))))
USE ASSUMPTION FAILED

  backtrack to: ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
  rewritten [15]: ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult (succ (plus _t_36 (succ _t_36))) _v_35)))
  Maximum recursion depth reached
CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_1 _qv_2)=(plus _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_3 _qv_4) _qv_5)=(plus _qv_3 (plus _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((mult _qv_6 _qv_7)=(mult _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((mult (mult _qv_8 _qv_9) _qv_10)=(mult _qv_8 (mult _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat)) ((tri (tri _qv_11))=_qv_11))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat)) ((cubes (cubes _qv_12))=_qv_12))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_14))=(nat-to-int _qv_14)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat)) ((nat-to-int (tri _qv_15))=(nat-to-int _qv_15)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat)) ((nat-to-int (cubes _qv_16))=(nat-to-int _qv_16)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((mult _qv_17 (plus _qv_18 _qv_19))=(plus (mult _qv_17 _qv_18) (mult _qv_17 _qv_19))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus _qv_20 (mult _qv_21 _qv_22))=(mult (plus _qv_20 _qv_21) (plus _qv_20 _qv_22))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_23 _qv_24))=(plus (succ _qv_23) (succ _qv_24))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_23 _qv_24))=(plus (succ _qv_24) (succ _qv_23))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (mult _qv_25 _qv_26))=(mult (succ _qv_25) (succ _qv_26))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (mult _qv_25 _qv_26))=(mult (succ _qv_26) (succ _qv_25))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((tri (plus _qv_27 _qv_28))=(plus (tri _qv_27) (tri _qv_28))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((tri (plus _qv_27 _qv_28))=(plus (tri _qv_28) (tri _qv_27))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((tri (mult _qv_29 _qv_30))=(mult (tri _qv_29) (tri _qv_30))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((tri (mult _qv_29 _qv_30))=(mult (tri _qv_30) (tri _qv_29))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((cubes (plus _qv_31 _qv_32))=(plus (cubes _qv_31) (cubes _qv_32))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((cubes (plus _qv_31 _qv_32))=(plus (cubes _qv_32) (cubes _qv_31))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((cubes (mult _qv_33 _qv_34))=(mult (cubes _qv_33) (cubes _qv_34))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((cubes (mult _qv_33 _qv_34))=(mult (cubes _qv_34) (cubes _qv_33))))
USE ASSUMPTION FAILED

  backtrack to: ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
  rewritten [15]: ([+    (nat-to-int (mult (plus _v_35 _v_35) _t_36))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
  Maximum recursion depth reached
CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_1 _qv_2)=(plus _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_3 _qv_4) _qv_5)=(plus _qv_3 (plus _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((mult _qv_6 _qv_7)=(mult _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((mult (mult _qv_8 _qv_9) _qv_10)=(mult _qv_8 (mult _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat)) ((tri (tri _qv_11))=_qv_11))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat)) ((cubes (cubes _qv_12))=_qv_12))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_14))=(nat-to-int _qv_14)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat)) ((nat-to-int (tri _qv_15))=(nat-to-int _qv_15)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat)) ((nat-to-int (cubes _qv_16))=(nat-to-int _qv_16)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((mult _qv_17 (plus _qv_18 _qv_19))=(plus (mult _qv_17 _qv_18) (mult _qv_17 _qv_19))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus _qv_20 (mult _qv_21 _qv_22))=(mult (plus _qv_20 _qv_21) (plus _qv_20 _qv_22))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_23 _qv_24))=(plus (succ _qv_23) (succ _qv_24))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_23 _qv_24))=(plus (succ _qv_24) (succ _qv_23))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (mult _qv_25 _qv_26))=(mult (succ _qv_25) (succ _qv_26))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (mult _qv_25 _qv_26))=(mult (succ _qv_26) (succ _qv_25))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((tri (plus _qv_27 _qv_28))=(plus (tri _qv_27) (tri _qv_28))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((tri (plus _qv_27 _qv_28))=(plus (tri _qv_28) (tri _qv_27))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((tri (mult _qv_29 _qv_30))=(mult (tri _qv_29) (tri _qv_30))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((tri (mult _qv_29 _qv_30))=(mult (tri _qv_30) (tri _qv_29))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((cubes (plus _qv_31 _qv_32))=(plus (cubes _qv_31) (cubes _qv_32))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((cubes (plus _qv_31 _qv_32))=(plus (cubes _qv_32) (cubes _qv_31))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((cubes (mult _qv_33 _qv_34))=(mult (cubes _qv_33) (cubes _qv_34))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((cubes (mult _qv_33 _qv_34))=(mult (cubes _qv_34) (cubes _qv_33))))
USE ASSUMPTION FAILED

  backtrack to: ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
  rewritten [17]: ([+    (nat-to-int (mult _v_35 (plus _t_36 _t_36)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
  Maximum recursion depth reached
CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_1 _qv_2)=(plus _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_3 _qv_4) _qv_5)=(plus _qv_3 (plus _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((mult _qv_6 _qv_7)=(mult _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((mult (mult _qv_8 _qv_9) _qv_10)=(mult _qv_8 (mult _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat)) ((tri (tri _qv_11))=_qv_11))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat)) ((cubes (cubes _qv_12))=_qv_12))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_14))=(nat-to-int _qv_14)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat)) ((nat-to-int (tri _qv_15))=(nat-to-int _qv_15)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat)) ((nat-to-int (cubes _qv_16))=(nat-to-int _qv_16)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((mult _qv_17 (plus _qv_18 _qv_19))=(plus (mult _qv_17 _qv_18) (mult _qv_17 _qv_19))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus _qv_20 (mult _qv_21 _qv_22))=(mult (plus _qv_20 _qv_21) (plus _qv_20 _qv_22))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_23 _qv_24))=(plus (succ _qv_23) (succ _qv_24))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_23 _qv_24))=(plus (succ _qv_24) (succ _qv_23))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (mult _qv_25 _qv_26))=(mult (succ _qv_25) (succ _qv_26))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (mult _qv_25 _qv_26))=(mult (succ _qv_26) (succ _qv_25))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((tri (plus _qv_27 _qv_28))=(plus (tri _qv_27) (tri _qv_28))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((tri (plus _qv_27 _qv_28))=(plus (tri _qv_28) (tri _qv_27))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((tri (mult _qv_29 _qv_30))=(mult (tri _qv_29) (tri _qv_30))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((tri (mult _qv_29 _qv_30))=(mult (tri _qv_30) (tri _qv_29))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((cubes (plus _qv_31 _qv_32))=(plus (cubes _qv_31) (cubes _qv_32))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((cubes (plus _qv_31 _qv_32))=(plus (cubes _qv_32) (cubes _qv_31))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((cubes (mult _qv_33 _qv_34))=(mult (cubes _qv_33) (cubes _qv_34))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((cubes (mult _qv_33 _qv_34))=(mult (cubes _qv_34) (cubes _qv_33))))
USE ASSUMPTION FAILED

  backtrack to: ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
  rewritten [2]: (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(2*(nat-to-int _v_35)))=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
  Maximum recursion depth reached
CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_1 _qv_2)=(plus _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_3 _qv_4) _qv_5)=(plus _qv_3 (plus _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((mult _qv_6 _qv_7)=(mult _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((mult (mult _qv_8 _qv_9) _qv_10)=(mult _qv_8 (mult _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat)) ((tri (tri _qv_11))=_qv_11))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat)) ((cubes (cubes _qv_12))=_qv_12))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_14))=(nat-to-int _qv_14)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat)) ((nat-to-int (tri _qv_15))=(nat-to-int _qv_15)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat)) ((nat-to-int (cubes _qv_16))=(nat-to-int _qv_16)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((mult _qv_17 (plus _qv_18 _qv_19))=(plus (mult _qv_17 _qv_18) (mult _qv_17 _qv_19))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus _qv_20 (mult _qv_21 _qv_22))=(mult (plus _qv_20 _qv_21) (plus _qv_20 _qv_22))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_23 _qv_24))=(plus (succ _qv_23) (succ _qv_24))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_23 _qv_24))=(plus (succ _qv_24) (succ _qv_23))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (mult _qv_25 _qv_26))=(mult (succ _qv_25) (succ _qv_26))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (mult _qv_25 _qv_26))=(mult (succ _qv_26) (succ _qv_25))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((tri (plus _qv_27 _qv_28))=(plus (tri _qv_27) (tri _qv_28))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((tri (plus _qv_27 _qv_28))=(plus (tri _qv_28) (tri _qv_27))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((tri (mult _qv_29 _qv_30))=(mult (tri _qv_29) (tri _qv_30))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((tri (mult _qv_29 _qv_30))=(mult (tri _qv_30) (tri _qv_29))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((cubes (plus _qv_31 _qv_32))=(plus (cubes _qv_31) (cubes _qv_32))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((cubes (plus _qv_31 _qv_32))=(plus (cubes _qv_32) (cubes _qv_31))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((cubes (mult _qv_33 _qv_34))=(mult (cubes _qv_33) (cubes _qv_34))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((cubes (mult _qv_33 _qv_34))=(mult (cubes _qv_34) (cubes _qv_33))))
USE ASSUMPTION FAILED

  backtrack to: ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
  rewritten [13]: ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
  Maximum recursion depth reached
CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_1 _qv_2)=(plus _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_3 _qv_4) _qv_5)=(plus _qv_3 (plus _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((mult _qv_6 _qv_7)=(mult _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((mult (mult _qv_8 _qv_9) _qv_10)=(mult _qv_8 (mult _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat)) ((tri (tri _qv_11))=_qv_11))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat)) ((cubes (cubes _qv_12))=_qv_12))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_14))=(nat-to-int _qv_14)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat)) ((nat-to-int (tri _qv_15))=(nat-to-int _qv_15)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat)) ((nat-to-int (cubes _qv_16))=(nat-to-int _qv_16)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((mult _qv_17 (plus _qv_18 _qv_19))=(plus (mult _qv_17 _qv_18) (mult _qv_17 _qv_19))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus _qv_20 (mult _qv_21 _qv_22))=(mult (plus _qv_20 _qv_21) (plus _qv_20 _qv_22))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_23 _qv_24))=(plus (succ _qv_23) (succ _qv_24))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_23 _qv_24))=(plus (succ _qv_24) (succ _qv_23))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (mult _qv_25 _qv_26))=(mult (succ _qv_25) (succ _qv_26))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (mult _qv_25 _qv_26))=(mult (succ _qv_26) (succ _qv_25))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((tri (plus _qv_27 _qv_28))=(plus (tri _qv_27) (tri _qv_28))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((tri (plus _qv_27 _qv_28))=(plus (tri _qv_28) (tri _qv_27))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((tri (mult _qv_29 _qv_30))=(mult (tri _qv_29) (tri _qv_30))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((tri (mult _qv_29 _qv_30))=(mult (tri _qv_30) (tri _qv_29))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((cubes (plus _qv_31 _qv_32))=(plus (cubes _qv_31) (cubes _qv_32))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((cubes (plus _qv_31 _qv_32))=(plus (cubes _qv_32) (cubes _qv_31))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((cubes (mult _qv_33 _qv_34))=(mult (cubes _qv_33) (cubes _qv_34))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((cubes (mult _qv_33 _qv_34))=(mult (cubes _qv_34) (cubes _qv_33))))
USE ASSUMPTION FAILED

  backtrack to: ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
  rewritten [15]: ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult (succ (plus _t_36 (succ _t_36))) _v_35)))
  Maximum recursion depth reached
CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_1 _qv_2)=(plus _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_3 _qv_4) _qv_5)=(plus _qv_3 (plus _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((mult _qv_6 _qv_7)=(mult _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((mult (mult _qv_8 _qv_9) _qv_10)=(mult _qv_8 (mult _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat)) ((tri (tri _qv_11))=_qv_11))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat)) ((cubes (cubes _qv_12))=_qv_12))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_14))=(nat-to-int _qv_14)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat)) ((nat-to-int (tri _qv_15))=(nat-to-int _qv_15)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat)) ((nat-to-int (cubes _qv_16))=(nat-to-int _qv_16)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((mult _qv_17 (plus _qv_18 _qv_19))=(plus (mult _qv_17 _qv_18) (mult _qv_17 _qv_19))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus _qv_20 (mult _qv_21 _qv_22))=(mult (plus _qv_20 _qv_21) (plus _qv_20 _qv_22))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_23 _qv_24))=(plus (succ _qv_23) (succ _qv_24))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_23 _qv_24))=(plus (succ _qv_24) (succ _qv_23))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (mult _qv_25 _qv_26))=(mult (succ _qv_25) (succ _qv_26))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (mult _qv_25 _qv_26))=(mult (succ _qv_26) (succ _qv_25))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((tri (plus _qv_27 _qv_28))=(plus (tri _qv_27) (tri _qv_28))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((tri (plus _qv_27 _qv_28))=(plus (tri _qv_28) (tri _qv_27))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((tri (mult _qv_29 _qv_30))=(mult (tri _qv_29) (tri _qv_30))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((tri (mult _qv_29 _qv_30))=(mult (tri _qv_30) (tri _qv_29))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((cubes (plus _qv_31 _qv_32))=(plus (cubes _qv_31) (cubes _qv_32))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((cubes (plus _qv_31 _qv_32))=(plus (cubes _qv_32) (cubes _qv_31))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((cubes (mult _qv_33 _qv_34))=(mult (cubes _qv_33) (cubes _qv_34))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((cubes (mult _qv_33 _qv_34))=(mult (cubes _qv_34) (cubes _qv_33))))
USE ASSUMPTION FAILED

  backtrack to: ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
  rewritten [15]: ([+    (nat-to-int (mult (plus _v_35 _v_35) _t_36))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
  Maximum recursion depth reached
CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_1 _qv_2)=(plus _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_3 _qv_4) _qv_5)=(plus _qv_3 (plus _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((mult _qv_6 _qv_7)=(mult _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((mult (mult _qv_8 _qv_9) _qv_10)=(mult _qv_8 (mult _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat)) ((tri (tri _qv_11))=_qv_11))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat)) ((cubes (cubes _qv_12))=_qv_12))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_14))=(nat-to-int _qv_14)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat)) ((nat-to-int (tri _qv_15))=(nat-to-int _qv_15)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat)) ((nat-to-int (cubes _qv_16))=(nat-to-int _qv_16)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((mult _qv_17 (plus _qv_18 _qv_19))=(plus (mult _qv_17 _qv_18) (mult _qv_17 _qv_19))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus _qv_20 (mult _qv_21 _qv_22))=(mult (plus _qv_20 _qv_21) (plus _qv_20 _qv_22))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_23 _qv_24))=(plus (succ _qv_23) (succ _qv_24))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_23 _qv_24))=(plus (succ _qv_24) (succ _qv_23))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (mult _qv_25 _qv_26))=(mult (succ _qv_25) (succ _qv_26))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (mult _qv_25 _qv_26))=(mult (succ _qv_26) (succ _qv_25))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((tri (plus _qv_27 _qv_28))=(plus (tri _qv_27) (tri _qv_28))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((tri (plus _qv_27 _qv_28))=(plus (tri _qv_28) (tri _qv_27))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((tri (mult _qv_29 _qv_30))=(mult (tri _qv_29) (tri _qv_30))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((tri (mult _qv_29 _qv_30))=(mult (tri _qv_30) (tri _qv_29))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((cubes (plus _qv_31 _qv_32))=(plus (cubes _qv_31) (cubes _qv_32))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((cubes (plus _qv_31 _qv_32))=(plus (cubes _qv_32) (cubes _qv_31))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((cubes (mult _qv_33 _qv_34))=(mult (cubes _qv_33) (cubes _qv_34))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((cubes (mult _qv_33 _qv_34))=(mult (cubes _qv_34) (cubes _qv_33))))
USE ASSUMPTION FAILED

  backtrack to: ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
  rewritten [17]: ([+    (nat-to-int (mult _v_35 (plus _t_36 _t_36)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
  Maximum recursion depth reached
CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_1 _qv_2)=(plus _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_3 _qv_4) _qv_5)=(plus _qv_3 (plus _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((mult _qv_6 _qv_7)=(mult _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((mult (mult _qv_8 _qv_9) _qv_10)=(mult _qv_8 (mult _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat)) ((tri (tri _qv_11))=_qv_11))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat)) ((cubes (cubes _qv_12))=_qv_12))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_14))=(nat-to-int _qv_14)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat)) ((nat-to-int (tri _qv_15))=(nat-to-int _qv_15)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat)) ((nat-to-int (cubes _qv_16))=(nat-to-int _qv_16)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((mult _qv_17 (plus _qv_18 _qv_19))=(plus (mult _qv_17 _qv_18) (mult _qv_17 _qv_19))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus _qv_20 (mult _qv_21 _qv_22))=(mult (plus _qv_20 _qv_21) (plus _qv_20 _qv_22))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_23 _qv_24))=(plus (succ _qv_23) (succ _qv_24))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_23 _qv_24))=(plus (succ _qv_24) (succ _qv_23))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (mult _qv_25 _qv_26))=(mult (succ _qv_25) (succ _qv_26))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (mult _qv_25 _qv_26))=(mult (succ _qv_26) (succ _qv_25))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((tri (plus _qv_27 _qv_28))=(plus (tri _qv_27) (tri _qv_28))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((tri (plus _qv_27 _qv_28))=(plus (tri _qv_28) (tri _qv_27))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((tri (mult _qv_29 _qv_30))=(mult (tri _qv_29) (tri _qv_30))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((tri (mult _qv_29 _qv_30))=(mult (tri _qv_30) (tri _qv_29))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((cubes (plus _qv_31 _qv_32))=(plus (cubes _qv_31) (cubes _qv_32))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((cubes (plus _qv_31 _qv_32))=(plus (cubes _qv_32) (cubes _qv_31))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((cubes (mult _qv_33 _qv_34))=(mult (cubes _qv_33) (cubes _qv_34))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((cubes (mult _qv_33 _qv_34))=(mult (cubes _qv_34) (cubes _qv_33))))
USE ASSUMPTION FAILED

  backtrack to: ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_1 _qv_2)=(plus _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_3 _qv_4) _qv_5)=(plus _qv_3 (plus _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((mult _qv_6 _qv_7)=(mult _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((mult (mult _qv_8 _qv_9) _qv_10)=(mult _qv_8 (mult _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat)) ((tri (tri _qv_11))=_qv_11))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat)) ((cubes (cubes _qv_12))=_qv_12))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_14))=(nat-to-int _qv_14)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat)) ((nat-to-int (tri _qv_15))=(nat-to-int _qv_15)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat)) ((nat-to-int (cubes _qv_16))=(nat-to-int _qv_16)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((mult _qv_17 (plus _qv_18 _qv_19))=(plus (mult _qv_17 _qv_18) (mult _qv_17 _qv_19))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus _qv_20 (mult _qv_21 _qv_22))=(mult (plus _qv_20 _qv_21) (plus _qv_20 _qv_22))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_23 _qv_24))=(plus (succ _qv_23) (succ _qv_24))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_23 _qv_24))=(plus (succ _qv_24) (succ _qv_23))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (mult _qv_25 _qv_26))=(mult (succ _qv_25) (succ _qv_26))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (mult _qv_25 _qv_26))=(mult (succ _qv_26) (succ _qv_25))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((tri (plus _qv_27 _qv_28))=(plus (tri _qv_27) (tri _qv_28))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((tri (plus _qv_27 _qv_28))=(plus (tri _qv_28) (tri _qv_27))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((tri (mult _qv_29 _qv_30))=(mult (tri _qv_29) (tri _qv_30))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((tri (mult _qv_29 _qv_30))=(mult (tri _qv_30) (tri _qv_29))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((cubes (plus _qv_31 _qv_32))=(plus (cubes _qv_31) (cubes _qv_32))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((cubes (plus _qv_31 _qv_32))=(plus (cubes _qv_32) (cubes _qv_31))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((cubes (mult _qv_33 _qv_34))=(mult (cubes _qv_33) (cubes _qv_34))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((cubes (mult _qv_33 _qv_34))=(mult (cubes _qv_34) (cubes _qv_33))))
USE ASSUMPTION FAILED

  backtrack to: ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
  rewritten [13]: ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
  rewritten [2]: (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(2*(nat-to-int _v_35)))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
  Maximum recursion depth reached
CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_1 _qv_2)=(plus _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_3 _qv_4) _qv_5)=(plus _qv_3 (plus _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((mult _qv_6 _qv_7)=(mult _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((mult (mult _qv_8 _qv_9) _qv_10)=(mult _qv_8 (mult _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat)) ((tri (tri _qv_11))=_qv_11))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat)) ((cubes (cubes _qv_12))=_qv_12))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_14))=(nat-to-int _qv_14)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat)) ((nat-to-int (tri _qv_15))=(nat-to-int _qv_15)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat)) ((nat-to-int (cubes _qv_16))=(nat-to-int _qv_16)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((mult _qv_17 (plus _qv_18 _qv_19))=(plus (mult _qv_17 _qv_18) (mult _qv_17 _qv_19))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus _qv_20 (mult _qv_21 _qv_22))=(mult (plus _qv_20 _qv_21) (plus _qv_20 _qv_22))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_23 _qv_24))=(plus (succ _qv_23) (succ _qv_24))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_23 _qv_24))=(plus (succ _qv_24) (succ _qv_23))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (mult _qv_25 _qv_26))=(mult (succ _qv_25) (succ _qv_26))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (mult _qv_25 _qv_26))=(mult (succ _qv_26) (succ _qv_25))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((tri (plus _qv_27 _qv_28))=(plus (tri _qv_27) (tri _qv_28))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((tri (plus _qv_27 _qv_28))=(plus (tri _qv_28) (tri _qv_27))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((tri (mult _qv_29 _qv_30))=(mult (tri _qv_29) (tri _qv_30))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((tri (mult _qv_29 _qv_30))=(mult (tri _qv_30) (tri _qv_29))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((cubes (plus _qv_31 _qv_32))=(plus (cubes _qv_31) (cubes _qv_32))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((cubes (plus _qv_31 _qv_32))=(plus (cubes _qv_32) (cubes _qv_31))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((cubes (mult _qv_33 _qv_34))=(mult (cubes _qv_33) (cubes _qv_34))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((cubes (mult _qv_33 _qv_34))=(mult (cubes _qv_34) (cubes _qv_33))))
USE ASSUMPTION FAILED

  backtrack to: ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
  rewritten [4]: ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (succ (plus _t_36 _t_36))))))
  Maximum recursion depth reached
CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_1 _qv_2)=(plus _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_3 _qv_4) _qv_5)=(plus _qv_3 (plus _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((mult _qv_6 _qv_7)=(mult _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((mult (mult _qv_8 _qv_9) _qv_10)=(mult _qv_8 (mult _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat)) ((tri (tri _qv_11))=_qv_11))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat)) ((cubes (cubes _qv_12))=_qv_12))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_14))=(nat-to-int _qv_14)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat)) ((nat-to-int (tri _qv_15))=(nat-to-int _qv_15)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat)) ((nat-to-int (cubes _qv_16))=(nat-to-int _qv_16)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((mult _qv_17 (plus _qv_18 _qv_19))=(plus (mult _qv_17 _qv_18) (mult _qv_17 _qv_19))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus _qv_20 (mult _qv_21 _qv_22))=(mult (plus _qv_20 _qv_21) (plus _qv_20 _qv_22))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_23 _qv_24))=(plus (succ _qv_23) (succ _qv_24))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_23 _qv_24))=(plus (succ _qv_24) (succ _qv_23))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (mult _qv_25 _qv_26))=(mult (succ _qv_25) (succ _qv_26))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (mult _qv_25 _qv_26))=(mult (succ _qv_26) (succ _qv_25))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((tri (plus _qv_27 _qv_28))=(plus (tri _qv_27) (tri _qv_28))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((tri (plus _qv_27 _qv_28))=(plus (tri _qv_28) (tri _qv_27))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((tri (mult _qv_29 _qv_30))=(mult (tri _qv_29) (tri _qv_30))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((tri (mult _qv_29 _qv_30))=(mult (tri _qv_30) (tri _qv_29))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((cubes (plus _qv_31 _qv_32))=(plus (cubes _qv_31) (cubes _qv_32))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((cubes (plus _qv_31 _qv_32))=(plus (cubes _qv_32) (cubes _qv_31))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((cubes (mult _qv_33 _qv_34))=(mult (cubes _qv_33) (cubes _qv_34))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((cubes (mult _qv_33 _qv_34))=(mult (cubes _qv_34) (cubes _qv_33))))
USE ASSUMPTION FAILED

  backtrack to: ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
  rewritten [13]: ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
  Maximum recursion depth reached
CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_1 _qv_2)=(plus _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_3 _qv_4) _qv_5)=(plus _qv_3 (plus _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((mult _qv_6 _qv_7)=(mult _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((mult (mult _qv_8 _qv_9) _qv_10)=(mult _qv_8 (mult _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat)) ((tri (tri _qv_11))=_qv_11))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat)) ((cubes (cubes _qv_12))=_qv_12))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_14))=(nat-to-int _qv_14)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat)) ((nat-to-int (tri _qv_15))=(nat-to-int _qv_15)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat)) ((nat-to-int (cubes _qv_16))=(nat-to-int _qv_16)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((mult _qv_17 (plus _qv_18 _qv_19))=(plus (mult _qv_17 _qv_18) (mult _qv_17 _qv_19))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus _qv_20 (mult _qv_21 _qv_22))=(mult (plus _qv_20 _qv_21) (plus _qv_20 _qv_22))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_23 _qv_24))=(plus (succ _qv_23) (succ _qv_24))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_23 _qv_24))=(plus (succ _qv_24) (succ _qv_23))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (mult _qv_25 _qv_26))=(mult (succ _qv_25) (succ _qv_26))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (mult _qv_25 _qv_26))=(mult (succ _qv_26) (succ _qv_25))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((tri (plus _qv_27 _qv_28))=(plus (tri _qv_27) (tri _qv_28))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((tri (plus _qv_27 _qv_28))=(plus (tri _qv_28) (tri _qv_27))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((tri (mult _qv_29 _qv_30))=(mult (tri _qv_29) (tri _qv_30))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((tri (mult _qv_29 _qv_30))=(mult (tri _qv_30) (tri _qv_29))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((cubes (plus _qv_31 _qv_32))=(plus (cubes _qv_31) (cubes _qv_32))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((cubes (plus _qv_31 _qv_32))=(plus (cubes _qv_32) (cubes _qv_31))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((cubes (mult _qv_33 _qv_34))=(mult (cubes _qv_33) (cubes _qv_34))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((cubes (mult _qv_33 _qv_34))=(mult (cubes _qv_34) (cubes _qv_33))))
USE ASSUMPTION FAILED

  backtrack to: ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
  rewritten [15]: ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult (succ (plus (succ _t_36) _t_36)) _v_35)))
  Maximum recursion depth reached
CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_1 _qv_2)=(plus _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_3 _qv_4) _qv_5)=(plus _qv_3 (plus _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((mult _qv_6 _qv_7)=(mult _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((mult (mult _qv_8 _qv_9) _qv_10)=(mult _qv_8 (mult _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat)) ((tri (tri _qv_11))=_qv_11))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat)) ((cubes (cubes _qv_12))=_qv_12))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_14))=(nat-to-int _qv_14)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat)) ((nat-to-int (tri _qv_15))=(nat-to-int _qv_15)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat)) ((nat-to-int (cubes _qv_16))=(nat-to-int _qv_16)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((mult _qv_17 (plus _qv_18 _qv_19))=(plus (mult _qv_17 _qv_18) (mult _qv_17 _qv_19))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus _qv_20 (mult _qv_21 _qv_22))=(mult (plus _qv_20 _qv_21) (plus _qv_20 _qv_22))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_23 _qv_24))=(plus (succ _qv_23) (succ _qv_24))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_23 _qv_24))=(plus (succ _qv_24) (succ _qv_23))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (mult _qv_25 _qv_26))=(mult (succ _qv_25) (succ _qv_26))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (mult _qv_25 _qv_26))=(mult (succ _qv_26) (succ _qv_25))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((tri (plus _qv_27 _qv_28))=(plus (tri _qv_27) (tri _qv_28))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((tri (plus _qv_27 _qv_28))=(plus (tri _qv_28) (tri _qv_27))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((tri (mult _qv_29 _qv_30))=(mult (tri _qv_29) (tri _qv_30))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((tri (mult _qv_29 _qv_30))=(mult (tri _qv_30) (tri _qv_29))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((cubes (plus _qv_31 _qv_32))=(plus (cubes _qv_31) (cubes _qv_32))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((cubes (plus _qv_31 _qv_32))=(plus (cubes _qv_32) (cubes _qv_31))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((cubes (mult _qv_33 _qv_34))=(mult (cubes _qv_33) (cubes _qv_34))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((cubes (mult _qv_33 _qv_34))=(mult (cubes _qv_34) (cubes _qv_33))))
USE ASSUMPTION FAILED

  backtrack to: ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
  rewritten [15]: ([+    (nat-to-int (mult (plus _v_35 _v_35) _t_36))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
  Maximum recursion depth reached
CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_1 _qv_2)=(plus _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_3 _qv_4) _qv_5)=(plus _qv_3 (plus _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((mult _qv_6 _qv_7)=(mult _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((mult (mult _qv_8 _qv_9) _qv_10)=(mult _qv_8 (mult _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat)) ((tri (tri _qv_11))=_qv_11))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat)) ((cubes (cubes _qv_12))=_qv_12))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_14))=(nat-to-int _qv_14)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat)) ((nat-to-int (tri _qv_15))=(nat-to-int _qv_15)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat)) ((nat-to-int (cubes _qv_16))=(nat-to-int _qv_16)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((mult _qv_17 (plus _qv_18 _qv_19))=(plus (mult _qv_17 _qv_18) (mult _qv_17 _qv_19))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus _qv_20 (mult _qv_21 _qv_22))=(mult (plus _qv_20 _qv_21) (plus _qv_20 _qv_22))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_23 _qv_24))=(plus (succ _qv_23) (succ _qv_24))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_23 _qv_24))=(plus (succ _qv_24) (succ _qv_23))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (mult _qv_25 _qv_26))=(mult (succ _qv_25) (succ _qv_26))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (mult _qv_25 _qv_26))=(mult (succ _qv_26) (succ _qv_25))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((tri (plus _qv_27 _qv_28))=(plus (tri _qv_27) (tri _qv_28))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((tri (plus _qv_27 _qv_28))=(plus (tri _qv_28) (tri _qv_27))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((tri (mult _qv_29 _qv_30))=(mult (tri _qv_29) (tri _qv_30))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((tri (mult _qv_29 _qv_30))=(mult (tri _qv_30) (tri _qv_29))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((cubes (plus _qv_31 _qv_32))=(plus (cubes _qv_31) (cubes _qv_32))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((cubes (plus _qv_31 _qv_32))=(plus (cubes _qv_32) (cubes _qv_31))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((cubes (mult _qv_33 _qv_34))=(mult (cubes _qv_33) (cubes _qv_34))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((cubes (mult _qv_33 _qv_34))=(mult (cubes _qv_34) (cubes _qv_33))))
USE ASSUMPTION FAILED

  backtrack to: ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
  rewritten [17]: ([+    (nat-to-int (mult _v_35 (plus _t_36 _t_36)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
  Maximum recursion depth reached
CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_1 _qv_2)=(plus _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_3 _qv_4) _qv_5)=(plus _qv_3 (plus _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((mult _qv_6 _qv_7)=(mult _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((mult (mult _qv_8 _qv_9) _qv_10)=(mult _qv_8 (mult _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat)) ((tri (tri _qv_11))=_qv_11))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat)) ((cubes (cubes _qv_12))=_qv_12))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_14))=(nat-to-int _qv_14)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat)) ((nat-to-int (tri _qv_15))=(nat-to-int _qv_15)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat)) ((nat-to-int (cubes _qv_16))=(nat-to-int _qv_16)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((mult _qv_17 (plus _qv_18 _qv_19))=(plus (mult _qv_17 _qv_18) (mult _qv_17 _qv_19))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus _qv_20 (mult _qv_21 _qv_22))=(mult (plus _qv_20 _qv_21) (plus _qv_20 _qv_22))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_23 _qv_24))=(plus (succ _qv_23) (succ _qv_24))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_23 _qv_24))=(plus (succ _qv_24) (succ _qv_23))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (mult _qv_25 _qv_26))=(mult (succ _qv_25) (succ _qv_26))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (mult _qv_25 _qv_26))=(mult (succ _qv_26) (succ _qv_25))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((tri (plus _qv_27 _qv_28))=(plus (tri _qv_27) (tri _qv_28))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((tri (plus _qv_27 _qv_28))=(plus (tri _qv_28) (tri _qv_27))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((tri (mult _qv_29 _qv_30))=(mult (tri _qv_29) (tri _qv_30))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((tri (mult _qv_29 _qv_30))=(mult (tri _qv_30) (tri _qv_29))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((cubes (plus _qv_31 _qv_32))=(plus (cubes _qv_31) (cubes _qv_32))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((cubes (plus _qv_31 _qv_32))=(plus (cubes _qv_32) (cubes _qv_31))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((cubes (mult _qv_33 _qv_34))=(mult (cubes _qv_33) (cubes _qv_34))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((cubes (mult _qv_33 _qv_34))=(mult (cubes _qv_34) (cubes _qv_33))))
USE ASSUMPTION FAILED

  backtrack to: ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
  rewritten [2]: (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(2*(nat-to-int _v_35)))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
  Maximum recursion depth reached
CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_1 _qv_2)=(plus _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_3 _qv_4) _qv_5)=(plus _qv_3 (plus _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((mult _qv_6 _qv_7)=(mult _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((mult (mult _qv_8 _qv_9) _qv_10)=(mult _qv_8 (mult _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat)) ((tri (tri _qv_11))=_qv_11))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat)) ((cubes (cubes _qv_12))=_qv_12))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_14))=(nat-to-int _qv_14)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat)) ((nat-to-int (tri _qv_15))=(nat-to-int _qv_15)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat)) ((nat-to-int (cubes _qv_16))=(nat-to-int _qv_16)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((mult _qv_17 (plus _qv_18 _qv_19))=(plus (mult _qv_17 _qv_18) (mult _qv_17 _qv_19))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus _qv_20 (mult _qv_21 _qv_22))=(mult (plus _qv_20 _qv_21) (plus _qv_20 _qv_22))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_23 _qv_24))=(plus (succ _qv_23) (succ _qv_24))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_23 _qv_24))=(plus (succ _qv_24) (succ _qv_23))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (mult _qv_25 _qv_26))=(mult (succ _qv_25) (succ _qv_26))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (mult _qv_25 _qv_26))=(mult (succ _qv_26) (succ _qv_25))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((tri (plus _qv_27 _qv_28))=(plus (tri _qv_27) (tri _qv_28))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((tri (plus _qv_27 _qv_28))=(plus (tri _qv_28) (tri _qv_27))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((tri (mult _qv_29 _qv_30))=(mult (tri _qv_29) (tri _qv_30))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((tri (mult _qv_29 _qv_30))=(mult (tri _qv_30) (tri _qv_29))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((cubes (plus _qv_31 _qv_32))=(plus (cubes _qv_31) (cubes _qv_32))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((cubes (plus _qv_31 _qv_32))=(plus (cubes _qv_32) (cubes _qv_31))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((cubes (mult _qv_33 _qv_34))=(mult (cubes _qv_33) (cubes _qv_34))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((cubes (mult _qv_33 _qv_34))=(mult (cubes _qv_34) (cubes _qv_33))))
USE ASSUMPTION FAILED

  backtrack to: ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
  rewritten [4]: ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (succ (plus _t_36 _t_36))))))
  Maximum recursion depth reached
CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_1 _qv_2)=(plus _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_3 _qv_4) _qv_5)=(plus _qv_3 (plus _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((mult _qv_6 _qv_7)=(mult _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((mult (mult _qv_8 _qv_9) _qv_10)=(mult _qv_8 (mult _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat)) ((tri (tri _qv_11))=_qv_11))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat)) ((cubes (cubes _qv_12))=_qv_12))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_14))=(nat-to-int _qv_14)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat)) ((nat-to-int (tri _qv_15))=(nat-to-int _qv_15)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat)) ((nat-to-int (cubes _qv_16))=(nat-to-int _qv_16)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((mult _qv_17 (plus _qv_18 _qv_19))=(plus (mult _qv_17 _qv_18) (mult _qv_17 _qv_19))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus _qv_20 (mult _qv_21 _qv_22))=(mult (plus _qv_20 _qv_21) (plus _qv_20 _qv_22))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_23 _qv_24))=(plus (succ _qv_23) (succ _qv_24))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_23 _qv_24))=(plus (succ _qv_24) (succ _qv_23))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (mult _qv_25 _qv_26))=(mult (succ _qv_25) (succ _qv_26))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (mult _qv_25 _qv_26))=(mult (succ _qv_26) (succ _qv_25))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((tri (plus _qv_27 _qv_28))=(plus (tri _qv_27) (tri _qv_28))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((tri (plus _qv_27 _qv_28))=(plus (tri _qv_28) (tri _qv_27))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((tri (mult _qv_29 _qv_30))=(mult (tri _qv_29) (tri _qv_30))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((tri (mult _qv_29 _qv_30))=(mult (tri _qv_30) (tri _qv_29))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((cubes (plus _qv_31 _qv_32))=(plus (cubes _qv_31) (cubes _qv_32))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((cubes (plus _qv_31 _qv_32))=(plus (cubes _qv_32) (cubes _qv_31))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((cubes (mult _qv_33 _qv_34))=(mult (cubes _qv_33) (cubes _qv_34))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((cubes (mult _qv_33 _qv_34))=(mult (cubes _qv_34) (cubes _qv_33))))
USE ASSUMPTION FAILED

  backtrack to: ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
  rewritten [13]: ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
  Maximum recursion depth reached
CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_1 _qv_2)=(plus _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_3 _qv_4) _qv_5)=(plus _qv_3 (plus _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((mult _qv_6 _qv_7)=(mult _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((mult (mult _qv_8 _qv_9) _qv_10)=(mult _qv_8 (mult _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat)) ((tri (tri _qv_11))=_qv_11))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat)) ((cubes (cubes _qv_12))=_qv_12))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_14))=(nat-to-int _qv_14)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat)) ((nat-to-int (tri _qv_15))=(nat-to-int _qv_15)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat)) ((nat-to-int (cubes _qv_16))=(nat-to-int _qv_16)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((mult _qv_17 (plus _qv_18 _qv_19))=(plus (mult _qv_17 _qv_18) (mult _qv_17 _qv_19))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus _qv_20 (mult _qv_21 _qv_22))=(mult (plus _qv_20 _qv_21) (plus _qv_20 _qv_22))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_23 _qv_24))=(plus (succ _qv_23) (succ _qv_24))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_23 _qv_24))=(plus (succ _qv_24) (succ _qv_23))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (mult _qv_25 _qv_26))=(mult (succ _qv_25) (succ _qv_26))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (mult _qv_25 _qv_26))=(mult (succ _qv_26) (succ _qv_25))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((tri (plus _qv_27 _qv_28))=(plus (tri _qv_27) (tri _qv_28))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((tri (plus _qv_27 _qv_28))=(plus (tri _qv_28) (tri _qv_27))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((tri (mult _qv_29 _qv_30))=(mult (tri _qv_29) (tri _qv_30))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((tri (mult _qv_29 _qv_30))=(mult (tri _qv_30) (tri _qv_29))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((cubes (plus _qv_31 _qv_32))=(plus (cubes _qv_31) (cubes _qv_32))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((cubes (plus _qv_31 _qv_32))=(plus (cubes _qv_32) (cubes _qv_31))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((cubes (mult _qv_33 _qv_34))=(mult (cubes _qv_33) (cubes _qv_34))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((cubes (mult _qv_33 _qv_34))=(mult (cubes _qv_34) (cubes _qv_33))))
USE ASSUMPTION FAILED

  backtrack to: ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
  rewritten [15]: ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult (succ (plus (succ _t_36) _t_36)) _v_35)))
  Maximum recursion depth reached
CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_1 _qv_2)=(plus _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_3 _qv_4) _qv_5)=(plus _qv_3 (plus _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((mult _qv_6 _qv_7)=(mult _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((mult (mult _qv_8 _qv_9) _qv_10)=(mult _qv_8 (mult _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat)) ((tri (tri _qv_11))=_qv_11))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat)) ((cubes (cubes _qv_12))=_qv_12))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_14))=(nat-to-int _qv_14)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat)) ((nat-to-int (tri _qv_15))=(nat-to-int _qv_15)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat)) ((nat-to-int (cubes _qv_16))=(nat-to-int _qv_16)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((mult _qv_17 (plus _qv_18 _qv_19))=(plus (mult _qv_17 _qv_18) (mult _qv_17 _qv_19))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus _qv_20 (mult _qv_21 _qv_22))=(mult (plus _qv_20 _qv_21) (plus _qv_20 _qv_22))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_23 _qv_24))=(plus (succ _qv_23) (succ _qv_24))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_23 _qv_24))=(plus (succ _qv_24) (succ _qv_23))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (mult _qv_25 _qv_26))=(mult (succ _qv_25) (succ _qv_26))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (mult _qv_25 _qv_26))=(mult (succ _qv_26) (succ _qv_25))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((tri (plus _qv_27 _qv_28))=(plus (tri _qv_27) (tri _qv_28))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((tri (plus _qv_27 _qv_28))=(plus (tri _qv_28) (tri _qv_27))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((tri (mult _qv_29 _qv_30))=(mult (tri _qv_29) (tri _qv_30))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((tri (mult _qv_29 _qv_30))=(mult (tri _qv_30) (tri _qv_29))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((cubes (plus _qv_31 _qv_32))=(plus (cubes _qv_31) (cubes _qv_32))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((cubes (plus _qv_31 _qv_32))=(plus (cubes _qv_32) (cubes _qv_31))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((cubes (mult _qv_33 _qv_34))=(mult (cubes _qv_33) (cubes _qv_34))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((cubes (mult _qv_33 _qv_34))=(mult (cubes _qv_34) (cubes _qv_33))))
USE ASSUMPTION FAILED

  backtrack to: ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
  rewritten [15]: ([+    (nat-to-int (mult (plus _v_35 _v_35) _t_36))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
  Maximum recursion depth reached
CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_1 _qv_2)=(plus _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_3 _qv_4) _qv_5)=(plus _qv_3 (plus _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((mult _qv_6 _qv_7)=(mult _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((mult (mult _qv_8 _qv_9) _qv_10)=(mult _qv_8 (mult _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat)) ((tri (tri _qv_11))=_qv_11))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat)) ((cubes (cubes _qv_12))=_qv_12))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_14))=(nat-to-int _qv_14)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat)) ((nat-to-int (tri _qv_15))=(nat-to-int _qv_15)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat)) ((nat-to-int (cubes _qv_16))=(nat-to-int _qv_16)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((mult _qv_17 (plus _qv_18 _qv_19))=(plus (mult _qv_17 _qv_18) (mult _qv_17 _qv_19))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus _qv_20 (mult _qv_21 _qv_22))=(mult (plus _qv_20 _qv_21) (plus _qv_20 _qv_22))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_23 _qv_24))=(plus (succ _qv_23) (succ _qv_24))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_23 _qv_24))=(plus (succ _qv_24) (succ _qv_23))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (mult _qv_25 _qv_26))=(mult (succ _qv_25) (succ _qv_26))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (mult _qv_25 _qv_26))=(mult (succ _qv_26) (succ _qv_25))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((tri (plus _qv_27 _qv_28))=(plus (tri _qv_27) (tri _qv_28))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((tri (plus _qv_27 _qv_28))=(plus (tri _qv_28) (tri _qv_27))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((tri (mult _qv_29 _qv_30))=(mult (tri _qv_29) (tri _qv_30))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((tri (mult _qv_29 _qv_30))=(mult (tri _qv_30) (tri _qv_29))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((cubes (plus _qv_31 _qv_32))=(plus (cubes _qv_31) (cubes _qv_32))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((cubes (plus _qv_31 _qv_32))=(plus (cubes _qv_32) (cubes _qv_31))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((cubes (mult _qv_33 _qv_34))=(mult (cubes _qv_33) (cubes _qv_34))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((cubes (mult _qv_33 _qv_34))=(mult (cubes _qv_34) (cubes _qv_33))))
USE ASSUMPTION FAILED

  backtrack to: ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
  rewritten [17]: ([+    (nat-to-int (mult _v_35 (plus _t_36 _t_36)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
  Maximum recursion depth reached
CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_1 _qv_2)=(plus _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_3 _qv_4) _qv_5)=(plus _qv_3 (plus _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((mult _qv_6 _qv_7)=(mult _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((mult (mult _qv_8 _qv_9) _qv_10)=(mult _qv_8 (mult _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat)) ((tri (tri _qv_11))=_qv_11))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat)) ((cubes (cubes _qv_12))=_qv_12))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_14))=(nat-to-int _qv_14)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat)) ((nat-to-int (tri _qv_15))=(nat-to-int _qv_15)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat)) ((nat-to-int (cubes _qv_16))=(nat-to-int _qv_16)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((mult _qv_17 (plus _qv_18 _qv_19))=(plus (mult _qv_17 _qv_18) (mult _qv_17 _qv_19))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus _qv_20 (mult _qv_21 _qv_22))=(mult (plus _qv_20 _qv_21) (plus _qv_20 _qv_22))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_23 _qv_24))=(plus (succ _qv_23) (succ _qv_24))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_23 _qv_24))=(plus (succ _qv_24) (succ _qv_23))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (mult _qv_25 _qv_26))=(mult (succ _qv_25) (succ _qv_26))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (mult _qv_25 _qv_26))=(mult (succ _qv_26) (succ _qv_25))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((tri (plus _qv_27 _qv_28))=(plus (tri _qv_27) (tri _qv_28))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((tri (plus _qv_27 _qv_28))=(plus (tri _qv_28) (tri _qv_27))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((tri (mult _qv_29 _qv_30))=(mult (tri _qv_29) (tri _qv_30))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((tri (mult _qv_29 _qv_30))=(mult (tri _qv_30) (tri _qv_29))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((cubes (plus _qv_31 _qv_32))=(plus (cubes _qv_31) (cubes _qv_32))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((cubes (plus _qv_31 _qv_32))=(plus (cubes _qv_32) (cubes _qv_31))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((cubes (mult _qv_33 _qv_34))=(mult (cubes _qv_33) (cubes _qv_34))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((cubes (mult _qv_33 _qv_34))=(mult (cubes _qv_34) (cubes _qv_33))))
USE ASSUMPTION FAILED

  backtrack to: ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_1 _qv_2)=(plus _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_3 _qv_4) _qv_5)=(plus _qv_3 (plus _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((mult _qv_6 _qv_7)=(mult _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((mult (mult _qv_8 _qv_9) _qv_10)=(mult _qv_8 (mult _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat)) ((tri (tri _qv_11))=_qv_11))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat)) ((cubes (cubes _qv_12))=_qv_12))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_14))=(nat-to-int _qv_14)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat)) ((nat-to-int (tri _qv_15))=(nat-to-int _qv_15)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat)) ((nat-to-int (cubes _qv_16))=(nat-to-int _qv_16)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((mult _qv_17 (plus _qv_18 _qv_19))=(plus (mult _qv_17 _qv_18) (mult _qv_17 _qv_19))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus _qv_20 (mult _qv_21 _qv_22))=(mult (plus _qv_20 _qv_21) (plus _qv_20 _qv_22))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_23 _qv_24))=(plus (succ _qv_23) (succ _qv_24))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_23 _qv_24))=(plus (succ _qv_24) (succ _qv_23))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (mult _qv_25 _qv_26))=(mult (succ _qv_25) (succ _qv_26))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (mult _qv_25 _qv_26))=(mult (succ _qv_26) (succ _qv_25))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((tri (plus _qv_27 _qv_28))=(plus (tri _qv_27) (tri _qv_28))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((tri (plus _qv_27 _qv_28))=(plus (tri _qv_28) (tri _qv_27))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((tri (mult _qv_29 _qv_30))=(mult (tri _qv_29) (tri _qv_30))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((tri (mult _qv_29 _qv_30))=(mult (tri _qv_30) (tri _qv_29))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((cubes (plus _qv_31 _qv_32))=(plus (cubes _qv_31) (cubes _qv_32))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((cubes (plus _qv_31 _qv_32))=(plus (cubes _qv_32) (cubes _qv_31))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((cubes (mult _qv_33 _qv_34))=(mult (cubes _qv_33) (cubes _qv_34))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((cubes (mult _qv_33 _qv_34))=(mult (cubes _qv_34) (cubes _qv_33))))
USE ASSUMPTION FAILED

  backtrack to: ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
  rewritten [15]: ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult (succ (plus _t_36 (succ _t_36))) _v_35)))
  rewritten [2]: (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(2*(nat-to-int _v_35)))=(nat-to-int (mult (succ (plus _t_36 (succ _t_36))) _v_35)))
  Maximum recursion depth reached
CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult (succ (plus _t_36 (succ _t_36))) _v_35)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult (succ (plus _t_36 (succ _t_36))) _v_35)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_1 _qv_2)=(plus _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult (succ (plus _t_36 (succ _t_36))) _v_35)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_3 _qv_4) _qv_5)=(plus _qv_3 (plus _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult (succ (plus _t_36 (succ _t_36))) _v_35)))
NOW TESTING (forall ((Nat) (Nat)) ((mult _qv_6 _qv_7)=(mult _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult (succ (plus _t_36 (succ _t_36))) _v_35)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((mult (mult _qv_8 _qv_9) _qv_10)=(mult _qv_8 (mult _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult (succ (plus _t_36 (succ _t_36))) _v_35)))
NOW TESTING (forall ((Nat)) ((tri (tri _qv_11))=_qv_11))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult (succ (plus _t_36 (succ _t_36))) _v_35)))
NOW TESTING (forall ((Nat)) ((cubes (cubes _qv_12))=_qv_12))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult (succ (plus _t_36 (succ _t_36))) _v_35)))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult (succ (plus _t_36 (succ _t_36))) _v_35)))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_14))=(nat-to-int _qv_14)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult (succ (plus _t_36 (succ _t_36))) _v_35)))
NOW TESTING (forall ((Nat)) ((nat-to-int (tri _qv_15))=(nat-to-int _qv_15)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult (succ (plus _t_36 (succ _t_36))) _v_35)))
NOW TESTING (forall ((Nat)) ((nat-to-int (cubes _qv_16))=(nat-to-int _qv_16)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult (succ (plus _t_36 (succ _t_36))) _v_35)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((mult _qv_17 (plus _qv_18 _qv_19))=(plus (mult _qv_17 _qv_18) (mult _qv_17 _qv_19))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult (succ (plus _t_36 (succ _t_36))) _v_35)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus _qv_20 (mult _qv_21 _qv_22))=(mult (plus _qv_20 _qv_21) (plus _qv_20 _qv_22))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult (succ (plus _t_36 (succ _t_36))) _v_35)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_23 _qv_24))=(plus (succ _qv_23) (succ _qv_24))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult (succ (plus _t_36 (succ _t_36))) _v_35)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_23 _qv_24))=(plus (succ _qv_24) (succ _qv_23))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult (succ (plus _t_36 (succ _t_36))) _v_35)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (mult _qv_25 _qv_26))=(mult (succ _qv_25) (succ _qv_26))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult (succ (plus _t_36 (succ _t_36))) _v_35)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (mult _qv_25 _qv_26))=(mult (succ _qv_26) (succ _qv_25))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult (succ (plus _t_36 (succ _t_36))) _v_35)))
NOW TESTING (forall ((Nat) (Nat)) ((tri (plus _qv_27 _qv_28))=(plus (tri _qv_27) (tri _qv_28))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult (succ (plus _t_36 (succ _t_36))) _v_35)))
NOW TESTING (forall ((Nat) (Nat)) ((tri (plus _qv_27 _qv_28))=(plus (tri _qv_28) (tri _qv_27))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult (succ (plus _t_36 (succ _t_36))) _v_35)))
NOW TESTING (forall ((Nat) (Nat)) ((tri (mult _qv_29 _qv_30))=(mult (tri _qv_29) (tri _qv_30))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult (succ (plus _t_36 (succ _t_36))) _v_35)))
NOW TESTING (forall ((Nat) (Nat)) ((tri (mult _qv_29 _qv_30))=(mult (tri _qv_30) (tri _qv_29))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult (succ (plus _t_36 (succ _t_36))) _v_35)))
NOW TESTING (forall ((Nat) (Nat)) ((cubes (plus _qv_31 _qv_32))=(plus (cubes _qv_31) (cubes _qv_32))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult (succ (plus _t_36 (succ _t_36))) _v_35)))
NOW TESTING (forall ((Nat) (Nat)) ((cubes (plus _qv_31 _qv_32))=(plus (cubes _qv_32) (cubes _qv_31))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult (succ (plus _t_36 (succ _t_36))) _v_35)))
NOW TESTING (forall ((Nat) (Nat)) ((cubes (mult _qv_33 _qv_34))=(mult (cubes _qv_33) (cubes _qv_34))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult (succ (plus _t_36 (succ _t_36))) _v_35)))
NOW TESTING (forall ((Nat) (Nat)) ((cubes (mult _qv_33 _qv_34))=(mult (cubes _qv_34) (cubes _qv_33))))
USE ASSUMPTION FAILED

  backtrack to: ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult (succ (plus _t_36 (succ _t_36))) _v_35)))
  rewritten [6]: ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (plus (mult (plus _t_36 (succ _t_36)) _v_35) _v_35)))
  Maximum recursion depth reached
CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult (succ (plus _t_36 (succ _t_36))) _v_35)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult (succ (plus _t_36 (succ _t_36))) _v_35)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_1 _qv_2)=(plus _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult (succ (plus _t_36 (succ _t_36))) _v_35)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_3 _qv_4) _qv_5)=(plus _qv_3 (plus _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult (succ (plus _t_36 (succ _t_36))) _v_35)))
NOW TESTING (forall ((Nat) (Nat)) ((mult _qv_6 _qv_7)=(mult _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult (succ (plus _t_36 (succ _t_36))) _v_35)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((mult (mult _qv_8 _qv_9) _qv_10)=(mult _qv_8 (mult _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult (succ (plus _t_36 (succ _t_36))) _v_35)))
NOW TESTING (forall ((Nat)) ((tri (tri _qv_11))=_qv_11))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult (succ (plus _t_36 (succ _t_36))) _v_35)))
NOW TESTING (forall ((Nat)) ((cubes (cubes _qv_12))=_qv_12))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult (succ (plus _t_36 (succ _t_36))) _v_35)))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult (succ (plus _t_36 (succ _t_36))) _v_35)))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_14))=(nat-to-int _qv_14)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult (succ (plus _t_36 (succ _t_36))) _v_35)))
NOW TESTING (forall ((Nat)) ((nat-to-int (tri _qv_15))=(nat-to-int _qv_15)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult (succ (plus _t_36 (succ _t_36))) _v_35)))
NOW TESTING (forall ((Nat)) ((nat-to-int (cubes _qv_16))=(nat-to-int _qv_16)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult (succ (plus _t_36 (succ _t_36))) _v_35)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((mult _qv_17 (plus _qv_18 _qv_19))=(plus (mult _qv_17 _qv_18) (mult _qv_17 _qv_19))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult (succ (plus _t_36 (succ _t_36))) _v_35)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus _qv_20 (mult _qv_21 _qv_22))=(mult (plus _qv_20 _qv_21) (plus _qv_20 _qv_22))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult (succ (plus _t_36 (succ _t_36))) _v_35)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_23 _qv_24))=(plus (succ _qv_23) (succ _qv_24))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult (succ (plus _t_36 (succ _t_36))) _v_35)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_23 _qv_24))=(plus (succ _qv_24) (succ _qv_23))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult (succ (plus _t_36 (succ _t_36))) _v_35)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (mult _qv_25 _qv_26))=(mult (succ _qv_25) (succ _qv_26))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult (succ (plus _t_36 (succ _t_36))) _v_35)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (mult _qv_25 _qv_26))=(mult (succ _qv_26) (succ _qv_25))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult (succ (plus _t_36 (succ _t_36))) _v_35)))
NOW TESTING (forall ((Nat) (Nat)) ((tri (plus _qv_27 _qv_28))=(plus (tri _qv_27) (tri _qv_28))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult (succ (plus _t_36 (succ _t_36))) _v_35)))
NOW TESTING (forall ((Nat) (Nat)) ((tri (plus _qv_27 _qv_28))=(plus (tri _qv_28) (tri _qv_27))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult (succ (plus _t_36 (succ _t_36))) _v_35)))
NOW TESTING (forall ((Nat) (Nat)) ((tri (mult _qv_29 _qv_30))=(mult (tri _qv_29) (tri _qv_30))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult (succ (plus _t_36 (succ _t_36))) _v_35)))
NOW TESTING (forall ((Nat) (Nat)) ((tri (mult _qv_29 _qv_30))=(mult (tri _qv_30) (tri _qv_29))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult (succ (plus _t_36 (succ _t_36))) _v_35)))
NOW TESTING (forall ((Nat) (Nat)) ((cubes (plus _qv_31 _qv_32))=(plus (cubes _qv_31) (cubes _qv_32))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult (succ (plus _t_36 (succ _t_36))) _v_35)))
NOW TESTING (forall ((Nat) (Nat)) ((cubes (plus _qv_31 _qv_32))=(plus (cubes _qv_32) (cubes _qv_31))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult (succ (plus _t_36 (succ _t_36))) _v_35)))
NOW TESTING (forall ((Nat) (Nat)) ((cubes (mult _qv_33 _qv_34))=(mult (cubes _qv_33) (cubes _qv_34))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult (succ (plus _t_36 (succ _t_36))) _v_35)))
NOW TESTING (forall ((Nat) (Nat)) ((cubes (mult _qv_33 _qv_34))=(mult (cubes _qv_34) (cubes _qv_33))))
USE ASSUMPTION FAILED

  backtrack to: ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult (succ (plus _t_36 (succ _t_36))) _v_35)))
  rewritten [13]: ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult (succ (plus (succ _t_36) _t_36)) _v_35)))
  Maximum recursion depth reached
CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult (succ (plus _t_36 (succ _t_36))) _v_35)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult (succ (plus _t_36 (succ _t_36))) _v_35)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_1 _qv_2)=(plus _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult (succ (plus _t_36 (succ _t_36))) _v_35)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_3 _qv_4) _qv_5)=(plus _qv_3 (plus _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult (succ (plus _t_36 (succ _t_36))) _v_35)))
NOW TESTING (forall ((Nat) (Nat)) ((mult _qv_6 _qv_7)=(mult _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult (succ (plus _t_36 (succ _t_36))) _v_35)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((mult (mult _qv_8 _qv_9) _qv_10)=(mult _qv_8 (mult _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult (succ (plus _t_36 (succ _t_36))) _v_35)))
NOW TESTING (forall ((Nat)) ((tri (tri _qv_11))=_qv_11))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult (succ (plus _t_36 (succ _t_36))) _v_35)))
NOW TESTING (forall ((Nat)) ((cubes (cubes _qv_12))=_qv_12))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult (succ (plus _t_36 (succ _t_36))) _v_35)))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult (succ (plus _t_36 (succ _t_36))) _v_35)))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_14))=(nat-to-int _qv_14)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult (succ (plus _t_36 (succ _t_36))) _v_35)))
NOW TESTING (forall ((Nat)) ((nat-to-int (tri _qv_15))=(nat-to-int _qv_15)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult (succ (plus _t_36 (succ _t_36))) _v_35)))
NOW TESTING (forall ((Nat)) ((nat-to-int (cubes _qv_16))=(nat-to-int _qv_16)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult (succ (plus _t_36 (succ _t_36))) _v_35)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((mult _qv_17 (plus _qv_18 _qv_19))=(plus (mult _qv_17 _qv_18) (mult _qv_17 _qv_19))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult (succ (plus _t_36 (succ _t_36))) _v_35)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus _qv_20 (mult _qv_21 _qv_22))=(mult (plus _qv_20 _qv_21) (plus _qv_20 _qv_22))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult (succ (plus _t_36 (succ _t_36))) _v_35)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_23 _qv_24))=(plus (succ _qv_23) (succ _qv_24))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult (succ (plus _t_36 (succ _t_36))) _v_35)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_23 _qv_24))=(plus (succ _qv_24) (succ _qv_23))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult (succ (plus _t_36 (succ _t_36))) _v_35)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (mult _qv_25 _qv_26))=(mult (succ _qv_25) (succ _qv_26))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult (succ (plus _t_36 (succ _t_36))) _v_35)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (mult _qv_25 _qv_26))=(mult (succ _qv_26) (succ _qv_25))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult (succ (plus _t_36 (succ _t_36))) _v_35)))
NOW TESTING (forall ((Nat) (Nat)) ((tri (plus _qv_27 _qv_28))=(plus (tri _qv_27) (tri _qv_28))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult (succ (plus _t_36 (succ _t_36))) _v_35)))
NOW TESTING (forall ((Nat) (Nat)) ((tri (plus _qv_27 _qv_28))=(plus (tri _qv_28) (tri _qv_27))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult (succ (plus _t_36 (succ _t_36))) _v_35)))
NOW TESTING (forall ((Nat) (Nat)) ((tri (mult _qv_29 _qv_30))=(mult (tri _qv_29) (tri _qv_30))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult (succ (plus _t_36 (succ _t_36))) _v_35)))
NOW TESTING (forall ((Nat) (Nat)) ((tri (mult _qv_29 _qv_30))=(mult (tri _qv_30) (tri _qv_29))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult (succ (plus _t_36 (succ _t_36))) _v_35)))
NOW TESTING (forall ((Nat) (Nat)) ((cubes (plus _qv_31 _qv_32))=(plus (cubes _qv_31) (cubes _qv_32))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult (succ (plus _t_36 (succ _t_36))) _v_35)))
NOW TESTING (forall ((Nat) (Nat)) ((cubes (plus _qv_31 _qv_32))=(plus (cubes _qv_32) (cubes _qv_31))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult (succ (plus _t_36 (succ _t_36))) _v_35)))
NOW TESTING (forall ((Nat) (Nat)) ((cubes (mult _qv_33 _qv_34))=(mult (cubes _qv_33) (cubes _qv_34))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult (succ (plus _t_36 (succ _t_36))) _v_35)))
NOW TESTING (forall ((Nat) (Nat)) ((cubes (mult _qv_33 _qv_34))=(mult (cubes _qv_34) (cubes _qv_33))))
USE ASSUMPTION FAILED

  backtrack to: ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult (succ (plus _t_36 (succ _t_36))) _v_35)))
  rewritten [15]: ([+    (nat-to-int (mult (plus _v_35 _v_35) _t_36))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult (succ (plus _t_36 (succ _t_36))) _v_35)))
  Maximum recursion depth reached
CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult (succ (plus _t_36 (succ _t_36))) _v_35)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult (succ (plus _t_36 (succ _t_36))) _v_35)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_1 _qv_2)=(plus _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult (succ (plus _t_36 (succ _t_36))) _v_35)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_3 _qv_4) _qv_5)=(plus _qv_3 (plus _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult (succ (plus _t_36 (succ _t_36))) _v_35)))
NOW TESTING (forall ((Nat) (Nat)) ((mult _qv_6 _qv_7)=(mult _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult (succ (plus _t_36 (succ _t_36))) _v_35)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((mult (mult _qv_8 _qv_9) _qv_10)=(mult _qv_8 (mult _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult (succ (plus _t_36 (succ _t_36))) _v_35)))
NOW TESTING (forall ((Nat)) ((tri (tri _qv_11))=_qv_11))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult (succ (plus _t_36 (succ _t_36))) _v_35)))
NOW TESTING (forall ((Nat)) ((cubes (cubes _qv_12))=_qv_12))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult (succ (plus _t_36 (succ _t_36))) _v_35)))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult (succ (plus _t_36 (succ _t_36))) _v_35)))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_14))=(nat-to-int _qv_14)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult (succ (plus _t_36 (succ _t_36))) _v_35)))
NOW TESTING (forall ((Nat)) ((nat-to-int (tri _qv_15))=(nat-to-int _qv_15)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult (succ (plus _t_36 (succ _t_36))) _v_35)))
NOW TESTING (forall ((Nat)) ((nat-to-int (cubes _qv_16))=(nat-to-int _qv_16)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult (succ (plus _t_36 (succ _t_36))) _v_35)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((mult _qv_17 (plus _qv_18 _qv_19))=(plus (mult _qv_17 _qv_18) (mult _qv_17 _qv_19))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult (succ (plus _t_36 (succ _t_36))) _v_35)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus _qv_20 (mult _qv_21 _qv_22))=(mult (plus _qv_20 _qv_21) (plus _qv_20 _qv_22))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult (succ (plus _t_36 (succ _t_36))) _v_35)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_23 _qv_24))=(plus (succ _qv_23) (succ _qv_24))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult (succ (plus _t_36 (succ _t_36))) _v_35)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_23 _qv_24))=(plus (succ _qv_24) (succ _qv_23))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult (succ (plus _t_36 (succ _t_36))) _v_35)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (mult _qv_25 _qv_26))=(mult (succ _qv_25) (succ _qv_26))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult (succ (plus _t_36 (succ _t_36))) _v_35)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (mult _qv_25 _qv_26))=(mult (succ _qv_26) (succ _qv_25))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult (succ (plus _t_36 (succ _t_36))) _v_35)))
NOW TESTING (forall ((Nat) (Nat)) ((tri (plus _qv_27 _qv_28))=(plus (tri _qv_27) (tri _qv_28))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult (succ (plus _t_36 (succ _t_36))) _v_35)))
NOW TESTING (forall ((Nat) (Nat)) ((tri (plus _qv_27 _qv_28))=(plus (tri _qv_28) (tri _qv_27))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult (succ (plus _t_36 (succ _t_36))) _v_35)))
NOW TESTING (forall ((Nat) (Nat)) ((tri (mult _qv_29 _qv_30))=(mult (tri _qv_29) (tri _qv_30))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult (succ (plus _t_36 (succ _t_36))) _v_35)))
NOW TESTING (forall ((Nat) (Nat)) ((tri (mult _qv_29 _qv_30))=(mult (tri _qv_30) (tri _qv_29))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult (succ (plus _t_36 (succ _t_36))) _v_35)))
NOW TESTING (forall ((Nat) (Nat)) ((cubes (plus _qv_31 _qv_32))=(plus (cubes _qv_31) (cubes _qv_32))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult (succ (plus _t_36 (succ _t_36))) _v_35)))
NOW TESTING (forall ((Nat) (Nat)) ((cubes (plus _qv_31 _qv_32))=(plus (cubes _qv_32) (cubes _qv_31))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult (succ (plus _t_36 (succ _t_36))) _v_35)))
NOW TESTING (forall ((Nat) (Nat)) ((cubes (mult _qv_33 _qv_34))=(mult (cubes _qv_33) (cubes _qv_34))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult (succ (plus _t_36 (succ _t_36))) _v_35)))
NOW TESTING (forall ((Nat) (Nat)) ((cubes (mult _qv_33 _qv_34))=(mult (cubes _qv_34) (cubes _qv_33))))
USE ASSUMPTION FAILED

  backtrack to: ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult (succ (plus _t_36 (succ _t_36))) _v_35)))
  rewritten [15]: ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
  Maximum recursion depth reached
CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult (succ (plus _t_36 (succ _t_36))) _v_35)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult (succ (plus _t_36 (succ _t_36))) _v_35)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_1 _qv_2)=(plus _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult (succ (plus _t_36 (succ _t_36))) _v_35)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_3 _qv_4) _qv_5)=(plus _qv_3 (plus _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult (succ (plus _t_36 (succ _t_36))) _v_35)))
NOW TESTING (forall ((Nat) (Nat)) ((mult _qv_6 _qv_7)=(mult _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult (succ (plus _t_36 (succ _t_36))) _v_35)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((mult (mult _qv_8 _qv_9) _qv_10)=(mult _qv_8 (mult _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult (succ (plus _t_36 (succ _t_36))) _v_35)))
NOW TESTING (forall ((Nat)) ((tri (tri _qv_11))=_qv_11))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult (succ (plus _t_36 (succ _t_36))) _v_35)))
NOW TESTING (forall ((Nat)) ((cubes (cubes _qv_12))=_qv_12))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult (succ (plus _t_36 (succ _t_36))) _v_35)))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult (succ (plus _t_36 (succ _t_36))) _v_35)))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_14))=(nat-to-int _qv_14)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult (succ (plus _t_36 (succ _t_36))) _v_35)))
NOW TESTING (forall ((Nat)) ((nat-to-int (tri _qv_15))=(nat-to-int _qv_15)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult (succ (plus _t_36 (succ _t_36))) _v_35)))
NOW TESTING (forall ((Nat)) ((nat-to-int (cubes _qv_16))=(nat-to-int _qv_16)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult (succ (plus _t_36 (succ _t_36))) _v_35)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((mult _qv_17 (plus _qv_18 _qv_19))=(plus (mult _qv_17 _qv_18) (mult _qv_17 _qv_19))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult (succ (plus _t_36 (succ _t_36))) _v_35)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus _qv_20 (mult _qv_21 _qv_22))=(mult (plus _qv_20 _qv_21) (plus _qv_20 _qv_22))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult (succ (plus _t_36 (succ _t_36))) _v_35)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_23 _qv_24))=(plus (succ _qv_23) (succ _qv_24))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult (succ (plus _t_36 (succ _t_36))) _v_35)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_23 _qv_24))=(plus (succ _qv_24) (succ _qv_23))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult (succ (plus _t_36 (succ _t_36))) _v_35)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (mult _qv_25 _qv_26))=(mult (succ _qv_25) (succ _qv_26))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult (succ (plus _t_36 (succ _t_36))) _v_35)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (mult _qv_25 _qv_26))=(mult (succ _qv_26) (succ _qv_25))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult (succ (plus _t_36 (succ _t_36))) _v_35)))
NOW TESTING (forall ((Nat) (Nat)) ((tri (plus _qv_27 _qv_28))=(plus (tri _qv_27) (tri _qv_28))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult (succ (plus _t_36 (succ _t_36))) _v_35)))
NOW TESTING (forall ((Nat) (Nat)) ((tri (plus _qv_27 _qv_28))=(plus (tri _qv_28) (tri _qv_27))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult (succ (plus _t_36 (succ _t_36))) _v_35)))
NOW TESTING (forall ((Nat) (Nat)) ((tri (mult _qv_29 _qv_30))=(mult (tri _qv_29) (tri _qv_30))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult (succ (plus _t_36 (succ _t_36))) _v_35)))
NOW TESTING (forall ((Nat) (Nat)) ((tri (mult _qv_29 _qv_30))=(mult (tri _qv_30) (tri _qv_29))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult (succ (plus _t_36 (succ _t_36))) _v_35)))
NOW TESTING (forall ((Nat) (Nat)) ((cubes (plus _qv_31 _qv_32))=(plus (cubes _qv_31) (cubes _qv_32))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult (succ (plus _t_36 (succ _t_36))) _v_35)))
NOW TESTING (forall ((Nat) (Nat)) ((cubes (plus _qv_31 _qv_32))=(plus (cubes _qv_32) (cubes _qv_31))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult (succ (plus _t_36 (succ _t_36))) _v_35)))
NOW TESTING (forall ((Nat) (Nat)) ((cubes (mult _qv_33 _qv_34))=(mult (cubes _qv_33) (cubes _qv_34))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult (succ (plus _t_36 (succ _t_36))) _v_35)))
NOW TESTING (forall ((Nat) (Nat)) ((cubes (mult _qv_33 _qv_34))=(mult (cubes _qv_34) (cubes _qv_33))))
USE ASSUMPTION FAILED

  backtrack to: ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult (succ (plus _t_36 (succ _t_36))) _v_35)))
  rewritten [17]: ([+    (nat-to-int (mult _v_35 (plus _t_36 _t_36)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult (succ (plus _t_36 (succ _t_36))) _v_35)))
  Maximum recursion depth reached
CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult (succ (plus _t_36 (succ _t_36))) _v_35)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult (succ (plus _t_36 (succ _t_36))) _v_35)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_1 _qv_2)=(plus _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult (succ (plus _t_36 (succ _t_36))) _v_35)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_3 _qv_4) _qv_5)=(plus _qv_3 (plus _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult (succ (plus _t_36 (succ _t_36))) _v_35)))
NOW TESTING (forall ((Nat) (Nat)) ((mult _qv_6 _qv_7)=(mult _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult (succ (plus _t_36 (succ _t_36))) _v_35)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((mult (mult _qv_8 _qv_9) _qv_10)=(mult _qv_8 (mult _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult (succ (plus _t_36 (succ _t_36))) _v_35)))
NOW TESTING (forall ((Nat)) ((tri (tri _qv_11))=_qv_11))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult (succ (plus _t_36 (succ _t_36))) _v_35)))
NOW TESTING (forall ((Nat)) ((cubes (cubes _qv_12))=_qv_12))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult (succ (plus _t_36 (succ _t_36))) _v_35)))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult (succ (plus _t_36 (succ _t_36))) _v_35)))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_14))=(nat-to-int _qv_14)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult (succ (plus _t_36 (succ _t_36))) _v_35)))
NOW TESTING (forall ((Nat)) ((nat-to-int (tri _qv_15))=(nat-to-int _qv_15)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult (succ (plus _t_36 (succ _t_36))) _v_35)))
NOW TESTING (forall ((Nat)) ((nat-to-int (cubes _qv_16))=(nat-to-int _qv_16)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult (succ (plus _t_36 (succ _t_36))) _v_35)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((mult _qv_17 (plus _qv_18 _qv_19))=(plus (mult _qv_17 _qv_18) (mult _qv_17 _qv_19))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult (succ (plus _t_36 (succ _t_36))) _v_35)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus _qv_20 (mult _qv_21 _qv_22))=(mult (plus _qv_20 _qv_21) (plus _qv_20 _qv_22))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult (succ (plus _t_36 (succ _t_36))) _v_35)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_23 _qv_24))=(plus (succ _qv_23) (succ _qv_24))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult (succ (plus _t_36 (succ _t_36))) _v_35)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_23 _qv_24))=(plus (succ _qv_24) (succ _qv_23))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult (succ (plus _t_36 (succ _t_36))) _v_35)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (mult _qv_25 _qv_26))=(mult (succ _qv_25) (succ _qv_26))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult (succ (plus _t_36 (succ _t_36))) _v_35)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (mult _qv_25 _qv_26))=(mult (succ _qv_26) (succ _qv_25))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult (succ (plus _t_36 (succ _t_36))) _v_35)))
NOW TESTING (forall ((Nat) (Nat)) ((tri (plus _qv_27 _qv_28))=(plus (tri _qv_27) (tri _qv_28))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult (succ (plus _t_36 (succ _t_36))) _v_35)))
NOW TESTING (forall ((Nat) (Nat)) ((tri (plus _qv_27 _qv_28))=(plus (tri _qv_28) (tri _qv_27))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult (succ (plus _t_36 (succ _t_36))) _v_35)))
NOW TESTING (forall ((Nat) (Nat)) ((tri (mult _qv_29 _qv_30))=(mult (tri _qv_29) (tri _qv_30))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult (succ (plus _t_36 (succ _t_36))) _v_35)))
NOW TESTING (forall ((Nat) (Nat)) ((tri (mult _qv_29 _qv_30))=(mult (tri _qv_30) (tri _qv_29))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult (succ (plus _t_36 (succ _t_36))) _v_35)))
NOW TESTING (forall ((Nat) (Nat)) ((cubes (plus _qv_31 _qv_32))=(plus (cubes _qv_31) (cubes _qv_32))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult (succ (plus _t_36 (succ _t_36))) _v_35)))
NOW TESTING (forall ((Nat) (Nat)) ((cubes (plus _qv_31 _qv_32))=(plus (cubes _qv_32) (cubes _qv_31))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult (succ (plus _t_36 (succ _t_36))) _v_35)))
NOW TESTING (forall ((Nat) (Nat)) ((cubes (mult _qv_33 _qv_34))=(mult (cubes _qv_33) (cubes _qv_34))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult (succ (plus _t_36 (succ _t_36))) _v_35)))
NOW TESTING (forall ((Nat) (Nat)) ((cubes (mult _qv_33 _qv_34))=(mult (cubes _qv_34) (cubes _qv_33))))
USE ASSUMPTION FAILED

  backtrack to: ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult (succ (plus _t_36 (succ _t_36))) _v_35)))
  rewritten [2]: (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(2*(nat-to-int _v_35)))=(nat-to-int (mult (succ (plus _t_36 (succ _t_36))) _v_35)))
  Maximum recursion depth reached
CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult (succ (plus _t_36 (succ _t_36))) _v_35)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult (succ (plus _t_36 (succ _t_36))) _v_35)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_1 _qv_2)=(plus _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult (succ (plus _t_36 (succ _t_36))) _v_35)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_3 _qv_4) _qv_5)=(plus _qv_3 (plus _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult (succ (plus _t_36 (succ _t_36))) _v_35)))
NOW TESTING (forall ((Nat) (Nat)) ((mult _qv_6 _qv_7)=(mult _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult (succ (plus _t_36 (succ _t_36))) _v_35)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((mult (mult _qv_8 _qv_9) _qv_10)=(mult _qv_8 (mult _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult (succ (plus _t_36 (succ _t_36))) _v_35)))
NOW TESTING (forall ((Nat)) ((tri (tri _qv_11))=_qv_11))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult (succ (plus _t_36 (succ _t_36))) _v_35)))
NOW TESTING (forall ((Nat)) ((cubes (cubes _qv_12))=_qv_12))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult (succ (plus _t_36 (succ _t_36))) _v_35)))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult (succ (plus _t_36 (succ _t_36))) _v_35)))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_14))=(nat-to-int _qv_14)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult (succ (plus _t_36 (succ _t_36))) _v_35)))
NOW TESTING (forall ((Nat)) ((nat-to-int (tri _qv_15))=(nat-to-int _qv_15)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult (succ (plus _t_36 (succ _t_36))) _v_35)))
NOW TESTING (forall ((Nat)) ((nat-to-int (cubes _qv_16))=(nat-to-int _qv_16)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult (succ (plus _t_36 (succ _t_36))) _v_35)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((mult _qv_17 (plus _qv_18 _qv_19))=(plus (mult _qv_17 _qv_18) (mult _qv_17 _qv_19))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult (succ (plus _t_36 (succ _t_36))) _v_35)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus _qv_20 (mult _qv_21 _qv_22))=(mult (plus _qv_20 _qv_21) (plus _qv_20 _qv_22))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult (succ (plus _t_36 (succ _t_36))) _v_35)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_23 _qv_24))=(plus (succ _qv_23) (succ _qv_24))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult (succ (plus _t_36 (succ _t_36))) _v_35)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_23 _qv_24))=(plus (succ _qv_24) (succ _qv_23))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult (succ (plus _t_36 (succ _t_36))) _v_35)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (mult _qv_25 _qv_26))=(mult (succ _qv_25) (succ _qv_26))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult (succ (plus _t_36 (succ _t_36))) _v_35)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (mult _qv_25 _qv_26))=(mult (succ _qv_26) (succ _qv_25))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult (succ (plus _t_36 (succ _t_36))) _v_35)))
NOW TESTING (forall ((Nat) (Nat)) ((tri (plus _qv_27 _qv_28))=(plus (tri _qv_27) (tri _qv_28))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult (succ (plus _t_36 (succ _t_36))) _v_35)))
NOW TESTING (forall ((Nat) (Nat)) ((tri (plus _qv_27 _qv_28))=(plus (tri _qv_28) (tri _qv_27))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult (succ (plus _t_36 (succ _t_36))) _v_35)))
NOW TESTING (forall ((Nat) (Nat)) ((tri (mult _qv_29 _qv_30))=(mult (tri _qv_29) (tri _qv_30))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult (succ (plus _t_36 (succ _t_36))) _v_35)))
NOW TESTING (forall ((Nat) (Nat)) ((tri (mult _qv_29 _qv_30))=(mult (tri _qv_30) (tri _qv_29))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult (succ (plus _t_36 (succ _t_36))) _v_35)))
NOW TESTING (forall ((Nat) (Nat)) ((cubes (plus _qv_31 _qv_32))=(plus (cubes _qv_31) (cubes _qv_32))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult (succ (plus _t_36 (succ _t_36))) _v_35)))
NOW TESTING (forall ((Nat) (Nat)) ((cubes (plus _qv_31 _qv_32))=(plus (cubes _qv_32) (cubes _qv_31))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult (succ (plus _t_36 (succ _t_36))) _v_35)))
NOW TESTING (forall ((Nat) (Nat)) ((cubes (mult _qv_33 _qv_34))=(mult (cubes _qv_33) (cubes _qv_34))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult (succ (plus _t_36 (succ _t_36))) _v_35)))
NOW TESTING (forall ((Nat) (Nat)) ((cubes (mult _qv_33 _qv_34))=(mult (cubes _qv_34) (cubes _qv_33))))
USE ASSUMPTION FAILED

  backtrack to: ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult (succ (plus _t_36 (succ _t_36))) _v_35)))
  rewritten [6]: ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (plus (mult (plus _t_36 (succ _t_36)) _v_35) _v_35)))
  Maximum recursion depth reached
CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult (succ (plus _t_36 (succ _t_36))) _v_35)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult (succ (plus _t_36 (succ _t_36))) _v_35)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_1 _qv_2)=(plus _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult (succ (plus _t_36 (succ _t_36))) _v_35)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_3 _qv_4) _qv_5)=(plus _qv_3 (plus _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult (succ (plus _t_36 (succ _t_36))) _v_35)))
NOW TESTING (forall ((Nat) (Nat)) ((mult _qv_6 _qv_7)=(mult _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult (succ (plus _t_36 (succ _t_36))) _v_35)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((mult (mult _qv_8 _qv_9) _qv_10)=(mult _qv_8 (mult _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult (succ (plus _t_36 (succ _t_36))) _v_35)))
NOW TESTING (forall ((Nat)) ((tri (tri _qv_11))=_qv_11))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult (succ (plus _t_36 (succ _t_36))) _v_35)))
NOW TESTING (forall ((Nat)) ((cubes (cubes _qv_12))=_qv_12))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult (succ (plus _t_36 (succ _t_36))) _v_35)))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult (succ (plus _t_36 (succ _t_36))) _v_35)))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_14))=(nat-to-int _qv_14)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult (succ (plus _t_36 (succ _t_36))) _v_35)))
NOW TESTING (forall ((Nat)) ((nat-to-int (tri _qv_15))=(nat-to-int _qv_15)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult (succ (plus _t_36 (succ _t_36))) _v_35)))
NOW TESTING (forall ((Nat)) ((nat-to-int (cubes _qv_16))=(nat-to-int _qv_16)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult (succ (plus _t_36 (succ _t_36))) _v_35)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((mult _qv_17 (plus _qv_18 _qv_19))=(plus (mult _qv_17 _qv_18) (mult _qv_17 _qv_19))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult (succ (plus _t_36 (succ _t_36))) _v_35)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus _qv_20 (mult _qv_21 _qv_22))=(mult (plus _qv_20 _qv_21) (plus _qv_20 _qv_22))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult (succ (plus _t_36 (succ _t_36))) _v_35)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_23 _qv_24))=(plus (succ _qv_23) (succ _qv_24))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult (succ (plus _t_36 (succ _t_36))) _v_35)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_23 _qv_24))=(plus (succ _qv_24) (succ _qv_23))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult (succ (plus _t_36 (succ _t_36))) _v_35)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (mult _qv_25 _qv_26))=(mult (succ _qv_25) (succ _qv_26))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult (succ (plus _t_36 (succ _t_36))) _v_35)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (mult _qv_25 _qv_26))=(mult (succ _qv_26) (succ _qv_25))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult (succ (plus _t_36 (succ _t_36))) _v_35)))
NOW TESTING (forall ((Nat) (Nat)) ((tri (plus _qv_27 _qv_28))=(plus (tri _qv_27) (tri _qv_28))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult (succ (plus _t_36 (succ _t_36))) _v_35)))
NOW TESTING (forall ((Nat) (Nat)) ((tri (plus _qv_27 _qv_28))=(plus (tri _qv_28) (tri _qv_27))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult (succ (plus _t_36 (succ _t_36))) _v_35)))
NOW TESTING (forall ((Nat) (Nat)) ((tri (mult _qv_29 _qv_30))=(mult (tri _qv_29) (tri _qv_30))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult (succ (plus _t_36 (succ _t_36))) _v_35)))
NOW TESTING (forall ((Nat) (Nat)) ((tri (mult _qv_29 _qv_30))=(mult (tri _qv_30) (tri _qv_29))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult (succ (plus _t_36 (succ _t_36))) _v_35)))
NOW TESTING (forall ((Nat) (Nat)) ((cubes (plus _qv_31 _qv_32))=(plus (cubes _qv_31) (cubes _qv_32))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult (succ (plus _t_36 (succ _t_36))) _v_35)))
NOW TESTING (forall ((Nat) (Nat)) ((cubes (plus _qv_31 _qv_32))=(plus (cubes _qv_32) (cubes _qv_31))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult (succ (plus _t_36 (succ _t_36))) _v_35)))
NOW TESTING (forall ((Nat) (Nat)) ((cubes (mult _qv_33 _qv_34))=(mult (cubes _qv_33) (cubes _qv_34))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult (succ (plus _t_36 (succ _t_36))) _v_35)))
NOW TESTING (forall ((Nat) (Nat)) ((cubes (mult _qv_33 _qv_34))=(mult (cubes _qv_34) (cubes _qv_33))))
USE ASSUMPTION FAILED

  backtrack to: ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult (succ (plus _t_36 (succ _t_36))) _v_35)))
  rewritten [13]: ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult (succ (plus (succ _t_36) _t_36)) _v_35)))
  Maximum recursion depth reached
CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult (succ (plus _t_36 (succ _t_36))) _v_35)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult (succ (plus _t_36 (succ _t_36))) _v_35)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_1 _qv_2)=(plus _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult (succ (plus _t_36 (succ _t_36))) _v_35)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_3 _qv_4) _qv_5)=(plus _qv_3 (plus _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult (succ (plus _t_36 (succ _t_36))) _v_35)))
NOW TESTING (forall ((Nat) (Nat)) ((mult _qv_6 _qv_7)=(mult _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult (succ (plus _t_36 (succ _t_36))) _v_35)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((mult (mult _qv_8 _qv_9) _qv_10)=(mult _qv_8 (mult _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult (succ (plus _t_36 (succ _t_36))) _v_35)))
NOW TESTING (forall ((Nat)) ((tri (tri _qv_11))=_qv_11))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult (succ (plus _t_36 (succ _t_36))) _v_35)))
NOW TESTING (forall ((Nat)) ((cubes (cubes _qv_12))=_qv_12))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult (succ (plus _t_36 (succ _t_36))) _v_35)))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult (succ (plus _t_36 (succ _t_36))) _v_35)))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_14))=(nat-to-int _qv_14)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult (succ (plus _t_36 (succ _t_36))) _v_35)))
NOW TESTING (forall ((Nat)) ((nat-to-int (tri _qv_15))=(nat-to-int _qv_15)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult (succ (plus _t_36 (succ _t_36))) _v_35)))
NOW TESTING (forall ((Nat)) ((nat-to-int (cubes _qv_16))=(nat-to-int _qv_16)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult (succ (plus _t_36 (succ _t_36))) _v_35)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((mult _qv_17 (plus _qv_18 _qv_19))=(plus (mult _qv_17 _qv_18) (mult _qv_17 _qv_19))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult (succ (plus _t_36 (succ _t_36))) _v_35)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus _qv_20 (mult _qv_21 _qv_22))=(mult (plus _qv_20 _qv_21) (plus _qv_20 _qv_22))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult (succ (plus _t_36 (succ _t_36))) _v_35)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_23 _qv_24))=(plus (succ _qv_23) (succ _qv_24))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult (succ (plus _t_36 (succ _t_36))) _v_35)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_23 _qv_24))=(plus (succ _qv_24) (succ _qv_23))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult (succ (plus _t_36 (succ _t_36))) _v_35)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (mult _qv_25 _qv_26))=(mult (succ _qv_25) (succ _qv_26))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult (succ (plus _t_36 (succ _t_36))) _v_35)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (mult _qv_25 _qv_26))=(mult (succ _qv_26) (succ _qv_25))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult (succ (plus _t_36 (succ _t_36))) _v_35)))
NOW TESTING (forall ((Nat) (Nat)) ((tri (plus _qv_27 _qv_28))=(plus (tri _qv_27) (tri _qv_28))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult (succ (plus _t_36 (succ _t_36))) _v_35)))
NOW TESTING (forall ((Nat) (Nat)) ((tri (plus _qv_27 _qv_28))=(plus (tri _qv_28) (tri _qv_27))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult (succ (plus _t_36 (succ _t_36))) _v_35)))
NOW TESTING (forall ((Nat) (Nat)) ((tri (mult _qv_29 _qv_30))=(mult (tri _qv_29) (tri _qv_30))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult (succ (plus _t_36 (succ _t_36))) _v_35)))
NOW TESTING (forall ((Nat) (Nat)) ((tri (mult _qv_29 _qv_30))=(mult (tri _qv_30) (tri _qv_29))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult (succ (plus _t_36 (succ _t_36))) _v_35)))
NOW TESTING (forall ((Nat) (Nat)) ((cubes (plus _qv_31 _qv_32))=(plus (cubes _qv_31) (cubes _qv_32))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult (succ (plus _t_36 (succ _t_36))) _v_35)))
NOW TESTING (forall ((Nat) (Nat)) ((cubes (plus _qv_31 _qv_32))=(plus (cubes _qv_32) (cubes _qv_31))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult (succ (plus _t_36 (succ _t_36))) _v_35)))
NOW TESTING (forall ((Nat) (Nat)) ((cubes (mult _qv_33 _qv_34))=(mult (cubes _qv_33) (cubes _qv_34))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult (succ (plus _t_36 (succ _t_36))) _v_35)))
NOW TESTING (forall ((Nat) (Nat)) ((cubes (mult _qv_33 _qv_34))=(mult (cubes _qv_34) (cubes _qv_33))))
USE ASSUMPTION FAILED

  backtrack to: ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult (succ (plus _t_36 (succ _t_36))) _v_35)))
  rewritten [15]: ([+    (nat-to-int (mult (plus _v_35 _v_35) _t_36))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult (succ (plus _t_36 (succ _t_36))) _v_35)))
  Maximum recursion depth reached
CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult (succ (plus _t_36 (succ _t_36))) _v_35)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult (succ (plus _t_36 (succ _t_36))) _v_35)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_1 _qv_2)=(plus _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult (succ (plus _t_36 (succ _t_36))) _v_35)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_3 _qv_4) _qv_5)=(plus _qv_3 (plus _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult (succ (plus _t_36 (succ _t_36))) _v_35)))
NOW TESTING (forall ((Nat) (Nat)) ((mult _qv_6 _qv_7)=(mult _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult (succ (plus _t_36 (succ _t_36))) _v_35)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((mult (mult _qv_8 _qv_9) _qv_10)=(mult _qv_8 (mult _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult (succ (plus _t_36 (succ _t_36))) _v_35)))
NOW TESTING (forall ((Nat)) ((tri (tri _qv_11))=_qv_11))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult (succ (plus _t_36 (succ _t_36))) _v_35)))
NOW TESTING (forall ((Nat)) ((cubes (cubes _qv_12))=_qv_12))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult (succ (plus _t_36 (succ _t_36))) _v_35)))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult (succ (plus _t_36 (succ _t_36))) _v_35)))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_14))=(nat-to-int _qv_14)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult (succ (plus _t_36 (succ _t_36))) _v_35)))
NOW TESTING (forall ((Nat)) ((nat-to-int (tri _qv_15))=(nat-to-int _qv_15)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult (succ (plus _t_36 (succ _t_36))) _v_35)))
NOW TESTING (forall ((Nat)) ((nat-to-int (cubes _qv_16))=(nat-to-int _qv_16)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult (succ (plus _t_36 (succ _t_36))) _v_35)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((mult _qv_17 (plus _qv_18 _qv_19))=(plus (mult _qv_17 _qv_18) (mult _qv_17 _qv_19))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult (succ (plus _t_36 (succ _t_36))) _v_35)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus _qv_20 (mult _qv_21 _qv_22))=(mult (plus _qv_20 _qv_21) (plus _qv_20 _qv_22))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult (succ (plus _t_36 (succ _t_36))) _v_35)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_23 _qv_24))=(plus (succ _qv_23) (succ _qv_24))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult (succ (plus _t_36 (succ _t_36))) _v_35)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_23 _qv_24))=(plus (succ _qv_24) (succ _qv_23))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult (succ (plus _t_36 (succ _t_36))) _v_35)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (mult _qv_25 _qv_26))=(mult (succ _qv_25) (succ _qv_26))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult (succ (plus _t_36 (succ _t_36))) _v_35)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (mult _qv_25 _qv_26))=(mult (succ _qv_26) (succ _qv_25))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult (succ (plus _t_36 (succ _t_36))) _v_35)))
NOW TESTING (forall ((Nat) (Nat)) ((tri (plus _qv_27 _qv_28))=(plus (tri _qv_27) (tri _qv_28))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult (succ (plus _t_36 (succ _t_36))) _v_35)))
NOW TESTING (forall ((Nat) (Nat)) ((tri (plus _qv_27 _qv_28))=(plus (tri _qv_28) (tri _qv_27))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult (succ (plus _t_36 (succ _t_36))) _v_35)))
NOW TESTING (forall ((Nat) (Nat)) ((tri (mult _qv_29 _qv_30))=(mult (tri _qv_29) (tri _qv_30))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult (succ (plus _t_36 (succ _t_36))) _v_35)))
NOW TESTING (forall ((Nat) (Nat)) ((tri (mult _qv_29 _qv_30))=(mult (tri _qv_30) (tri _qv_29))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult (succ (plus _t_36 (succ _t_36))) _v_35)))
NOW TESTING (forall ((Nat) (Nat)) ((cubes (plus _qv_31 _qv_32))=(plus (cubes _qv_31) (cubes _qv_32))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult (succ (plus _t_36 (succ _t_36))) _v_35)))
NOW TESTING (forall ((Nat) (Nat)) ((cubes (plus _qv_31 _qv_32))=(plus (cubes _qv_32) (cubes _qv_31))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult (succ (plus _t_36 (succ _t_36))) _v_35)))
NOW TESTING (forall ((Nat) (Nat)) ((cubes (mult _qv_33 _qv_34))=(mult (cubes _qv_33) (cubes _qv_34))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult (succ (plus _t_36 (succ _t_36))) _v_35)))
NOW TESTING (forall ((Nat) (Nat)) ((cubes (mult _qv_33 _qv_34))=(mult (cubes _qv_34) (cubes _qv_33))))
USE ASSUMPTION FAILED

  backtrack to: ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult (succ (plus _t_36 (succ _t_36))) _v_35)))
  rewritten [15]: ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
  Maximum recursion depth reached
CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult (succ (plus _t_36 (succ _t_36))) _v_35)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult (succ (plus _t_36 (succ _t_36))) _v_35)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_1 _qv_2)=(plus _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult (succ (plus _t_36 (succ _t_36))) _v_35)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_3 _qv_4) _qv_5)=(plus _qv_3 (plus _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult (succ (plus _t_36 (succ _t_36))) _v_35)))
NOW TESTING (forall ((Nat) (Nat)) ((mult _qv_6 _qv_7)=(mult _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult (succ (plus _t_36 (succ _t_36))) _v_35)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((mult (mult _qv_8 _qv_9) _qv_10)=(mult _qv_8 (mult _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult (succ (plus _t_36 (succ _t_36))) _v_35)))
NOW TESTING (forall ((Nat)) ((tri (tri _qv_11))=_qv_11))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult (succ (plus _t_36 (succ _t_36))) _v_35)))
NOW TESTING (forall ((Nat)) ((cubes (cubes _qv_12))=_qv_12))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult (succ (plus _t_36 (succ _t_36))) _v_35)))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult (succ (plus _t_36 (succ _t_36))) _v_35)))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_14))=(nat-to-int _qv_14)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult (succ (plus _t_36 (succ _t_36))) _v_35)))
NOW TESTING (forall ((Nat)) ((nat-to-int (tri _qv_15))=(nat-to-int _qv_15)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult (succ (plus _t_36 (succ _t_36))) _v_35)))
NOW TESTING (forall ((Nat)) ((nat-to-int (cubes _qv_16))=(nat-to-int _qv_16)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult (succ (plus _t_36 (succ _t_36))) _v_35)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((mult _qv_17 (plus _qv_18 _qv_19))=(plus (mult _qv_17 _qv_18) (mult _qv_17 _qv_19))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult (succ (plus _t_36 (succ _t_36))) _v_35)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus _qv_20 (mult _qv_21 _qv_22))=(mult (plus _qv_20 _qv_21) (plus _qv_20 _qv_22))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult (succ (plus _t_36 (succ _t_36))) _v_35)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_23 _qv_24))=(plus (succ _qv_23) (succ _qv_24))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult (succ (plus _t_36 (succ _t_36))) _v_35)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_23 _qv_24))=(plus (succ _qv_24) (succ _qv_23))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult (succ (plus _t_36 (succ _t_36))) _v_35)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (mult _qv_25 _qv_26))=(mult (succ _qv_25) (succ _qv_26))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult (succ (plus _t_36 (succ _t_36))) _v_35)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (mult _qv_25 _qv_26))=(mult (succ _qv_26) (succ _qv_25))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult (succ (plus _t_36 (succ _t_36))) _v_35)))
NOW TESTING (forall ((Nat) (Nat)) ((tri (plus _qv_27 _qv_28))=(plus (tri _qv_27) (tri _qv_28))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult (succ (plus _t_36 (succ _t_36))) _v_35)))
NOW TESTING (forall ((Nat) (Nat)) ((tri (plus _qv_27 _qv_28))=(plus (tri _qv_28) (tri _qv_27))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult (succ (plus _t_36 (succ _t_36))) _v_35)))
NOW TESTING (forall ((Nat) (Nat)) ((tri (mult _qv_29 _qv_30))=(mult (tri _qv_29) (tri _qv_30))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult (succ (plus _t_36 (succ _t_36))) _v_35)))
NOW TESTING (forall ((Nat) (Nat)) ((tri (mult _qv_29 _qv_30))=(mult (tri _qv_30) (tri _qv_29))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult (succ (plus _t_36 (succ _t_36))) _v_35)))
NOW TESTING (forall ((Nat) (Nat)) ((cubes (plus _qv_31 _qv_32))=(plus (cubes _qv_31) (cubes _qv_32))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult (succ (plus _t_36 (succ _t_36))) _v_35)))
NOW TESTING (forall ((Nat) (Nat)) ((cubes (plus _qv_31 _qv_32))=(plus (cubes _qv_32) (cubes _qv_31))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult (succ (plus _t_36 (succ _t_36))) _v_35)))
NOW TESTING (forall ((Nat) (Nat)) ((cubes (mult _qv_33 _qv_34))=(mult (cubes _qv_33) (cubes _qv_34))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult (succ (plus _t_36 (succ _t_36))) _v_35)))
NOW TESTING (forall ((Nat) (Nat)) ((cubes (mult _qv_33 _qv_34))=(mult (cubes _qv_34) (cubes _qv_33))))
USE ASSUMPTION FAILED

  backtrack to: ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult (succ (plus _t_36 (succ _t_36))) _v_35)))
  rewritten [17]: ([+    (nat-to-int (mult _v_35 (plus _t_36 _t_36)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult (succ (plus _t_36 (succ _t_36))) _v_35)))
  Maximum recursion depth reached
CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult (succ (plus _t_36 (succ _t_36))) _v_35)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult (succ (plus _t_36 (succ _t_36))) _v_35)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_1 _qv_2)=(plus _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult (succ (plus _t_36 (succ _t_36))) _v_35)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_3 _qv_4) _qv_5)=(plus _qv_3 (plus _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult (succ (plus _t_36 (succ _t_36))) _v_35)))
NOW TESTING (forall ((Nat) (Nat)) ((mult _qv_6 _qv_7)=(mult _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult (succ (plus _t_36 (succ _t_36))) _v_35)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((mult (mult _qv_8 _qv_9) _qv_10)=(mult _qv_8 (mult _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult (succ (plus _t_36 (succ _t_36))) _v_35)))
NOW TESTING (forall ((Nat)) ((tri (tri _qv_11))=_qv_11))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult (succ (plus _t_36 (succ _t_36))) _v_35)))
NOW TESTING (forall ((Nat)) ((cubes (cubes _qv_12))=_qv_12))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult (succ (plus _t_36 (succ _t_36))) _v_35)))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult (succ (plus _t_36 (succ _t_36))) _v_35)))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_14))=(nat-to-int _qv_14)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult (succ (plus _t_36 (succ _t_36))) _v_35)))
NOW TESTING (forall ((Nat)) ((nat-to-int (tri _qv_15))=(nat-to-int _qv_15)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult (succ (plus _t_36 (succ _t_36))) _v_35)))
NOW TESTING (forall ((Nat)) ((nat-to-int (cubes _qv_16))=(nat-to-int _qv_16)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult (succ (plus _t_36 (succ _t_36))) _v_35)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((mult _qv_17 (plus _qv_18 _qv_19))=(plus (mult _qv_17 _qv_18) (mult _qv_17 _qv_19))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult (succ (plus _t_36 (succ _t_36))) _v_35)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus _qv_20 (mult _qv_21 _qv_22))=(mult (plus _qv_20 _qv_21) (plus _qv_20 _qv_22))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult (succ (plus _t_36 (succ _t_36))) _v_35)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_23 _qv_24))=(plus (succ _qv_23) (succ _qv_24))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult (succ (plus _t_36 (succ _t_36))) _v_35)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_23 _qv_24))=(plus (succ _qv_24) (succ _qv_23))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult (succ (plus _t_36 (succ _t_36))) _v_35)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (mult _qv_25 _qv_26))=(mult (succ _qv_25) (succ _qv_26))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult (succ (plus _t_36 (succ _t_36))) _v_35)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (mult _qv_25 _qv_26))=(mult (succ _qv_26) (succ _qv_25))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult (succ (plus _t_36 (succ _t_36))) _v_35)))
NOW TESTING (forall ((Nat) (Nat)) ((tri (plus _qv_27 _qv_28))=(plus (tri _qv_27) (tri _qv_28))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult (succ (plus _t_36 (succ _t_36))) _v_35)))
NOW TESTING (forall ((Nat) (Nat)) ((tri (plus _qv_27 _qv_28))=(plus (tri _qv_28) (tri _qv_27))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult (succ (plus _t_36 (succ _t_36))) _v_35)))
NOW TESTING (forall ((Nat) (Nat)) ((tri (mult _qv_29 _qv_30))=(mult (tri _qv_29) (tri _qv_30))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult (succ (plus _t_36 (succ _t_36))) _v_35)))
NOW TESTING (forall ((Nat) (Nat)) ((tri (mult _qv_29 _qv_30))=(mult (tri _qv_30) (tri _qv_29))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult (succ (plus _t_36 (succ _t_36))) _v_35)))
NOW TESTING (forall ((Nat) (Nat)) ((cubes (plus _qv_31 _qv_32))=(plus (cubes _qv_31) (cubes _qv_32))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult (succ (plus _t_36 (succ _t_36))) _v_35)))
NOW TESTING (forall ((Nat) (Nat)) ((cubes (plus _qv_31 _qv_32))=(plus (cubes _qv_32) (cubes _qv_31))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult (succ (plus _t_36 (succ _t_36))) _v_35)))
NOW TESTING (forall ((Nat) (Nat)) ((cubes (mult _qv_33 _qv_34))=(mult (cubes _qv_33) (cubes _qv_34))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult (succ (plus _t_36 (succ _t_36))) _v_35)))
NOW TESTING (forall ((Nat) (Nat)) ((cubes (mult _qv_33 _qv_34))=(mult (cubes _qv_34) (cubes _qv_33))))
USE ASSUMPTION FAILED

  backtrack to: ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult (succ (plus _t_36 (succ _t_36))) _v_35)))
CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_1 _qv_2)=(plus _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_3 _qv_4) _qv_5)=(plus _qv_3 (plus _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((mult _qv_6 _qv_7)=(mult _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((mult (mult _qv_8 _qv_9) _qv_10)=(mult _qv_8 (mult _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat)) ((tri (tri _qv_11))=_qv_11))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat)) ((cubes (cubes _qv_12))=_qv_12))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_14))=(nat-to-int _qv_14)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat)) ((nat-to-int (tri _qv_15))=(nat-to-int _qv_15)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat)) ((nat-to-int (cubes _qv_16))=(nat-to-int _qv_16)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((mult _qv_17 (plus _qv_18 _qv_19))=(plus (mult _qv_17 _qv_18) (mult _qv_17 _qv_19))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus _qv_20 (mult _qv_21 _qv_22))=(mult (plus _qv_20 _qv_21) (plus _qv_20 _qv_22))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_23 _qv_24))=(plus (succ _qv_23) (succ _qv_24))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_23 _qv_24))=(plus (succ _qv_24) (succ _qv_23))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (mult _qv_25 _qv_26))=(mult (succ _qv_25) (succ _qv_26))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (mult _qv_25 _qv_26))=(mult (succ _qv_26) (succ _qv_25))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((tri (plus _qv_27 _qv_28))=(plus (tri _qv_27) (tri _qv_28))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((tri (plus _qv_27 _qv_28))=(plus (tri _qv_28) (tri _qv_27))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((tri (mult _qv_29 _qv_30))=(mult (tri _qv_29) (tri _qv_30))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((tri (mult _qv_29 _qv_30))=(mult (tri _qv_30) (tri _qv_29))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((cubes (plus _qv_31 _qv_32))=(plus (cubes _qv_31) (cubes _qv_32))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((cubes (plus _qv_31 _qv_32))=(plus (cubes _qv_32) (cubes _qv_31))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((cubes (mult _qv_33 _qv_34))=(mult (cubes _qv_33) (cubes _qv_34))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((cubes (mult _qv_33 _qv_34))=(mult (cubes _qv_34) (cubes _qv_33))))
USE ASSUMPTION FAILED

  backtrack to: ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
  rewritten [15]: ([+    (nat-to-int (mult (plus _v_35 _v_35) _t_36))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
  rewritten [2]: (((2*(nat-to-int _v_35))+(nat-to-int (mult (plus _v_35 _v_35) _t_36)))=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
  Maximum recursion depth reached
CURRENT SUBGOAL ([+    (nat-to-int _v_35)    (nat-to-int _v_35)    (nat-to-int (mult (plus _v_35 _v_35) _t_36))]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int _v_35)    (nat-to-int _v_35)    (nat-to-int (mult (plus _v_35 _v_35) _t_36))]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_1 _qv_2)=(plus _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int _v_35)    (nat-to-int _v_35)    (nat-to-int (mult (plus _v_35 _v_35) _t_36))]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_3 _qv_4) _qv_5)=(plus _qv_3 (plus _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int _v_35)    (nat-to-int _v_35)    (nat-to-int (mult (plus _v_35 _v_35) _t_36))]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((mult _qv_6 _qv_7)=(mult _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int _v_35)    (nat-to-int _v_35)    (nat-to-int (mult (plus _v_35 _v_35) _t_36))]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((mult (mult _qv_8 _qv_9) _qv_10)=(mult _qv_8 (mult _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int _v_35)    (nat-to-int _v_35)    (nat-to-int (mult (plus _v_35 _v_35) _t_36))]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat)) ((tri (tri _qv_11))=_qv_11))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int _v_35)    (nat-to-int _v_35)    (nat-to-int (mult (plus _v_35 _v_35) _t_36))]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat)) ((cubes (cubes _qv_12))=_qv_12))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int _v_35)    (nat-to-int _v_35)    (nat-to-int (mult (plus _v_35 _v_35) _t_36))]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int _v_35)    (nat-to-int _v_35)    (nat-to-int (mult (plus _v_35 _v_35) _t_36))]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_14))=(nat-to-int _qv_14)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int _v_35)    (nat-to-int _v_35)    (nat-to-int (mult (plus _v_35 _v_35) _t_36))]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat)) ((nat-to-int (tri _qv_15))=(nat-to-int _qv_15)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int _v_35)    (nat-to-int _v_35)    (nat-to-int (mult (plus _v_35 _v_35) _t_36))]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat)) ((nat-to-int (cubes _qv_16))=(nat-to-int _qv_16)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int _v_35)    (nat-to-int _v_35)    (nat-to-int (mult (plus _v_35 _v_35) _t_36))]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((mult _qv_17 (plus _qv_18 _qv_19))=(plus (mult _qv_17 _qv_18) (mult _qv_17 _qv_19))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int _v_35)    (nat-to-int _v_35)    (nat-to-int (mult (plus _v_35 _v_35) _t_36))]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus _qv_20 (mult _qv_21 _qv_22))=(mult (plus _qv_20 _qv_21) (plus _qv_20 _qv_22))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int _v_35)    (nat-to-int _v_35)    (nat-to-int (mult (plus _v_35 _v_35) _t_36))]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_23 _qv_24))=(plus (succ _qv_23) (succ _qv_24))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int _v_35)    (nat-to-int _v_35)    (nat-to-int (mult (plus _v_35 _v_35) _t_36))]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_23 _qv_24))=(plus (succ _qv_24) (succ _qv_23))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int _v_35)    (nat-to-int _v_35)    (nat-to-int (mult (plus _v_35 _v_35) _t_36))]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (mult _qv_25 _qv_26))=(mult (succ _qv_25) (succ _qv_26))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int _v_35)    (nat-to-int _v_35)    (nat-to-int (mult (plus _v_35 _v_35) _t_36))]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (mult _qv_25 _qv_26))=(mult (succ _qv_26) (succ _qv_25))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int _v_35)    (nat-to-int _v_35)    (nat-to-int (mult (plus _v_35 _v_35) _t_36))]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((tri (plus _qv_27 _qv_28))=(plus (tri _qv_27) (tri _qv_28))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int _v_35)    (nat-to-int _v_35)    (nat-to-int (mult (plus _v_35 _v_35) _t_36))]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((tri (plus _qv_27 _qv_28))=(plus (tri _qv_28) (tri _qv_27))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int _v_35)    (nat-to-int _v_35)    (nat-to-int (mult (plus _v_35 _v_35) _t_36))]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((tri (mult _qv_29 _qv_30))=(mult (tri _qv_29) (tri _qv_30))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int _v_35)    (nat-to-int _v_35)    (nat-to-int (mult (plus _v_35 _v_35) _t_36))]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((tri (mult _qv_29 _qv_30))=(mult (tri _qv_30) (tri _qv_29))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int _v_35)    (nat-to-int _v_35)    (nat-to-int (mult (plus _v_35 _v_35) _t_36))]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((cubes (plus _qv_31 _qv_32))=(plus (cubes _qv_31) (cubes _qv_32))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int _v_35)    (nat-to-int _v_35)    (nat-to-int (mult (plus _v_35 _v_35) _t_36))]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((cubes (plus _qv_31 _qv_32))=(plus (cubes _qv_32) (cubes _qv_31))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int _v_35)    (nat-to-int _v_35)    (nat-to-int (mult (plus _v_35 _v_35) _t_36))]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((cubes (mult _qv_33 _qv_34))=(mult (cubes _qv_33) (cubes _qv_34))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int _v_35)    (nat-to-int _v_35)    (nat-to-int (mult (plus _v_35 _v_35) _t_36))]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((cubes (mult _qv_33 _qv_34))=(mult (cubes _qv_34) (cubes _qv_33))))
USE ASSUMPTION FAILED

  backtrack to: ([+    (nat-to-int _v_35)    (nat-to-int _v_35)    (nat-to-int (mult (plus _v_35 _v_35) _t_36))]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
  rewritten [13]: ([+    (nat-to-int _v_35)    (nat-to-int _v_35)    (nat-to-int (mult (plus _v_35 _v_35) _t_36))]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
  Maximum recursion depth reached
CURRENT SUBGOAL ([+    (nat-to-int _v_35)    (nat-to-int _v_35)    (nat-to-int (mult (plus _v_35 _v_35) _t_36))]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int _v_35)    (nat-to-int _v_35)    (nat-to-int (mult (plus _v_35 _v_35) _t_36))]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_1 _qv_2)=(plus _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int _v_35)    (nat-to-int _v_35)    (nat-to-int (mult (plus _v_35 _v_35) _t_36))]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_3 _qv_4) _qv_5)=(plus _qv_3 (plus _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int _v_35)    (nat-to-int _v_35)    (nat-to-int (mult (plus _v_35 _v_35) _t_36))]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((mult _qv_6 _qv_7)=(mult _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int _v_35)    (nat-to-int _v_35)    (nat-to-int (mult (plus _v_35 _v_35) _t_36))]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((mult (mult _qv_8 _qv_9) _qv_10)=(mult _qv_8 (mult _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int _v_35)    (nat-to-int _v_35)    (nat-to-int (mult (plus _v_35 _v_35) _t_36))]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat)) ((tri (tri _qv_11))=_qv_11))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int _v_35)    (nat-to-int _v_35)    (nat-to-int (mult (plus _v_35 _v_35) _t_36))]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat)) ((cubes (cubes _qv_12))=_qv_12))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int _v_35)    (nat-to-int _v_35)    (nat-to-int (mult (plus _v_35 _v_35) _t_36))]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int _v_35)    (nat-to-int _v_35)    (nat-to-int (mult (plus _v_35 _v_35) _t_36))]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_14))=(nat-to-int _qv_14)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int _v_35)    (nat-to-int _v_35)    (nat-to-int (mult (plus _v_35 _v_35) _t_36))]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat)) ((nat-to-int (tri _qv_15))=(nat-to-int _qv_15)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int _v_35)    (nat-to-int _v_35)    (nat-to-int (mult (plus _v_35 _v_35) _t_36))]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat)) ((nat-to-int (cubes _qv_16))=(nat-to-int _qv_16)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int _v_35)    (nat-to-int _v_35)    (nat-to-int (mult (plus _v_35 _v_35) _t_36))]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((mult _qv_17 (plus _qv_18 _qv_19))=(plus (mult _qv_17 _qv_18) (mult _qv_17 _qv_19))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int _v_35)    (nat-to-int _v_35)    (nat-to-int (mult (plus _v_35 _v_35) _t_36))]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus _qv_20 (mult _qv_21 _qv_22))=(mult (plus _qv_20 _qv_21) (plus _qv_20 _qv_22))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int _v_35)    (nat-to-int _v_35)    (nat-to-int (mult (plus _v_35 _v_35) _t_36))]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_23 _qv_24))=(plus (succ _qv_23) (succ _qv_24))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int _v_35)    (nat-to-int _v_35)    (nat-to-int (mult (plus _v_35 _v_35) _t_36))]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_23 _qv_24))=(plus (succ _qv_24) (succ _qv_23))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int _v_35)    (nat-to-int _v_35)    (nat-to-int (mult (plus _v_35 _v_35) _t_36))]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (mult _qv_25 _qv_26))=(mult (succ _qv_25) (succ _qv_26))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int _v_35)    (nat-to-int _v_35)    (nat-to-int (mult (plus _v_35 _v_35) _t_36))]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (mult _qv_25 _qv_26))=(mult (succ _qv_26) (succ _qv_25))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int _v_35)    (nat-to-int _v_35)    (nat-to-int (mult (plus _v_35 _v_35) _t_36))]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((tri (plus _qv_27 _qv_28))=(plus (tri _qv_27) (tri _qv_28))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int _v_35)    (nat-to-int _v_35)    (nat-to-int (mult (plus _v_35 _v_35) _t_36))]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((tri (plus _qv_27 _qv_28))=(plus (tri _qv_28) (tri _qv_27))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int _v_35)    (nat-to-int _v_35)    (nat-to-int (mult (plus _v_35 _v_35) _t_36))]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((tri (mult _qv_29 _qv_30))=(mult (tri _qv_29) (tri _qv_30))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int _v_35)    (nat-to-int _v_35)    (nat-to-int (mult (plus _v_35 _v_35) _t_36))]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((tri (mult _qv_29 _qv_30))=(mult (tri _qv_30) (tri _qv_29))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int _v_35)    (nat-to-int _v_35)    (nat-to-int (mult (plus _v_35 _v_35) _t_36))]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((cubes (plus _qv_31 _qv_32))=(plus (cubes _qv_31) (cubes _qv_32))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int _v_35)    (nat-to-int _v_35)    (nat-to-int (mult (plus _v_35 _v_35) _t_36))]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((cubes (plus _qv_31 _qv_32))=(plus (cubes _qv_32) (cubes _qv_31))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int _v_35)    (nat-to-int _v_35)    (nat-to-int (mult (plus _v_35 _v_35) _t_36))]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((cubes (mult _qv_33 _qv_34))=(mult (cubes _qv_33) (cubes _qv_34))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int _v_35)    (nat-to-int _v_35)    (nat-to-int (mult (plus _v_35 _v_35) _t_36))]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((cubes (mult _qv_33 _qv_34))=(mult (cubes _qv_34) (cubes _qv_33))))
USE ASSUMPTION FAILED

  backtrack to: ([+    (nat-to-int _v_35)    (nat-to-int _v_35)    (nat-to-int (mult (plus _v_35 _v_35) _t_36))]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
  rewritten [13]: ([+    (nat-to-int _v_35)    (nat-to-int _v_35)    (nat-to-int (mult (plus _v_35 _v_35) _t_36))]=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
  Maximum recursion depth reached
CURRENT SUBGOAL ([+    (nat-to-int _v_35)    (nat-to-int _v_35)    (nat-to-int (mult (plus _v_35 _v_35) _t_36))]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int _v_35)    (nat-to-int _v_35)    (nat-to-int (mult (plus _v_35 _v_35) _t_36))]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_1 _qv_2)=(plus _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int _v_35)    (nat-to-int _v_35)    (nat-to-int (mult (plus _v_35 _v_35) _t_36))]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_3 _qv_4) _qv_5)=(plus _qv_3 (plus _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int _v_35)    (nat-to-int _v_35)    (nat-to-int (mult (plus _v_35 _v_35) _t_36))]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((mult _qv_6 _qv_7)=(mult _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int _v_35)    (nat-to-int _v_35)    (nat-to-int (mult (plus _v_35 _v_35) _t_36))]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((mult (mult _qv_8 _qv_9) _qv_10)=(mult _qv_8 (mult _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int _v_35)    (nat-to-int _v_35)    (nat-to-int (mult (plus _v_35 _v_35) _t_36))]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat)) ((tri (tri _qv_11))=_qv_11))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int _v_35)    (nat-to-int _v_35)    (nat-to-int (mult (plus _v_35 _v_35) _t_36))]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat)) ((cubes (cubes _qv_12))=_qv_12))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int _v_35)    (nat-to-int _v_35)    (nat-to-int (mult (plus _v_35 _v_35) _t_36))]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int _v_35)    (nat-to-int _v_35)    (nat-to-int (mult (plus _v_35 _v_35) _t_36))]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_14))=(nat-to-int _qv_14)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int _v_35)    (nat-to-int _v_35)    (nat-to-int (mult (plus _v_35 _v_35) _t_36))]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat)) ((nat-to-int (tri _qv_15))=(nat-to-int _qv_15)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int _v_35)    (nat-to-int _v_35)    (nat-to-int (mult (plus _v_35 _v_35) _t_36))]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat)) ((nat-to-int (cubes _qv_16))=(nat-to-int _qv_16)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int _v_35)    (nat-to-int _v_35)    (nat-to-int (mult (plus _v_35 _v_35) _t_36))]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((mult _qv_17 (plus _qv_18 _qv_19))=(plus (mult _qv_17 _qv_18) (mult _qv_17 _qv_19))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int _v_35)    (nat-to-int _v_35)    (nat-to-int (mult (plus _v_35 _v_35) _t_36))]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus _qv_20 (mult _qv_21 _qv_22))=(mult (plus _qv_20 _qv_21) (plus _qv_20 _qv_22))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int _v_35)    (nat-to-int _v_35)    (nat-to-int (mult (plus _v_35 _v_35) _t_36))]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_23 _qv_24))=(plus (succ _qv_23) (succ _qv_24))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int _v_35)    (nat-to-int _v_35)    (nat-to-int (mult (plus _v_35 _v_35) _t_36))]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_23 _qv_24))=(plus (succ _qv_24) (succ _qv_23))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int _v_35)    (nat-to-int _v_35)    (nat-to-int (mult (plus _v_35 _v_35) _t_36))]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (mult _qv_25 _qv_26))=(mult (succ _qv_25) (succ _qv_26))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int _v_35)    (nat-to-int _v_35)    (nat-to-int (mult (plus _v_35 _v_35) _t_36))]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (mult _qv_25 _qv_26))=(mult (succ _qv_26) (succ _qv_25))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int _v_35)    (nat-to-int _v_35)    (nat-to-int (mult (plus _v_35 _v_35) _t_36))]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((tri (plus _qv_27 _qv_28))=(plus (tri _qv_27) (tri _qv_28))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int _v_35)    (nat-to-int _v_35)    (nat-to-int (mult (plus _v_35 _v_35) _t_36))]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((tri (plus _qv_27 _qv_28))=(plus (tri _qv_28) (tri _qv_27))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int _v_35)    (nat-to-int _v_35)    (nat-to-int (mult (plus _v_35 _v_35) _t_36))]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((tri (mult _qv_29 _qv_30))=(mult (tri _qv_29) (tri _qv_30))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int _v_35)    (nat-to-int _v_35)    (nat-to-int (mult (plus _v_35 _v_35) _t_36))]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((tri (mult _qv_29 _qv_30))=(mult (tri _qv_30) (tri _qv_29))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int _v_35)    (nat-to-int _v_35)    (nat-to-int (mult (plus _v_35 _v_35) _t_36))]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((cubes (plus _qv_31 _qv_32))=(plus (cubes _qv_31) (cubes _qv_32))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int _v_35)    (nat-to-int _v_35)    (nat-to-int (mult (plus _v_35 _v_35) _t_36))]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((cubes (plus _qv_31 _qv_32))=(plus (cubes _qv_32) (cubes _qv_31))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int _v_35)    (nat-to-int _v_35)    (nat-to-int (mult (plus _v_35 _v_35) _t_36))]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((cubes (mult _qv_33 _qv_34))=(mult (cubes _qv_33) (cubes _qv_34))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int _v_35)    (nat-to-int _v_35)    (nat-to-int (mult (plus _v_35 _v_35) _t_36))]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((cubes (mult _qv_33 _qv_34))=(mult (cubes _qv_34) (cubes _qv_33))))
USE ASSUMPTION FAILED

  backtrack to: ([+    (nat-to-int _v_35)    (nat-to-int _v_35)    (nat-to-int (mult (plus _v_35 _v_35) _t_36))]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
  rewritten [15]: ([+    (nat-to-int _v_35)    (nat-to-int _v_35)    (nat-to-int (mult (plus _v_35 _v_35) _t_36))]=(nat-to-int (mult (succ (plus _t_36 (succ _t_36))) _v_35)))
  Maximum recursion depth reached
CURRENT SUBGOAL ([+    (nat-to-int _v_35)    (nat-to-int _v_35)    (nat-to-int (mult (plus _v_35 _v_35) _t_36))]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int _v_35)    (nat-to-int _v_35)    (nat-to-int (mult (plus _v_35 _v_35) _t_36))]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_1 _qv_2)=(plus _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int _v_35)    (nat-to-int _v_35)    (nat-to-int (mult (plus _v_35 _v_35) _t_36))]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_3 _qv_4) _qv_5)=(plus _qv_3 (plus _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int _v_35)    (nat-to-int _v_35)    (nat-to-int (mult (plus _v_35 _v_35) _t_36))]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((mult _qv_6 _qv_7)=(mult _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int _v_35)    (nat-to-int _v_35)    (nat-to-int (mult (plus _v_35 _v_35) _t_36))]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((mult (mult _qv_8 _qv_9) _qv_10)=(mult _qv_8 (mult _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int _v_35)    (nat-to-int _v_35)    (nat-to-int (mult (plus _v_35 _v_35) _t_36))]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat)) ((tri (tri _qv_11))=_qv_11))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int _v_35)    (nat-to-int _v_35)    (nat-to-int (mult (plus _v_35 _v_35) _t_36))]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat)) ((cubes (cubes _qv_12))=_qv_12))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int _v_35)    (nat-to-int _v_35)    (nat-to-int (mult (plus _v_35 _v_35) _t_36))]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int _v_35)    (nat-to-int _v_35)    (nat-to-int (mult (plus _v_35 _v_35) _t_36))]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_14))=(nat-to-int _qv_14)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int _v_35)    (nat-to-int _v_35)    (nat-to-int (mult (plus _v_35 _v_35) _t_36))]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat)) ((nat-to-int (tri _qv_15))=(nat-to-int _qv_15)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int _v_35)    (nat-to-int _v_35)    (nat-to-int (mult (plus _v_35 _v_35) _t_36))]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat)) ((nat-to-int (cubes _qv_16))=(nat-to-int _qv_16)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int _v_35)    (nat-to-int _v_35)    (nat-to-int (mult (plus _v_35 _v_35) _t_36))]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((mult _qv_17 (plus _qv_18 _qv_19))=(plus (mult _qv_17 _qv_18) (mult _qv_17 _qv_19))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int _v_35)    (nat-to-int _v_35)    (nat-to-int (mult (plus _v_35 _v_35) _t_36))]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus _qv_20 (mult _qv_21 _qv_22))=(mult (plus _qv_20 _qv_21) (plus _qv_20 _qv_22))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int _v_35)    (nat-to-int _v_35)    (nat-to-int (mult (plus _v_35 _v_35) _t_36))]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_23 _qv_24))=(plus (succ _qv_23) (succ _qv_24))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int _v_35)    (nat-to-int _v_35)    (nat-to-int (mult (plus _v_35 _v_35) _t_36))]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_23 _qv_24))=(plus (succ _qv_24) (succ _qv_23))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int _v_35)    (nat-to-int _v_35)    (nat-to-int (mult (plus _v_35 _v_35) _t_36))]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (mult _qv_25 _qv_26))=(mult (succ _qv_25) (succ _qv_26))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int _v_35)    (nat-to-int _v_35)    (nat-to-int (mult (plus _v_35 _v_35) _t_36))]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (mult _qv_25 _qv_26))=(mult (succ _qv_26) (succ _qv_25))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int _v_35)    (nat-to-int _v_35)    (nat-to-int (mult (plus _v_35 _v_35) _t_36))]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((tri (plus _qv_27 _qv_28))=(plus (tri _qv_27) (tri _qv_28))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int _v_35)    (nat-to-int _v_35)    (nat-to-int (mult (plus _v_35 _v_35) _t_36))]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((tri (plus _qv_27 _qv_28))=(plus (tri _qv_28) (tri _qv_27))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int _v_35)    (nat-to-int _v_35)    (nat-to-int (mult (plus _v_35 _v_35) _t_36))]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((tri (mult _qv_29 _qv_30))=(mult (tri _qv_29) (tri _qv_30))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int _v_35)    (nat-to-int _v_35)    (nat-to-int (mult (plus _v_35 _v_35) _t_36))]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((tri (mult _qv_29 _qv_30))=(mult (tri _qv_30) (tri _qv_29))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int _v_35)    (nat-to-int _v_35)    (nat-to-int (mult (plus _v_35 _v_35) _t_36))]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((cubes (plus _qv_31 _qv_32))=(plus (cubes _qv_31) (cubes _qv_32))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int _v_35)    (nat-to-int _v_35)    (nat-to-int (mult (plus _v_35 _v_35) _t_36))]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((cubes (plus _qv_31 _qv_32))=(plus (cubes _qv_32) (cubes _qv_31))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int _v_35)    (nat-to-int _v_35)    (nat-to-int (mult (plus _v_35 _v_35) _t_36))]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((cubes (mult _qv_33 _qv_34))=(mult (cubes _qv_33) (cubes _qv_34))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int _v_35)    (nat-to-int _v_35)    (nat-to-int (mult (plus _v_35 _v_35) _t_36))]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((cubes (mult _qv_33 _qv_34))=(mult (cubes _qv_34) (cubes _qv_33))))
USE ASSUMPTION FAILED

  backtrack to: ([+    (nat-to-int _v_35)    (nat-to-int _v_35)    (nat-to-int (mult (plus _v_35 _v_35) _t_36))]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
  rewritten [15]: ([+    (nat-to-int _v_35)    (nat-to-int _v_35)    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
  Maximum recursion depth reached
CURRENT SUBGOAL ([+    (nat-to-int _v_35)    (nat-to-int _v_35)    (nat-to-int (mult (plus _v_35 _v_35) _t_36))]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int _v_35)    (nat-to-int _v_35)    (nat-to-int (mult (plus _v_35 _v_35) _t_36))]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_1 _qv_2)=(plus _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int _v_35)    (nat-to-int _v_35)    (nat-to-int (mult (plus _v_35 _v_35) _t_36))]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_3 _qv_4) _qv_5)=(plus _qv_3 (plus _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int _v_35)    (nat-to-int _v_35)    (nat-to-int (mult (plus _v_35 _v_35) _t_36))]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((mult _qv_6 _qv_7)=(mult _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int _v_35)    (nat-to-int _v_35)    (nat-to-int (mult (plus _v_35 _v_35) _t_36))]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((mult (mult _qv_8 _qv_9) _qv_10)=(mult _qv_8 (mult _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int _v_35)    (nat-to-int _v_35)    (nat-to-int (mult (plus _v_35 _v_35) _t_36))]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat)) ((tri (tri _qv_11))=_qv_11))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int _v_35)    (nat-to-int _v_35)    (nat-to-int (mult (plus _v_35 _v_35) _t_36))]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat)) ((cubes (cubes _qv_12))=_qv_12))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int _v_35)    (nat-to-int _v_35)    (nat-to-int (mult (plus _v_35 _v_35) _t_36))]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int _v_35)    (nat-to-int _v_35)    (nat-to-int (mult (plus _v_35 _v_35) _t_36))]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_14))=(nat-to-int _qv_14)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int _v_35)    (nat-to-int _v_35)    (nat-to-int (mult (plus _v_35 _v_35) _t_36))]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat)) ((nat-to-int (tri _qv_15))=(nat-to-int _qv_15)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int _v_35)    (nat-to-int _v_35)    (nat-to-int (mult (plus _v_35 _v_35) _t_36))]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat)) ((nat-to-int (cubes _qv_16))=(nat-to-int _qv_16)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int _v_35)    (nat-to-int _v_35)    (nat-to-int (mult (plus _v_35 _v_35) _t_36))]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((mult _qv_17 (plus _qv_18 _qv_19))=(plus (mult _qv_17 _qv_18) (mult _qv_17 _qv_19))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int _v_35)    (nat-to-int _v_35)    (nat-to-int (mult (plus _v_35 _v_35) _t_36))]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus _qv_20 (mult _qv_21 _qv_22))=(mult (plus _qv_20 _qv_21) (plus _qv_20 _qv_22))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int _v_35)    (nat-to-int _v_35)    (nat-to-int (mult (plus _v_35 _v_35) _t_36))]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_23 _qv_24))=(plus (succ _qv_23) (succ _qv_24))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int _v_35)    (nat-to-int _v_35)    (nat-to-int (mult (plus _v_35 _v_35) _t_36))]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_23 _qv_24))=(plus (succ _qv_24) (succ _qv_23))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int _v_35)    (nat-to-int _v_35)    (nat-to-int (mult (plus _v_35 _v_35) _t_36))]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (mult _qv_25 _qv_26))=(mult (succ _qv_25) (succ _qv_26))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int _v_35)    (nat-to-int _v_35)    (nat-to-int (mult (plus _v_35 _v_35) _t_36))]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (mult _qv_25 _qv_26))=(mult (succ _qv_26) (succ _qv_25))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int _v_35)    (nat-to-int _v_35)    (nat-to-int (mult (plus _v_35 _v_35) _t_36))]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((tri (plus _qv_27 _qv_28))=(plus (tri _qv_27) (tri _qv_28))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int _v_35)    (nat-to-int _v_35)    (nat-to-int (mult (plus _v_35 _v_35) _t_36))]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((tri (plus _qv_27 _qv_28))=(plus (tri _qv_28) (tri _qv_27))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int _v_35)    (nat-to-int _v_35)    (nat-to-int (mult (plus _v_35 _v_35) _t_36))]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((tri (mult _qv_29 _qv_30))=(mult (tri _qv_29) (tri _qv_30))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int _v_35)    (nat-to-int _v_35)    (nat-to-int (mult (plus _v_35 _v_35) _t_36))]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((tri (mult _qv_29 _qv_30))=(mult (tri _qv_30) (tri _qv_29))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int _v_35)    (nat-to-int _v_35)    (nat-to-int (mult (plus _v_35 _v_35) _t_36))]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((cubes (plus _qv_31 _qv_32))=(plus (cubes _qv_31) (cubes _qv_32))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int _v_35)    (nat-to-int _v_35)    (nat-to-int (mult (plus _v_35 _v_35) _t_36))]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((cubes (plus _qv_31 _qv_32))=(plus (cubes _qv_32) (cubes _qv_31))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int _v_35)    (nat-to-int _v_35)    (nat-to-int (mult (plus _v_35 _v_35) _t_36))]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((cubes (mult _qv_33 _qv_34))=(mult (cubes _qv_33) (cubes _qv_34))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int _v_35)    (nat-to-int _v_35)    (nat-to-int (mult (plus _v_35 _v_35) _t_36))]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((cubes (mult _qv_33 _qv_34))=(mult (cubes _qv_34) (cubes _qv_33))))
USE ASSUMPTION FAILED

  backtrack to: ([+    (nat-to-int _v_35)    (nat-to-int _v_35)    (nat-to-int (mult (plus _v_35 _v_35) _t_36))]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
  rewritten [2]: (((2*(nat-to-int _v_35))+(nat-to-int (mult (plus _v_35 _v_35) _t_36)))=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
  Maximum recursion depth reached
CURRENT SUBGOAL ([+    (nat-to-int _v_35)    (nat-to-int _v_35)    (nat-to-int (mult (plus _v_35 _v_35) _t_36))]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int _v_35)    (nat-to-int _v_35)    (nat-to-int (mult (plus _v_35 _v_35) _t_36))]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_1 _qv_2)=(plus _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int _v_35)    (nat-to-int _v_35)    (nat-to-int (mult (plus _v_35 _v_35) _t_36))]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_3 _qv_4) _qv_5)=(plus _qv_3 (plus _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int _v_35)    (nat-to-int _v_35)    (nat-to-int (mult (plus _v_35 _v_35) _t_36))]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((mult _qv_6 _qv_7)=(mult _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int _v_35)    (nat-to-int _v_35)    (nat-to-int (mult (plus _v_35 _v_35) _t_36))]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((mult (mult _qv_8 _qv_9) _qv_10)=(mult _qv_8 (mult _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int _v_35)    (nat-to-int _v_35)    (nat-to-int (mult (plus _v_35 _v_35) _t_36))]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat)) ((tri (tri _qv_11))=_qv_11))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int _v_35)    (nat-to-int _v_35)    (nat-to-int (mult (plus _v_35 _v_35) _t_36))]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat)) ((cubes (cubes _qv_12))=_qv_12))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int _v_35)    (nat-to-int _v_35)    (nat-to-int (mult (plus _v_35 _v_35) _t_36))]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int _v_35)    (nat-to-int _v_35)    (nat-to-int (mult (plus _v_35 _v_35) _t_36))]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_14))=(nat-to-int _qv_14)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int _v_35)    (nat-to-int _v_35)    (nat-to-int (mult (plus _v_35 _v_35) _t_36))]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat)) ((nat-to-int (tri _qv_15))=(nat-to-int _qv_15)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int _v_35)    (nat-to-int _v_35)    (nat-to-int (mult (plus _v_35 _v_35) _t_36))]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat)) ((nat-to-int (cubes _qv_16))=(nat-to-int _qv_16)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int _v_35)    (nat-to-int _v_35)    (nat-to-int (mult (plus _v_35 _v_35) _t_36))]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((mult _qv_17 (plus _qv_18 _qv_19))=(plus (mult _qv_17 _qv_18) (mult _qv_17 _qv_19))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int _v_35)    (nat-to-int _v_35)    (nat-to-int (mult (plus _v_35 _v_35) _t_36))]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus _qv_20 (mult _qv_21 _qv_22))=(mult (plus _qv_20 _qv_21) (plus _qv_20 _qv_22))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int _v_35)    (nat-to-int _v_35)    (nat-to-int (mult (plus _v_35 _v_35) _t_36))]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_23 _qv_24))=(plus (succ _qv_23) (succ _qv_24))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int _v_35)    (nat-to-int _v_35)    (nat-to-int (mult (plus _v_35 _v_35) _t_36))]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_23 _qv_24))=(plus (succ _qv_24) (succ _qv_23))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int _v_35)    (nat-to-int _v_35)    (nat-to-int (mult (plus _v_35 _v_35) _t_36))]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (mult _qv_25 _qv_26))=(mult (succ _qv_25) (succ _qv_26))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int _v_35)    (nat-to-int _v_35)    (nat-to-int (mult (plus _v_35 _v_35) _t_36))]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (mult _qv_25 _qv_26))=(mult (succ _qv_26) (succ _qv_25))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int _v_35)    (nat-to-int _v_35)    (nat-to-int (mult (plus _v_35 _v_35) _t_36))]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((tri (plus _qv_27 _qv_28))=(plus (tri _qv_27) (tri _qv_28))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int _v_35)    (nat-to-int _v_35)    (nat-to-int (mult (plus _v_35 _v_35) _t_36))]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((tri (plus _qv_27 _qv_28))=(plus (tri _qv_28) (tri _qv_27))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int _v_35)    (nat-to-int _v_35)    (nat-to-int (mult (plus _v_35 _v_35) _t_36))]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((tri (mult _qv_29 _qv_30))=(mult (tri _qv_29) (tri _qv_30))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int _v_35)    (nat-to-int _v_35)    (nat-to-int (mult (plus _v_35 _v_35) _t_36))]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((tri (mult _qv_29 _qv_30))=(mult (tri _qv_30) (tri _qv_29))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int _v_35)    (nat-to-int _v_35)    (nat-to-int (mult (plus _v_35 _v_35) _t_36))]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((cubes (plus _qv_31 _qv_32))=(plus (cubes _qv_31) (cubes _qv_32))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int _v_35)    (nat-to-int _v_35)    (nat-to-int (mult (plus _v_35 _v_35) _t_36))]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((cubes (plus _qv_31 _qv_32))=(plus (cubes _qv_32) (cubes _qv_31))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int _v_35)    (nat-to-int _v_35)    (nat-to-int (mult (plus _v_35 _v_35) _t_36))]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((cubes (mult _qv_33 _qv_34))=(mult (cubes _qv_33) (cubes _qv_34))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int _v_35)    (nat-to-int _v_35)    (nat-to-int (mult (plus _v_35 _v_35) _t_36))]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((cubes (mult _qv_33 _qv_34))=(mult (cubes _qv_34) (cubes _qv_33))))
USE ASSUMPTION FAILED

  backtrack to: ([+    (nat-to-int _v_35)    (nat-to-int _v_35)    (nat-to-int (mult (plus _v_35 _v_35) _t_36))]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
  rewritten [13]: ([+    (nat-to-int _v_35)    (nat-to-int _v_35)    (nat-to-int (mult (plus _v_35 _v_35) _t_36))]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
  Maximum recursion depth reached
CURRENT SUBGOAL ([+    (nat-to-int _v_35)    (nat-to-int _v_35)    (nat-to-int (mult (plus _v_35 _v_35) _t_36))]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int _v_35)    (nat-to-int _v_35)    (nat-to-int (mult (plus _v_35 _v_35) _t_36))]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_1 _qv_2)=(plus _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int _v_35)    (nat-to-int _v_35)    (nat-to-int (mult (plus _v_35 _v_35) _t_36))]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_3 _qv_4) _qv_5)=(plus _qv_3 (plus _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int _v_35)    (nat-to-int _v_35)    (nat-to-int (mult (plus _v_35 _v_35) _t_36))]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((mult _qv_6 _qv_7)=(mult _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int _v_35)    (nat-to-int _v_35)    (nat-to-int (mult (plus _v_35 _v_35) _t_36))]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((mult (mult _qv_8 _qv_9) _qv_10)=(mult _qv_8 (mult _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int _v_35)    (nat-to-int _v_35)    (nat-to-int (mult (plus _v_35 _v_35) _t_36))]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat)) ((tri (tri _qv_11))=_qv_11))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int _v_35)    (nat-to-int _v_35)    (nat-to-int (mult (plus _v_35 _v_35) _t_36))]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat)) ((cubes (cubes _qv_12))=_qv_12))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int _v_35)    (nat-to-int _v_35)    (nat-to-int (mult (plus _v_35 _v_35) _t_36))]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int _v_35)    (nat-to-int _v_35)    (nat-to-int (mult (plus _v_35 _v_35) _t_36))]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_14))=(nat-to-int _qv_14)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int _v_35)    (nat-to-int _v_35)    (nat-to-int (mult (plus _v_35 _v_35) _t_36))]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat)) ((nat-to-int (tri _qv_15))=(nat-to-int _qv_15)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int _v_35)    (nat-to-int _v_35)    (nat-to-int (mult (plus _v_35 _v_35) _t_36))]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat)) ((nat-to-int (cubes _qv_16))=(nat-to-int _qv_16)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int _v_35)    (nat-to-int _v_35)    (nat-to-int (mult (plus _v_35 _v_35) _t_36))]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((mult _qv_17 (plus _qv_18 _qv_19))=(plus (mult _qv_17 _qv_18) (mult _qv_17 _qv_19))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int _v_35)    (nat-to-int _v_35)    (nat-to-int (mult (plus _v_35 _v_35) _t_36))]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus _qv_20 (mult _qv_21 _qv_22))=(mult (plus _qv_20 _qv_21) (plus _qv_20 _qv_22))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int _v_35)    (nat-to-int _v_35)    (nat-to-int (mult (plus _v_35 _v_35) _t_36))]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_23 _qv_24))=(plus (succ _qv_23) (succ _qv_24))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int _v_35)    (nat-to-int _v_35)    (nat-to-int (mult (plus _v_35 _v_35) _t_36))]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_23 _qv_24))=(plus (succ _qv_24) (succ _qv_23))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int _v_35)    (nat-to-int _v_35)    (nat-to-int (mult (plus _v_35 _v_35) _t_36))]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (mult _qv_25 _qv_26))=(mult (succ _qv_25) (succ _qv_26))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int _v_35)    (nat-to-int _v_35)    (nat-to-int (mult (plus _v_35 _v_35) _t_36))]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (mult _qv_25 _qv_26))=(mult (succ _qv_26) (succ _qv_25))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int _v_35)    (nat-to-int _v_35)    (nat-to-int (mult (plus _v_35 _v_35) _t_36))]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((tri (plus _qv_27 _qv_28))=(plus (tri _qv_27) (tri _qv_28))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int _v_35)    (nat-to-int _v_35)    (nat-to-int (mult (plus _v_35 _v_35) _t_36))]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((tri (plus _qv_27 _qv_28))=(plus (tri _qv_28) (tri _qv_27))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int _v_35)    (nat-to-int _v_35)    (nat-to-int (mult (plus _v_35 _v_35) _t_36))]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((tri (mult _qv_29 _qv_30))=(mult (tri _qv_29) (tri _qv_30))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int _v_35)    (nat-to-int _v_35)    (nat-to-int (mult (plus _v_35 _v_35) _t_36))]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((tri (mult _qv_29 _qv_30))=(mult (tri _qv_30) (tri _qv_29))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int _v_35)    (nat-to-int _v_35)    (nat-to-int (mult (plus _v_35 _v_35) _t_36))]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((cubes (plus _qv_31 _qv_32))=(plus (cubes _qv_31) (cubes _qv_32))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int _v_35)    (nat-to-int _v_35)    (nat-to-int (mult (plus _v_35 _v_35) _t_36))]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((cubes (plus _qv_31 _qv_32))=(plus (cubes _qv_32) (cubes _qv_31))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int _v_35)    (nat-to-int _v_35)    (nat-to-int (mult (plus _v_35 _v_35) _t_36))]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((cubes (mult _qv_33 _qv_34))=(mult (cubes _qv_33) (cubes _qv_34))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int _v_35)    (nat-to-int _v_35)    (nat-to-int (mult (plus _v_35 _v_35) _t_36))]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((cubes (mult _qv_33 _qv_34))=(mult (cubes _qv_34) (cubes _qv_33))))
USE ASSUMPTION FAILED

  backtrack to: ([+    (nat-to-int _v_35)    (nat-to-int _v_35)    (nat-to-int (mult (plus _v_35 _v_35) _t_36))]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
  rewritten [13]: ([+    (nat-to-int _v_35)    (nat-to-int _v_35)    (nat-to-int (mult (plus _v_35 _v_35) _t_36))]=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
  Maximum recursion depth reached
CURRENT SUBGOAL ([+    (nat-to-int _v_35)    (nat-to-int _v_35)    (nat-to-int (mult (plus _v_35 _v_35) _t_36))]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int _v_35)    (nat-to-int _v_35)    (nat-to-int (mult (plus _v_35 _v_35) _t_36))]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_1 _qv_2)=(plus _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int _v_35)    (nat-to-int _v_35)    (nat-to-int (mult (plus _v_35 _v_35) _t_36))]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_3 _qv_4) _qv_5)=(plus _qv_3 (plus _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int _v_35)    (nat-to-int _v_35)    (nat-to-int (mult (plus _v_35 _v_35) _t_36))]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((mult _qv_6 _qv_7)=(mult _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int _v_35)    (nat-to-int _v_35)    (nat-to-int (mult (plus _v_35 _v_35) _t_36))]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((mult (mult _qv_8 _qv_9) _qv_10)=(mult _qv_8 (mult _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int _v_35)    (nat-to-int _v_35)    (nat-to-int (mult (plus _v_35 _v_35) _t_36))]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat)) ((tri (tri _qv_11))=_qv_11))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int _v_35)    (nat-to-int _v_35)    (nat-to-int (mult (plus _v_35 _v_35) _t_36))]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat)) ((cubes (cubes _qv_12))=_qv_12))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int _v_35)    (nat-to-int _v_35)    (nat-to-int (mult (plus _v_35 _v_35) _t_36))]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int _v_35)    (nat-to-int _v_35)    (nat-to-int (mult (plus _v_35 _v_35) _t_36))]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_14))=(nat-to-int _qv_14)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int _v_35)    (nat-to-int _v_35)    (nat-to-int (mult (plus _v_35 _v_35) _t_36))]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat)) ((nat-to-int (tri _qv_15))=(nat-to-int _qv_15)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int _v_35)    (nat-to-int _v_35)    (nat-to-int (mult (plus _v_35 _v_35) _t_36))]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat)) ((nat-to-int (cubes _qv_16))=(nat-to-int _qv_16)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int _v_35)    (nat-to-int _v_35)    (nat-to-int (mult (plus _v_35 _v_35) _t_36))]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((mult _qv_17 (plus _qv_18 _qv_19))=(plus (mult _qv_17 _qv_18) (mult _qv_17 _qv_19))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int _v_35)    (nat-to-int _v_35)    (nat-to-int (mult (plus _v_35 _v_35) _t_36))]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus _qv_20 (mult _qv_21 _qv_22))=(mult (plus _qv_20 _qv_21) (plus _qv_20 _qv_22))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int _v_35)    (nat-to-int _v_35)    (nat-to-int (mult (plus _v_35 _v_35) _t_36))]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_23 _qv_24))=(plus (succ _qv_23) (succ _qv_24))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int _v_35)    (nat-to-int _v_35)    (nat-to-int (mult (plus _v_35 _v_35) _t_36))]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_23 _qv_24))=(plus (succ _qv_24) (succ _qv_23))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int _v_35)    (nat-to-int _v_35)    (nat-to-int (mult (plus _v_35 _v_35) _t_36))]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (mult _qv_25 _qv_26))=(mult (succ _qv_25) (succ _qv_26))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int _v_35)    (nat-to-int _v_35)    (nat-to-int (mult (plus _v_35 _v_35) _t_36))]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (mult _qv_25 _qv_26))=(mult (succ _qv_26) (succ _qv_25))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int _v_35)    (nat-to-int _v_35)    (nat-to-int (mult (plus _v_35 _v_35) _t_36))]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((tri (plus _qv_27 _qv_28))=(plus (tri _qv_27) (tri _qv_28))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int _v_35)    (nat-to-int _v_35)    (nat-to-int (mult (plus _v_35 _v_35) _t_36))]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((tri (plus _qv_27 _qv_28))=(plus (tri _qv_28) (tri _qv_27))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int _v_35)    (nat-to-int _v_35)    (nat-to-int (mult (plus _v_35 _v_35) _t_36))]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((tri (mult _qv_29 _qv_30))=(mult (tri _qv_29) (tri _qv_30))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int _v_35)    (nat-to-int _v_35)    (nat-to-int (mult (plus _v_35 _v_35) _t_36))]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((tri (mult _qv_29 _qv_30))=(mult (tri _qv_30) (tri _qv_29))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int _v_35)    (nat-to-int _v_35)    (nat-to-int (mult (plus _v_35 _v_35) _t_36))]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((cubes (plus _qv_31 _qv_32))=(plus (cubes _qv_31) (cubes _qv_32))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int _v_35)    (nat-to-int _v_35)    (nat-to-int (mult (plus _v_35 _v_35) _t_36))]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((cubes (plus _qv_31 _qv_32))=(plus (cubes _qv_32) (cubes _qv_31))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int _v_35)    (nat-to-int _v_35)    (nat-to-int (mult (plus _v_35 _v_35) _t_36))]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((cubes (mult _qv_33 _qv_34))=(mult (cubes _qv_33) (cubes _qv_34))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int _v_35)    (nat-to-int _v_35)    (nat-to-int (mult (plus _v_35 _v_35) _t_36))]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((cubes (mult _qv_33 _qv_34))=(mult (cubes _qv_34) (cubes _qv_33))))
USE ASSUMPTION FAILED

  backtrack to: ([+    (nat-to-int _v_35)    (nat-to-int _v_35)    (nat-to-int (mult (plus _v_35 _v_35) _t_36))]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
  rewritten [15]: ([+    (nat-to-int _v_35)    (nat-to-int _v_35)    (nat-to-int (mult (plus _v_35 _v_35) _t_36))]=(nat-to-int (mult (succ (plus _t_36 (succ _t_36))) _v_35)))
  Maximum recursion depth reached
CURRENT SUBGOAL ([+    (nat-to-int _v_35)    (nat-to-int _v_35)    (nat-to-int (mult (plus _v_35 _v_35) _t_36))]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int _v_35)    (nat-to-int _v_35)    (nat-to-int (mult (plus _v_35 _v_35) _t_36))]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_1 _qv_2)=(plus _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int _v_35)    (nat-to-int _v_35)    (nat-to-int (mult (plus _v_35 _v_35) _t_36))]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_3 _qv_4) _qv_5)=(plus _qv_3 (plus _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int _v_35)    (nat-to-int _v_35)    (nat-to-int (mult (plus _v_35 _v_35) _t_36))]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((mult _qv_6 _qv_7)=(mult _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int _v_35)    (nat-to-int _v_35)    (nat-to-int (mult (plus _v_35 _v_35) _t_36))]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((mult (mult _qv_8 _qv_9) _qv_10)=(mult _qv_8 (mult _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int _v_35)    (nat-to-int _v_35)    (nat-to-int (mult (plus _v_35 _v_35) _t_36))]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat)) ((tri (tri _qv_11))=_qv_11))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int _v_35)    (nat-to-int _v_35)    (nat-to-int (mult (plus _v_35 _v_35) _t_36))]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat)) ((cubes (cubes _qv_12))=_qv_12))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int _v_35)    (nat-to-int _v_35)    (nat-to-int (mult (plus _v_35 _v_35) _t_36))]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int _v_35)    (nat-to-int _v_35)    (nat-to-int (mult (plus _v_35 _v_35) _t_36))]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_14))=(nat-to-int _qv_14)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int _v_35)    (nat-to-int _v_35)    (nat-to-int (mult (plus _v_35 _v_35) _t_36))]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat)) ((nat-to-int (tri _qv_15))=(nat-to-int _qv_15)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int _v_35)    (nat-to-int _v_35)    (nat-to-int (mult (plus _v_35 _v_35) _t_36))]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat)) ((nat-to-int (cubes _qv_16))=(nat-to-int _qv_16)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int _v_35)    (nat-to-int _v_35)    (nat-to-int (mult (plus _v_35 _v_35) _t_36))]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((mult _qv_17 (plus _qv_18 _qv_19))=(plus (mult _qv_17 _qv_18) (mult _qv_17 _qv_19))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int _v_35)    (nat-to-int _v_35)    (nat-to-int (mult (plus _v_35 _v_35) _t_36))]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus _qv_20 (mult _qv_21 _qv_22))=(mult (plus _qv_20 _qv_21) (plus _qv_20 _qv_22))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int _v_35)    (nat-to-int _v_35)    (nat-to-int (mult (plus _v_35 _v_35) _t_36))]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_23 _qv_24))=(plus (succ _qv_23) (succ _qv_24))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int _v_35)    (nat-to-int _v_35)    (nat-to-int (mult (plus _v_35 _v_35) _t_36))]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_23 _qv_24))=(plus (succ _qv_24) (succ _qv_23))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int _v_35)    (nat-to-int _v_35)    (nat-to-int (mult (plus _v_35 _v_35) _t_36))]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (mult _qv_25 _qv_26))=(mult (succ _qv_25) (succ _qv_26))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int _v_35)    (nat-to-int _v_35)    (nat-to-int (mult (plus _v_35 _v_35) _t_36))]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (mult _qv_25 _qv_26))=(mult (succ _qv_26) (succ _qv_25))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int _v_35)    (nat-to-int _v_35)    (nat-to-int (mult (plus _v_35 _v_35) _t_36))]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((tri (plus _qv_27 _qv_28))=(plus (tri _qv_27) (tri _qv_28))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int _v_35)    (nat-to-int _v_35)    (nat-to-int (mult (plus _v_35 _v_35) _t_36))]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((tri (plus _qv_27 _qv_28))=(plus (tri _qv_28) (tri _qv_27))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int _v_35)    (nat-to-int _v_35)    (nat-to-int (mult (plus _v_35 _v_35) _t_36))]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((tri (mult _qv_29 _qv_30))=(mult (tri _qv_29) (tri _qv_30))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int _v_35)    (nat-to-int _v_35)    (nat-to-int (mult (plus _v_35 _v_35) _t_36))]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((tri (mult _qv_29 _qv_30))=(mult (tri _qv_30) (tri _qv_29))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int _v_35)    (nat-to-int _v_35)    (nat-to-int (mult (plus _v_35 _v_35) _t_36))]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((cubes (plus _qv_31 _qv_32))=(plus (cubes _qv_31) (cubes _qv_32))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int _v_35)    (nat-to-int _v_35)    (nat-to-int (mult (plus _v_35 _v_35) _t_36))]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((cubes (plus _qv_31 _qv_32))=(plus (cubes _qv_32) (cubes _qv_31))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int _v_35)    (nat-to-int _v_35)    (nat-to-int (mult (plus _v_35 _v_35) _t_36))]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((cubes (mult _qv_33 _qv_34))=(mult (cubes _qv_33) (cubes _qv_34))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int _v_35)    (nat-to-int _v_35)    (nat-to-int (mult (plus _v_35 _v_35) _t_36))]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((cubes (mult _qv_33 _qv_34))=(mult (cubes _qv_34) (cubes _qv_33))))
USE ASSUMPTION FAILED

  backtrack to: ([+    (nat-to-int _v_35)    (nat-to-int _v_35)    (nat-to-int (mult (plus _v_35 _v_35) _t_36))]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
  rewritten [15]: ([+    (nat-to-int _v_35)    (nat-to-int _v_35)    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
  Maximum recursion depth reached
CURRENT SUBGOAL ([+    (nat-to-int _v_35)    (nat-to-int _v_35)    (nat-to-int (mult (plus _v_35 _v_35) _t_36))]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int _v_35)    (nat-to-int _v_35)    (nat-to-int (mult (plus _v_35 _v_35) _t_36))]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_1 _qv_2)=(plus _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int _v_35)    (nat-to-int _v_35)    (nat-to-int (mult (plus _v_35 _v_35) _t_36))]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_3 _qv_4) _qv_5)=(plus _qv_3 (plus _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int _v_35)    (nat-to-int _v_35)    (nat-to-int (mult (plus _v_35 _v_35) _t_36))]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((mult _qv_6 _qv_7)=(mult _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int _v_35)    (nat-to-int _v_35)    (nat-to-int (mult (plus _v_35 _v_35) _t_36))]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((mult (mult _qv_8 _qv_9) _qv_10)=(mult _qv_8 (mult _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int _v_35)    (nat-to-int _v_35)    (nat-to-int (mult (plus _v_35 _v_35) _t_36))]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat)) ((tri (tri _qv_11))=_qv_11))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int _v_35)    (nat-to-int _v_35)    (nat-to-int (mult (plus _v_35 _v_35) _t_36))]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat)) ((cubes (cubes _qv_12))=_qv_12))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int _v_35)    (nat-to-int _v_35)    (nat-to-int (mult (plus _v_35 _v_35) _t_36))]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int _v_35)    (nat-to-int _v_35)    (nat-to-int (mult (plus _v_35 _v_35) _t_36))]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_14))=(nat-to-int _qv_14)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int _v_35)    (nat-to-int _v_35)    (nat-to-int (mult (plus _v_35 _v_35) _t_36))]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat)) ((nat-to-int (tri _qv_15))=(nat-to-int _qv_15)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int _v_35)    (nat-to-int _v_35)    (nat-to-int (mult (plus _v_35 _v_35) _t_36))]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat)) ((nat-to-int (cubes _qv_16))=(nat-to-int _qv_16)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int _v_35)    (nat-to-int _v_35)    (nat-to-int (mult (plus _v_35 _v_35) _t_36))]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((mult _qv_17 (plus _qv_18 _qv_19))=(plus (mult _qv_17 _qv_18) (mult _qv_17 _qv_19))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int _v_35)    (nat-to-int _v_35)    (nat-to-int (mult (plus _v_35 _v_35) _t_36))]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus _qv_20 (mult _qv_21 _qv_22))=(mult (plus _qv_20 _qv_21) (plus _qv_20 _qv_22))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int _v_35)    (nat-to-int _v_35)    (nat-to-int (mult (plus _v_35 _v_35) _t_36))]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_23 _qv_24))=(plus (succ _qv_23) (succ _qv_24))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int _v_35)    (nat-to-int _v_35)    (nat-to-int (mult (plus _v_35 _v_35) _t_36))]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_23 _qv_24))=(plus (succ _qv_24) (succ _qv_23))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int _v_35)    (nat-to-int _v_35)    (nat-to-int (mult (plus _v_35 _v_35) _t_36))]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (mult _qv_25 _qv_26))=(mult (succ _qv_25) (succ _qv_26))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int _v_35)    (nat-to-int _v_35)    (nat-to-int (mult (plus _v_35 _v_35) _t_36))]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (mult _qv_25 _qv_26))=(mult (succ _qv_26) (succ _qv_25))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int _v_35)    (nat-to-int _v_35)    (nat-to-int (mult (plus _v_35 _v_35) _t_36))]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((tri (plus _qv_27 _qv_28))=(plus (tri _qv_27) (tri _qv_28))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int _v_35)    (nat-to-int _v_35)    (nat-to-int (mult (plus _v_35 _v_35) _t_36))]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((tri (plus _qv_27 _qv_28))=(plus (tri _qv_28) (tri _qv_27))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int _v_35)    (nat-to-int _v_35)    (nat-to-int (mult (plus _v_35 _v_35) _t_36))]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((tri (mult _qv_29 _qv_30))=(mult (tri _qv_29) (tri _qv_30))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int _v_35)    (nat-to-int _v_35)    (nat-to-int (mult (plus _v_35 _v_35) _t_36))]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((tri (mult _qv_29 _qv_30))=(mult (tri _qv_30) (tri _qv_29))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int _v_35)    (nat-to-int _v_35)    (nat-to-int (mult (plus _v_35 _v_35) _t_36))]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((cubes (plus _qv_31 _qv_32))=(plus (cubes _qv_31) (cubes _qv_32))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int _v_35)    (nat-to-int _v_35)    (nat-to-int (mult (plus _v_35 _v_35) _t_36))]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((cubes (plus _qv_31 _qv_32))=(plus (cubes _qv_32) (cubes _qv_31))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int _v_35)    (nat-to-int _v_35)    (nat-to-int (mult (plus _v_35 _v_35) _t_36))]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((cubes (mult _qv_33 _qv_34))=(mult (cubes _qv_33) (cubes _qv_34))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int _v_35)    (nat-to-int _v_35)    (nat-to-int (mult (plus _v_35 _v_35) _t_36))]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((cubes (mult _qv_33 _qv_34))=(mult (cubes _qv_34) (cubes _qv_33))))
USE ASSUMPTION FAILED

  backtrack to: ([+    (nat-to-int _v_35)    (nat-to-int _v_35)    (nat-to-int (mult (plus _v_35 _v_35) _t_36))]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_1 _qv_2)=(plus _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_3 _qv_4) _qv_5)=(plus _qv_3 (plus _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((mult _qv_6 _qv_7)=(mult _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((mult (mult _qv_8 _qv_9) _qv_10)=(mult _qv_8 (mult _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat)) ((tri (tri _qv_11))=_qv_11))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat)) ((cubes (cubes _qv_12))=_qv_12))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_14))=(nat-to-int _qv_14)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat)) ((nat-to-int (tri _qv_15))=(nat-to-int _qv_15)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat)) ((nat-to-int (cubes _qv_16))=(nat-to-int _qv_16)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((mult _qv_17 (plus _qv_18 _qv_19))=(plus (mult _qv_17 _qv_18) (mult _qv_17 _qv_19))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus _qv_20 (mult _qv_21 _qv_22))=(mult (plus _qv_20 _qv_21) (plus _qv_20 _qv_22))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_23 _qv_24))=(plus (succ _qv_23) (succ _qv_24))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_23 _qv_24))=(plus (succ _qv_24) (succ _qv_23))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (mult _qv_25 _qv_26))=(mult (succ _qv_25) (succ _qv_26))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (mult _qv_25 _qv_26))=(mult (succ _qv_26) (succ _qv_25))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((tri (plus _qv_27 _qv_28))=(plus (tri _qv_27) (tri _qv_28))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((tri (plus _qv_27 _qv_28))=(plus (tri _qv_28) (tri _qv_27))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((tri (mult _qv_29 _qv_30))=(mult (tri _qv_29) (tri _qv_30))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((tri (mult _qv_29 _qv_30))=(mult (tri _qv_30) (tri _qv_29))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((cubes (plus _qv_31 _qv_32))=(plus (cubes _qv_31) (cubes _qv_32))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((cubes (plus _qv_31 _qv_32))=(plus (cubes _qv_32) (cubes _qv_31))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((cubes (mult _qv_33 _qv_34))=(mult (cubes _qv_33) (cubes _qv_34))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((cubes (mult _qv_33 _qv_34))=(mult (cubes _qv_34) (cubes _qv_33))))
USE ASSUMPTION FAILED

  backtrack to: ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
  rewritten [17]: ([+    (nat-to-int (mult _v_35 (plus _t_36 _t_36)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
  rewritten [2]: (((2*(nat-to-int _v_35))+(nat-to-int (mult _v_35 (plus _t_36 _t_36))))=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
  Maximum recursion depth reached
CURRENT SUBGOAL ([+    (nat-to-int _v_35)    (nat-to-int _v_35)    (nat-to-int (mult _v_35 (plus _t_36 _t_36)))]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int _v_35)    (nat-to-int _v_35)    (nat-to-int (mult _v_35 (plus _t_36 _t_36)))]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_1 _qv_2)=(plus _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int _v_35)    (nat-to-int _v_35)    (nat-to-int (mult _v_35 (plus _t_36 _t_36)))]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_3 _qv_4) _qv_5)=(plus _qv_3 (plus _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int _v_35)    (nat-to-int _v_35)    (nat-to-int (mult _v_35 (plus _t_36 _t_36)))]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((mult _qv_6 _qv_7)=(mult _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int _v_35)    (nat-to-int _v_35)    (nat-to-int (mult _v_35 (plus _t_36 _t_36)))]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((mult (mult _qv_8 _qv_9) _qv_10)=(mult _qv_8 (mult _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int _v_35)    (nat-to-int _v_35)    (nat-to-int (mult _v_35 (plus _t_36 _t_36)))]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat)) ((tri (tri _qv_11))=_qv_11))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int _v_35)    (nat-to-int _v_35)    (nat-to-int (mult _v_35 (plus _t_36 _t_36)))]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat)) ((cubes (cubes _qv_12))=_qv_12))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int _v_35)    (nat-to-int _v_35)    (nat-to-int (mult _v_35 (plus _t_36 _t_36)))]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int _v_35)    (nat-to-int _v_35)    (nat-to-int (mult _v_35 (plus _t_36 _t_36)))]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_14))=(nat-to-int _qv_14)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int _v_35)    (nat-to-int _v_35)    (nat-to-int (mult _v_35 (plus _t_36 _t_36)))]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat)) ((nat-to-int (tri _qv_15))=(nat-to-int _qv_15)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int _v_35)    (nat-to-int _v_35)    (nat-to-int (mult _v_35 (plus _t_36 _t_36)))]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat)) ((nat-to-int (cubes _qv_16))=(nat-to-int _qv_16)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int _v_35)    (nat-to-int _v_35)    (nat-to-int (mult _v_35 (plus _t_36 _t_36)))]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((mult _qv_17 (plus _qv_18 _qv_19))=(plus (mult _qv_17 _qv_18) (mult _qv_17 _qv_19))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int _v_35)    (nat-to-int _v_35)    (nat-to-int (mult _v_35 (plus _t_36 _t_36)))]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus _qv_20 (mult _qv_21 _qv_22))=(mult (plus _qv_20 _qv_21) (plus _qv_20 _qv_22))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int _v_35)    (nat-to-int _v_35)    (nat-to-int (mult _v_35 (plus _t_36 _t_36)))]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_23 _qv_24))=(plus (succ _qv_23) (succ _qv_24))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int _v_35)    (nat-to-int _v_35)    (nat-to-int (mult _v_35 (plus _t_36 _t_36)))]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_23 _qv_24))=(plus (succ _qv_24) (succ _qv_23))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int _v_35)    (nat-to-int _v_35)    (nat-to-int (mult _v_35 (plus _t_36 _t_36)))]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (mult _qv_25 _qv_26))=(mult (succ _qv_25) (succ _qv_26))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int _v_35)    (nat-to-int _v_35)    (nat-to-int (mult _v_35 (plus _t_36 _t_36)))]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (mult _qv_25 _qv_26))=(mult (succ _qv_26) (succ _qv_25))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int _v_35)    (nat-to-int _v_35)    (nat-to-int (mult _v_35 (plus _t_36 _t_36)))]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((tri (plus _qv_27 _qv_28))=(plus (tri _qv_27) (tri _qv_28))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int _v_35)    (nat-to-int _v_35)    (nat-to-int (mult _v_35 (plus _t_36 _t_36)))]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((tri (plus _qv_27 _qv_28))=(plus (tri _qv_28) (tri _qv_27))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int _v_35)    (nat-to-int _v_35)    (nat-to-int (mult _v_35 (plus _t_36 _t_36)))]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((tri (mult _qv_29 _qv_30))=(mult (tri _qv_29) (tri _qv_30))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int _v_35)    (nat-to-int _v_35)    (nat-to-int (mult _v_35 (plus _t_36 _t_36)))]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((tri (mult _qv_29 _qv_30))=(mult (tri _qv_30) (tri _qv_29))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int _v_35)    (nat-to-int _v_35)    (nat-to-int (mult _v_35 (plus _t_36 _t_36)))]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((cubes (plus _qv_31 _qv_32))=(plus (cubes _qv_31) (cubes _qv_32))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int _v_35)    (nat-to-int _v_35)    (nat-to-int (mult _v_35 (plus _t_36 _t_36)))]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((cubes (plus _qv_31 _qv_32))=(plus (cubes _qv_32) (cubes _qv_31))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int _v_35)    (nat-to-int _v_35)    (nat-to-int (mult _v_35 (plus _t_36 _t_36)))]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((cubes (mult _qv_33 _qv_34))=(mult (cubes _qv_33) (cubes _qv_34))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int _v_35)    (nat-to-int _v_35)    (nat-to-int (mult _v_35 (plus _t_36 _t_36)))]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((cubes (mult _qv_33 _qv_34))=(mult (cubes _qv_34) (cubes _qv_33))))
USE ASSUMPTION FAILED

  backtrack to: ([+    (nat-to-int _v_35)    (nat-to-int _v_35)    (nat-to-int (mult _v_35 (plus _t_36 _t_36)))]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
  rewritten [13]: ([+    (nat-to-int _v_35)    (nat-to-int _v_35)    (nat-to-int (mult _v_35 (plus _t_36 _t_36)))]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
  Maximum recursion depth reached
CURRENT SUBGOAL ([+    (nat-to-int _v_35)    (nat-to-int _v_35)    (nat-to-int (mult _v_35 (plus _t_36 _t_36)))]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int _v_35)    (nat-to-int _v_35)    (nat-to-int (mult _v_35 (plus _t_36 _t_36)))]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_1 _qv_2)=(plus _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int _v_35)    (nat-to-int _v_35)    (nat-to-int (mult _v_35 (plus _t_36 _t_36)))]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_3 _qv_4) _qv_5)=(plus _qv_3 (plus _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int _v_35)    (nat-to-int _v_35)    (nat-to-int (mult _v_35 (plus _t_36 _t_36)))]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((mult _qv_6 _qv_7)=(mult _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int _v_35)    (nat-to-int _v_35)    (nat-to-int (mult _v_35 (plus _t_36 _t_36)))]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((mult (mult _qv_8 _qv_9) _qv_10)=(mult _qv_8 (mult _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int _v_35)    (nat-to-int _v_35)    (nat-to-int (mult _v_35 (plus _t_36 _t_36)))]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat)) ((tri (tri _qv_11))=_qv_11))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int _v_35)    (nat-to-int _v_35)    (nat-to-int (mult _v_35 (plus _t_36 _t_36)))]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat)) ((cubes (cubes _qv_12))=_qv_12))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int _v_35)    (nat-to-int _v_35)    (nat-to-int (mult _v_35 (plus _t_36 _t_36)))]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int _v_35)    (nat-to-int _v_35)    (nat-to-int (mult _v_35 (plus _t_36 _t_36)))]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_14))=(nat-to-int _qv_14)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int _v_35)    (nat-to-int _v_35)    (nat-to-int (mult _v_35 (plus _t_36 _t_36)))]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat)) ((nat-to-int (tri _qv_15))=(nat-to-int _qv_15)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int _v_35)    (nat-to-int _v_35)    (nat-to-int (mult _v_35 (plus _t_36 _t_36)))]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat)) ((nat-to-int (cubes _qv_16))=(nat-to-int _qv_16)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int _v_35)    (nat-to-int _v_35)    (nat-to-int (mult _v_35 (plus _t_36 _t_36)))]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((mult _qv_17 (plus _qv_18 _qv_19))=(plus (mult _qv_17 _qv_18) (mult _qv_17 _qv_19))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int _v_35)    (nat-to-int _v_35)    (nat-to-int (mult _v_35 (plus _t_36 _t_36)))]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus _qv_20 (mult _qv_21 _qv_22))=(mult (plus _qv_20 _qv_21) (plus _qv_20 _qv_22))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int _v_35)    (nat-to-int _v_35)    (nat-to-int (mult _v_35 (plus _t_36 _t_36)))]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_23 _qv_24))=(plus (succ _qv_23) (succ _qv_24))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int _v_35)    (nat-to-int _v_35)    (nat-to-int (mult _v_35 (plus _t_36 _t_36)))]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_23 _qv_24))=(plus (succ _qv_24) (succ _qv_23))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int _v_35)    (nat-to-int _v_35)    (nat-to-int (mult _v_35 (plus _t_36 _t_36)))]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (mult _qv_25 _qv_26))=(mult (succ _qv_25) (succ _qv_26))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int _v_35)    (nat-to-int _v_35)    (nat-to-int (mult _v_35 (plus _t_36 _t_36)))]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (mult _qv_25 _qv_26))=(mult (succ _qv_26) (succ _qv_25))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int _v_35)    (nat-to-int _v_35)    (nat-to-int (mult _v_35 (plus _t_36 _t_36)))]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((tri (plus _qv_27 _qv_28))=(plus (tri _qv_27) (tri _qv_28))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int _v_35)    (nat-to-int _v_35)    (nat-to-int (mult _v_35 (plus _t_36 _t_36)))]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((tri (plus _qv_27 _qv_28))=(plus (tri _qv_28) (tri _qv_27))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int _v_35)    (nat-to-int _v_35)    (nat-to-int (mult _v_35 (plus _t_36 _t_36)))]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((tri (mult _qv_29 _qv_30))=(mult (tri _qv_29) (tri _qv_30))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int _v_35)    (nat-to-int _v_35)    (nat-to-int (mult _v_35 (plus _t_36 _t_36)))]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((tri (mult _qv_29 _qv_30))=(mult (tri _qv_30) (tri _qv_29))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int _v_35)    (nat-to-int _v_35)    (nat-to-int (mult _v_35 (plus _t_36 _t_36)))]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((cubes (plus _qv_31 _qv_32))=(plus (cubes _qv_31) (cubes _qv_32))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int _v_35)    (nat-to-int _v_35)    (nat-to-int (mult _v_35 (plus _t_36 _t_36)))]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((cubes (plus _qv_31 _qv_32))=(plus (cubes _qv_32) (cubes _qv_31))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int _v_35)    (nat-to-int _v_35)    (nat-to-int (mult _v_35 (plus _t_36 _t_36)))]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((cubes (mult _qv_33 _qv_34))=(mult (cubes _qv_33) (cubes _qv_34))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int _v_35)    (nat-to-int _v_35)    (nat-to-int (mult _v_35 (plus _t_36 _t_36)))]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((cubes (mult _qv_33 _qv_34))=(mult (cubes _qv_34) (cubes _qv_33))))
USE ASSUMPTION FAILED

  backtrack to: ([+    (nat-to-int _v_35)    (nat-to-int _v_35)    (nat-to-int (mult _v_35 (plus _t_36 _t_36)))]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
  rewritten [13]: ([+    (nat-to-int _v_35)    (nat-to-int _v_35)    (nat-to-int (mult _v_35 (plus _t_36 _t_36)))]=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
  Maximum recursion depth reached
CURRENT SUBGOAL ([+    (nat-to-int _v_35)    (nat-to-int _v_35)    (nat-to-int (mult _v_35 (plus _t_36 _t_36)))]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int _v_35)    (nat-to-int _v_35)    (nat-to-int (mult _v_35 (plus _t_36 _t_36)))]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_1 _qv_2)=(plus _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int _v_35)    (nat-to-int _v_35)    (nat-to-int (mult _v_35 (plus _t_36 _t_36)))]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_3 _qv_4) _qv_5)=(plus _qv_3 (plus _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int _v_35)    (nat-to-int _v_35)    (nat-to-int (mult _v_35 (plus _t_36 _t_36)))]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((mult _qv_6 _qv_7)=(mult _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int _v_35)    (nat-to-int _v_35)    (nat-to-int (mult _v_35 (plus _t_36 _t_36)))]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((mult (mult _qv_8 _qv_9) _qv_10)=(mult _qv_8 (mult _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int _v_35)    (nat-to-int _v_35)    (nat-to-int (mult _v_35 (plus _t_36 _t_36)))]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat)) ((tri (tri _qv_11))=_qv_11))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int _v_35)    (nat-to-int _v_35)    (nat-to-int (mult _v_35 (plus _t_36 _t_36)))]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat)) ((cubes (cubes _qv_12))=_qv_12))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int _v_35)    (nat-to-int _v_35)    (nat-to-int (mult _v_35 (plus _t_36 _t_36)))]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int _v_35)    (nat-to-int _v_35)    (nat-to-int (mult _v_35 (plus _t_36 _t_36)))]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_14))=(nat-to-int _qv_14)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int _v_35)    (nat-to-int _v_35)    (nat-to-int (mult _v_35 (plus _t_36 _t_36)))]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat)) ((nat-to-int (tri _qv_15))=(nat-to-int _qv_15)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int _v_35)    (nat-to-int _v_35)    (nat-to-int (mult _v_35 (plus _t_36 _t_36)))]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat)) ((nat-to-int (cubes _qv_16))=(nat-to-int _qv_16)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int _v_35)    (nat-to-int _v_35)    (nat-to-int (mult _v_35 (plus _t_36 _t_36)))]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((mult _qv_17 (plus _qv_18 _qv_19))=(plus (mult _qv_17 _qv_18) (mult _qv_17 _qv_19))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int _v_35)    (nat-to-int _v_35)    (nat-to-int (mult _v_35 (plus _t_36 _t_36)))]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus _qv_20 (mult _qv_21 _qv_22))=(mult (plus _qv_20 _qv_21) (plus _qv_20 _qv_22))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int _v_35)    (nat-to-int _v_35)    (nat-to-int (mult _v_35 (plus _t_36 _t_36)))]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_23 _qv_24))=(plus (succ _qv_23) (succ _qv_24))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int _v_35)    (nat-to-int _v_35)    (nat-to-int (mult _v_35 (plus _t_36 _t_36)))]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_23 _qv_24))=(plus (succ _qv_24) (succ _qv_23))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int _v_35)    (nat-to-int _v_35)    (nat-to-int (mult _v_35 (plus _t_36 _t_36)))]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (mult _qv_25 _qv_26))=(mult (succ _qv_25) (succ _qv_26))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int _v_35)    (nat-to-int _v_35)    (nat-to-int (mult _v_35 (plus _t_36 _t_36)))]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (mult _qv_25 _qv_26))=(mult (succ _qv_26) (succ _qv_25))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int _v_35)    (nat-to-int _v_35)    (nat-to-int (mult _v_35 (plus _t_36 _t_36)))]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((tri (plus _qv_27 _qv_28))=(plus (tri _qv_27) (tri _qv_28))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int _v_35)    (nat-to-int _v_35)    (nat-to-int (mult _v_35 (plus _t_36 _t_36)))]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((tri (plus _qv_27 _qv_28))=(plus (tri _qv_28) (tri _qv_27))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int _v_35)    (nat-to-int _v_35)    (nat-to-int (mult _v_35 (plus _t_36 _t_36)))]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((tri (mult _qv_29 _qv_30))=(mult (tri _qv_29) (tri _qv_30))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int _v_35)    (nat-to-int _v_35)    (nat-to-int (mult _v_35 (plus _t_36 _t_36)))]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((tri (mult _qv_29 _qv_30))=(mult (tri _qv_30) (tri _qv_29))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int _v_35)    (nat-to-int _v_35)    (nat-to-int (mult _v_35 (plus _t_36 _t_36)))]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((cubes (plus _qv_31 _qv_32))=(plus (cubes _qv_31) (cubes _qv_32))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int _v_35)    (nat-to-int _v_35)    (nat-to-int (mult _v_35 (plus _t_36 _t_36)))]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((cubes (plus _qv_31 _qv_32))=(plus (cubes _qv_32) (cubes _qv_31))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int _v_35)    (nat-to-int _v_35)    (nat-to-int (mult _v_35 (plus _t_36 _t_36)))]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((cubes (mult _qv_33 _qv_34))=(mult (cubes _qv_33) (cubes _qv_34))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int _v_35)    (nat-to-int _v_35)    (nat-to-int (mult _v_35 (plus _t_36 _t_36)))]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((cubes (mult _qv_33 _qv_34))=(mult (cubes _qv_34) (cubes _qv_33))))
USE ASSUMPTION FAILED

  backtrack to: ([+    (nat-to-int _v_35)    (nat-to-int _v_35)    (nat-to-int (mult _v_35 (plus _t_36 _t_36)))]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
  rewritten [15]: ([+    (nat-to-int _v_35)    (nat-to-int _v_35)    (nat-to-int (mult (plus _t_36 _t_36) _v_35))]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
  Maximum recursion depth reached
CURRENT SUBGOAL ([+    (nat-to-int _v_35)    (nat-to-int _v_35)    (nat-to-int (mult _v_35 (plus _t_36 _t_36)))]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int _v_35)    (nat-to-int _v_35)    (nat-to-int (mult _v_35 (plus _t_36 _t_36)))]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_1 _qv_2)=(plus _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int _v_35)    (nat-to-int _v_35)    (nat-to-int (mult _v_35 (plus _t_36 _t_36)))]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_3 _qv_4) _qv_5)=(plus _qv_3 (plus _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int _v_35)    (nat-to-int _v_35)    (nat-to-int (mult _v_35 (plus _t_36 _t_36)))]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((mult _qv_6 _qv_7)=(mult _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int _v_35)    (nat-to-int _v_35)    (nat-to-int (mult _v_35 (plus _t_36 _t_36)))]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((mult (mult _qv_8 _qv_9) _qv_10)=(mult _qv_8 (mult _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int _v_35)    (nat-to-int _v_35)    (nat-to-int (mult _v_35 (plus _t_36 _t_36)))]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat)) ((tri (tri _qv_11))=_qv_11))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int _v_35)    (nat-to-int _v_35)    (nat-to-int (mult _v_35 (plus _t_36 _t_36)))]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat)) ((cubes (cubes _qv_12))=_qv_12))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int _v_35)    (nat-to-int _v_35)    (nat-to-int (mult _v_35 (plus _t_36 _t_36)))]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int _v_35)    (nat-to-int _v_35)    (nat-to-int (mult _v_35 (plus _t_36 _t_36)))]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_14))=(nat-to-int _qv_14)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int _v_35)    (nat-to-int _v_35)    (nat-to-int (mult _v_35 (plus _t_36 _t_36)))]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat)) ((nat-to-int (tri _qv_15))=(nat-to-int _qv_15)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int _v_35)    (nat-to-int _v_35)    (nat-to-int (mult _v_35 (plus _t_36 _t_36)))]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat)) ((nat-to-int (cubes _qv_16))=(nat-to-int _qv_16)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int _v_35)    (nat-to-int _v_35)    (nat-to-int (mult _v_35 (plus _t_36 _t_36)))]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((mult _qv_17 (plus _qv_18 _qv_19))=(plus (mult _qv_17 _qv_18) (mult _qv_17 _qv_19))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int _v_35)    (nat-to-int _v_35)    (nat-to-int (mult _v_35 (plus _t_36 _t_36)))]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus _qv_20 (mult _qv_21 _qv_22))=(mult (plus _qv_20 _qv_21) (plus _qv_20 _qv_22))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int _v_35)    (nat-to-int _v_35)    (nat-to-int (mult _v_35 (plus _t_36 _t_36)))]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_23 _qv_24))=(plus (succ _qv_23) (succ _qv_24))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int _v_35)    (nat-to-int _v_35)    (nat-to-int (mult _v_35 (plus _t_36 _t_36)))]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_23 _qv_24))=(plus (succ _qv_24) (succ _qv_23))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int _v_35)    (nat-to-int _v_35)    (nat-to-int (mult _v_35 (plus _t_36 _t_36)))]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (mult _qv_25 _qv_26))=(mult (succ _qv_25) (succ _qv_26))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int _v_35)    (nat-to-int _v_35)    (nat-to-int (mult _v_35 (plus _t_36 _t_36)))]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (mult _qv_25 _qv_26))=(mult (succ _qv_26) (succ _qv_25))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int _v_35)    (nat-to-int _v_35)    (nat-to-int (mult _v_35 (plus _t_36 _t_36)))]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((tri (plus _qv_27 _qv_28))=(plus (tri _qv_27) (tri _qv_28))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int _v_35)    (nat-to-int _v_35)    (nat-to-int (mult _v_35 (plus _t_36 _t_36)))]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((tri (plus _qv_27 _qv_28))=(plus (tri _qv_28) (tri _qv_27))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int _v_35)    (nat-to-int _v_35)    (nat-to-int (mult _v_35 (plus _t_36 _t_36)))]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((tri (mult _qv_29 _qv_30))=(mult (tri _qv_29) (tri _qv_30))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int _v_35)    (nat-to-int _v_35)    (nat-to-int (mult _v_35 (plus _t_36 _t_36)))]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((tri (mult _qv_29 _qv_30))=(mult (tri _qv_30) (tri _qv_29))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int _v_35)    (nat-to-int _v_35)    (nat-to-int (mult _v_35 (plus _t_36 _t_36)))]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((cubes (plus _qv_31 _qv_32))=(plus (cubes _qv_31) (cubes _qv_32))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int _v_35)    (nat-to-int _v_35)    (nat-to-int (mult _v_35 (plus _t_36 _t_36)))]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((cubes (plus _qv_31 _qv_32))=(plus (cubes _qv_32) (cubes _qv_31))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int _v_35)    (nat-to-int _v_35)    (nat-to-int (mult _v_35 (plus _t_36 _t_36)))]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((cubes (mult _qv_33 _qv_34))=(mult (cubes _qv_33) (cubes _qv_34))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int _v_35)    (nat-to-int _v_35)    (nat-to-int (mult _v_35 (plus _t_36 _t_36)))]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((cubes (mult _qv_33 _qv_34))=(mult (cubes _qv_34) (cubes _qv_33))))
USE ASSUMPTION FAILED

  backtrack to: ([+    (nat-to-int _v_35)    (nat-to-int _v_35)    (nat-to-int (mult _v_35 (plus _t_36 _t_36)))]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
  rewritten [15]: ([+    (nat-to-int _v_35)    (nat-to-int _v_35)    (nat-to-int (mult _v_35 (plus _t_36 _t_36)))]=(nat-to-int (mult (succ (plus _t_36 (succ _t_36))) _v_35)))
  Maximum recursion depth reached
CURRENT SUBGOAL ([+    (nat-to-int _v_35)    (nat-to-int _v_35)    (nat-to-int (mult _v_35 (plus _t_36 _t_36)))]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int _v_35)    (nat-to-int _v_35)    (nat-to-int (mult _v_35 (plus _t_36 _t_36)))]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_1 _qv_2)=(plus _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int _v_35)    (nat-to-int _v_35)    (nat-to-int (mult _v_35 (plus _t_36 _t_36)))]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_3 _qv_4) _qv_5)=(plus _qv_3 (plus _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int _v_35)    (nat-to-int _v_35)    (nat-to-int (mult _v_35 (plus _t_36 _t_36)))]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((mult _qv_6 _qv_7)=(mult _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int _v_35)    (nat-to-int _v_35)    (nat-to-int (mult _v_35 (plus _t_36 _t_36)))]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((mult (mult _qv_8 _qv_9) _qv_10)=(mult _qv_8 (mult _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int _v_35)    (nat-to-int _v_35)    (nat-to-int (mult _v_35 (plus _t_36 _t_36)))]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat)) ((tri (tri _qv_11))=_qv_11))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int _v_35)    (nat-to-int _v_35)    (nat-to-int (mult _v_35 (plus _t_36 _t_36)))]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat)) ((cubes (cubes _qv_12))=_qv_12))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int _v_35)    (nat-to-int _v_35)    (nat-to-int (mult _v_35 (plus _t_36 _t_36)))]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int _v_35)    (nat-to-int _v_35)    (nat-to-int (mult _v_35 (plus _t_36 _t_36)))]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_14))=(nat-to-int _qv_14)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int _v_35)    (nat-to-int _v_35)    (nat-to-int (mult _v_35 (plus _t_36 _t_36)))]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat)) ((nat-to-int (tri _qv_15))=(nat-to-int _qv_15)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int _v_35)    (nat-to-int _v_35)    (nat-to-int (mult _v_35 (plus _t_36 _t_36)))]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat)) ((nat-to-int (cubes _qv_16))=(nat-to-int _qv_16)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int _v_35)    (nat-to-int _v_35)    (nat-to-int (mult _v_35 (plus _t_36 _t_36)))]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((mult _qv_17 (plus _qv_18 _qv_19))=(plus (mult _qv_17 _qv_18) (mult _qv_17 _qv_19))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int _v_35)    (nat-to-int _v_35)    (nat-to-int (mult _v_35 (plus _t_36 _t_36)))]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus _qv_20 (mult _qv_21 _qv_22))=(mult (plus _qv_20 _qv_21) (plus _qv_20 _qv_22))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int _v_35)    (nat-to-int _v_35)    (nat-to-int (mult _v_35 (plus _t_36 _t_36)))]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_23 _qv_24))=(plus (succ _qv_23) (succ _qv_24))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int _v_35)    (nat-to-int _v_35)    (nat-to-int (mult _v_35 (plus _t_36 _t_36)))]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_23 _qv_24))=(plus (succ _qv_24) (succ _qv_23))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int _v_35)    (nat-to-int _v_35)    (nat-to-int (mult _v_35 (plus _t_36 _t_36)))]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (mult _qv_25 _qv_26))=(mult (succ _qv_25) (succ _qv_26))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int _v_35)    (nat-to-int _v_35)    (nat-to-int (mult _v_35 (plus _t_36 _t_36)))]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (mult _qv_25 _qv_26))=(mult (succ _qv_26) (succ _qv_25))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int _v_35)    (nat-to-int _v_35)    (nat-to-int (mult _v_35 (plus _t_36 _t_36)))]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((tri (plus _qv_27 _qv_28))=(plus (tri _qv_27) (tri _qv_28))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int _v_35)    (nat-to-int _v_35)    (nat-to-int (mult _v_35 (plus _t_36 _t_36)))]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((tri (plus _qv_27 _qv_28))=(plus (tri _qv_28) (tri _qv_27))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int _v_35)    (nat-to-int _v_35)    (nat-to-int (mult _v_35 (plus _t_36 _t_36)))]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((tri (mult _qv_29 _qv_30))=(mult (tri _qv_29) (tri _qv_30))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int _v_35)    (nat-to-int _v_35)    (nat-to-int (mult _v_35 (plus _t_36 _t_36)))]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((tri (mult _qv_29 _qv_30))=(mult (tri _qv_30) (tri _qv_29))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int _v_35)    (nat-to-int _v_35)    (nat-to-int (mult _v_35 (plus _t_36 _t_36)))]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((cubes (plus _qv_31 _qv_32))=(plus (cubes _qv_31) (cubes _qv_32))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int _v_35)    (nat-to-int _v_35)    (nat-to-int (mult _v_35 (plus _t_36 _t_36)))]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((cubes (plus _qv_31 _qv_32))=(plus (cubes _qv_32) (cubes _qv_31))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int _v_35)    (nat-to-int _v_35)    (nat-to-int (mult _v_35 (plus _t_36 _t_36)))]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((cubes (mult _qv_33 _qv_34))=(mult (cubes _qv_33) (cubes _qv_34))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int _v_35)    (nat-to-int _v_35)    (nat-to-int (mult _v_35 (plus _t_36 _t_36)))]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((cubes (mult _qv_33 _qv_34))=(mult (cubes _qv_34) (cubes _qv_33))))
USE ASSUMPTION FAILED

  backtrack to: ([+    (nat-to-int _v_35)    (nat-to-int _v_35)    (nat-to-int (mult _v_35 (plus _t_36 _t_36)))]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
  rewritten [18]: ([+    (nat-to-int _v_35)    (nat-to-int _v_35)    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
  Maximum recursion depth reached
CURRENT SUBGOAL ([+    (nat-to-int _v_35)    (nat-to-int _v_35)    (nat-to-int (mult _v_35 (plus _t_36 _t_36)))]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int _v_35)    (nat-to-int _v_35)    (nat-to-int (mult _v_35 (plus _t_36 _t_36)))]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_1 _qv_2)=(plus _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int _v_35)    (nat-to-int _v_35)    (nat-to-int (mult _v_35 (plus _t_36 _t_36)))]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_3 _qv_4) _qv_5)=(plus _qv_3 (plus _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int _v_35)    (nat-to-int _v_35)    (nat-to-int (mult _v_35 (plus _t_36 _t_36)))]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((mult _qv_6 _qv_7)=(mult _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int _v_35)    (nat-to-int _v_35)    (nat-to-int (mult _v_35 (plus _t_36 _t_36)))]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((mult (mult _qv_8 _qv_9) _qv_10)=(mult _qv_8 (mult _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int _v_35)    (nat-to-int _v_35)    (nat-to-int (mult _v_35 (plus _t_36 _t_36)))]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat)) ((tri (tri _qv_11))=_qv_11))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int _v_35)    (nat-to-int _v_35)    (nat-to-int (mult _v_35 (plus _t_36 _t_36)))]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat)) ((cubes (cubes _qv_12))=_qv_12))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int _v_35)    (nat-to-int _v_35)    (nat-to-int (mult _v_35 (plus _t_36 _t_36)))]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int _v_35)    (nat-to-int _v_35)    (nat-to-int (mult _v_35 (plus _t_36 _t_36)))]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_14))=(nat-to-int _qv_14)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int _v_35)    (nat-to-int _v_35)    (nat-to-int (mult _v_35 (plus _t_36 _t_36)))]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat)) ((nat-to-int (tri _qv_15))=(nat-to-int _qv_15)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int _v_35)    (nat-to-int _v_35)    (nat-to-int (mult _v_35 (plus _t_36 _t_36)))]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat)) ((nat-to-int (cubes _qv_16))=(nat-to-int _qv_16)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int _v_35)    (nat-to-int _v_35)    (nat-to-int (mult _v_35 (plus _t_36 _t_36)))]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((mult _qv_17 (plus _qv_18 _qv_19))=(plus (mult _qv_17 _qv_18) (mult _qv_17 _qv_19))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int _v_35)    (nat-to-int _v_35)    (nat-to-int (mult _v_35 (plus _t_36 _t_36)))]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus _qv_20 (mult _qv_21 _qv_22))=(mult (plus _qv_20 _qv_21) (plus _qv_20 _qv_22))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int _v_35)    (nat-to-int _v_35)    (nat-to-int (mult _v_35 (plus _t_36 _t_36)))]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_23 _qv_24))=(plus (succ _qv_23) (succ _qv_24))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int _v_35)    (nat-to-int _v_35)    (nat-to-int (mult _v_35 (plus _t_36 _t_36)))]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_23 _qv_24))=(plus (succ _qv_24) (succ _qv_23))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int _v_35)    (nat-to-int _v_35)    (nat-to-int (mult _v_35 (plus _t_36 _t_36)))]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (mult _qv_25 _qv_26))=(mult (succ _qv_25) (succ _qv_26))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int _v_35)    (nat-to-int _v_35)    (nat-to-int (mult _v_35 (plus _t_36 _t_36)))]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (mult _qv_25 _qv_26))=(mult (succ _qv_26) (succ _qv_25))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int _v_35)    (nat-to-int _v_35)    (nat-to-int (mult _v_35 (plus _t_36 _t_36)))]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((tri (plus _qv_27 _qv_28))=(plus (tri _qv_27) (tri _qv_28))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int _v_35)    (nat-to-int _v_35)    (nat-to-int (mult _v_35 (plus _t_36 _t_36)))]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((tri (plus _qv_27 _qv_28))=(plus (tri _qv_28) (tri _qv_27))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int _v_35)    (nat-to-int _v_35)    (nat-to-int (mult _v_35 (plus _t_36 _t_36)))]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((tri (mult _qv_29 _qv_30))=(mult (tri _qv_29) (tri _qv_30))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int _v_35)    (nat-to-int _v_35)    (nat-to-int (mult _v_35 (plus _t_36 _t_36)))]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((tri (mult _qv_29 _qv_30))=(mult (tri _qv_30) (tri _qv_29))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int _v_35)    (nat-to-int _v_35)    (nat-to-int (mult _v_35 (plus _t_36 _t_36)))]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((cubes (plus _qv_31 _qv_32))=(plus (cubes _qv_31) (cubes _qv_32))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int _v_35)    (nat-to-int _v_35)    (nat-to-int (mult _v_35 (plus _t_36 _t_36)))]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((cubes (plus _qv_31 _qv_32))=(plus (cubes _qv_32) (cubes _qv_31))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int _v_35)    (nat-to-int _v_35)    (nat-to-int (mult _v_35 (plus _t_36 _t_36)))]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((cubes (mult _qv_33 _qv_34))=(mult (cubes _qv_33) (cubes _qv_34))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int _v_35)    (nat-to-int _v_35)    (nat-to-int (mult _v_35 (plus _t_36 _t_36)))]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((cubes (mult _qv_33 _qv_34))=(mult (cubes _qv_34) (cubes _qv_33))))
USE ASSUMPTION FAILED

  backtrack to: ([+    (nat-to-int _v_35)    (nat-to-int _v_35)    (nat-to-int (mult _v_35 (plus _t_36 _t_36)))]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
  rewritten [2]: (((2*(nat-to-int _v_35))+(nat-to-int (mult _v_35 (plus _t_36 _t_36))))=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
  Maximum recursion depth reached
CURRENT SUBGOAL ([+    (nat-to-int _v_35)    (nat-to-int _v_35)    (nat-to-int (mult _v_35 (plus _t_36 _t_36)))]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int _v_35)    (nat-to-int _v_35)    (nat-to-int (mult _v_35 (plus _t_36 _t_36)))]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_1 _qv_2)=(plus _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int _v_35)    (nat-to-int _v_35)    (nat-to-int (mult _v_35 (plus _t_36 _t_36)))]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_3 _qv_4) _qv_5)=(plus _qv_3 (plus _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int _v_35)    (nat-to-int _v_35)    (nat-to-int (mult _v_35 (plus _t_36 _t_36)))]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((mult _qv_6 _qv_7)=(mult _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int _v_35)    (nat-to-int _v_35)    (nat-to-int (mult _v_35 (plus _t_36 _t_36)))]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((mult (mult _qv_8 _qv_9) _qv_10)=(mult _qv_8 (mult _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int _v_35)    (nat-to-int _v_35)    (nat-to-int (mult _v_35 (plus _t_36 _t_36)))]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat)) ((tri (tri _qv_11))=_qv_11))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int _v_35)    (nat-to-int _v_35)    (nat-to-int (mult _v_35 (plus _t_36 _t_36)))]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat)) ((cubes (cubes _qv_12))=_qv_12))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int _v_35)    (nat-to-int _v_35)    (nat-to-int (mult _v_35 (plus _t_36 _t_36)))]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int _v_35)    (nat-to-int _v_35)    (nat-to-int (mult _v_35 (plus _t_36 _t_36)))]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_14))=(nat-to-int _qv_14)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int _v_35)    (nat-to-int _v_35)    (nat-to-int (mult _v_35 (plus _t_36 _t_36)))]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat)) ((nat-to-int (tri _qv_15))=(nat-to-int _qv_15)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int _v_35)    (nat-to-int _v_35)    (nat-to-int (mult _v_35 (plus _t_36 _t_36)))]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat)) ((nat-to-int (cubes _qv_16))=(nat-to-int _qv_16)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int _v_35)    (nat-to-int _v_35)    (nat-to-int (mult _v_35 (plus _t_36 _t_36)))]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((mult _qv_17 (plus _qv_18 _qv_19))=(plus (mult _qv_17 _qv_18) (mult _qv_17 _qv_19))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int _v_35)    (nat-to-int _v_35)    (nat-to-int (mult _v_35 (plus _t_36 _t_36)))]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus _qv_20 (mult _qv_21 _qv_22))=(mult (plus _qv_20 _qv_21) (plus _qv_20 _qv_22))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int _v_35)    (nat-to-int _v_35)    (nat-to-int (mult _v_35 (plus _t_36 _t_36)))]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_23 _qv_24))=(plus (succ _qv_23) (succ _qv_24))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int _v_35)    (nat-to-int _v_35)    (nat-to-int (mult _v_35 (plus _t_36 _t_36)))]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_23 _qv_24))=(plus (succ _qv_24) (succ _qv_23))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int _v_35)    (nat-to-int _v_35)    (nat-to-int (mult _v_35 (plus _t_36 _t_36)))]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (mult _qv_25 _qv_26))=(mult (succ _qv_25) (succ _qv_26))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int _v_35)    (nat-to-int _v_35)    (nat-to-int (mult _v_35 (plus _t_36 _t_36)))]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (mult _qv_25 _qv_26))=(mult (succ _qv_26) (succ _qv_25))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int _v_35)    (nat-to-int _v_35)    (nat-to-int (mult _v_35 (plus _t_36 _t_36)))]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((tri (plus _qv_27 _qv_28))=(plus (tri _qv_27) (tri _qv_28))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int _v_35)    (nat-to-int _v_35)    (nat-to-int (mult _v_35 (plus _t_36 _t_36)))]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((tri (plus _qv_27 _qv_28))=(plus (tri _qv_28) (tri _qv_27))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int _v_35)    (nat-to-int _v_35)    (nat-to-int (mult _v_35 (plus _t_36 _t_36)))]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((tri (mult _qv_29 _qv_30))=(mult (tri _qv_29) (tri _qv_30))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int _v_35)    (nat-to-int _v_35)    (nat-to-int (mult _v_35 (plus _t_36 _t_36)))]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((tri (mult _qv_29 _qv_30))=(mult (tri _qv_30) (tri _qv_29))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int _v_35)    (nat-to-int _v_35)    (nat-to-int (mult _v_35 (plus _t_36 _t_36)))]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((cubes (plus _qv_31 _qv_32))=(plus (cubes _qv_31) (cubes _qv_32))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int _v_35)    (nat-to-int _v_35)    (nat-to-int (mult _v_35 (plus _t_36 _t_36)))]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((cubes (plus _qv_31 _qv_32))=(plus (cubes _qv_32) (cubes _qv_31))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int _v_35)    (nat-to-int _v_35)    (nat-to-int (mult _v_35 (plus _t_36 _t_36)))]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((cubes (mult _qv_33 _qv_34))=(mult (cubes _qv_33) (cubes _qv_34))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int _v_35)    (nat-to-int _v_35)    (nat-to-int (mult _v_35 (plus _t_36 _t_36)))]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((cubes (mult _qv_33 _qv_34))=(mult (cubes _qv_34) (cubes _qv_33))))
USE ASSUMPTION FAILED

  backtrack to: ([+    (nat-to-int _v_35)    (nat-to-int _v_35)    (nat-to-int (mult _v_35 (plus _t_36 _t_36)))]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
  rewritten [13]: ([+    (nat-to-int _v_35)    (nat-to-int _v_35)    (nat-to-int (mult _v_35 (plus _t_36 _t_36)))]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
  Maximum recursion depth reached
CURRENT SUBGOAL ([+    (nat-to-int _v_35)    (nat-to-int _v_35)    (nat-to-int (mult _v_35 (plus _t_36 _t_36)))]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int _v_35)    (nat-to-int _v_35)    (nat-to-int (mult _v_35 (plus _t_36 _t_36)))]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_1 _qv_2)=(plus _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int _v_35)    (nat-to-int _v_35)    (nat-to-int (mult _v_35 (plus _t_36 _t_36)))]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_3 _qv_4) _qv_5)=(plus _qv_3 (plus _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int _v_35)    (nat-to-int _v_35)    (nat-to-int (mult _v_35 (plus _t_36 _t_36)))]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((mult _qv_6 _qv_7)=(mult _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int _v_35)    (nat-to-int _v_35)    (nat-to-int (mult _v_35 (plus _t_36 _t_36)))]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((mult (mult _qv_8 _qv_9) _qv_10)=(mult _qv_8 (mult _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int _v_35)    (nat-to-int _v_35)    (nat-to-int (mult _v_35 (plus _t_36 _t_36)))]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat)) ((tri (tri _qv_11))=_qv_11))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int _v_35)    (nat-to-int _v_35)    (nat-to-int (mult _v_35 (plus _t_36 _t_36)))]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat)) ((cubes (cubes _qv_12))=_qv_12))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int _v_35)    (nat-to-int _v_35)    (nat-to-int (mult _v_35 (plus _t_36 _t_36)))]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int _v_35)    (nat-to-int _v_35)    (nat-to-int (mult _v_35 (plus _t_36 _t_36)))]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_14))=(nat-to-int _qv_14)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int _v_35)    (nat-to-int _v_35)    (nat-to-int (mult _v_35 (plus _t_36 _t_36)))]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat)) ((nat-to-int (tri _qv_15))=(nat-to-int _qv_15)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int _v_35)    (nat-to-int _v_35)    (nat-to-int (mult _v_35 (plus _t_36 _t_36)))]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat)) ((nat-to-int (cubes _qv_16))=(nat-to-int _qv_16)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int _v_35)    (nat-to-int _v_35)    (nat-to-int (mult _v_35 (plus _t_36 _t_36)))]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((mult _qv_17 (plus _qv_18 _qv_19))=(plus (mult _qv_17 _qv_18) (mult _qv_17 _qv_19))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int _v_35)    (nat-to-int _v_35)    (nat-to-int (mult _v_35 (plus _t_36 _t_36)))]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus _qv_20 (mult _qv_21 _qv_22))=(mult (plus _qv_20 _qv_21) (plus _qv_20 _qv_22))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int _v_35)    (nat-to-int _v_35)    (nat-to-int (mult _v_35 (plus _t_36 _t_36)))]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_23 _qv_24))=(plus (succ _qv_23) (succ _qv_24))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int _v_35)    (nat-to-int _v_35)    (nat-to-int (mult _v_35 (plus _t_36 _t_36)))]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_23 _qv_24))=(plus (succ _qv_24) (succ _qv_23))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int _v_35)    (nat-to-int _v_35)    (nat-to-int (mult _v_35 (plus _t_36 _t_36)))]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (mult _qv_25 _qv_26))=(mult (succ _qv_25) (succ _qv_26))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int _v_35)    (nat-to-int _v_35)    (nat-to-int (mult _v_35 (plus _t_36 _t_36)))]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (mult _qv_25 _qv_26))=(mult (succ _qv_26) (succ _qv_25))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int _v_35)    (nat-to-int _v_35)    (nat-to-int (mult _v_35 (plus _t_36 _t_36)))]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((tri (plus _qv_27 _qv_28))=(plus (tri _qv_27) (tri _qv_28))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int _v_35)    (nat-to-int _v_35)    (nat-to-int (mult _v_35 (plus _t_36 _t_36)))]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((tri (plus _qv_27 _qv_28))=(plus (tri _qv_28) (tri _qv_27))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int _v_35)    (nat-to-int _v_35)    (nat-to-int (mult _v_35 (plus _t_36 _t_36)))]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((tri (mult _qv_29 _qv_30))=(mult (tri _qv_29) (tri _qv_30))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int _v_35)    (nat-to-int _v_35)    (nat-to-int (mult _v_35 (plus _t_36 _t_36)))]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((tri (mult _qv_29 _qv_30))=(mult (tri _qv_30) (tri _qv_29))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int _v_35)    (nat-to-int _v_35)    (nat-to-int (mult _v_35 (plus _t_36 _t_36)))]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((cubes (plus _qv_31 _qv_32))=(plus (cubes _qv_31) (cubes _qv_32))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int _v_35)    (nat-to-int _v_35)    (nat-to-int (mult _v_35 (plus _t_36 _t_36)))]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((cubes (plus _qv_31 _qv_32))=(plus (cubes _qv_32) (cubes _qv_31))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int _v_35)    (nat-to-int _v_35)    (nat-to-int (mult _v_35 (plus _t_36 _t_36)))]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((cubes (mult _qv_33 _qv_34))=(mult (cubes _qv_33) (cubes _qv_34))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int _v_35)    (nat-to-int _v_35)    (nat-to-int (mult _v_35 (plus _t_36 _t_36)))]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((cubes (mult _qv_33 _qv_34))=(mult (cubes _qv_34) (cubes _qv_33))))
USE ASSUMPTION FAILED

  backtrack to: ([+    (nat-to-int _v_35)    (nat-to-int _v_35)    (nat-to-int (mult _v_35 (plus _t_36 _t_36)))]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
  rewritten [13]: ([+    (nat-to-int _v_35)    (nat-to-int _v_35)    (nat-to-int (mult _v_35 (plus _t_36 _t_36)))]=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
  Maximum recursion depth reached
CURRENT SUBGOAL ([+    (nat-to-int _v_35)    (nat-to-int _v_35)    (nat-to-int (mult _v_35 (plus _t_36 _t_36)))]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int _v_35)    (nat-to-int _v_35)    (nat-to-int (mult _v_35 (plus _t_36 _t_36)))]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_1 _qv_2)=(plus _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int _v_35)    (nat-to-int _v_35)    (nat-to-int (mult _v_35 (plus _t_36 _t_36)))]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_3 _qv_4) _qv_5)=(plus _qv_3 (plus _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int _v_35)    (nat-to-int _v_35)    (nat-to-int (mult _v_35 (plus _t_36 _t_36)))]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((mult _qv_6 _qv_7)=(mult _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int _v_35)    (nat-to-int _v_35)    (nat-to-int (mult _v_35 (plus _t_36 _t_36)))]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((mult (mult _qv_8 _qv_9) _qv_10)=(mult _qv_8 (mult _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int _v_35)    (nat-to-int _v_35)    (nat-to-int (mult _v_35 (plus _t_36 _t_36)))]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat)) ((tri (tri _qv_11))=_qv_11))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int _v_35)    (nat-to-int _v_35)    (nat-to-int (mult _v_35 (plus _t_36 _t_36)))]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat)) ((cubes (cubes _qv_12))=_qv_12))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int _v_35)    (nat-to-int _v_35)    (nat-to-int (mult _v_35 (plus _t_36 _t_36)))]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int _v_35)    (nat-to-int _v_35)    (nat-to-int (mult _v_35 (plus _t_36 _t_36)))]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_14))=(nat-to-int _qv_14)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int _v_35)    (nat-to-int _v_35)    (nat-to-int (mult _v_35 (plus _t_36 _t_36)))]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat)) ((nat-to-int (tri _qv_15))=(nat-to-int _qv_15)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int _v_35)    (nat-to-int _v_35)    (nat-to-int (mult _v_35 (plus _t_36 _t_36)))]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat)) ((nat-to-int (cubes _qv_16))=(nat-to-int _qv_16)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int _v_35)    (nat-to-int _v_35)    (nat-to-int (mult _v_35 (plus _t_36 _t_36)))]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((mult _qv_17 (plus _qv_18 _qv_19))=(plus (mult _qv_17 _qv_18) (mult _qv_17 _qv_19))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int _v_35)    (nat-to-int _v_35)    (nat-to-int (mult _v_35 (plus _t_36 _t_36)))]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus _qv_20 (mult _qv_21 _qv_22))=(mult (plus _qv_20 _qv_21) (plus _qv_20 _qv_22))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int _v_35)    (nat-to-int _v_35)    (nat-to-int (mult _v_35 (plus _t_36 _t_36)))]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_23 _qv_24))=(plus (succ _qv_23) (succ _qv_24))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int _v_35)    (nat-to-int _v_35)    (nat-to-int (mult _v_35 (plus _t_36 _t_36)))]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_23 _qv_24))=(plus (succ _qv_24) (succ _qv_23))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int _v_35)    (nat-to-int _v_35)    (nat-to-int (mult _v_35 (plus _t_36 _t_36)))]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (mult _qv_25 _qv_26))=(mult (succ _qv_25) (succ _qv_26))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int _v_35)    (nat-to-int _v_35)    (nat-to-int (mult _v_35 (plus _t_36 _t_36)))]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (mult _qv_25 _qv_26))=(mult (succ _qv_26) (succ _qv_25))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int _v_35)    (nat-to-int _v_35)    (nat-to-int (mult _v_35 (plus _t_36 _t_36)))]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((tri (plus _qv_27 _qv_28))=(plus (tri _qv_27) (tri _qv_28))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int _v_35)    (nat-to-int _v_35)    (nat-to-int (mult _v_35 (plus _t_36 _t_36)))]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((tri (plus _qv_27 _qv_28))=(plus (tri _qv_28) (tri _qv_27))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int _v_35)    (nat-to-int _v_35)    (nat-to-int (mult _v_35 (plus _t_36 _t_36)))]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((tri (mult _qv_29 _qv_30))=(mult (tri _qv_29) (tri _qv_30))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int _v_35)    (nat-to-int _v_35)    (nat-to-int (mult _v_35 (plus _t_36 _t_36)))]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((tri (mult _qv_29 _qv_30))=(mult (tri _qv_30) (tri _qv_29))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int _v_35)    (nat-to-int _v_35)    (nat-to-int (mult _v_35 (plus _t_36 _t_36)))]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((cubes (plus _qv_31 _qv_32))=(plus (cubes _qv_31) (cubes _qv_32))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int _v_35)    (nat-to-int _v_35)    (nat-to-int (mult _v_35 (plus _t_36 _t_36)))]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((cubes (plus _qv_31 _qv_32))=(plus (cubes _qv_32) (cubes _qv_31))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int _v_35)    (nat-to-int _v_35)    (nat-to-int (mult _v_35 (plus _t_36 _t_36)))]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((cubes (mult _qv_33 _qv_34))=(mult (cubes _qv_33) (cubes _qv_34))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int _v_35)    (nat-to-int _v_35)    (nat-to-int (mult _v_35 (plus _t_36 _t_36)))]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((cubes (mult _qv_33 _qv_34))=(mult (cubes _qv_34) (cubes _qv_33))))
USE ASSUMPTION FAILED

  backtrack to: ([+    (nat-to-int _v_35)    (nat-to-int _v_35)    (nat-to-int (mult _v_35 (plus _t_36 _t_36)))]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
  rewritten [15]: ([+    (nat-to-int _v_35)    (nat-to-int _v_35)    (nat-to-int (mult (plus _t_36 _t_36) _v_35))]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
  Maximum recursion depth reached
CURRENT SUBGOAL ([+    (nat-to-int _v_35)    (nat-to-int _v_35)    (nat-to-int (mult _v_35 (plus _t_36 _t_36)))]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int _v_35)    (nat-to-int _v_35)    (nat-to-int (mult _v_35 (plus _t_36 _t_36)))]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_1 _qv_2)=(plus _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int _v_35)    (nat-to-int _v_35)    (nat-to-int (mult _v_35 (plus _t_36 _t_36)))]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_3 _qv_4) _qv_5)=(plus _qv_3 (plus _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int _v_35)    (nat-to-int _v_35)    (nat-to-int (mult _v_35 (plus _t_36 _t_36)))]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((mult _qv_6 _qv_7)=(mult _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int _v_35)    (nat-to-int _v_35)    (nat-to-int (mult _v_35 (plus _t_36 _t_36)))]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((mult (mult _qv_8 _qv_9) _qv_10)=(mult _qv_8 (mult _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int _v_35)    (nat-to-int _v_35)    (nat-to-int (mult _v_35 (plus _t_36 _t_36)))]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat)) ((tri (tri _qv_11))=_qv_11))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int _v_35)    (nat-to-int _v_35)    (nat-to-int (mult _v_35 (plus _t_36 _t_36)))]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat)) ((cubes (cubes _qv_12))=_qv_12))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int _v_35)    (nat-to-int _v_35)    (nat-to-int (mult _v_35 (plus _t_36 _t_36)))]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int _v_35)    (nat-to-int _v_35)    (nat-to-int (mult _v_35 (plus _t_36 _t_36)))]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_14))=(nat-to-int _qv_14)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int _v_35)    (nat-to-int _v_35)    (nat-to-int (mult _v_35 (plus _t_36 _t_36)))]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat)) ((nat-to-int (tri _qv_15))=(nat-to-int _qv_15)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int _v_35)    (nat-to-int _v_35)    (nat-to-int (mult _v_35 (plus _t_36 _t_36)))]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat)) ((nat-to-int (cubes _qv_16))=(nat-to-int _qv_16)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int _v_35)    (nat-to-int _v_35)    (nat-to-int (mult _v_35 (plus _t_36 _t_36)))]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((mult _qv_17 (plus _qv_18 _qv_19))=(plus (mult _qv_17 _qv_18) (mult _qv_17 _qv_19))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int _v_35)    (nat-to-int _v_35)    (nat-to-int (mult _v_35 (plus _t_36 _t_36)))]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus _qv_20 (mult _qv_21 _qv_22))=(mult (plus _qv_20 _qv_21) (plus _qv_20 _qv_22))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int _v_35)    (nat-to-int _v_35)    (nat-to-int (mult _v_35 (plus _t_36 _t_36)))]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_23 _qv_24))=(plus (succ _qv_23) (succ _qv_24))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int _v_35)    (nat-to-int _v_35)    (nat-to-int (mult _v_35 (plus _t_36 _t_36)))]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_23 _qv_24))=(plus (succ _qv_24) (succ _qv_23))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int _v_35)    (nat-to-int _v_35)    (nat-to-int (mult _v_35 (plus _t_36 _t_36)))]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (mult _qv_25 _qv_26))=(mult (succ _qv_25) (succ _qv_26))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int _v_35)    (nat-to-int _v_35)    (nat-to-int (mult _v_35 (plus _t_36 _t_36)))]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (mult _qv_25 _qv_26))=(mult (succ _qv_26) (succ _qv_25))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int _v_35)    (nat-to-int _v_35)    (nat-to-int (mult _v_35 (plus _t_36 _t_36)))]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((tri (plus _qv_27 _qv_28))=(plus (tri _qv_27) (tri _qv_28))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int _v_35)    (nat-to-int _v_35)    (nat-to-int (mult _v_35 (plus _t_36 _t_36)))]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((tri (plus _qv_27 _qv_28))=(plus (tri _qv_28) (tri _qv_27))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int _v_35)    (nat-to-int _v_35)    (nat-to-int (mult _v_35 (plus _t_36 _t_36)))]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((tri (mult _qv_29 _qv_30))=(mult (tri _qv_29) (tri _qv_30))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int _v_35)    (nat-to-int _v_35)    (nat-to-int (mult _v_35 (plus _t_36 _t_36)))]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((tri (mult _qv_29 _qv_30))=(mult (tri _qv_30) (tri _qv_29))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int _v_35)    (nat-to-int _v_35)    (nat-to-int (mult _v_35 (plus _t_36 _t_36)))]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((cubes (plus _qv_31 _qv_32))=(plus (cubes _qv_31) (cubes _qv_32))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int _v_35)    (nat-to-int _v_35)    (nat-to-int (mult _v_35 (plus _t_36 _t_36)))]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((cubes (plus _qv_31 _qv_32))=(plus (cubes _qv_32) (cubes _qv_31))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int _v_35)    (nat-to-int _v_35)    (nat-to-int (mult _v_35 (plus _t_36 _t_36)))]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((cubes (mult _qv_33 _qv_34))=(mult (cubes _qv_33) (cubes _qv_34))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int _v_35)    (nat-to-int _v_35)    (nat-to-int (mult _v_35 (plus _t_36 _t_36)))]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((cubes (mult _qv_33 _qv_34))=(mult (cubes _qv_34) (cubes _qv_33))))
USE ASSUMPTION FAILED

  backtrack to: ([+    (nat-to-int _v_35)    (nat-to-int _v_35)    (nat-to-int (mult _v_35 (plus _t_36 _t_36)))]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
  rewritten [15]: ([+    (nat-to-int _v_35)    (nat-to-int _v_35)    (nat-to-int (mult _v_35 (plus _t_36 _t_36)))]=(nat-to-int (mult (succ (plus _t_36 (succ _t_36))) _v_35)))
  Maximum recursion depth reached
CURRENT SUBGOAL ([+    (nat-to-int _v_35)    (nat-to-int _v_35)    (nat-to-int (mult _v_35 (plus _t_36 _t_36)))]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int _v_35)    (nat-to-int _v_35)    (nat-to-int (mult _v_35 (plus _t_36 _t_36)))]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_1 _qv_2)=(plus _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int _v_35)    (nat-to-int _v_35)    (nat-to-int (mult _v_35 (plus _t_36 _t_36)))]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_3 _qv_4) _qv_5)=(plus _qv_3 (plus _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int _v_35)    (nat-to-int _v_35)    (nat-to-int (mult _v_35 (plus _t_36 _t_36)))]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((mult _qv_6 _qv_7)=(mult _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int _v_35)    (nat-to-int _v_35)    (nat-to-int (mult _v_35 (plus _t_36 _t_36)))]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((mult (mult _qv_8 _qv_9) _qv_10)=(mult _qv_8 (mult _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int _v_35)    (nat-to-int _v_35)    (nat-to-int (mult _v_35 (plus _t_36 _t_36)))]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat)) ((tri (tri _qv_11))=_qv_11))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int _v_35)    (nat-to-int _v_35)    (nat-to-int (mult _v_35 (plus _t_36 _t_36)))]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat)) ((cubes (cubes _qv_12))=_qv_12))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int _v_35)    (nat-to-int _v_35)    (nat-to-int (mult _v_35 (plus _t_36 _t_36)))]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int _v_35)    (nat-to-int _v_35)    (nat-to-int (mult _v_35 (plus _t_36 _t_36)))]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_14))=(nat-to-int _qv_14)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int _v_35)    (nat-to-int _v_35)    (nat-to-int (mult _v_35 (plus _t_36 _t_36)))]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat)) ((nat-to-int (tri _qv_15))=(nat-to-int _qv_15)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int _v_35)    (nat-to-int _v_35)    (nat-to-int (mult _v_35 (plus _t_36 _t_36)))]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat)) ((nat-to-int (cubes _qv_16))=(nat-to-int _qv_16)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int _v_35)    (nat-to-int _v_35)    (nat-to-int (mult _v_35 (plus _t_36 _t_36)))]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((mult _qv_17 (plus _qv_18 _qv_19))=(plus (mult _qv_17 _qv_18) (mult _qv_17 _qv_19))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int _v_35)    (nat-to-int _v_35)    (nat-to-int (mult _v_35 (plus _t_36 _t_36)))]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus _qv_20 (mult _qv_21 _qv_22))=(mult (plus _qv_20 _qv_21) (plus _qv_20 _qv_22))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int _v_35)    (nat-to-int _v_35)    (nat-to-int (mult _v_35 (plus _t_36 _t_36)))]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_23 _qv_24))=(plus (succ _qv_23) (succ _qv_24))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int _v_35)    (nat-to-int _v_35)    (nat-to-int (mult _v_35 (plus _t_36 _t_36)))]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_23 _qv_24))=(plus (succ _qv_24) (succ _qv_23))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int _v_35)    (nat-to-int _v_35)    (nat-to-int (mult _v_35 (plus _t_36 _t_36)))]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (mult _qv_25 _qv_26))=(mult (succ _qv_25) (succ _qv_26))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int _v_35)    (nat-to-int _v_35)    (nat-to-int (mult _v_35 (plus _t_36 _t_36)))]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (mult _qv_25 _qv_26))=(mult (succ _qv_26) (succ _qv_25))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int _v_35)    (nat-to-int _v_35)    (nat-to-int (mult _v_35 (plus _t_36 _t_36)))]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((tri (plus _qv_27 _qv_28))=(plus (tri _qv_27) (tri _qv_28))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int _v_35)    (nat-to-int _v_35)    (nat-to-int (mult _v_35 (plus _t_36 _t_36)))]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((tri (plus _qv_27 _qv_28))=(plus (tri _qv_28) (tri _qv_27))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int _v_35)    (nat-to-int _v_35)    (nat-to-int (mult _v_35 (plus _t_36 _t_36)))]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((tri (mult _qv_29 _qv_30))=(mult (tri _qv_29) (tri _qv_30))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int _v_35)    (nat-to-int _v_35)    (nat-to-int (mult _v_35 (plus _t_36 _t_36)))]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((tri (mult _qv_29 _qv_30))=(mult (tri _qv_30) (tri _qv_29))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int _v_35)    (nat-to-int _v_35)    (nat-to-int (mult _v_35 (plus _t_36 _t_36)))]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((cubes (plus _qv_31 _qv_32))=(plus (cubes _qv_31) (cubes _qv_32))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int _v_35)    (nat-to-int _v_35)    (nat-to-int (mult _v_35 (plus _t_36 _t_36)))]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((cubes (plus _qv_31 _qv_32))=(plus (cubes _qv_32) (cubes _qv_31))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int _v_35)    (nat-to-int _v_35)    (nat-to-int (mult _v_35 (plus _t_36 _t_36)))]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((cubes (mult _qv_33 _qv_34))=(mult (cubes _qv_33) (cubes _qv_34))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int _v_35)    (nat-to-int _v_35)    (nat-to-int (mult _v_35 (plus _t_36 _t_36)))]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((cubes (mult _qv_33 _qv_34))=(mult (cubes _qv_34) (cubes _qv_33))))
USE ASSUMPTION FAILED

  backtrack to: ([+    (nat-to-int _v_35)    (nat-to-int _v_35)    (nat-to-int (mult _v_35 (plus _t_36 _t_36)))]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
  rewritten [18]: ([+    (nat-to-int _v_35)    (nat-to-int _v_35)    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
  Maximum recursion depth reached
CURRENT SUBGOAL ([+    (nat-to-int _v_35)    (nat-to-int _v_35)    (nat-to-int (mult _v_35 (plus _t_36 _t_36)))]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int _v_35)    (nat-to-int _v_35)    (nat-to-int (mult _v_35 (plus _t_36 _t_36)))]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_1 _qv_2)=(plus _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int _v_35)    (nat-to-int _v_35)    (nat-to-int (mult _v_35 (plus _t_36 _t_36)))]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_3 _qv_4) _qv_5)=(plus _qv_3 (plus _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int _v_35)    (nat-to-int _v_35)    (nat-to-int (mult _v_35 (plus _t_36 _t_36)))]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((mult _qv_6 _qv_7)=(mult _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int _v_35)    (nat-to-int _v_35)    (nat-to-int (mult _v_35 (plus _t_36 _t_36)))]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((mult (mult _qv_8 _qv_9) _qv_10)=(mult _qv_8 (mult _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int _v_35)    (nat-to-int _v_35)    (nat-to-int (mult _v_35 (plus _t_36 _t_36)))]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat)) ((tri (tri _qv_11))=_qv_11))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int _v_35)    (nat-to-int _v_35)    (nat-to-int (mult _v_35 (plus _t_36 _t_36)))]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat)) ((cubes (cubes _qv_12))=_qv_12))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int _v_35)    (nat-to-int _v_35)    (nat-to-int (mult _v_35 (plus _t_36 _t_36)))]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int _v_35)    (nat-to-int _v_35)    (nat-to-int (mult _v_35 (plus _t_36 _t_36)))]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_14))=(nat-to-int _qv_14)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int _v_35)    (nat-to-int _v_35)    (nat-to-int (mult _v_35 (plus _t_36 _t_36)))]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat)) ((nat-to-int (tri _qv_15))=(nat-to-int _qv_15)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int _v_35)    (nat-to-int _v_35)    (nat-to-int (mult _v_35 (plus _t_36 _t_36)))]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat)) ((nat-to-int (cubes _qv_16))=(nat-to-int _qv_16)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int _v_35)    (nat-to-int _v_35)    (nat-to-int (mult _v_35 (plus _t_36 _t_36)))]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((mult _qv_17 (plus _qv_18 _qv_19))=(plus (mult _qv_17 _qv_18) (mult _qv_17 _qv_19))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int _v_35)    (nat-to-int _v_35)    (nat-to-int (mult _v_35 (plus _t_36 _t_36)))]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus _qv_20 (mult _qv_21 _qv_22))=(mult (plus _qv_20 _qv_21) (plus _qv_20 _qv_22))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int _v_35)    (nat-to-int _v_35)    (nat-to-int (mult _v_35 (plus _t_36 _t_36)))]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_23 _qv_24))=(plus (succ _qv_23) (succ _qv_24))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int _v_35)    (nat-to-int _v_35)    (nat-to-int (mult _v_35 (plus _t_36 _t_36)))]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_23 _qv_24))=(plus (succ _qv_24) (succ _qv_23))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int _v_35)    (nat-to-int _v_35)    (nat-to-int (mult _v_35 (plus _t_36 _t_36)))]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (mult _qv_25 _qv_26))=(mult (succ _qv_25) (succ _qv_26))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int _v_35)    (nat-to-int _v_35)    (nat-to-int (mult _v_35 (plus _t_36 _t_36)))]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (mult _qv_25 _qv_26))=(mult (succ _qv_26) (succ _qv_25))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int _v_35)    (nat-to-int _v_35)    (nat-to-int (mult _v_35 (plus _t_36 _t_36)))]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((tri (plus _qv_27 _qv_28))=(plus (tri _qv_27) (tri _qv_28))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int _v_35)    (nat-to-int _v_35)    (nat-to-int (mult _v_35 (plus _t_36 _t_36)))]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((tri (plus _qv_27 _qv_28))=(plus (tri _qv_28) (tri _qv_27))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int _v_35)    (nat-to-int _v_35)    (nat-to-int (mult _v_35 (plus _t_36 _t_36)))]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((tri (mult _qv_29 _qv_30))=(mult (tri _qv_29) (tri _qv_30))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int _v_35)    (nat-to-int _v_35)    (nat-to-int (mult _v_35 (plus _t_36 _t_36)))]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((tri (mult _qv_29 _qv_30))=(mult (tri _qv_30) (tri _qv_29))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int _v_35)    (nat-to-int _v_35)    (nat-to-int (mult _v_35 (plus _t_36 _t_36)))]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((cubes (plus _qv_31 _qv_32))=(plus (cubes _qv_31) (cubes _qv_32))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int _v_35)    (nat-to-int _v_35)    (nat-to-int (mult _v_35 (plus _t_36 _t_36)))]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((cubes (plus _qv_31 _qv_32))=(plus (cubes _qv_32) (cubes _qv_31))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int _v_35)    (nat-to-int _v_35)    (nat-to-int (mult _v_35 (plus _t_36 _t_36)))]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((cubes (mult _qv_33 _qv_34))=(mult (cubes _qv_33) (cubes _qv_34))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int _v_35)    (nat-to-int _v_35)    (nat-to-int (mult _v_35 (plus _t_36 _t_36)))]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((cubes (mult _qv_33 _qv_34))=(mult (cubes _qv_34) (cubes _qv_33))))
USE ASSUMPTION FAILED

  backtrack to: ([+    (nat-to-int _v_35)    (nat-to-int _v_35)    (nat-to-int (mult _v_35 (plus _t_36 _t_36)))]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_1 _qv_2)=(plus _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_3 _qv_4) _qv_5)=(plus _qv_3 (plus _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((mult _qv_6 _qv_7)=(mult _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((mult (mult _qv_8 _qv_9) _qv_10)=(mult _qv_8 (mult _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat)) ((tri (tri _qv_11))=_qv_11))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat)) ((cubes (cubes _qv_12))=_qv_12))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_14))=(nat-to-int _qv_14)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat)) ((nat-to-int (tri _qv_15))=(nat-to-int _qv_15)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat)) ((nat-to-int (cubes _qv_16))=(nat-to-int _qv_16)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((mult _qv_17 (plus _qv_18 _qv_19))=(plus (mult _qv_17 _qv_18) (mult _qv_17 _qv_19))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus _qv_20 (mult _qv_21 _qv_22))=(mult (plus _qv_20 _qv_21) (plus _qv_20 _qv_22))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_23 _qv_24))=(plus (succ _qv_23) (succ _qv_24))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_23 _qv_24))=(plus (succ _qv_24) (succ _qv_23))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (mult _qv_25 _qv_26))=(mult (succ _qv_25) (succ _qv_26))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (mult _qv_25 _qv_26))=(mult (succ _qv_26) (succ _qv_25))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((tri (plus _qv_27 _qv_28))=(plus (tri _qv_27) (tri _qv_28))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((tri (plus _qv_27 _qv_28))=(plus (tri _qv_28) (tri _qv_27))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((tri (mult _qv_29 _qv_30))=(mult (tri _qv_29) (tri _qv_30))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((tri (mult _qv_29 _qv_30))=(mult (tri _qv_30) (tri _qv_29))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((cubes (plus _qv_31 _qv_32))=(plus (cubes _qv_31) (cubes _qv_32))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((cubes (plus _qv_31 _qv_32))=(plus (cubes _qv_32) (cubes _qv_31))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((cubes (mult _qv_33 _qv_34))=(mult (cubes _qv_33) (cubes _qv_34))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((cubes (mult _qv_33 _qv_34))=(mult (cubes _qv_34) (cubes _qv_33))))
USE ASSUMPTION FAILED

  backtrack to: ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(nat-to-int (plus _v_35 _v_35)))=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(nat-to-int (plus _v_35 _v_35)))=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_1 _qv_2)=(plus _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(nat-to-int (plus _v_35 _v_35)))=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_3 _qv_4) _qv_5)=(plus _qv_3 (plus _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(nat-to-int (plus _v_35 _v_35)))=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((mult _qv_6 _qv_7)=(mult _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(nat-to-int (plus _v_35 _v_35)))=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((mult (mult _qv_8 _qv_9) _qv_10)=(mult _qv_8 (mult _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(nat-to-int (plus _v_35 _v_35)))=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat)) ((tri (tri _qv_11))=_qv_11))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(nat-to-int (plus _v_35 _v_35)))=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat)) ((cubes (cubes _qv_12))=_qv_12))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(nat-to-int (plus _v_35 _v_35)))=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(nat-to-int (plus _v_35 _v_35)))=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_14))=(nat-to-int _qv_14)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(nat-to-int (plus _v_35 _v_35)))=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat)) ((nat-to-int (tri _qv_15))=(nat-to-int _qv_15)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(nat-to-int (plus _v_35 _v_35)))=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat)) ((nat-to-int (cubes _qv_16))=(nat-to-int _qv_16)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(nat-to-int (plus _v_35 _v_35)))=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((mult _qv_17 (plus _qv_18 _qv_19))=(plus (mult _qv_17 _qv_18) (mult _qv_17 _qv_19))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(nat-to-int (plus _v_35 _v_35)))=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus _qv_20 (mult _qv_21 _qv_22))=(mult (plus _qv_20 _qv_21) (plus _qv_20 _qv_22))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(nat-to-int (plus _v_35 _v_35)))=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_23 _qv_24))=(plus (succ _qv_23) (succ _qv_24))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(nat-to-int (plus _v_35 _v_35)))=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_23 _qv_24))=(plus (succ _qv_24) (succ _qv_23))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(nat-to-int (plus _v_35 _v_35)))=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (mult _qv_25 _qv_26))=(mult (succ _qv_25) (succ _qv_26))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(nat-to-int (plus _v_35 _v_35)))=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (mult _qv_25 _qv_26))=(mult (succ _qv_26) (succ _qv_25))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(nat-to-int (plus _v_35 _v_35)))=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((tri (plus _qv_27 _qv_28))=(plus (tri _qv_27) (tri _qv_28))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(nat-to-int (plus _v_35 _v_35)))=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((tri (plus _qv_27 _qv_28))=(plus (tri _qv_28) (tri _qv_27))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(nat-to-int (plus _v_35 _v_35)))=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((tri (mult _qv_29 _qv_30))=(mult (tri _qv_29) (tri _qv_30))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(nat-to-int (plus _v_35 _v_35)))=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((tri (mult _qv_29 _qv_30))=(mult (tri _qv_30) (tri _qv_29))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(nat-to-int (plus _v_35 _v_35)))=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((cubes (plus _qv_31 _qv_32))=(plus (cubes _qv_31) (cubes _qv_32))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(nat-to-int (plus _v_35 _v_35)))=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((cubes (plus _qv_31 _qv_32))=(plus (cubes _qv_32) (cubes _qv_31))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(nat-to-int (plus _v_35 _v_35)))=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((cubes (mult _qv_33 _qv_34))=(mult (cubes _qv_33) (cubes _qv_34))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(nat-to-int (plus _v_35 _v_35)))=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((cubes (mult _qv_33 _qv_34))=(mult (cubes _qv_34) (cubes _qv_33))))
USE ASSUMPTION FAILED

  backtrack to: (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(nat-to-int (plus _v_35 _v_35)))=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
  rewritten [13]: (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(nat-to-int (plus _v_35 _v_35)))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
  rewritten [4]: (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(nat-to-int (plus _v_35 _v_35)))=(nat-to-int (mult _v_35 (succ (succ (plus _t_36 _t_36))))))
  rewritten [12]: (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+((nat-to-int _v_35)+(nat-to-int _v_35)))=(nat-to-int (mult _v_35 (succ (succ (plus _t_36 _t_36))))))
  Maximum recursion depth reached
CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(nat-to-int (plus _v_35 _v_35)))=(nat-to-int (mult _v_35 (succ (succ (plus _t_36 _t_36))))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(nat-to-int (plus _v_35 _v_35)))=(nat-to-int (mult _v_35 (succ (succ (plus _t_36 _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_1 _qv_2)=(plus _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(nat-to-int (plus _v_35 _v_35)))=(nat-to-int (mult _v_35 (succ (succ (plus _t_36 _t_36))))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_3 _qv_4) _qv_5)=(plus _qv_3 (plus _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(nat-to-int (plus _v_35 _v_35)))=(nat-to-int (mult _v_35 (succ (succ (plus _t_36 _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((mult _qv_6 _qv_7)=(mult _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(nat-to-int (plus _v_35 _v_35)))=(nat-to-int (mult _v_35 (succ (succ (plus _t_36 _t_36))))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((mult (mult _qv_8 _qv_9) _qv_10)=(mult _qv_8 (mult _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(nat-to-int (plus _v_35 _v_35)))=(nat-to-int (mult _v_35 (succ (succ (plus _t_36 _t_36))))))
NOW TESTING (forall ((Nat)) ((tri (tri _qv_11))=_qv_11))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(nat-to-int (plus _v_35 _v_35)))=(nat-to-int (mult _v_35 (succ (succ (plus _t_36 _t_36))))))
NOW TESTING (forall ((Nat)) ((cubes (cubes _qv_12))=_qv_12))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(nat-to-int (plus _v_35 _v_35)))=(nat-to-int (mult _v_35 (succ (succ (plus _t_36 _t_36))))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(nat-to-int (plus _v_35 _v_35)))=(nat-to-int (mult _v_35 (succ (succ (plus _t_36 _t_36))))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_14))=(nat-to-int _qv_14)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(nat-to-int (plus _v_35 _v_35)))=(nat-to-int (mult _v_35 (succ (succ (plus _t_36 _t_36))))))
NOW TESTING (forall ((Nat)) ((nat-to-int (tri _qv_15))=(nat-to-int _qv_15)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(nat-to-int (plus _v_35 _v_35)))=(nat-to-int (mult _v_35 (succ (succ (plus _t_36 _t_36))))))
NOW TESTING (forall ((Nat)) ((nat-to-int (cubes _qv_16))=(nat-to-int _qv_16)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(nat-to-int (plus _v_35 _v_35)))=(nat-to-int (mult _v_35 (succ (succ (plus _t_36 _t_36))))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((mult _qv_17 (plus _qv_18 _qv_19))=(plus (mult _qv_17 _qv_18) (mult _qv_17 _qv_19))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(nat-to-int (plus _v_35 _v_35)))=(nat-to-int (mult _v_35 (succ (succ (plus _t_36 _t_36))))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus _qv_20 (mult _qv_21 _qv_22))=(mult (plus _qv_20 _qv_21) (plus _qv_20 _qv_22))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(nat-to-int (plus _v_35 _v_35)))=(nat-to-int (mult _v_35 (succ (succ (plus _t_36 _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_23 _qv_24))=(plus (succ _qv_23) (succ _qv_24))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(nat-to-int (plus _v_35 _v_35)))=(nat-to-int (mult _v_35 (succ (succ (plus _t_36 _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_23 _qv_24))=(plus (succ _qv_24) (succ _qv_23))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(nat-to-int (plus _v_35 _v_35)))=(nat-to-int (mult _v_35 (succ (succ (plus _t_36 _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (mult _qv_25 _qv_26))=(mult (succ _qv_25) (succ _qv_26))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(nat-to-int (plus _v_35 _v_35)))=(nat-to-int (mult _v_35 (succ (succ (plus _t_36 _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (mult _qv_25 _qv_26))=(mult (succ _qv_26) (succ _qv_25))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(nat-to-int (plus _v_35 _v_35)))=(nat-to-int (mult _v_35 (succ (succ (plus _t_36 _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((tri (plus _qv_27 _qv_28))=(plus (tri _qv_27) (tri _qv_28))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(nat-to-int (plus _v_35 _v_35)))=(nat-to-int (mult _v_35 (succ (succ (plus _t_36 _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((tri (plus _qv_27 _qv_28))=(plus (tri _qv_28) (tri _qv_27))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(nat-to-int (plus _v_35 _v_35)))=(nat-to-int (mult _v_35 (succ (succ (plus _t_36 _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((tri (mult _qv_29 _qv_30))=(mult (tri _qv_29) (tri _qv_30))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(nat-to-int (plus _v_35 _v_35)))=(nat-to-int (mult _v_35 (succ (succ (plus _t_36 _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((tri (mult _qv_29 _qv_30))=(mult (tri _qv_30) (tri _qv_29))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(nat-to-int (plus _v_35 _v_35)))=(nat-to-int (mult _v_35 (succ (succ (plus _t_36 _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((cubes (plus _qv_31 _qv_32))=(plus (cubes _qv_31) (cubes _qv_32))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(nat-to-int (plus _v_35 _v_35)))=(nat-to-int (mult _v_35 (succ (succ (plus _t_36 _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((cubes (plus _qv_31 _qv_32))=(plus (cubes _qv_32) (cubes _qv_31))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(nat-to-int (plus _v_35 _v_35)))=(nat-to-int (mult _v_35 (succ (succ (plus _t_36 _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((cubes (mult _qv_33 _qv_34))=(mult (cubes _qv_33) (cubes _qv_34))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(nat-to-int (plus _v_35 _v_35)))=(nat-to-int (mult _v_35 (succ (succ (plus _t_36 _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((cubes (mult _qv_33 _qv_34))=(mult (cubes _qv_34) (cubes _qv_33))))
USE ASSUMPTION FAILED

  backtrack to: (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(nat-to-int (plus _v_35 _v_35)))=(nat-to-int (mult _v_35 (succ (succ (plus _t_36 _t_36))))))
  rewritten [15]: (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(nat-to-int (plus _v_35 _v_35)))=(nat-to-int (mult (succ (succ (plus _t_36 _t_36))) _v_35)))
  Maximum recursion depth reached
CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(nat-to-int (plus _v_35 _v_35)))=(nat-to-int (mult _v_35 (succ (succ (plus _t_36 _t_36))))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(nat-to-int (plus _v_35 _v_35)))=(nat-to-int (mult _v_35 (succ (succ (plus _t_36 _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_1 _qv_2)=(plus _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(nat-to-int (plus _v_35 _v_35)))=(nat-to-int (mult _v_35 (succ (succ (plus _t_36 _t_36))))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_3 _qv_4) _qv_5)=(plus _qv_3 (plus _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(nat-to-int (plus _v_35 _v_35)))=(nat-to-int (mult _v_35 (succ (succ (plus _t_36 _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((mult _qv_6 _qv_7)=(mult _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(nat-to-int (plus _v_35 _v_35)))=(nat-to-int (mult _v_35 (succ (succ (plus _t_36 _t_36))))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((mult (mult _qv_8 _qv_9) _qv_10)=(mult _qv_8 (mult _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(nat-to-int (plus _v_35 _v_35)))=(nat-to-int (mult _v_35 (succ (succ (plus _t_36 _t_36))))))
NOW TESTING (forall ((Nat)) ((tri (tri _qv_11))=_qv_11))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(nat-to-int (plus _v_35 _v_35)))=(nat-to-int (mult _v_35 (succ (succ (plus _t_36 _t_36))))))
NOW TESTING (forall ((Nat)) ((cubes (cubes _qv_12))=_qv_12))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(nat-to-int (plus _v_35 _v_35)))=(nat-to-int (mult _v_35 (succ (succ (plus _t_36 _t_36))))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(nat-to-int (plus _v_35 _v_35)))=(nat-to-int (mult _v_35 (succ (succ (plus _t_36 _t_36))))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_14))=(nat-to-int _qv_14)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(nat-to-int (plus _v_35 _v_35)))=(nat-to-int (mult _v_35 (succ (succ (plus _t_36 _t_36))))))
NOW TESTING (forall ((Nat)) ((nat-to-int (tri _qv_15))=(nat-to-int _qv_15)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(nat-to-int (plus _v_35 _v_35)))=(nat-to-int (mult _v_35 (succ (succ (plus _t_36 _t_36))))))
NOW TESTING (forall ((Nat)) ((nat-to-int (cubes _qv_16))=(nat-to-int _qv_16)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(nat-to-int (plus _v_35 _v_35)))=(nat-to-int (mult _v_35 (succ (succ (plus _t_36 _t_36))))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((mult _qv_17 (plus _qv_18 _qv_19))=(plus (mult _qv_17 _qv_18) (mult _qv_17 _qv_19))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(nat-to-int (plus _v_35 _v_35)))=(nat-to-int (mult _v_35 (succ (succ (plus _t_36 _t_36))))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus _qv_20 (mult _qv_21 _qv_22))=(mult (plus _qv_20 _qv_21) (plus _qv_20 _qv_22))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(nat-to-int (plus _v_35 _v_35)))=(nat-to-int (mult _v_35 (succ (succ (plus _t_36 _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_23 _qv_24))=(plus (succ _qv_23) (succ _qv_24))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(nat-to-int (plus _v_35 _v_35)))=(nat-to-int (mult _v_35 (succ (succ (plus _t_36 _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_23 _qv_24))=(plus (succ _qv_24) (succ _qv_23))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(nat-to-int (plus _v_35 _v_35)))=(nat-to-int (mult _v_35 (succ (succ (plus _t_36 _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (mult _qv_25 _qv_26))=(mult (succ _qv_25) (succ _qv_26))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(nat-to-int (plus _v_35 _v_35)))=(nat-to-int (mult _v_35 (succ (succ (plus _t_36 _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (mult _qv_25 _qv_26))=(mult (succ _qv_26) (succ _qv_25))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(nat-to-int (plus _v_35 _v_35)))=(nat-to-int (mult _v_35 (succ (succ (plus _t_36 _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((tri (plus _qv_27 _qv_28))=(plus (tri _qv_27) (tri _qv_28))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(nat-to-int (plus _v_35 _v_35)))=(nat-to-int (mult _v_35 (succ (succ (plus _t_36 _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((tri (plus _qv_27 _qv_28))=(plus (tri _qv_28) (tri _qv_27))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(nat-to-int (plus _v_35 _v_35)))=(nat-to-int (mult _v_35 (succ (succ (plus _t_36 _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((tri (mult _qv_29 _qv_30))=(mult (tri _qv_29) (tri _qv_30))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(nat-to-int (plus _v_35 _v_35)))=(nat-to-int (mult _v_35 (succ (succ (plus _t_36 _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((tri (mult _qv_29 _qv_30))=(mult (tri _qv_30) (tri _qv_29))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(nat-to-int (plus _v_35 _v_35)))=(nat-to-int (mult _v_35 (succ (succ (plus _t_36 _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((cubes (plus _qv_31 _qv_32))=(plus (cubes _qv_31) (cubes _qv_32))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(nat-to-int (plus _v_35 _v_35)))=(nat-to-int (mult _v_35 (succ (succ (plus _t_36 _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((cubes (plus _qv_31 _qv_32))=(plus (cubes _qv_32) (cubes _qv_31))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(nat-to-int (plus _v_35 _v_35)))=(nat-to-int (mult _v_35 (succ (succ (plus _t_36 _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((cubes (mult _qv_33 _qv_34))=(mult (cubes _qv_33) (cubes _qv_34))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(nat-to-int (plus _v_35 _v_35)))=(nat-to-int (mult _v_35 (succ (succ (plus _t_36 _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((cubes (mult _qv_33 _qv_34))=(mult (cubes _qv_34) (cubes _qv_33))))
USE ASSUMPTION FAILED

  backtrack to: (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(nat-to-int (plus _v_35 _v_35)))=(nat-to-int (mult _v_35 (succ (succ (plus _t_36 _t_36))))))
  rewritten [15]: (((nat-to-int (mult (plus _v_35 _v_35) _t_36))+(nat-to-int (plus _v_35 _v_35)))=(nat-to-int (mult _v_35 (succ (succ (plus _t_36 _t_36))))))
  Maximum recursion depth reached
CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(nat-to-int (plus _v_35 _v_35)))=(nat-to-int (mult _v_35 (succ (succ (plus _t_36 _t_36))))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(nat-to-int (plus _v_35 _v_35)))=(nat-to-int (mult _v_35 (succ (succ (plus _t_36 _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_1 _qv_2)=(plus _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(nat-to-int (plus _v_35 _v_35)))=(nat-to-int (mult _v_35 (succ (succ (plus _t_36 _t_36))))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_3 _qv_4) _qv_5)=(plus _qv_3 (plus _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(nat-to-int (plus _v_35 _v_35)))=(nat-to-int (mult _v_35 (succ (succ (plus _t_36 _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((mult _qv_6 _qv_7)=(mult _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(nat-to-int (plus _v_35 _v_35)))=(nat-to-int (mult _v_35 (succ (succ (plus _t_36 _t_36))))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((mult (mult _qv_8 _qv_9) _qv_10)=(mult _qv_8 (mult _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(nat-to-int (plus _v_35 _v_35)))=(nat-to-int (mult _v_35 (succ (succ (plus _t_36 _t_36))))))
NOW TESTING (forall ((Nat)) ((tri (tri _qv_11))=_qv_11))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(nat-to-int (plus _v_35 _v_35)))=(nat-to-int (mult _v_35 (succ (succ (plus _t_36 _t_36))))))
NOW TESTING (forall ((Nat)) ((cubes (cubes _qv_12))=_qv_12))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(nat-to-int (plus _v_35 _v_35)))=(nat-to-int (mult _v_35 (succ (succ (plus _t_36 _t_36))))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(nat-to-int (plus _v_35 _v_35)))=(nat-to-int (mult _v_35 (succ (succ (plus _t_36 _t_36))))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_14))=(nat-to-int _qv_14)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(nat-to-int (plus _v_35 _v_35)))=(nat-to-int (mult _v_35 (succ (succ (plus _t_36 _t_36))))))
NOW TESTING (forall ((Nat)) ((nat-to-int (tri _qv_15))=(nat-to-int _qv_15)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(nat-to-int (plus _v_35 _v_35)))=(nat-to-int (mult _v_35 (succ (succ (plus _t_36 _t_36))))))
NOW TESTING (forall ((Nat)) ((nat-to-int (cubes _qv_16))=(nat-to-int _qv_16)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(nat-to-int (plus _v_35 _v_35)))=(nat-to-int (mult _v_35 (succ (succ (plus _t_36 _t_36))))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((mult _qv_17 (plus _qv_18 _qv_19))=(plus (mult _qv_17 _qv_18) (mult _qv_17 _qv_19))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(nat-to-int (plus _v_35 _v_35)))=(nat-to-int (mult _v_35 (succ (succ (plus _t_36 _t_36))))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus _qv_20 (mult _qv_21 _qv_22))=(mult (plus _qv_20 _qv_21) (plus _qv_20 _qv_22))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(nat-to-int (plus _v_35 _v_35)))=(nat-to-int (mult _v_35 (succ (succ (plus _t_36 _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_23 _qv_24))=(plus (succ _qv_23) (succ _qv_24))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(nat-to-int (plus _v_35 _v_35)))=(nat-to-int (mult _v_35 (succ (succ (plus _t_36 _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_23 _qv_24))=(plus (succ _qv_24) (succ _qv_23))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(nat-to-int (plus _v_35 _v_35)))=(nat-to-int (mult _v_35 (succ (succ (plus _t_36 _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (mult _qv_25 _qv_26))=(mult (succ _qv_25) (succ _qv_26))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(nat-to-int (plus _v_35 _v_35)))=(nat-to-int (mult _v_35 (succ (succ (plus _t_36 _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (mult _qv_25 _qv_26))=(mult (succ _qv_26) (succ _qv_25))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(nat-to-int (plus _v_35 _v_35)))=(nat-to-int (mult _v_35 (succ (succ (plus _t_36 _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((tri (plus _qv_27 _qv_28))=(plus (tri _qv_27) (tri _qv_28))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(nat-to-int (plus _v_35 _v_35)))=(nat-to-int (mult _v_35 (succ (succ (plus _t_36 _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((tri (plus _qv_27 _qv_28))=(plus (tri _qv_28) (tri _qv_27))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(nat-to-int (plus _v_35 _v_35)))=(nat-to-int (mult _v_35 (succ (succ (plus _t_36 _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((tri (mult _qv_29 _qv_30))=(mult (tri _qv_29) (tri _qv_30))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(nat-to-int (plus _v_35 _v_35)))=(nat-to-int (mult _v_35 (succ (succ (plus _t_36 _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((tri (mult _qv_29 _qv_30))=(mult (tri _qv_30) (tri _qv_29))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(nat-to-int (plus _v_35 _v_35)))=(nat-to-int (mult _v_35 (succ (succ (plus _t_36 _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((cubes (plus _qv_31 _qv_32))=(plus (cubes _qv_31) (cubes _qv_32))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(nat-to-int (plus _v_35 _v_35)))=(nat-to-int (mult _v_35 (succ (succ (plus _t_36 _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((cubes (plus _qv_31 _qv_32))=(plus (cubes _qv_32) (cubes _qv_31))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(nat-to-int (plus _v_35 _v_35)))=(nat-to-int (mult _v_35 (succ (succ (plus _t_36 _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((cubes (mult _qv_33 _qv_34))=(mult (cubes _qv_33) (cubes _qv_34))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(nat-to-int (plus _v_35 _v_35)))=(nat-to-int (mult _v_35 (succ (succ (plus _t_36 _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((cubes (mult _qv_33 _qv_34))=(mult (cubes _qv_34) (cubes _qv_33))))
USE ASSUMPTION FAILED

  backtrack to: (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(nat-to-int (plus _v_35 _v_35)))=(nat-to-int (mult _v_35 (succ (succ (plus _t_36 _t_36))))))
  rewritten [17]: (((nat-to-int (mult _v_35 (plus _t_36 _t_36)))+(nat-to-int (plus _v_35 _v_35)))=(nat-to-int (mult _v_35 (succ (succ (plus _t_36 _t_36))))))
  Maximum recursion depth reached
CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(nat-to-int (plus _v_35 _v_35)))=(nat-to-int (mult _v_35 (succ (succ (plus _t_36 _t_36))))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(nat-to-int (plus _v_35 _v_35)))=(nat-to-int (mult _v_35 (succ (succ (plus _t_36 _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_1 _qv_2)=(plus _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(nat-to-int (plus _v_35 _v_35)))=(nat-to-int (mult _v_35 (succ (succ (plus _t_36 _t_36))))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_3 _qv_4) _qv_5)=(plus _qv_3 (plus _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(nat-to-int (plus _v_35 _v_35)))=(nat-to-int (mult _v_35 (succ (succ (plus _t_36 _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((mult _qv_6 _qv_7)=(mult _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(nat-to-int (plus _v_35 _v_35)))=(nat-to-int (mult _v_35 (succ (succ (plus _t_36 _t_36))))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((mult (mult _qv_8 _qv_9) _qv_10)=(mult _qv_8 (mult _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(nat-to-int (plus _v_35 _v_35)))=(nat-to-int (mult _v_35 (succ (succ (plus _t_36 _t_36))))))
NOW TESTING (forall ((Nat)) ((tri (tri _qv_11))=_qv_11))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(nat-to-int (plus _v_35 _v_35)))=(nat-to-int (mult _v_35 (succ (succ (plus _t_36 _t_36))))))
NOW TESTING (forall ((Nat)) ((cubes (cubes _qv_12))=_qv_12))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(nat-to-int (plus _v_35 _v_35)))=(nat-to-int (mult _v_35 (succ (succ (plus _t_36 _t_36))))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(nat-to-int (plus _v_35 _v_35)))=(nat-to-int (mult _v_35 (succ (succ (plus _t_36 _t_36))))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_14))=(nat-to-int _qv_14)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(nat-to-int (plus _v_35 _v_35)))=(nat-to-int (mult _v_35 (succ (succ (plus _t_36 _t_36))))))
NOW TESTING (forall ((Nat)) ((nat-to-int (tri _qv_15))=(nat-to-int _qv_15)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(nat-to-int (plus _v_35 _v_35)))=(nat-to-int (mult _v_35 (succ (succ (plus _t_36 _t_36))))))
NOW TESTING (forall ((Nat)) ((nat-to-int (cubes _qv_16))=(nat-to-int _qv_16)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(nat-to-int (plus _v_35 _v_35)))=(nat-to-int (mult _v_35 (succ (succ (plus _t_36 _t_36))))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((mult _qv_17 (plus _qv_18 _qv_19))=(plus (mult _qv_17 _qv_18) (mult _qv_17 _qv_19))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(nat-to-int (plus _v_35 _v_35)))=(nat-to-int (mult _v_35 (succ (succ (plus _t_36 _t_36))))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus _qv_20 (mult _qv_21 _qv_22))=(mult (plus _qv_20 _qv_21) (plus _qv_20 _qv_22))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(nat-to-int (plus _v_35 _v_35)))=(nat-to-int (mult _v_35 (succ (succ (plus _t_36 _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_23 _qv_24))=(plus (succ _qv_23) (succ _qv_24))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(nat-to-int (plus _v_35 _v_35)))=(nat-to-int (mult _v_35 (succ (succ (plus _t_36 _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_23 _qv_24))=(plus (succ _qv_24) (succ _qv_23))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(nat-to-int (plus _v_35 _v_35)))=(nat-to-int (mult _v_35 (succ (succ (plus _t_36 _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (mult _qv_25 _qv_26))=(mult (succ _qv_25) (succ _qv_26))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(nat-to-int (plus _v_35 _v_35)))=(nat-to-int (mult _v_35 (succ (succ (plus _t_36 _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (mult _qv_25 _qv_26))=(mult (succ _qv_26) (succ _qv_25))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(nat-to-int (plus _v_35 _v_35)))=(nat-to-int (mult _v_35 (succ (succ (plus _t_36 _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((tri (plus _qv_27 _qv_28))=(plus (tri _qv_27) (tri _qv_28))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(nat-to-int (plus _v_35 _v_35)))=(nat-to-int (mult _v_35 (succ (succ (plus _t_36 _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((tri (plus _qv_27 _qv_28))=(plus (tri _qv_28) (tri _qv_27))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(nat-to-int (plus _v_35 _v_35)))=(nat-to-int (mult _v_35 (succ (succ (plus _t_36 _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((tri (mult _qv_29 _qv_30))=(mult (tri _qv_29) (tri _qv_30))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(nat-to-int (plus _v_35 _v_35)))=(nat-to-int (mult _v_35 (succ (succ (plus _t_36 _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((tri (mult _qv_29 _qv_30))=(mult (tri _qv_30) (tri _qv_29))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(nat-to-int (plus _v_35 _v_35)))=(nat-to-int (mult _v_35 (succ (succ (plus _t_36 _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((cubes (plus _qv_31 _qv_32))=(plus (cubes _qv_31) (cubes _qv_32))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(nat-to-int (plus _v_35 _v_35)))=(nat-to-int (mult _v_35 (succ (succ (plus _t_36 _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((cubes (plus _qv_31 _qv_32))=(plus (cubes _qv_32) (cubes _qv_31))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(nat-to-int (plus _v_35 _v_35)))=(nat-to-int (mult _v_35 (succ (succ (plus _t_36 _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((cubes (mult _qv_33 _qv_34))=(mult (cubes _qv_33) (cubes _qv_34))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(nat-to-int (plus _v_35 _v_35)))=(nat-to-int (mult _v_35 (succ (succ (plus _t_36 _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((cubes (mult _qv_33 _qv_34))=(mult (cubes _qv_34) (cubes _qv_33))))
USE ASSUMPTION FAILED

  backtrack to: (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(nat-to-int (plus _v_35 _v_35)))=(nat-to-int (mult _v_35 (succ (succ (plus _t_36 _t_36))))))
  rewritten [12]: (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+((nat-to-int _v_35)+(nat-to-int _v_35)))=(nat-to-int (mult _v_35 (succ (succ (plus _t_36 _t_36))))))
  Maximum recursion depth reached
CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(nat-to-int (plus _v_35 _v_35)))=(nat-to-int (mult _v_35 (succ (succ (plus _t_36 _t_36))))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(nat-to-int (plus _v_35 _v_35)))=(nat-to-int (mult _v_35 (succ (succ (plus _t_36 _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_1 _qv_2)=(plus _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(nat-to-int (plus _v_35 _v_35)))=(nat-to-int (mult _v_35 (succ (succ (plus _t_36 _t_36))))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_3 _qv_4) _qv_5)=(plus _qv_3 (plus _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(nat-to-int (plus _v_35 _v_35)))=(nat-to-int (mult _v_35 (succ (succ (plus _t_36 _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((mult _qv_6 _qv_7)=(mult _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(nat-to-int (plus _v_35 _v_35)))=(nat-to-int (mult _v_35 (succ (succ (plus _t_36 _t_36))))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((mult (mult _qv_8 _qv_9) _qv_10)=(mult _qv_8 (mult _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(nat-to-int (plus _v_35 _v_35)))=(nat-to-int (mult _v_35 (succ (succ (plus _t_36 _t_36))))))
NOW TESTING (forall ((Nat)) ((tri (tri _qv_11))=_qv_11))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(nat-to-int (plus _v_35 _v_35)))=(nat-to-int (mult _v_35 (succ (succ (plus _t_36 _t_36))))))
NOW TESTING (forall ((Nat)) ((cubes (cubes _qv_12))=_qv_12))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(nat-to-int (plus _v_35 _v_35)))=(nat-to-int (mult _v_35 (succ (succ (plus _t_36 _t_36))))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(nat-to-int (plus _v_35 _v_35)))=(nat-to-int (mult _v_35 (succ (succ (plus _t_36 _t_36))))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_14))=(nat-to-int _qv_14)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(nat-to-int (plus _v_35 _v_35)))=(nat-to-int (mult _v_35 (succ (succ (plus _t_36 _t_36))))))
NOW TESTING (forall ((Nat)) ((nat-to-int (tri _qv_15))=(nat-to-int _qv_15)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(nat-to-int (plus _v_35 _v_35)))=(nat-to-int (mult _v_35 (succ (succ (plus _t_36 _t_36))))))
NOW TESTING (forall ((Nat)) ((nat-to-int (cubes _qv_16))=(nat-to-int _qv_16)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(nat-to-int (plus _v_35 _v_35)))=(nat-to-int (mult _v_35 (succ (succ (plus _t_36 _t_36))))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((mult _qv_17 (plus _qv_18 _qv_19))=(plus (mult _qv_17 _qv_18) (mult _qv_17 _qv_19))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(nat-to-int (plus _v_35 _v_35)))=(nat-to-int (mult _v_35 (succ (succ (plus _t_36 _t_36))))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus _qv_20 (mult _qv_21 _qv_22))=(mult (plus _qv_20 _qv_21) (plus _qv_20 _qv_22))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(nat-to-int (plus _v_35 _v_35)))=(nat-to-int (mult _v_35 (succ (succ (plus _t_36 _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_23 _qv_24))=(plus (succ _qv_23) (succ _qv_24))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(nat-to-int (plus _v_35 _v_35)))=(nat-to-int (mult _v_35 (succ (succ (plus _t_36 _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_23 _qv_24))=(plus (succ _qv_24) (succ _qv_23))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(nat-to-int (plus _v_35 _v_35)))=(nat-to-int (mult _v_35 (succ (succ (plus _t_36 _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (mult _qv_25 _qv_26))=(mult (succ _qv_25) (succ _qv_26))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(nat-to-int (plus _v_35 _v_35)))=(nat-to-int (mult _v_35 (succ (succ (plus _t_36 _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (mult _qv_25 _qv_26))=(mult (succ _qv_26) (succ _qv_25))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(nat-to-int (plus _v_35 _v_35)))=(nat-to-int (mult _v_35 (succ (succ (plus _t_36 _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((tri (plus _qv_27 _qv_28))=(plus (tri _qv_27) (tri _qv_28))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(nat-to-int (plus _v_35 _v_35)))=(nat-to-int (mult _v_35 (succ (succ (plus _t_36 _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((tri (plus _qv_27 _qv_28))=(plus (tri _qv_28) (tri _qv_27))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(nat-to-int (plus _v_35 _v_35)))=(nat-to-int (mult _v_35 (succ (succ (plus _t_36 _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((tri (mult _qv_29 _qv_30))=(mult (tri _qv_29) (tri _qv_30))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(nat-to-int (plus _v_35 _v_35)))=(nat-to-int (mult _v_35 (succ (succ (plus _t_36 _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((tri (mult _qv_29 _qv_30))=(mult (tri _qv_30) (tri _qv_29))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(nat-to-int (plus _v_35 _v_35)))=(nat-to-int (mult _v_35 (succ (succ (plus _t_36 _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((cubes (plus _qv_31 _qv_32))=(plus (cubes _qv_31) (cubes _qv_32))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(nat-to-int (plus _v_35 _v_35)))=(nat-to-int (mult _v_35 (succ (succ (plus _t_36 _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((cubes (plus _qv_31 _qv_32))=(plus (cubes _qv_32) (cubes _qv_31))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(nat-to-int (plus _v_35 _v_35)))=(nat-to-int (mult _v_35 (succ (succ (plus _t_36 _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((cubes (mult _qv_33 _qv_34))=(mult (cubes _qv_33) (cubes _qv_34))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(nat-to-int (plus _v_35 _v_35)))=(nat-to-int (mult _v_35 (succ (succ (plus _t_36 _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((cubes (mult _qv_33 _qv_34))=(mult (cubes _qv_34) (cubes _qv_33))))
USE ASSUMPTION FAILED

  backtrack to: (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(nat-to-int (plus _v_35 _v_35)))=(nat-to-int (mult _v_35 (succ (succ (plus _t_36 _t_36))))))
  rewritten [15]: (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(nat-to-int (plus _v_35 _v_35)))=(nat-to-int (mult (succ (succ (plus _t_36 _t_36))) _v_35)))
  Maximum recursion depth reached
CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(nat-to-int (plus _v_35 _v_35)))=(nat-to-int (mult _v_35 (succ (succ (plus _t_36 _t_36))))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(nat-to-int (plus _v_35 _v_35)))=(nat-to-int (mult _v_35 (succ (succ (plus _t_36 _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_1 _qv_2)=(plus _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(nat-to-int (plus _v_35 _v_35)))=(nat-to-int (mult _v_35 (succ (succ (plus _t_36 _t_36))))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_3 _qv_4) _qv_5)=(plus _qv_3 (plus _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(nat-to-int (plus _v_35 _v_35)))=(nat-to-int (mult _v_35 (succ (succ (plus _t_36 _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((mult _qv_6 _qv_7)=(mult _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(nat-to-int (plus _v_35 _v_35)))=(nat-to-int (mult _v_35 (succ (succ (plus _t_36 _t_36))))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((mult (mult _qv_8 _qv_9) _qv_10)=(mult _qv_8 (mult _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(nat-to-int (plus _v_35 _v_35)))=(nat-to-int (mult _v_35 (succ (succ (plus _t_36 _t_36))))))
NOW TESTING (forall ((Nat)) ((tri (tri _qv_11))=_qv_11))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(nat-to-int (plus _v_35 _v_35)))=(nat-to-int (mult _v_35 (succ (succ (plus _t_36 _t_36))))))
NOW TESTING (forall ((Nat)) ((cubes (cubes _qv_12))=_qv_12))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(nat-to-int (plus _v_35 _v_35)))=(nat-to-int (mult _v_35 (succ (succ (plus _t_36 _t_36))))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(nat-to-int (plus _v_35 _v_35)))=(nat-to-int (mult _v_35 (succ (succ (plus _t_36 _t_36))))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_14))=(nat-to-int _qv_14)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(nat-to-int (plus _v_35 _v_35)))=(nat-to-int (mult _v_35 (succ (succ (plus _t_36 _t_36))))))
NOW TESTING (forall ((Nat)) ((nat-to-int (tri _qv_15))=(nat-to-int _qv_15)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(nat-to-int (plus _v_35 _v_35)))=(nat-to-int (mult _v_35 (succ (succ (plus _t_36 _t_36))))))
NOW TESTING (forall ((Nat)) ((nat-to-int (cubes _qv_16))=(nat-to-int _qv_16)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(nat-to-int (plus _v_35 _v_35)))=(nat-to-int (mult _v_35 (succ (succ (plus _t_36 _t_36))))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((mult _qv_17 (plus _qv_18 _qv_19))=(plus (mult _qv_17 _qv_18) (mult _qv_17 _qv_19))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(nat-to-int (plus _v_35 _v_35)))=(nat-to-int (mult _v_35 (succ (succ (plus _t_36 _t_36))))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus _qv_20 (mult _qv_21 _qv_22))=(mult (plus _qv_20 _qv_21) (plus _qv_20 _qv_22))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(nat-to-int (plus _v_35 _v_35)))=(nat-to-int (mult _v_35 (succ (succ (plus _t_36 _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_23 _qv_24))=(plus (succ _qv_23) (succ _qv_24))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(nat-to-int (plus _v_35 _v_35)))=(nat-to-int (mult _v_35 (succ (succ (plus _t_36 _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_23 _qv_24))=(plus (succ _qv_24) (succ _qv_23))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(nat-to-int (plus _v_35 _v_35)))=(nat-to-int (mult _v_35 (succ (succ (plus _t_36 _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (mult _qv_25 _qv_26))=(mult (succ _qv_25) (succ _qv_26))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(nat-to-int (plus _v_35 _v_35)))=(nat-to-int (mult _v_35 (succ (succ (plus _t_36 _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (mult _qv_25 _qv_26))=(mult (succ _qv_26) (succ _qv_25))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(nat-to-int (plus _v_35 _v_35)))=(nat-to-int (mult _v_35 (succ (succ (plus _t_36 _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((tri (plus _qv_27 _qv_28))=(plus (tri _qv_27) (tri _qv_28))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(nat-to-int (plus _v_35 _v_35)))=(nat-to-int (mult _v_35 (succ (succ (plus _t_36 _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((tri (plus _qv_27 _qv_28))=(plus (tri _qv_28) (tri _qv_27))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(nat-to-int (plus _v_35 _v_35)))=(nat-to-int (mult _v_35 (succ (succ (plus _t_36 _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((tri (mult _qv_29 _qv_30))=(mult (tri _qv_29) (tri _qv_30))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(nat-to-int (plus _v_35 _v_35)))=(nat-to-int (mult _v_35 (succ (succ (plus _t_36 _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((tri (mult _qv_29 _qv_30))=(mult (tri _qv_30) (tri _qv_29))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(nat-to-int (plus _v_35 _v_35)))=(nat-to-int (mult _v_35 (succ (succ (plus _t_36 _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((cubes (plus _qv_31 _qv_32))=(plus (cubes _qv_31) (cubes _qv_32))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(nat-to-int (plus _v_35 _v_35)))=(nat-to-int (mult _v_35 (succ (succ (plus _t_36 _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((cubes (plus _qv_31 _qv_32))=(plus (cubes _qv_32) (cubes _qv_31))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(nat-to-int (plus _v_35 _v_35)))=(nat-to-int (mult _v_35 (succ (succ (plus _t_36 _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((cubes (mult _qv_33 _qv_34))=(mult (cubes _qv_33) (cubes _qv_34))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(nat-to-int (plus _v_35 _v_35)))=(nat-to-int (mult _v_35 (succ (succ (plus _t_36 _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((cubes (mult _qv_33 _qv_34))=(mult (cubes _qv_34) (cubes _qv_33))))
USE ASSUMPTION FAILED

  backtrack to: (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(nat-to-int (plus _v_35 _v_35)))=(nat-to-int (mult _v_35 (succ (succ (plus _t_36 _t_36))))))
  rewritten [15]: (((nat-to-int (mult (plus _v_35 _v_35) _t_36))+(nat-to-int (plus _v_35 _v_35)))=(nat-to-int (mult _v_35 (succ (succ (plus _t_36 _t_36))))))
  Maximum recursion depth reached
CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(nat-to-int (plus _v_35 _v_35)))=(nat-to-int (mult _v_35 (succ (succ (plus _t_36 _t_36))))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(nat-to-int (plus _v_35 _v_35)))=(nat-to-int (mult _v_35 (succ (succ (plus _t_36 _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_1 _qv_2)=(plus _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(nat-to-int (plus _v_35 _v_35)))=(nat-to-int (mult _v_35 (succ (succ (plus _t_36 _t_36))))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_3 _qv_4) _qv_5)=(plus _qv_3 (plus _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(nat-to-int (plus _v_35 _v_35)))=(nat-to-int (mult _v_35 (succ (succ (plus _t_36 _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((mult _qv_6 _qv_7)=(mult _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(nat-to-int (plus _v_35 _v_35)))=(nat-to-int (mult _v_35 (succ (succ (plus _t_36 _t_36))))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((mult (mult _qv_8 _qv_9) _qv_10)=(mult _qv_8 (mult _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(nat-to-int (plus _v_35 _v_35)))=(nat-to-int (mult _v_35 (succ (succ (plus _t_36 _t_36))))))
NOW TESTING (forall ((Nat)) ((tri (tri _qv_11))=_qv_11))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(nat-to-int (plus _v_35 _v_35)))=(nat-to-int (mult _v_35 (succ (succ (plus _t_36 _t_36))))))
NOW TESTING (forall ((Nat)) ((cubes (cubes _qv_12))=_qv_12))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(nat-to-int (plus _v_35 _v_35)))=(nat-to-int (mult _v_35 (succ (succ (plus _t_36 _t_36))))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(nat-to-int (plus _v_35 _v_35)))=(nat-to-int (mult _v_35 (succ (succ (plus _t_36 _t_36))))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_14))=(nat-to-int _qv_14)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(nat-to-int (plus _v_35 _v_35)))=(nat-to-int (mult _v_35 (succ (succ (plus _t_36 _t_36))))))
NOW TESTING (forall ((Nat)) ((nat-to-int (tri _qv_15))=(nat-to-int _qv_15)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(nat-to-int (plus _v_35 _v_35)))=(nat-to-int (mult _v_35 (succ (succ (plus _t_36 _t_36))))))
NOW TESTING (forall ((Nat)) ((nat-to-int (cubes _qv_16))=(nat-to-int _qv_16)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(nat-to-int (plus _v_35 _v_35)))=(nat-to-int (mult _v_35 (succ (succ (plus _t_36 _t_36))))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((mult _qv_17 (plus _qv_18 _qv_19))=(plus (mult _qv_17 _qv_18) (mult _qv_17 _qv_19))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(nat-to-int (plus _v_35 _v_35)))=(nat-to-int (mult _v_35 (succ (succ (plus _t_36 _t_36))))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus _qv_20 (mult _qv_21 _qv_22))=(mult (plus _qv_20 _qv_21) (plus _qv_20 _qv_22))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(nat-to-int (plus _v_35 _v_35)))=(nat-to-int (mult _v_35 (succ (succ (plus _t_36 _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_23 _qv_24))=(plus (succ _qv_23) (succ _qv_24))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(nat-to-int (plus _v_35 _v_35)))=(nat-to-int (mult _v_35 (succ (succ (plus _t_36 _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_23 _qv_24))=(plus (succ _qv_24) (succ _qv_23))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(nat-to-int (plus _v_35 _v_35)))=(nat-to-int (mult _v_35 (succ (succ (plus _t_36 _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (mult _qv_25 _qv_26))=(mult (succ _qv_25) (succ _qv_26))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(nat-to-int (plus _v_35 _v_35)))=(nat-to-int (mult _v_35 (succ (succ (plus _t_36 _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (mult _qv_25 _qv_26))=(mult (succ _qv_26) (succ _qv_25))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(nat-to-int (plus _v_35 _v_35)))=(nat-to-int (mult _v_35 (succ (succ (plus _t_36 _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((tri (plus _qv_27 _qv_28))=(plus (tri _qv_27) (tri _qv_28))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(nat-to-int (plus _v_35 _v_35)))=(nat-to-int (mult _v_35 (succ (succ (plus _t_36 _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((tri (plus _qv_27 _qv_28))=(plus (tri _qv_28) (tri _qv_27))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(nat-to-int (plus _v_35 _v_35)))=(nat-to-int (mult _v_35 (succ (succ (plus _t_36 _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((tri (mult _qv_29 _qv_30))=(mult (tri _qv_29) (tri _qv_30))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(nat-to-int (plus _v_35 _v_35)))=(nat-to-int (mult _v_35 (succ (succ (plus _t_36 _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((tri (mult _qv_29 _qv_30))=(mult (tri _qv_30) (tri _qv_29))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(nat-to-int (plus _v_35 _v_35)))=(nat-to-int (mult _v_35 (succ (succ (plus _t_36 _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((cubes (plus _qv_31 _qv_32))=(plus (cubes _qv_31) (cubes _qv_32))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(nat-to-int (plus _v_35 _v_35)))=(nat-to-int (mult _v_35 (succ (succ (plus _t_36 _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((cubes (plus _qv_31 _qv_32))=(plus (cubes _qv_32) (cubes _qv_31))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(nat-to-int (plus _v_35 _v_35)))=(nat-to-int (mult _v_35 (succ (succ (plus _t_36 _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((cubes (mult _qv_33 _qv_34))=(mult (cubes _qv_33) (cubes _qv_34))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(nat-to-int (plus _v_35 _v_35)))=(nat-to-int (mult _v_35 (succ (succ (plus _t_36 _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((cubes (mult _qv_33 _qv_34))=(mult (cubes _qv_34) (cubes _qv_33))))
USE ASSUMPTION FAILED

  backtrack to: (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(nat-to-int (plus _v_35 _v_35)))=(nat-to-int (mult _v_35 (succ (succ (plus _t_36 _t_36))))))
  rewritten [17]: (((nat-to-int (mult _v_35 (plus _t_36 _t_36)))+(nat-to-int (plus _v_35 _v_35)))=(nat-to-int (mult _v_35 (succ (succ (plus _t_36 _t_36))))))
  Maximum recursion depth reached
CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(nat-to-int (plus _v_35 _v_35)))=(nat-to-int (mult _v_35 (succ (succ (plus _t_36 _t_36))))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(nat-to-int (plus _v_35 _v_35)))=(nat-to-int (mult _v_35 (succ (succ (plus _t_36 _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_1 _qv_2)=(plus _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(nat-to-int (plus _v_35 _v_35)))=(nat-to-int (mult _v_35 (succ (succ (plus _t_36 _t_36))))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_3 _qv_4) _qv_5)=(plus _qv_3 (plus _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(nat-to-int (plus _v_35 _v_35)))=(nat-to-int (mult _v_35 (succ (succ (plus _t_36 _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((mult _qv_6 _qv_7)=(mult _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(nat-to-int (plus _v_35 _v_35)))=(nat-to-int (mult _v_35 (succ (succ (plus _t_36 _t_36))))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((mult (mult _qv_8 _qv_9) _qv_10)=(mult _qv_8 (mult _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(nat-to-int (plus _v_35 _v_35)))=(nat-to-int (mult _v_35 (succ (succ (plus _t_36 _t_36))))))
NOW TESTING (forall ((Nat)) ((tri (tri _qv_11))=_qv_11))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(nat-to-int (plus _v_35 _v_35)))=(nat-to-int (mult _v_35 (succ (succ (plus _t_36 _t_36))))))
NOW TESTING (forall ((Nat)) ((cubes (cubes _qv_12))=_qv_12))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(nat-to-int (plus _v_35 _v_35)))=(nat-to-int (mult _v_35 (succ (succ (plus _t_36 _t_36))))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(nat-to-int (plus _v_35 _v_35)))=(nat-to-int (mult _v_35 (succ (succ (plus _t_36 _t_36))))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_14))=(nat-to-int _qv_14)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(nat-to-int (plus _v_35 _v_35)))=(nat-to-int (mult _v_35 (succ (succ (plus _t_36 _t_36))))))
NOW TESTING (forall ((Nat)) ((nat-to-int (tri _qv_15))=(nat-to-int _qv_15)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(nat-to-int (plus _v_35 _v_35)))=(nat-to-int (mult _v_35 (succ (succ (plus _t_36 _t_36))))))
NOW TESTING (forall ((Nat)) ((nat-to-int (cubes _qv_16))=(nat-to-int _qv_16)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(nat-to-int (plus _v_35 _v_35)))=(nat-to-int (mult _v_35 (succ (succ (plus _t_36 _t_36))))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((mult _qv_17 (plus _qv_18 _qv_19))=(plus (mult _qv_17 _qv_18) (mult _qv_17 _qv_19))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(nat-to-int (plus _v_35 _v_35)))=(nat-to-int (mult _v_35 (succ (succ (plus _t_36 _t_36))))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus _qv_20 (mult _qv_21 _qv_22))=(mult (plus _qv_20 _qv_21) (plus _qv_20 _qv_22))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(nat-to-int (plus _v_35 _v_35)))=(nat-to-int (mult _v_35 (succ (succ (plus _t_36 _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_23 _qv_24))=(plus (succ _qv_23) (succ _qv_24))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(nat-to-int (plus _v_35 _v_35)))=(nat-to-int (mult _v_35 (succ (succ (plus _t_36 _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_23 _qv_24))=(plus (succ _qv_24) (succ _qv_23))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(nat-to-int (plus _v_35 _v_35)))=(nat-to-int (mult _v_35 (succ (succ (plus _t_36 _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (mult _qv_25 _qv_26))=(mult (succ _qv_25) (succ _qv_26))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(nat-to-int (plus _v_35 _v_35)))=(nat-to-int (mult _v_35 (succ (succ (plus _t_36 _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (mult _qv_25 _qv_26))=(mult (succ _qv_26) (succ _qv_25))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(nat-to-int (plus _v_35 _v_35)))=(nat-to-int (mult _v_35 (succ (succ (plus _t_36 _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((tri (plus _qv_27 _qv_28))=(plus (tri _qv_27) (tri _qv_28))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(nat-to-int (plus _v_35 _v_35)))=(nat-to-int (mult _v_35 (succ (succ (plus _t_36 _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((tri (plus _qv_27 _qv_28))=(plus (tri _qv_28) (tri _qv_27))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(nat-to-int (plus _v_35 _v_35)))=(nat-to-int (mult _v_35 (succ (succ (plus _t_36 _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((tri (mult _qv_29 _qv_30))=(mult (tri _qv_29) (tri _qv_30))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(nat-to-int (plus _v_35 _v_35)))=(nat-to-int (mult _v_35 (succ (succ (plus _t_36 _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((tri (mult _qv_29 _qv_30))=(mult (tri _qv_30) (tri _qv_29))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(nat-to-int (plus _v_35 _v_35)))=(nat-to-int (mult _v_35 (succ (succ (plus _t_36 _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((cubes (plus _qv_31 _qv_32))=(plus (cubes _qv_31) (cubes _qv_32))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(nat-to-int (plus _v_35 _v_35)))=(nat-to-int (mult _v_35 (succ (succ (plus _t_36 _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((cubes (plus _qv_31 _qv_32))=(plus (cubes _qv_32) (cubes _qv_31))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(nat-to-int (plus _v_35 _v_35)))=(nat-to-int (mult _v_35 (succ (succ (plus _t_36 _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((cubes (mult _qv_33 _qv_34))=(mult (cubes _qv_33) (cubes _qv_34))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(nat-to-int (plus _v_35 _v_35)))=(nat-to-int (mult _v_35 (succ (succ (plus _t_36 _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((cubes (mult _qv_33 _qv_34))=(mult (cubes _qv_34) (cubes _qv_33))))
USE ASSUMPTION FAILED

  backtrack to: (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(nat-to-int (plus _v_35 _v_35)))=(nat-to-int (mult _v_35 (succ (succ (plus _t_36 _t_36))))))
CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(nat-to-int (plus _v_35 _v_35)))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(nat-to-int (plus _v_35 _v_35)))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_1 _qv_2)=(plus _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(nat-to-int (plus _v_35 _v_35)))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_3 _qv_4) _qv_5)=(plus _qv_3 (plus _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(nat-to-int (plus _v_35 _v_35)))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((mult _qv_6 _qv_7)=(mult _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(nat-to-int (plus _v_35 _v_35)))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((mult (mult _qv_8 _qv_9) _qv_10)=(mult _qv_8 (mult _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(nat-to-int (plus _v_35 _v_35)))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat)) ((tri (tri _qv_11))=_qv_11))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(nat-to-int (plus _v_35 _v_35)))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat)) ((cubes (cubes _qv_12))=_qv_12))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(nat-to-int (plus _v_35 _v_35)))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(nat-to-int (plus _v_35 _v_35)))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_14))=(nat-to-int _qv_14)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(nat-to-int (plus _v_35 _v_35)))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat)) ((nat-to-int (tri _qv_15))=(nat-to-int _qv_15)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(nat-to-int (plus _v_35 _v_35)))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat)) ((nat-to-int (cubes _qv_16))=(nat-to-int _qv_16)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(nat-to-int (plus _v_35 _v_35)))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((mult _qv_17 (plus _qv_18 _qv_19))=(plus (mult _qv_17 _qv_18) (mult _qv_17 _qv_19))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(nat-to-int (plus _v_35 _v_35)))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus _qv_20 (mult _qv_21 _qv_22))=(mult (plus _qv_20 _qv_21) (plus _qv_20 _qv_22))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(nat-to-int (plus _v_35 _v_35)))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_23 _qv_24))=(plus (succ _qv_23) (succ _qv_24))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(nat-to-int (plus _v_35 _v_35)))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_23 _qv_24))=(plus (succ _qv_24) (succ _qv_23))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(nat-to-int (plus _v_35 _v_35)))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (mult _qv_25 _qv_26))=(mult (succ _qv_25) (succ _qv_26))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(nat-to-int (plus _v_35 _v_35)))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (mult _qv_25 _qv_26))=(mult (succ _qv_26) (succ _qv_25))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(nat-to-int (plus _v_35 _v_35)))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((tri (plus _qv_27 _qv_28))=(plus (tri _qv_27) (tri _qv_28))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(nat-to-int (plus _v_35 _v_35)))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((tri (plus _qv_27 _qv_28))=(plus (tri _qv_28) (tri _qv_27))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(nat-to-int (plus _v_35 _v_35)))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((tri (mult _qv_29 _qv_30))=(mult (tri _qv_29) (tri _qv_30))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(nat-to-int (plus _v_35 _v_35)))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((tri (mult _qv_29 _qv_30))=(mult (tri _qv_30) (tri _qv_29))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(nat-to-int (plus _v_35 _v_35)))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((cubes (plus _qv_31 _qv_32))=(plus (cubes _qv_31) (cubes _qv_32))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(nat-to-int (plus _v_35 _v_35)))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((cubes (plus _qv_31 _qv_32))=(plus (cubes _qv_32) (cubes _qv_31))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(nat-to-int (plus _v_35 _v_35)))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((cubes (mult _qv_33 _qv_34))=(mult (cubes _qv_33) (cubes _qv_34))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(nat-to-int (plus _v_35 _v_35)))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((cubes (mult _qv_33 _qv_34))=(mult (cubes _qv_34) (cubes _qv_33))))
USE ASSUMPTION FAILED

  backtrack to: (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(nat-to-int (plus _v_35 _v_35)))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
  rewritten [12]: (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+((nat-to-int _v_35)+(nat-to-int _v_35)))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
  rewritten [2]: (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(2*(nat-to-int _v_35)))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
  Maximum recursion depth reached
CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_1 _qv_2)=(plus _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_3 _qv_4) _qv_5)=(plus _qv_3 (plus _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((mult _qv_6 _qv_7)=(mult _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((mult (mult _qv_8 _qv_9) _qv_10)=(mult _qv_8 (mult _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat)) ((tri (tri _qv_11))=_qv_11))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat)) ((cubes (cubes _qv_12))=_qv_12))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_14))=(nat-to-int _qv_14)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat)) ((nat-to-int (tri _qv_15))=(nat-to-int _qv_15)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat)) ((nat-to-int (cubes _qv_16))=(nat-to-int _qv_16)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((mult _qv_17 (plus _qv_18 _qv_19))=(plus (mult _qv_17 _qv_18) (mult _qv_17 _qv_19))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus _qv_20 (mult _qv_21 _qv_22))=(mult (plus _qv_20 _qv_21) (plus _qv_20 _qv_22))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_23 _qv_24))=(plus (succ _qv_23) (succ _qv_24))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_23 _qv_24))=(plus (succ _qv_24) (succ _qv_23))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (mult _qv_25 _qv_26))=(mult (succ _qv_25) (succ _qv_26))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (mult _qv_25 _qv_26))=(mult (succ _qv_26) (succ _qv_25))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((tri (plus _qv_27 _qv_28))=(plus (tri _qv_27) (tri _qv_28))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((tri (plus _qv_27 _qv_28))=(plus (tri _qv_28) (tri _qv_27))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((tri (mult _qv_29 _qv_30))=(mult (tri _qv_29) (tri _qv_30))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((tri (mult _qv_29 _qv_30))=(mult (tri _qv_30) (tri _qv_29))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((cubes (plus _qv_31 _qv_32))=(plus (cubes _qv_31) (cubes _qv_32))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((cubes (plus _qv_31 _qv_32))=(plus (cubes _qv_32) (cubes _qv_31))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((cubes (mult _qv_33 _qv_34))=(mult (cubes _qv_33) (cubes _qv_34))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((cubes (mult _qv_33 _qv_34))=(mult (cubes _qv_34) (cubes _qv_33))))
USE ASSUMPTION FAILED

  backtrack to: ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
  rewritten [4]: ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (succ (plus _t_36 _t_36))))))
  Maximum recursion depth reached
CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_1 _qv_2)=(plus _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_3 _qv_4) _qv_5)=(plus _qv_3 (plus _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((mult _qv_6 _qv_7)=(mult _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((mult (mult _qv_8 _qv_9) _qv_10)=(mult _qv_8 (mult _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat)) ((tri (tri _qv_11))=_qv_11))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat)) ((cubes (cubes _qv_12))=_qv_12))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_14))=(nat-to-int _qv_14)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat)) ((nat-to-int (tri _qv_15))=(nat-to-int _qv_15)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat)) ((nat-to-int (cubes _qv_16))=(nat-to-int _qv_16)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((mult _qv_17 (plus _qv_18 _qv_19))=(plus (mult _qv_17 _qv_18) (mult _qv_17 _qv_19))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus _qv_20 (mult _qv_21 _qv_22))=(mult (plus _qv_20 _qv_21) (plus _qv_20 _qv_22))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_23 _qv_24))=(plus (succ _qv_23) (succ _qv_24))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_23 _qv_24))=(plus (succ _qv_24) (succ _qv_23))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (mult _qv_25 _qv_26))=(mult (succ _qv_25) (succ _qv_26))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (mult _qv_25 _qv_26))=(mult (succ _qv_26) (succ _qv_25))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((tri (plus _qv_27 _qv_28))=(plus (tri _qv_27) (tri _qv_28))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((tri (plus _qv_27 _qv_28))=(plus (tri _qv_28) (tri _qv_27))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((tri (mult _qv_29 _qv_30))=(mult (tri _qv_29) (tri _qv_30))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((tri (mult _qv_29 _qv_30))=(mult (tri _qv_30) (tri _qv_29))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((cubes (plus _qv_31 _qv_32))=(plus (cubes _qv_31) (cubes _qv_32))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((cubes (plus _qv_31 _qv_32))=(plus (cubes _qv_32) (cubes _qv_31))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((cubes (mult _qv_33 _qv_34))=(mult (cubes _qv_33) (cubes _qv_34))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((cubes (mult _qv_33 _qv_34))=(mult (cubes _qv_34) (cubes _qv_33))))
USE ASSUMPTION FAILED

  backtrack to: ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
  rewritten [13]: ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
  Maximum recursion depth reached
CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_1 _qv_2)=(plus _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_3 _qv_4) _qv_5)=(plus _qv_3 (plus _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((mult _qv_6 _qv_7)=(mult _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((mult (mult _qv_8 _qv_9) _qv_10)=(mult _qv_8 (mult _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat)) ((tri (tri _qv_11))=_qv_11))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat)) ((cubes (cubes _qv_12))=_qv_12))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_14))=(nat-to-int _qv_14)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat)) ((nat-to-int (tri _qv_15))=(nat-to-int _qv_15)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat)) ((nat-to-int (cubes _qv_16))=(nat-to-int _qv_16)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((mult _qv_17 (plus _qv_18 _qv_19))=(plus (mult _qv_17 _qv_18) (mult _qv_17 _qv_19))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus _qv_20 (mult _qv_21 _qv_22))=(mult (plus _qv_20 _qv_21) (plus _qv_20 _qv_22))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_23 _qv_24))=(plus (succ _qv_23) (succ _qv_24))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_23 _qv_24))=(plus (succ _qv_24) (succ _qv_23))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (mult _qv_25 _qv_26))=(mult (succ _qv_25) (succ _qv_26))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (mult _qv_25 _qv_26))=(mult (succ _qv_26) (succ _qv_25))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((tri (plus _qv_27 _qv_28))=(plus (tri _qv_27) (tri _qv_28))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((tri (plus _qv_27 _qv_28))=(plus (tri _qv_28) (tri _qv_27))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((tri (mult _qv_29 _qv_30))=(mult (tri _qv_29) (tri _qv_30))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((tri (mult _qv_29 _qv_30))=(mult (tri _qv_30) (tri _qv_29))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((cubes (plus _qv_31 _qv_32))=(plus (cubes _qv_31) (cubes _qv_32))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((cubes (plus _qv_31 _qv_32))=(plus (cubes _qv_32) (cubes _qv_31))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((cubes (mult _qv_33 _qv_34))=(mult (cubes _qv_33) (cubes _qv_34))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((cubes (mult _qv_33 _qv_34))=(mult (cubes _qv_34) (cubes _qv_33))))
USE ASSUMPTION FAILED

  backtrack to: ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
  rewritten [13]: ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
  Maximum recursion depth reached
CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_1 _qv_2)=(plus _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_3 _qv_4) _qv_5)=(plus _qv_3 (plus _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((mult _qv_6 _qv_7)=(mult _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((mult (mult _qv_8 _qv_9) _qv_10)=(mult _qv_8 (mult _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat)) ((tri (tri _qv_11))=_qv_11))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat)) ((cubes (cubes _qv_12))=_qv_12))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_14))=(nat-to-int _qv_14)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat)) ((nat-to-int (tri _qv_15))=(nat-to-int _qv_15)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat)) ((nat-to-int (cubes _qv_16))=(nat-to-int _qv_16)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((mult _qv_17 (plus _qv_18 _qv_19))=(plus (mult _qv_17 _qv_18) (mult _qv_17 _qv_19))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus _qv_20 (mult _qv_21 _qv_22))=(mult (plus _qv_20 _qv_21) (plus _qv_20 _qv_22))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_23 _qv_24))=(plus (succ _qv_23) (succ _qv_24))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_23 _qv_24))=(plus (succ _qv_24) (succ _qv_23))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (mult _qv_25 _qv_26))=(mult (succ _qv_25) (succ _qv_26))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (mult _qv_25 _qv_26))=(mult (succ _qv_26) (succ _qv_25))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((tri (plus _qv_27 _qv_28))=(plus (tri _qv_27) (tri _qv_28))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((tri (plus _qv_27 _qv_28))=(plus (tri _qv_28) (tri _qv_27))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((tri (mult _qv_29 _qv_30))=(mult (tri _qv_29) (tri _qv_30))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((tri (mult _qv_29 _qv_30))=(mult (tri _qv_30) (tri _qv_29))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((cubes (plus _qv_31 _qv_32))=(plus (cubes _qv_31) (cubes _qv_32))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((cubes (plus _qv_31 _qv_32))=(plus (cubes _qv_32) (cubes _qv_31))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((cubes (mult _qv_33 _qv_34))=(mult (cubes _qv_33) (cubes _qv_34))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((cubes (mult _qv_33 _qv_34))=(mult (cubes _qv_34) (cubes _qv_33))))
USE ASSUMPTION FAILED

  backtrack to: ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
  rewritten [15]: ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult (succ (plus (succ _t_36) _t_36)) _v_35)))
  Maximum recursion depth reached
CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_1 _qv_2)=(plus _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_3 _qv_4) _qv_5)=(plus _qv_3 (plus _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((mult _qv_6 _qv_7)=(mult _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((mult (mult _qv_8 _qv_9) _qv_10)=(mult _qv_8 (mult _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat)) ((tri (tri _qv_11))=_qv_11))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat)) ((cubes (cubes _qv_12))=_qv_12))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_14))=(nat-to-int _qv_14)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat)) ((nat-to-int (tri _qv_15))=(nat-to-int _qv_15)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat)) ((nat-to-int (cubes _qv_16))=(nat-to-int _qv_16)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((mult _qv_17 (plus _qv_18 _qv_19))=(plus (mult _qv_17 _qv_18) (mult _qv_17 _qv_19))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus _qv_20 (mult _qv_21 _qv_22))=(mult (plus _qv_20 _qv_21) (plus _qv_20 _qv_22))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_23 _qv_24))=(plus (succ _qv_23) (succ _qv_24))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_23 _qv_24))=(plus (succ _qv_24) (succ _qv_23))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (mult _qv_25 _qv_26))=(mult (succ _qv_25) (succ _qv_26))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (mult _qv_25 _qv_26))=(mult (succ _qv_26) (succ _qv_25))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((tri (plus _qv_27 _qv_28))=(plus (tri _qv_27) (tri _qv_28))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((tri (plus _qv_27 _qv_28))=(plus (tri _qv_28) (tri _qv_27))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((tri (mult _qv_29 _qv_30))=(mult (tri _qv_29) (tri _qv_30))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((tri (mult _qv_29 _qv_30))=(mult (tri _qv_30) (tri _qv_29))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((cubes (plus _qv_31 _qv_32))=(plus (cubes _qv_31) (cubes _qv_32))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((cubes (plus _qv_31 _qv_32))=(plus (cubes _qv_32) (cubes _qv_31))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((cubes (mult _qv_33 _qv_34))=(mult (cubes _qv_33) (cubes _qv_34))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((cubes (mult _qv_33 _qv_34))=(mult (cubes _qv_34) (cubes _qv_33))))
USE ASSUMPTION FAILED

  backtrack to: ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
  rewritten [15]: ([+    (nat-to-int (mult (plus _v_35 _v_35) _t_36))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
  Maximum recursion depth reached
CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_1 _qv_2)=(plus _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_3 _qv_4) _qv_5)=(plus _qv_3 (plus _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((mult _qv_6 _qv_7)=(mult _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((mult (mult _qv_8 _qv_9) _qv_10)=(mult _qv_8 (mult _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat)) ((tri (tri _qv_11))=_qv_11))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat)) ((cubes (cubes _qv_12))=_qv_12))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_14))=(nat-to-int _qv_14)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat)) ((nat-to-int (tri _qv_15))=(nat-to-int _qv_15)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat)) ((nat-to-int (cubes _qv_16))=(nat-to-int _qv_16)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((mult _qv_17 (plus _qv_18 _qv_19))=(plus (mult _qv_17 _qv_18) (mult _qv_17 _qv_19))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus _qv_20 (mult _qv_21 _qv_22))=(mult (plus _qv_20 _qv_21) (plus _qv_20 _qv_22))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_23 _qv_24))=(plus (succ _qv_23) (succ _qv_24))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_23 _qv_24))=(plus (succ _qv_24) (succ _qv_23))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (mult _qv_25 _qv_26))=(mult (succ _qv_25) (succ _qv_26))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (mult _qv_25 _qv_26))=(mult (succ _qv_26) (succ _qv_25))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((tri (plus _qv_27 _qv_28))=(plus (tri _qv_27) (tri _qv_28))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((tri (plus _qv_27 _qv_28))=(plus (tri _qv_28) (tri _qv_27))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((tri (mult _qv_29 _qv_30))=(mult (tri _qv_29) (tri _qv_30))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((tri (mult _qv_29 _qv_30))=(mult (tri _qv_30) (tri _qv_29))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((cubes (plus _qv_31 _qv_32))=(plus (cubes _qv_31) (cubes _qv_32))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((cubes (plus _qv_31 _qv_32))=(plus (cubes _qv_32) (cubes _qv_31))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((cubes (mult _qv_33 _qv_34))=(mult (cubes _qv_33) (cubes _qv_34))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((cubes (mult _qv_33 _qv_34))=(mult (cubes _qv_34) (cubes _qv_33))))
USE ASSUMPTION FAILED

  backtrack to: ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
  rewritten [17]: ([+    (nat-to-int (mult _v_35 (plus _t_36 _t_36)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
  Maximum recursion depth reached
CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_1 _qv_2)=(plus _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_3 _qv_4) _qv_5)=(plus _qv_3 (plus _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((mult _qv_6 _qv_7)=(mult _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((mult (mult _qv_8 _qv_9) _qv_10)=(mult _qv_8 (mult _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat)) ((tri (tri _qv_11))=_qv_11))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat)) ((cubes (cubes _qv_12))=_qv_12))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_14))=(nat-to-int _qv_14)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat)) ((nat-to-int (tri _qv_15))=(nat-to-int _qv_15)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat)) ((nat-to-int (cubes _qv_16))=(nat-to-int _qv_16)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((mult _qv_17 (plus _qv_18 _qv_19))=(plus (mult _qv_17 _qv_18) (mult _qv_17 _qv_19))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus _qv_20 (mult _qv_21 _qv_22))=(mult (plus _qv_20 _qv_21) (plus _qv_20 _qv_22))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_23 _qv_24))=(plus (succ _qv_23) (succ _qv_24))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_23 _qv_24))=(plus (succ _qv_24) (succ _qv_23))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (mult _qv_25 _qv_26))=(mult (succ _qv_25) (succ _qv_26))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (mult _qv_25 _qv_26))=(mult (succ _qv_26) (succ _qv_25))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((tri (plus _qv_27 _qv_28))=(plus (tri _qv_27) (tri _qv_28))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((tri (plus _qv_27 _qv_28))=(plus (tri _qv_28) (tri _qv_27))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((tri (mult _qv_29 _qv_30))=(mult (tri _qv_29) (tri _qv_30))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((tri (mult _qv_29 _qv_30))=(mult (tri _qv_30) (tri _qv_29))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((cubes (plus _qv_31 _qv_32))=(plus (cubes _qv_31) (cubes _qv_32))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((cubes (plus _qv_31 _qv_32))=(plus (cubes _qv_32) (cubes _qv_31))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((cubes (mult _qv_33 _qv_34))=(mult (cubes _qv_33) (cubes _qv_34))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((cubes (mult _qv_33 _qv_34))=(mult (cubes _qv_34) (cubes _qv_33))))
USE ASSUMPTION FAILED

  backtrack to: ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
  rewritten [2]: (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(2*(nat-to-int _v_35)))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
  Maximum recursion depth reached
CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_1 _qv_2)=(plus _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_3 _qv_4) _qv_5)=(plus _qv_3 (plus _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((mult _qv_6 _qv_7)=(mult _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((mult (mult _qv_8 _qv_9) _qv_10)=(mult _qv_8 (mult _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat)) ((tri (tri _qv_11))=_qv_11))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat)) ((cubes (cubes _qv_12))=_qv_12))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_14))=(nat-to-int _qv_14)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat)) ((nat-to-int (tri _qv_15))=(nat-to-int _qv_15)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat)) ((nat-to-int (cubes _qv_16))=(nat-to-int _qv_16)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((mult _qv_17 (plus _qv_18 _qv_19))=(plus (mult _qv_17 _qv_18) (mult _qv_17 _qv_19))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus _qv_20 (mult _qv_21 _qv_22))=(mult (plus _qv_20 _qv_21) (plus _qv_20 _qv_22))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_23 _qv_24))=(plus (succ _qv_23) (succ _qv_24))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_23 _qv_24))=(plus (succ _qv_24) (succ _qv_23))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (mult _qv_25 _qv_26))=(mult (succ _qv_25) (succ _qv_26))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (mult _qv_25 _qv_26))=(mult (succ _qv_26) (succ _qv_25))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((tri (plus _qv_27 _qv_28))=(plus (tri _qv_27) (tri _qv_28))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((tri (plus _qv_27 _qv_28))=(plus (tri _qv_28) (tri _qv_27))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((tri (mult _qv_29 _qv_30))=(mult (tri _qv_29) (tri _qv_30))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((tri (mult _qv_29 _qv_30))=(mult (tri _qv_30) (tri _qv_29))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((cubes (plus _qv_31 _qv_32))=(plus (cubes _qv_31) (cubes _qv_32))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((cubes (plus _qv_31 _qv_32))=(plus (cubes _qv_32) (cubes _qv_31))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((cubes (mult _qv_33 _qv_34))=(mult (cubes _qv_33) (cubes _qv_34))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((cubes (mult _qv_33 _qv_34))=(mult (cubes _qv_34) (cubes _qv_33))))
USE ASSUMPTION FAILED

  backtrack to: ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
  rewritten [4]: ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (succ (plus _t_36 _t_36))))))
  Maximum recursion depth reached
CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_1 _qv_2)=(plus _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_3 _qv_4) _qv_5)=(plus _qv_3 (plus _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((mult _qv_6 _qv_7)=(mult _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((mult (mult _qv_8 _qv_9) _qv_10)=(mult _qv_8 (mult _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat)) ((tri (tri _qv_11))=_qv_11))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat)) ((cubes (cubes _qv_12))=_qv_12))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_14))=(nat-to-int _qv_14)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat)) ((nat-to-int (tri _qv_15))=(nat-to-int _qv_15)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat)) ((nat-to-int (cubes _qv_16))=(nat-to-int _qv_16)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((mult _qv_17 (plus _qv_18 _qv_19))=(plus (mult _qv_17 _qv_18) (mult _qv_17 _qv_19))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus _qv_20 (mult _qv_21 _qv_22))=(mult (plus _qv_20 _qv_21) (plus _qv_20 _qv_22))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_23 _qv_24))=(plus (succ _qv_23) (succ _qv_24))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_23 _qv_24))=(plus (succ _qv_24) (succ _qv_23))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (mult _qv_25 _qv_26))=(mult (succ _qv_25) (succ _qv_26))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (mult _qv_25 _qv_26))=(mult (succ _qv_26) (succ _qv_25))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((tri (plus _qv_27 _qv_28))=(plus (tri _qv_27) (tri _qv_28))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((tri (plus _qv_27 _qv_28))=(plus (tri _qv_28) (tri _qv_27))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((tri (mult _qv_29 _qv_30))=(mult (tri _qv_29) (tri _qv_30))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((tri (mult _qv_29 _qv_30))=(mult (tri _qv_30) (tri _qv_29))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((cubes (plus _qv_31 _qv_32))=(plus (cubes _qv_31) (cubes _qv_32))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((cubes (plus _qv_31 _qv_32))=(plus (cubes _qv_32) (cubes _qv_31))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((cubes (mult _qv_33 _qv_34))=(mult (cubes _qv_33) (cubes _qv_34))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((cubes (mult _qv_33 _qv_34))=(mult (cubes _qv_34) (cubes _qv_33))))
USE ASSUMPTION FAILED

  backtrack to: ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
  rewritten [13]: ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
  Maximum recursion depth reached
CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_1 _qv_2)=(plus _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_3 _qv_4) _qv_5)=(plus _qv_3 (plus _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((mult _qv_6 _qv_7)=(mult _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((mult (mult _qv_8 _qv_9) _qv_10)=(mult _qv_8 (mult _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat)) ((tri (tri _qv_11))=_qv_11))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat)) ((cubes (cubes _qv_12))=_qv_12))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_14))=(nat-to-int _qv_14)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat)) ((nat-to-int (tri _qv_15))=(nat-to-int _qv_15)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat)) ((nat-to-int (cubes _qv_16))=(nat-to-int _qv_16)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((mult _qv_17 (plus _qv_18 _qv_19))=(plus (mult _qv_17 _qv_18) (mult _qv_17 _qv_19))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus _qv_20 (mult _qv_21 _qv_22))=(mult (plus _qv_20 _qv_21) (plus _qv_20 _qv_22))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_23 _qv_24))=(plus (succ _qv_23) (succ _qv_24))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_23 _qv_24))=(plus (succ _qv_24) (succ _qv_23))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (mult _qv_25 _qv_26))=(mult (succ _qv_25) (succ _qv_26))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (mult _qv_25 _qv_26))=(mult (succ _qv_26) (succ _qv_25))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((tri (plus _qv_27 _qv_28))=(plus (tri _qv_27) (tri _qv_28))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((tri (plus _qv_27 _qv_28))=(plus (tri _qv_28) (tri _qv_27))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((tri (mult _qv_29 _qv_30))=(mult (tri _qv_29) (tri _qv_30))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((tri (mult _qv_29 _qv_30))=(mult (tri _qv_30) (tri _qv_29))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((cubes (plus _qv_31 _qv_32))=(plus (cubes _qv_31) (cubes _qv_32))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((cubes (plus _qv_31 _qv_32))=(plus (cubes _qv_32) (cubes _qv_31))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((cubes (mult _qv_33 _qv_34))=(mult (cubes _qv_33) (cubes _qv_34))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((cubes (mult _qv_33 _qv_34))=(mult (cubes _qv_34) (cubes _qv_33))))
USE ASSUMPTION FAILED

  backtrack to: ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
  rewritten [13]: ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
  Maximum recursion depth reached
CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_1 _qv_2)=(plus _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_3 _qv_4) _qv_5)=(plus _qv_3 (plus _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((mult _qv_6 _qv_7)=(mult _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((mult (mult _qv_8 _qv_9) _qv_10)=(mult _qv_8 (mult _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat)) ((tri (tri _qv_11))=_qv_11))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat)) ((cubes (cubes _qv_12))=_qv_12))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_14))=(nat-to-int _qv_14)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat)) ((nat-to-int (tri _qv_15))=(nat-to-int _qv_15)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat)) ((nat-to-int (cubes _qv_16))=(nat-to-int _qv_16)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((mult _qv_17 (plus _qv_18 _qv_19))=(plus (mult _qv_17 _qv_18) (mult _qv_17 _qv_19))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus _qv_20 (mult _qv_21 _qv_22))=(mult (plus _qv_20 _qv_21) (plus _qv_20 _qv_22))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_23 _qv_24))=(plus (succ _qv_23) (succ _qv_24))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_23 _qv_24))=(plus (succ _qv_24) (succ _qv_23))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (mult _qv_25 _qv_26))=(mult (succ _qv_25) (succ _qv_26))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (mult _qv_25 _qv_26))=(mult (succ _qv_26) (succ _qv_25))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((tri (plus _qv_27 _qv_28))=(plus (tri _qv_27) (tri _qv_28))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((tri (plus _qv_27 _qv_28))=(plus (tri _qv_28) (tri _qv_27))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((tri (mult _qv_29 _qv_30))=(mult (tri _qv_29) (tri _qv_30))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((tri (mult _qv_29 _qv_30))=(mult (tri _qv_30) (tri _qv_29))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((cubes (plus _qv_31 _qv_32))=(plus (cubes _qv_31) (cubes _qv_32))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((cubes (plus _qv_31 _qv_32))=(plus (cubes _qv_32) (cubes _qv_31))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((cubes (mult _qv_33 _qv_34))=(mult (cubes _qv_33) (cubes _qv_34))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((cubes (mult _qv_33 _qv_34))=(mult (cubes _qv_34) (cubes _qv_33))))
USE ASSUMPTION FAILED

  backtrack to: ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
  rewritten [15]: ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult (succ (plus (succ _t_36) _t_36)) _v_35)))
  Maximum recursion depth reached
CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_1 _qv_2)=(plus _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_3 _qv_4) _qv_5)=(plus _qv_3 (plus _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((mult _qv_6 _qv_7)=(mult _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((mult (mult _qv_8 _qv_9) _qv_10)=(mult _qv_8 (mult _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat)) ((tri (tri _qv_11))=_qv_11))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat)) ((cubes (cubes _qv_12))=_qv_12))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_14))=(nat-to-int _qv_14)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat)) ((nat-to-int (tri _qv_15))=(nat-to-int _qv_15)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat)) ((nat-to-int (cubes _qv_16))=(nat-to-int _qv_16)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((mult _qv_17 (plus _qv_18 _qv_19))=(plus (mult _qv_17 _qv_18) (mult _qv_17 _qv_19))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus _qv_20 (mult _qv_21 _qv_22))=(mult (plus _qv_20 _qv_21) (plus _qv_20 _qv_22))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_23 _qv_24))=(plus (succ _qv_23) (succ _qv_24))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_23 _qv_24))=(plus (succ _qv_24) (succ _qv_23))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (mult _qv_25 _qv_26))=(mult (succ _qv_25) (succ _qv_26))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (mult _qv_25 _qv_26))=(mult (succ _qv_26) (succ _qv_25))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((tri (plus _qv_27 _qv_28))=(plus (tri _qv_27) (tri _qv_28))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((tri (plus _qv_27 _qv_28))=(plus (tri _qv_28) (tri _qv_27))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((tri (mult _qv_29 _qv_30))=(mult (tri _qv_29) (tri _qv_30))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((tri (mult _qv_29 _qv_30))=(mult (tri _qv_30) (tri _qv_29))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((cubes (plus _qv_31 _qv_32))=(plus (cubes _qv_31) (cubes _qv_32))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((cubes (plus _qv_31 _qv_32))=(plus (cubes _qv_32) (cubes _qv_31))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((cubes (mult _qv_33 _qv_34))=(mult (cubes _qv_33) (cubes _qv_34))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((cubes (mult _qv_33 _qv_34))=(mult (cubes _qv_34) (cubes _qv_33))))
USE ASSUMPTION FAILED

  backtrack to: ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
  rewritten [15]: ([+    (nat-to-int (mult (plus _v_35 _v_35) _t_36))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
  Maximum recursion depth reached
CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_1 _qv_2)=(plus _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_3 _qv_4) _qv_5)=(plus _qv_3 (plus _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((mult _qv_6 _qv_7)=(mult _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((mult (mult _qv_8 _qv_9) _qv_10)=(mult _qv_8 (mult _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat)) ((tri (tri _qv_11))=_qv_11))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat)) ((cubes (cubes _qv_12))=_qv_12))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_14))=(nat-to-int _qv_14)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat)) ((nat-to-int (tri _qv_15))=(nat-to-int _qv_15)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat)) ((nat-to-int (cubes _qv_16))=(nat-to-int _qv_16)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((mult _qv_17 (plus _qv_18 _qv_19))=(plus (mult _qv_17 _qv_18) (mult _qv_17 _qv_19))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus _qv_20 (mult _qv_21 _qv_22))=(mult (plus _qv_20 _qv_21) (plus _qv_20 _qv_22))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_23 _qv_24))=(plus (succ _qv_23) (succ _qv_24))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_23 _qv_24))=(plus (succ _qv_24) (succ _qv_23))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (mult _qv_25 _qv_26))=(mult (succ _qv_25) (succ _qv_26))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (mult _qv_25 _qv_26))=(mult (succ _qv_26) (succ _qv_25))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((tri (plus _qv_27 _qv_28))=(plus (tri _qv_27) (tri _qv_28))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((tri (plus _qv_27 _qv_28))=(plus (tri _qv_28) (tri _qv_27))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((tri (mult _qv_29 _qv_30))=(mult (tri _qv_29) (tri _qv_30))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((tri (mult _qv_29 _qv_30))=(mult (tri _qv_30) (tri _qv_29))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((cubes (plus _qv_31 _qv_32))=(plus (cubes _qv_31) (cubes _qv_32))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((cubes (plus _qv_31 _qv_32))=(plus (cubes _qv_32) (cubes _qv_31))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((cubes (mult _qv_33 _qv_34))=(mult (cubes _qv_33) (cubes _qv_34))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((cubes (mult _qv_33 _qv_34))=(mult (cubes _qv_34) (cubes _qv_33))))
USE ASSUMPTION FAILED

  backtrack to: ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
  rewritten [17]: ([+    (nat-to-int (mult _v_35 (plus _t_36 _t_36)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
  Maximum recursion depth reached
CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_1 _qv_2)=(plus _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_3 _qv_4) _qv_5)=(plus _qv_3 (plus _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((mult _qv_6 _qv_7)=(mult _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((mult (mult _qv_8 _qv_9) _qv_10)=(mult _qv_8 (mult _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat)) ((tri (tri _qv_11))=_qv_11))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat)) ((cubes (cubes _qv_12))=_qv_12))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_14))=(nat-to-int _qv_14)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat)) ((nat-to-int (tri _qv_15))=(nat-to-int _qv_15)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat)) ((nat-to-int (cubes _qv_16))=(nat-to-int _qv_16)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((mult _qv_17 (plus _qv_18 _qv_19))=(plus (mult _qv_17 _qv_18) (mult _qv_17 _qv_19))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus _qv_20 (mult _qv_21 _qv_22))=(mult (plus _qv_20 _qv_21) (plus _qv_20 _qv_22))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_23 _qv_24))=(plus (succ _qv_23) (succ _qv_24))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_23 _qv_24))=(plus (succ _qv_24) (succ _qv_23))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (mult _qv_25 _qv_26))=(mult (succ _qv_25) (succ _qv_26))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (mult _qv_25 _qv_26))=(mult (succ _qv_26) (succ _qv_25))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((tri (plus _qv_27 _qv_28))=(plus (tri _qv_27) (tri _qv_28))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((tri (plus _qv_27 _qv_28))=(plus (tri _qv_28) (tri _qv_27))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((tri (mult _qv_29 _qv_30))=(mult (tri _qv_29) (tri _qv_30))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((tri (mult _qv_29 _qv_30))=(mult (tri _qv_30) (tri _qv_29))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((cubes (plus _qv_31 _qv_32))=(plus (cubes _qv_31) (cubes _qv_32))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((cubes (plus _qv_31 _qv_32))=(plus (cubes _qv_32) (cubes _qv_31))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((cubes (mult _qv_33 _qv_34))=(mult (cubes _qv_33) (cubes _qv_34))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((cubes (mult _qv_33 _qv_34))=(mult (cubes _qv_34) (cubes _qv_33))))
USE ASSUMPTION FAILED

  backtrack to: ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(nat-to-int (plus _v_35 _v_35)))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(nat-to-int (plus _v_35 _v_35)))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_1 _qv_2)=(plus _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(nat-to-int (plus _v_35 _v_35)))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_3 _qv_4) _qv_5)=(plus _qv_3 (plus _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(nat-to-int (plus _v_35 _v_35)))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((mult _qv_6 _qv_7)=(mult _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(nat-to-int (plus _v_35 _v_35)))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((mult (mult _qv_8 _qv_9) _qv_10)=(mult _qv_8 (mult _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(nat-to-int (plus _v_35 _v_35)))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat)) ((tri (tri _qv_11))=_qv_11))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(nat-to-int (plus _v_35 _v_35)))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat)) ((cubes (cubes _qv_12))=_qv_12))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(nat-to-int (plus _v_35 _v_35)))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(nat-to-int (plus _v_35 _v_35)))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_14))=(nat-to-int _qv_14)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(nat-to-int (plus _v_35 _v_35)))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat)) ((nat-to-int (tri _qv_15))=(nat-to-int _qv_15)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(nat-to-int (plus _v_35 _v_35)))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat)) ((nat-to-int (cubes _qv_16))=(nat-to-int _qv_16)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(nat-to-int (plus _v_35 _v_35)))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((mult _qv_17 (plus _qv_18 _qv_19))=(plus (mult _qv_17 _qv_18) (mult _qv_17 _qv_19))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(nat-to-int (plus _v_35 _v_35)))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus _qv_20 (mult _qv_21 _qv_22))=(mult (plus _qv_20 _qv_21) (plus _qv_20 _qv_22))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(nat-to-int (plus _v_35 _v_35)))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_23 _qv_24))=(plus (succ _qv_23) (succ _qv_24))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(nat-to-int (plus _v_35 _v_35)))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_23 _qv_24))=(plus (succ _qv_24) (succ _qv_23))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(nat-to-int (plus _v_35 _v_35)))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (mult _qv_25 _qv_26))=(mult (succ _qv_25) (succ _qv_26))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(nat-to-int (plus _v_35 _v_35)))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (mult _qv_25 _qv_26))=(mult (succ _qv_26) (succ _qv_25))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(nat-to-int (plus _v_35 _v_35)))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((tri (plus _qv_27 _qv_28))=(plus (tri _qv_27) (tri _qv_28))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(nat-to-int (plus _v_35 _v_35)))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((tri (plus _qv_27 _qv_28))=(plus (tri _qv_28) (tri _qv_27))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(nat-to-int (plus _v_35 _v_35)))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((tri (mult _qv_29 _qv_30))=(mult (tri _qv_29) (tri _qv_30))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(nat-to-int (plus _v_35 _v_35)))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((tri (mult _qv_29 _qv_30))=(mult (tri _qv_30) (tri _qv_29))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(nat-to-int (plus _v_35 _v_35)))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((cubes (plus _qv_31 _qv_32))=(plus (cubes _qv_31) (cubes _qv_32))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(nat-to-int (plus _v_35 _v_35)))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((cubes (plus _qv_31 _qv_32))=(plus (cubes _qv_32) (cubes _qv_31))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(nat-to-int (plus _v_35 _v_35)))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((cubes (mult _qv_33 _qv_34))=(mult (cubes _qv_33) (cubes _qv_34))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(nat-to-int (plus _v_35 _v_35)))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((cubes (mult _qv_33 _qv_34))=(mult (cubes _qv_34) (cubes _qv_33))))
USE ASSUMPTION FAILED

  backtrack to: (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(nat-to-int (plus _v_35 _v_35)))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
  rewritten [15]: (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(nat-to-int (plus _v_35 _v_35)))=(nat-to-int (mult (succ (plus (succ _t_36) _t_36)) _v_35)))
  rewritten [4]: (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(nat-to-int (plus _v_35 _v_35)))=(nat-to-int (mult (succ (succ (plus _t_36 _t_36))) _v_35)))
  Maximum recursion depth reached
CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(nat-to-int (plus _v_35 _v_35)))=(nat-to-int (mult (succ (plus (succ _t_36) _t_36)) _v_35)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(nat-to-int (plus _v_35 _v_35)))=(nat-to-int (mult (succ (plus (succ _t_36) _t_36)) _v_35)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_1 _qv_2)=(plus _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(nat-to-int (plus _v_35 _v_35)))=(nat-to-int (mult (succ (plus (succ _t_36) _t_36)) _v_35)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_3 _qv_4) _qv_5)=(plus _qv_3 (plus _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(nat-to-int (plus _v_35 _v_35)))=(nat-to-int (mult (succ (plus (succ _t_36) _t_36)) _v_35)))
NOW TESTING (forall ((Nat) (Nat)) ((mult _qv_6 _qv_7)=(mult _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(nat-to-int (plus _v_35 _v_35)))=(nat-to-int (mult (succ (plus (succ _t_36) _t_36)) _v_35)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((mult (mult _qv_8 _qv_9) _qv_10)=(mult _qv_8 (mult _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(nat-to-int (plus _v_35 _v_35)))=(nat-to-int (mult (succ (plus (succ _t_36) _t_36)) _v_35)))
NOW TESTING (forall ((Nat)) ((tri (tri _qv_11))=_qv_11))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(nat-to-int (plus _v_35 _v_35)))=(nat-to-int (mult (succ (plus (succ _t_36) _t_36)) _v_35)))
NOW TESTING (forall ((Nat)) ((cubes (cubes _qv_12))=_qv_12))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(nat-to-int (plus _v_35 _v_35)))=(nat-to-int (mult (succ (plus (succ _t_36) _t_36)) _v_35)))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(nat-to-int (plus _v_35 _v_35)))=(nat-to-int (mult (succ (plus (succ _t_36) _t_36)) _v_35)))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_14))=(nat-to-int _qv_14)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(nat-to-int (plus _v_35 _v_35)))=(nat-to-int (mult (succ (plus (succ _t_36) _t_36)) _v_35)))
NOW TESTING (forall ((Nat)) ((nat-to-int (tri _qv_15))=(nat-to-int _qv_15)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(nat-to-int (plus _v_35 _v_35)))=(nat-to-int (mult (succ (plus (succ _t_36) _t_36)) _v_35)))
NOW TESTING (forall ((Nat)) ((nat-to-int (cubes _qv_16))=(nat-to-int _qv_16)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(nat-to-int (plus _v_35 _v_35)))=(nat-to-int (mult (succ (plus (succ _t_36) _t_36)) _v_35)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((mult _qv_17 (plus _qv_18 _qv_19))=(plus (mult _qv_17 _qv_18) (mult _qv_17 _qv_19))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(nat-to-int (plus _v_35 _v_35)))=(nat-to-int (mult (succ (plus (succ _t_36) _t_36)) _v_35)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus _qv_20 (mult _qv_21 _qv_22))=(mult (plus _qv_20 _qv_21) (plus _qv_20 _qv_22))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(nat-to-int (plus _v_35 _v_35)))=(nat-to-int (mult (succ (plus (succ _t_36) _t_36)) _v_35)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_23 _qv_24))=(plus (succ _qv_23) (succ _qv_24))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(nat-to-int (plus _v_35 _v_35)))=(nat-to-int (mult (succ (plus (succ _t_36) _t_36)) _v_35)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_23 _qv_24))=(plus (succ _qv_24) (succ _qv_23))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(nat-to-int (plus _v_35 _v_35)))=(nat-to-int (mult (succ (plus (succ _t_36) _t_36)) _v_35)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (mult _qv_25 _qv_26))=(mult (succ _qv_25) (succ _qv_26))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(nat-to-int (plus _v_35 _v_35)))=(nat-to-int (mult (succ (plus (succ _t_36) _t_36)) _v_35)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (mult _qv_25 _qv_26))=(mult (succ _qv_26) (succ _qv_25))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(nat-to-int (plus _v_35 _v_35)))=(nat-to-int (mult (succ (plus (succ _t_36) _t_36)) _v_35)))
NOW TESTING (forall ((Nat) (Nat)) ((tri (plus _qv_27 _qv_28))=(plus (tri _qv_27) (tri _qv_28))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(nat-to-int (plus _v_35 _v_35)))=(nat-to-int (mult (succ (plus (succ _t_36) _t_36)) _v_35)))
NOW TESTING (forall ((Nat) (Nat)) ((tri (plus _qv_27 _qv_28))=(plus (tri _qv_28) (tri _qv_27))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(nat-to-int (plus _v_35 _v_35)))=(nat-to-int (mult (succ (plus (succ _t_36) _t_36)) _v_35)))
NOW TESTING (forall ((Nat) (Nat)) ((tri (mult _qv_29 _qv_30))=(mult (tri _qv_29) (tri _qv_30))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(nat-to-int (plus _v_35 _v_35)))=(nat-to-int (mult (succ (plus (succ _t_36) _t_36)) _v_35)))
NOW TESTING (forall ((Nat) (Nat)) ((tri (mult _qv_29 _qv_30))=(mult (tri _qv_30) (tri _qv_29))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(nat-to-int (plus _v_35 _v_35)))=(nat-to-int (mult (succ (plus (succ _t_36) _t_36)) _v_35)))
NOW TESTING (forall ((Nat) (Nat)) ((cubes (plus _qv_31 _qv_32))=(plus (cubes _qv_31) (cubes _qv_32))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(nat-to-int (plus _v_35 _v_35)))=(nat-to-int (mult (succ (plus (succ _t_36) _t_36)) _v_35)))
NOW TESTING (forall ((Nat) (Nat)) ((cubes (plus _qv_31 _qv_32))=(plus (cubes _qv_32) (cubes _qv_31))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(nat-to-int (plus _v_35 _v_35)))=(nat-to-int (mult (succ (plus (succ _t_36) _t_36)) _v_35)))
NOW TESTING (forall ((Nat) (Nat)) ((cubes (mult _qv_33 _qv_34))=(mult (cubes _qv_33) (cubes _qv_34))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(nat-to-int (plus _v_35 _v_35)))=(nat-to-int (mult (succ (plus (succ _t_36) _t_36)) _v_35)))
NOW TESTING (forall ((Nat) (Nat)) ((cubes (mult _qv_33 _qv_34))=(mult (cubes _qv_34) (cubes _qv_33))))
USE ASSUMPTION FAILED

  backtrack to: (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(nat-to-int (plus _v_35 _v_35)))=(nat-to-int (mult (succ (plus (succ _t_36) _t_36)) _v_35)))
  rewritten [6]: (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(nat-to-int (plus _v_35 _v_35)))=(nat-to-int (plus (mult (plus (succ _t_36) _t_36) _v_35) _v_35)))
  Maximum recursion depth reached
CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(nat-to-int (plus _v_35 _v_35)))=(nat-to-int (mult (succ (plus (succ _t_36) _t_36)) _v_35)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(nat-to-int (plus _v_35 _v_35)))=(nat-to-int (mult (succ (plus (succ _t_36) _t_36)) _v_35)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_1 _qv_2)=(plus _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(nat-to-int (plus _v_35 _v_35)))=(nat-to-int (mult (succ (plus (succ _t_36) _t_36)) _v_35)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_3 _qv_4) _qv_5)=(plus _qv_3 (plus _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(nat-to-int (plus _v_35 _v_35)))=(nat-to-int (mult (succ (plus (succ _t_36) _t_36)) _v_35)))
NOW TESTING (forall ((Nat) (Nat)) ((mult _qv_6 _qv_7)=(mult _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(nat-to-int (plus _v_35 _v_35)))=(nat-to-int (mult (succ (plus (succ _t_36) _t_36)) _v_35)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((mult (mult _qv_8 _qv_9) _qv_10)=(mult _qv_8 (mult _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(nat-to-int (plus _v_35 _v_35)))=(nat-to-int (mult (succ (plus (succ _t_36) _t_36)) _v_35)))
NOW TESTING (forall ((Nat)) ((tri (tri _qv_11))=_qv_11))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(nat-to-int (plus _v_35 _v_35)))=(nat-to-int (mult (succ (plus (succ _t_36) _t_36)) _v_35)))
NOW TESTING (forall ((Nat)) ((cubes (cubes _qv_12))=_qv_12))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(nat-to-int (plus _v_35 _v_35)))=(nat-to-int (mult (succ (plus (succ _t_36) _t_36)) _v_35)))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(nat-to-int (plus _v_35 _v_35)))=(nat-to-int (mult (succ (plus (succ _t_36) _t_36)) _v_35)))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_14))=(nat-to-int _qv_14)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(nat-to-int (plus _v_35 _v_35)))=(nat-to-int (mult (succ (plus (succ _t_36) _t_36)) _v_35)))
NOW TESTING (forall ((Nat)) ((nat-to-int (tri _qv_15))=(nat-to-int _qv_15)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(nat-to-int (plus _v_35 _v_35)))=(nat-to-int (mult (succ (plus (succ _t_36) _t_36)) _v_35)))
NOW TESTING (forall ((Nat)) ((nat-to-int (cubes _qv_16))=(nat-to-int _qv_16)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(nat-to-int (plus _v_35 _v_35)))=(nat-to-int (mult (succ (plus (succ _t_36) _t_36)) _v_35)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((mult _qv_17 (plus _qv_18 _qv_19))=(plus (mult _qv_17 _qv_18) (mult _qv_17 _qv_19))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(nat-to-int (plus _v_35 _v_35)))=(nat-to-int (mult (succ (plus (succ _t_36) _t_36)) _v_35)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus _qv_20 (mult _qv_21 _qv_22))=(mult (plus _qv_20 _qv_21) (plus _qv_20 _qv_22))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(nat-to-int (plus _v_35 _v_35)))=(nat-to-int (mult (succ (plus (succ _t_36) _t_36)) _v_35)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_23 _qv_24))=(plus (succ _qv_23) (succ _qv_24))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(nat-to-int (plus _v_35 _v_35)))=(nat-to-int (mult (succ (plus (succ _t_36) _t_36)) _v_35)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_23 _qv_24))=(plus (succ _qv_24) (succ _qv_23))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(nat-to-int (plus _v_35 _v_35)))=(nat-to-int (mult (succ (plus (succ _t_36) _t_36)) _v_35)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (mult _qv_25 _qv_26))=(mult (succ _qv_25) (succ _qv_26))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(nat-to-int (plus _v_35 _v_35)))=(nat-to-int (mult (succ (plus (succ _t_36) _t_36)) _v_35)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (mult _qv_25 _qv_26))=(mult (succ _qv_26) (succ _qv_25))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(nat-to-int (plus _v_35 _v_35)))=(nat-to-int (mult (succ (plus (succ _t_36) _t_36)) _v_35)))
NOW TESTING (forall ((Nat) (Nat)) ((tri (plus _qv_27 _qv_28))=(plus (tri _qv_27) (tri _qv_28))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(nat-to-int (plus _v_35 _v_35)))=(nat-to-int (mult (succ (plus (succ _t_36) _t_36)) _v_35)))
NOW TESTING (forall ((Nat) (Nat)) ((tri (plus _qv_27 _qv_28))=(plus (tri _qv_28) (tri _qv_27))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(nat-to-int (plus _v_35 _v_35)))=(nat-to-int (mult (succ (plus (succ _t_36) _t_36)) _v_35)))
NOW TESTING (forall ((Nat) (Nat)) ((tri (mult _qv_29 _qv_30))=(mult (tri _qv_29) (tri _qv_30))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(nat-to-int (plus _v_35 _v_35)))=(nat-to-int (mult (succ (plus (succ _t_36) _t_36)) _v_35)))
NOW TESTING (forall ((Nat) (Nat)) ((tri (mult _qv_29 _qv_30))=(mult (tri _qv_30) (tri _qv_29))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(nat-to-int (plus _v_35 _v_35)))=(nat-to-int (mult (succ (plus (succ _t_36) _t_36)) _v_35)))
NOW TESTING (forall ((Nat) (Nat)) ((cubes (plus _qv_31 _qv_32))=(plus (cubes _qv_31) (cubes _qv_32))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(nat-to-int (plus _v_35 _v_35)))=(nat-to-int (mult (succ (plus (succ _t_36) _t_36)) _v_35)))
NOW TESTING (forall ((Nat) (Nat)) ((cubes (plus _qv_31 _qv_32))=(plus (cubes _qv_32) (cubes _qv_31))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(nat-to-int (plus _v_35 _v_35)))=(nat-to-int (mult (succ (plus (succ _t_36) _t_36)) _v_35)))
NOW TESTING (forall ((Nat) (Nat)) ((cubes (mult _qv_33 _qv_34))=(mult (cubes _qv_33) (cubes _qv_34))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(nat-to-int (plus _v_35 _v_35)))=(nat-to-int (mult (succ (plus (succ _t_36) _t_36)) _v_35)))
NOW TESTING (forall ((Nat) (Nat)) ((cubes (mult _qv_33 _qv_34))=(mult (cubes _qv_34) (cubes _qv_33))))
USE ASSUMPTION FAILED

  backtrack to: (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(nat-to-int (plus _v_35 _v_35)))=(nat-to-int (mult (succ (plus (succ _t_36) _t_36)) _v_35)))
  rewritten [12]: (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+((nat-to-int _v_35)+(nat-to-int _v_35)))=(nat-to-int (mult (succ (plus (succ _t_36) _t_36)) _v_35)))
  Maximum recursion depth reached
CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(nat-to-int (plus _v_35 _v_35)))=(nat-to-int (mult (succ (plus (succ _t_36) _t_36)) _v_35)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(nat-to-int (plus _v_35 _v_35)))=(nat-to-int (mult (succ (plus (succ _t_36) _t_36)) _v_35)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_1 _qv_2)=(plus _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(nat-to-int (plus _v_35 _v_35)))=(nat-to-int (mult (succ (plus (succ _t_36) _t_36)) _v_35)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_3 _qv_4) _qv_5)=(plus _qv_3 (plus _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(nat-to-int (plus _v_35 _v_35)))=(nat-to-int (mult (succ (plus (succ _t_36) _t_36)) _v_35)))
NOW TESTING (forall ((Nat) (Nat)) ((mult _qv_6 _qv_7)=(mult _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(nat-to-int (plus _v_35 _v_35)))=(nat-to-int (mult (succ (plus (succ _t_36) _t_36)) _v_35)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((mult (mult _qv_8 _qv_9) _qv_10)=(mult _qv_8 (mult _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(nat-to-int (plus _v_35 _v_35)))=(nat-to-int (mult (succ (plus (succ _t_36) _t_36)) _v_35)))
NOW TESTING (forall ((Nat)) ((tri (tri _qv_11))=_qv_11))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(nat-to-int (plus _v_35 _v_35)))=(nat-to-int (mult (succ (plus (succ _t_36) _t_36)) _v_35)))
NOW TESTING (forall ((Nat)) ((cubes (cubes _qv_12))=_qv_12))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(nat-to-int (plus _v_35 _v_35)))=(nat-to-int (mult (succ (plus (succ _t_36) _t_36)) _v_35)))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(nat-to-int (plus _v_35 _v_35)))=(nat-to-int (mult (succ (plus (succ _t_36) _t_36)) _v_35)))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_14))=(nat-to-int _qv_14)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(nat-to-int (plus _v_35 _v_35)))=(nat-to-int (mult (succ (plus (succ _t_36) _t_36)) _v_35)))
NOW TESTING (forall ((Nat)) ((nat-to-int (tri _qv_15))=(nat-to-int _qv_15)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(nat-to-int (plus _v_35 _v_35)))=(nat-to-int (mult (succ (plus (succ _t_36) _t_36)) _v_35)))
NOW TESTING (forall ((Nat)) ((nat-to-int (cubes _qv_16))=(nat-to-int _qv_16)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(nat-to-int (plus _v_35 _v_35)))=(nat-to-int (mult (succ (plus (succ _t_36) _t_36)) _v_35)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((mult _qv_17 (plus _qv_18 _qv_19))=(plus (mult _qv_17 _qv_18) (mult _qv_17 _qv_19))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(nat-to-int (plus _v_35 _v_35)))=(nat-to-int (mult (succ (plus (succ _t_36) _t_36)) _v_35)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus _qv_20 (mult _qv_21 _qv_22))=(mult (plus _qv_20 _qv_21) (plus _qv_20 _qv_22))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(nat-to-int (plus _v_35 _v_35)))=(nat-to-int (mult (succ (plus (succ _t_36) _t_36)) _v_35)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_23 _qv_24))=(plus (succ _qv_23) (succ _qv_24))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(nat-to-int (plus _v_35 _v_35)))=(nat-to-int (mult (succ (plus (succ _t_36) _t_36)) _v_35)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_23 _qv_24))=(plus (succ _qv_24) (succ _qv_23))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(nat-to-int (plus _v_35 _v_35)))=(nat-to-int (mult (succ (plus (succ _t_36) _t_36)) _v_35)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (mult _qv_25 _qv_26))=(mult (succ _qv_25) (succ _qv_26))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(nat-to-int (plus _v_35 _v_35)))=(nat-to-int (mult (succ (plus (succ _t_36) _t_36)) _v_35)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (mult _qv_25 _qv_26))=(mult (succ _qv_26) (succ _qv_25))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(nat-to-int (plus _v_35 _v_35)))=(nat-to-int (mult (succ (plus (succ _t_36) _t_36)) _v_35)))
NOW TESTING (forall ((Nat) (Nat)) ((tri (plus _qv_27 _qv_28))=(plus (tri _qv_27) (tri _qv_28))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(nat-to-int (plus _v_35 _v_35)))=(nat-to-int (mult (succ (plus (succ _t_36) _t_36)) _v_35)))
NOW TESTING (forall ((Nat) (Nat)) ((tri (plus _qv_27 _qv_28))=(plus (tri _qv_28) (tri _qv_27))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(nat-to-int (plus _v_35 _v_35)))=(nat-to-int (mult (succ (plus (succ _t_36) _t_36)) _v_35)))
NOW TESTING (forall ((Nat) (Nat)) ((tri (mult _qv_29 _qv_30))=(mult (tri _qv_29) (tri _qv_30))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(nat-to-int (plus _v_35 _v_35)))=(nat-to-int (mult (succ (plus (succ _t_36) _t_36)) _v_35)))
NOW TESTING (forall ((Nat) (Nat)) ((tri (mult _qv_29 _qv_30))=(mult (tri _qv_30) (tri _qv_29))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(nat-to-int (plus _v_35 _v_35)))=(nat-to-int (mult (succ (plus (succ _t_36) _t_36)) _v_35)))
NOW TESTING (forall ((Nat) (Nat)) ((cubes (plus _qv_31 _qv_32))=(plus (cubes _qv_31) (cubes _qv_32))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(nat-to-int (plus _v_35 _v_35)))=(nat-to-int (mult (succ (plus (succ _t_36) _t_36)) _v_35)))
NOW TESTING (forall ((Nat) (Nat)) ((cubes (plus _qv_31 _qv_32))=(plus (cubes _qv_32) (cubes _qv_31))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(nat-to-int (plus _v_35 _v_35)))=(nat-to-int (mult (succ (plus (succ _t_36) _t_36)) _v_35)))
NOW TESTING (forall ((Nat) (Nat)) ((cubes (mult _qv_33 _qv_34))=(mult (cubes _qv_33) (cubes _qv_34))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(nat-to-int (plus _v_35 _v_35)))=(nat-to-int (mult (succ (plus (succ _t_36) _t_36)) _v_35)))
NOW TESTING (forall ((Nat) (Nat)) ((cubes (mult _qv_33 _qv_34))=(mult (cubes _qv_34) (cubes _qv_33))))
USE ASSUMPTION FAILED

  backtrack to: (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(nat-to-int (plus _v_35 _v_35)))=(nat-to-int (mult (succ (plus (succ _t_36) _t_36)) _v_35)))
  rewritten [13]: (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(nat-to-int (plus _v_35 _v_35)))=(nat-to-int (mult (succ (plus _t_36 (succ _t_36))) _v_35)))
  Maximum recursion depth reached
CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(nat-to-int (plus _v_35 _v_35)))=(nat-to-int (mult (succ (plus (succ _t_36) _t_36)) _v_35)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(nat-to-int (plus _v_35 _v_35)))=(nat-to-int (mult (succ (plus (succ _t_36) _t_36)) _v_35)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_1 _qv_2)=(plus _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(nat-to-int (plus _v_35 _v_35)))=(nat-to-int (mult (succ (plus (succ _t_36) _t_36)) _v_35)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_3 _qv_4) _qv_5)=(plus _qv_3 (plus _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(nat-to-int (plus _v_35 _v_35)))=(nat-to-int (mult (succ (plus (succ _t_36) _t_36)) _v_35)))
NOW TESTING (forall ((Nat) (Nat)) ((mult _qv_6 _qv_7)=(mult _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(nat-to-int (plus _v_35 _v_35)))=(nat-to-int (mult (succ (plus (succ _t_36) _t_36)) _v_35)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((mult (mult _qv_8 _qv_9) _qv_10)=(mult _qv_8 (mult _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(nat-to-int (plus _v_35 _v_35)))=(nat-to-int (mult (succ (plus (succ _t_36) _t_36)) _v_35)))
NOW TESTING (forall ((Nat)) ((tri (tri _qv_11))=_qv_11))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(nat-to-int (plus _v_35 _v_35)))=(nat-to-int (mult (succ (plus (succ _t_36) _t_36)) _v_35)))
NOW TESTING (forall ((Nat)) ((cubes (cubes _qv_12))=_qv_12))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(nat-to-int (plus _v_35 _v_35)))=(nat-to-int (mult (succ (plus (succ _t_36) _t_36)) _v_35)))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(nat-to-int (plus _v_35 _v_35)))=(nat-to-int (mult (succ (plus (succ _t_36) _t_36)) _v_35)))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_14))=(nat-to-int _qv_14)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(nat-to-int (plus _v_35 _v_35)))=(nat-to-int (mult (succ (plus (succ _t_36) _t_36)) _v_35)))
NOW TESTING (forall ((Nat)) ((nat-to-int (tri _qv_15))=(nat-to-int _qv_15)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(nat-to-int (plus _v_35 _v_35)))=(nat-to-int (mult (succ (plus (succ _t_36) _t_36)) _v_35)))
NOW TESTING (forall ((Nat)) ((nat-to-int (cubes _qv_16))=(nat-to-int _qv_16)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(nat-to-int (plus _v_35 _v_35)))=(nat-to-int (mult (succ (plus (succ _t_36) _t_36)) _v_35)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((mult _qv_17 (plus _qv_18 _qv_19))=(plus (mult _qv_17 _qv_18) (mult _qv_17 _qv_19))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(nat-to-int (plus _v_35 _v_35)))=(nat-to-int (mult (succ (plus (succ _t_36) _t_36)) _v_35)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus _qv_20 (mult _qv_21 _qv_22))=(mult (plus _qv_20 _qv_21) (plus _qv_20 _qv_22))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(nat-to-int (plus _v_35 _v_35)))=(nat-to-int (mult (succ (plus (succ _t_36) _t_36)) _v_35)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_23 _qv_24))=(plus (succ _qv_23) (succ _qv_24))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(nat-to-int (plus _v_35 _v_35)))=(nat-to-int (mult (succ (plus (succ _t_36) _t_36)) _v_35)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_23 _qv_24))=(plus (succ _qv_24) (succ _qv_23))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(nat-to-int (plus _v_35 _v_35)))=(nat-to-int (mult (succ (plus (succ _t_36) _t_36)) _v_35)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (mult _qv_25 _qv_26))=(mult (succ _qv_25) (succ _qv_26))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(nat-to-int (plus _v_35 _v_35)))=(nat-to-int (mult (succ (plus (succ _t_36) _t_36)) _v_35)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (mult _qv_25 _qv_26))=(mult (succ _qv_26) (succ _qv_25))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(nat-to-int (plus _v_35 _v_35)))=(nat-to-int (mult (succ (plus (succ _t_36) _t_36)) _v_35)))
NOW TESTING (forall ((Nat) (Nat)) ((tri (plus _qv_27 _qv_28))=(plus (tri _qv_27) (tri _qv_28))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(nat-to-int (plus _v_35 _v_35)))=(nat-to-int (mult (succ (plus (succ _t_36) _t_36)) _v_35)))
NOW TESTING (forall ((Nat) (Nat)) ((tri (plus _qv_27 _qv_28))=(plus (tri _qv_28) (tri _qv_27))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(nat-to-int (plus _v_35 _v_35)))=(nat-to-int (mult (succ (plus (succ _t_36) _t_36)) _v_35)))
NOW TESTING (forall ((Nat) (Nat)) ((tri (mult _qv_29 _qv_30))=(mult (tri _qv_29) (tri _qv_30))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(nat-to-int (plus _v_35 _v_35)))=(nat-to-int (mult (succ (plus (succ _t_36) _t_36)) _v_35)))
NOW TESTING (forall ((Nat) (Nat)) ((tri (mult _qv_29 _qv_30))=(mult (tri _qv_30) (tri _qv_29))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(nat-to-int (plus _v_35 _v_35)))=(nat-to-int (mult (succ (plus (succ _t_36) _t_36)) _v_35)))
NOW TESTING (forall ((Nat) (Nat)) ((cubes (plus _qv_31 _qv_32))=(plus (cubes _qv_31) (cubes _qv_32))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(nat-to-int (plus _v_35 _v_35)))=(nat-to-int (mult (succ (plus (succ _t_36) _t_36)) _v_35)))
NOW TESTING (forall ((Nat) (Nat)) ((cubes (plus _qv_31 _qv_32))=(plus (cubes _qv_32) (cubes _qv_31))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(nat-to-int (plus _v_35 _v_35)))=(nat-to-int (mult (succ (plus (succ _t_36) _t_36)) _v_35)))
NOW TESTING (forall ((Nat) (Nat)) ((cubes (mult _qv_33 _qv_34))=(mult (cubes _qv_33) (cubes _qv_34))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(nat-to-int (plus _v_35 _v_35)))=(nat-to-int (mult (succ (plus (succ _t_36) _t_36)) _v_35)))
NOW TESTING (forall ((Nat) (Nat)) ((cubes (mult _qv_33 _qv_34))=(mult (cubes _qv_34) (cubes _qv_33))))
USE ASSUMPTION FAILED

  backtrack to: (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(nat-to-int (plus _v_35 _v_35)))=(nat-to-int (mult (succ (plus (succ _t_36) _t_36)) _v_35)))
  rewritten [15]: (((nat-to-int (mult (plus _v_35 _v_35) _t_36))+(nat-to-int (plus _v_35 _v_35)))=(nat-to-int (mult (succ (plus (succ _t_36) _t_36)) _v_35)))
  Maximum recursion depth reached
CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(nat-to-int (plus _v_35 _v_35)))=(nat-to-int (mult (succ (plus (succ _t_36) _t_36)) _v_35)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(nat-to-int (plus _v_35 _v_35)))=(nat-to-int (mult (succ (plus (succ _t_36) _t_36)) _v_35)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_1 _qv_2)=(plus _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(nat-to-int (plus _v_35 _v_35)))=(nat-to-int (mult (succ (plus (succ _t_36) _t_36)) _v_35)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_3 _qv_4) _qv_5)=(plus _qv_3 (plus _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(nat-to-int (plus _v_35 _v_35)))=(nat-to-int (mult (succ (plus (succ _t_36) _t_36)) _v_35)))
NOW TESTING (forall ((Nat) (Nat)) ((mult _qv_6 _qv_7)=(mult _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(nat-to-int (plus _v_35 _v_35)))=(nat-to-int (mult (succ (plus (succ _t_36) _t_36)) _v_35)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((mult (mult _qv_8 _qv_9) _qv_10)=(mult _qv_8 (mult _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(nat-to-int (plus _v_35 _v_35)))=(nat-to-int (mult (succ (plus (succ _t_36) _t_36)) _v_35)))
NOW TESTING (forall ((Nat)) ((tri (tri _qv_11))=_qv_11))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(nat-to-int (plus _v_35 _v_35)))=(nat-to-int (mult (succ (plus (succ _t_36) _t_36)) _v_35)))
NOW TESTING (forall ((Nat)) ((cubes (cubes _qv_12))=_qv_12))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(nat-to-int (plus _v_35 _v_35)))=(nat-to-int (mult (succ (plus (succ _t_36) _t_36)) _v_35)))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(nat-to-int (plus _v_35 _v_35)))=(nat-to-int (mult (succ (plus (succ _t_36) _t_36)) _v_35)))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_14))=(nat-to-int _qv_14)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(nat-to-int (plus _v_35 _v_35)))=(nat-to-int (mult (succ (plus (succ _t_36) _t_36)) _v_35)))
NOW TESTING (forall ((Nat)) ((nat-to-int (tri _qv_15))=(nat-to-int _qv_15)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(nat-to-int (plus _v_35 _v_35)))=(nat-to-int (mult (succ (plus (succ _t_36) _t_36)) _v_35)))
NOW TESTING (forall ((Nat)) ((nat-to-int (cubes _qv_16))=(nat-to-int _qv_16)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(nat-to-int (plus _v_35 _v_35)))=(nat-to-int (mult (succ (plus (succ _t_36) _t_36)) _v_35)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((mult _qv_17 (plus _qv_18 _qv_19))=(plus (mult _qv_17 _qv_18) (mult _qv_17 _qv_19))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(nat-to-int (plus _v_35 _v_35)))=(nat-to-int (mult (succ (plus (succ _t_36) _t_36)) _v_35)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus _qv_20 (mult _qv_21 _qv_22))=(mult (plus _qv_20 _qv_21) (plus _qv_20 _qv_22))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(nat-to-int (plus _v_35 _v_35)))=(nat-to-int (mult (succ (plus (succ _t_36) _t_36)) _v_35)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_23 _qv_24))=(plus (succ _qv_23) (succ _qv_24))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(nat-to-int (plus _v_35 _v_35)))=(nat-to-int (mult (succ (plus (succ _t_36) _t_36)) _v_35)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_23 _qv_24))=(plus (succ _qv_24) (succ _qv_23))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(nat-to-int (plus _v_35 _v_35)))=(nat-to-int (mult (succ (plus (succ _t_36) _t_36)) _v_35)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (mult _qv_25 _qv_26))=(mult (succ _qv_25) (succ _qv_26))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(nat-to-int (plus _v_35 _v_35)))=(nat-to-int (mult (succ (plus (succ _t_36) _t_36)) _v_35)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (mult _qv_25 _qv_26))=(mult (succ _qv_26) (succ _qv_25))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(nat-to-int (plus _v_35 _v_35)))=(nat-to-int (mult (succ (plus (succ _t_36) _t_36)) _v_35)))
NOW TESTING (forall ((Nat) (Nat)) ((tri (plus _qv_27 _qv_28))=(plus (tri _qv_27) (tri _qv_28))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(nat-to-int (plus _v_35 _v_35)))=(nat-to-int (mult (succ (plus (succ _t_36) _t_36)) _v_35)))
NOW TESTING (forall ((Nat) (Nat)) ((tri (plus _qv_27 _qv_28))=(plus (tri _qv_28) (tri _qv_27))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(nat-to-int (plus _v_35 _v_35)))=(nat-to-int (mult (succ (plus (succ _t_36) _t_36)) _v_35)))
NOW TESTING (forall ((Nat) (Nat)) ((tri (mult _qv_29 _qv_30))=(mult (tri _qv_29) (tri _qv_30))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(nat-to-int (plus _v_35 _v_35)))=(nat-to-int (mult (succ (plus (succ _t_36) _t_36)) _v_35)))
NOW TESTING (forall ((Nat) (Nat)) ((tri (mult _qv_29 _qv_30))=(mult (tri _qv_30) (tri _qv_29))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(nat-to-int (plus _v_35 _v_35)))=(nat-to-int (mult (succ (plus (succ _t_36) _t_36)) _v_35)))
NOW TESTING (forall ((Nat) (Nat)) ((cubes (plus _qv_31 _qv_32))=(plus (cubes _qv_31) (cubes _qv_32))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(nat-to-int (plus _v_35 _v_35)))=(nat-to-int (mult (succ (plus (succ _t_36) _t_36)) _v_35)))
NOW TESTING (forall ((Nat) (Nat)) ((cubes (plus _qv_31 _qv_32))=(plus (cubes _qv_32) (cubes _qv_31))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(nat-to-int (plus _v_35 _v_35)))=(nat-to-int (mult (succ (plus (succ _t_36) _t_36)) _v_35)))
NOW TESTING (forall ((Nat) (Nat)) ((cubes (mult _qv_33 _qv_34))=(mult (cubes _qv_33) (cubes _qv_34))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(nat-to-int (plus _v_35 _v_35)))=(nat-to-int (mult (succ (plus (succ _t_36) _t_36)) _v_35)))
NOW TESTING (forall ((Nat) (Nat)) ((cubes (mult _qv_33 _qv_34))=(mult (cubes _qv_34) (cubes _qv_33))))
USE ASSUMPTION FAILED

  backtrack to: (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(nat-to-int (plus _v_35 _v_35)))=(nat-to-int (mult (succ (plus (succ _t_36) _t_36)) _v_35)))
  rewritten [17]: (((nat-to-int (mult _v_35 (plus _t_36 _t_36)))+(nat-to-int (plus _v_35 _v_35)))=(nat-to-int (mult (succ (plus (succ _t_36) _t_36)) _v_35)))
  Maximum recursion depth reached
CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(nat-to-int (plus _v_35 _v_35)))=(nat-to-int (mult (succ (plus (succ _t_36) _t_36)) _v_35)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(nat-to-int (plus _v_35 _v_35)))=(nat-to-int (mult (succ (plus (succ _t_36) _t_36)) _v_35)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_1 _qv_2)=(plus _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(nat-to-int (plus _v_35 _v_35)))=(nat-to-int (mult (succ (plus (succ _t_36) _t_36)) _v_35)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_3 _qv_4) _qv_5)=(plus _qv_3 (plus _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(nat-to-int (plus _v_35 _v_35)))=(nat-to-int (mult (succ (plus (succ _t_36) _t_36)) _v_35)))
NOW TESTING (forall ((Nat) (Nat)) ((mult _qv_6 _qv_7)=(mult _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(nat-to-int (plus _v_35 _v_35)))=(nat-to-int (mult (succ (plus (succ _t_36) _t_36)) _v_35)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((mult (mult _qv_8 _qv_9) _qv_10)=(mult _qv_8 (mult _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(nat-to-int (plus _v_35 _v_35)))=(nat-to-int (mult (succ (plus (succ _t_36) _t_36)) _v_35)))
NOW TESTING (forall ((Nat)) ((tri (tri _qv_11))=_qv_11))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(nat-to-int (plus _v_35 _v_35)))=(nat-to-int (mult (succ (plus (succ _t_36) _t_36)) _v_35)))
NOW TESTING (forall ((Nat)) ((cubes (cubes _qv_12))=_qv_12))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(nat-to-int (plus _v_35 _v_35)))=(nat-to-int (mult (succ (plus (succ _t_36) _t_36)) _v_35)))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(nat-to-int (plus _v_35 _v_35)))=(nat-to-int (mult (succ (plus (succ _t_36) _t_36)) _v_35)))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_14))=(nat-to-int _qv_14)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(nat-to-int (plus _v_35 _v_35)))=(nat-to-int (mult (succ (plus (succ _t_36) _t_36)) _v_35)))
NOW TESTING (forall ((Nat)) ((nat-to-int (tri _qv_15))=(nat-to-int _qv_15)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(nat-to-int (plus _v_35 _v_35)))=(nat-to-int (mult (succ (plus (succ _t_36) _t_36)) _v_35)))
NOW TESTING (forall ((Nat)) ((nat-to-int (cubes _qv_16))=(nat-to-int _qv_16)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(nat-to-int (plus _v_35 _v_35)))=(nat-to-int (mult (succ (plus (succ _t_36) _t_36)) _v_35)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((mult _qv_17 (plus _qv_18 _qv_19))=(plus (mult _qv_17 _qv_18) (mult _qv_17 _qv_19))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(nat-to-int (plus _v_35 _v_35)))=(nat-to-int (mult (succ (plus (succ _t_36) _t_36)) _v_35)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus _qv_20 (mult _qv_21 _qv_22))=(mult (plus _qv_20 _qv_21) (plus _qv_20 _qv_22))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(nat-to-int (plus _v_35 _v_35)))=(nat-to-int (mult (succ (plus (succ _t_36) _t_36)) _v_35)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_23 _qv_24))=(plus (succ _qv_23) (succ _qv_24))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(nat-to-int (plus _v_35 _v_35)))=(nat-to-int (mult (succ (plus (succ _t_36) _t_36)) _v_35)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_23 _qv_24))=(plus (succ _qv_24) (succ _qv_23))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(nat-to-int (plus _v_35 _v_35)))=(nat-to-int (mult (succ (plus (succ _t_36) _t_36)) _v_35)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (mult _qv_25 _qv_26))=(mult (succ _qv_25) (succ _qv_26))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(nat-to-int (plus _v_35 _v_35)))=(nat-to-int (mult (succ (plus (succ _t_36) _t_36)) _v_35)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (mult _qv_25 _qv_26))=(mult (succ _qv_26) (succ _qv_25))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(nat-to-int (plus _v_35 _v_35)))=(nat-to-int (mult (succ (plus (succ _t_36) _t_36)) _v_35)))
NOW TESTING (forall ((Nat) (Nat)) ((tri (plus _qv_27 _qv_28))=(plus (tri _qv_27) (tri _qv_28))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(nat-to-int (plus _v_35 _v_35)))=(nat-to-int (mult (succ (plus (succ _t_36) _t_36)) _v_35)))
NOW TESTING (forall ((Nat) (Nat)) ((tri (plus _qv_27 _qv_28))=(plus (tri _qv_28) (tri _qv_27))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(nat-to-int (plus _v_35 _v_35)))=(nat-to-int (mult (succ (plus (succ _t_36) _t_36)) _v_35)))
NOW TESTING (forall ((Nat) (Nat)) ((tri (mult _qv_29 _qv_30))=(mult (tri _qv_29) (tri _qv_30))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(nat-to-int (plus _v_35 _v_35)))=(nat-to-int (mult (succ (plus (succ _t_36) _t_36)) _v_35)))
NOW TESTING (forall ((Nat) (Nat)) ((tri (mult _qv_29 _qv_30))=(mult (tri _qv_30) (tri _qv_29))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(nat-to-int (plus _v_35 _v_35)))=(nat-to-int (mult (succ (plus (succ _t_36) _t_36)) _v_35)))
NOW TESTING (forall ((Nat) (Nat)) ((cubes (plus _qv_31 _qv_32))=(plus (cubes _qv_31) (cubes _qv_32))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(nat-to-int (plus _v_35 _v_35)))=(nat-to-int (mult (succ (plus (succ _t_36) _t_36)) _v_35)))
NOW TESTING (forall ((Nat) (Nat)) ((cubes (plus _qv_31 _qv_32))=(plus (cubes _qv_32) (cubes _qv_31))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(nat-to-int (plus _v_35 _v_35)))=(nat-to-int (mult (succ (plus (succ _t_36) _t_36)) _v_35)))
NOW TESTING (forall ((Nat) (Nat)) ((cubes (mult _qv_33 _qv_34))=(mult (cubes _qv_33) (cubes _qv_34))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(nat-to-int (plus _v_35 _v_35)))=(nat-to-int (mult (succ (plus (succ _t_36) _t_36)) _v_35)))
NOW TESTING (forall ((Nat) (Nat)) ((cubes (mult _qv_33 _qv_34))=(mult (cubes _qv_34) (cubes _qv_33))))
USE ASSUMPTION FAILED

  backtrack to: (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(nat-to-int (plus _v_35 _v_35)))=(nat-to-int (mult (succ (plus (succ _t_36) _t_36)) _v_35)))
  rewritten [4]: (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(nat-to-int (plus _v_35 _v_35)))=(nat-to-int (mult (succ (succ (plus _t_36 _t_36))) _v_35)))
  Maximum recursion depth reached
CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(nat-to-int (plus _v_35 _v_35)))=(nat-to-int (mult (succ (plus (succ _t_36) _t_36)) _v_35)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(nat-to-int (plus _v_35 _v_35)))=(nat-to-int (mult (succ (plus (succ _t_36) _t_36)) _v_35)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_1 _qv_2)=(plus _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(nat-to-int (plus _v_35 _v_35)))=(nat-to-int (mult (succ (plus (succ _t_36) _t_36)) _v_35)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_3 _qv_4) _qv_5)=(plus _qv_3 (plus _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(nat-to-int (plus _v_35 _v_35)))=(nat-to-int (mult (succ (plus (succ _t_36) _t_36)) _v_35)))
NOW TESTING (forall ((Nat) (Nat)) ((mult _qv_6 _qv_7)=(mult _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(nat-to-int (plus _v_35 _v_35)))=(nat-to-int (mult (succ (plus (succ _t_36) _t_36)) _v_35)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((mult (mult _qv_8 _qv_9) _qv_10)=(mult _qv_8 (mult _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(nat-to-int (plus _v_35 _v_35)))=(nat-to-int (mult (succ (plus (succ _t_36) _t_36)) _v_35)))
NOW TESTING (forall ((Nat)) ((tri (tri _qv_11))=_qv_11))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(nat-to-int (plus _v_35 _v_35)))=(nat-to-int (mult (succ (plus (succ _t_36) _t_36)) _v_35)))
NOW TESTING (forall ((Nat)) ((cubes (cubes _qv_12))=_qv_12))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(nat-to-int (plus _v_35 _v_35)))=(nat-to-int (mult (succ (plus (succ _t_36) _t_36)) _v_35)))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(nat-to-int (plus _v_35 _v_35)))=(nat-to-int (mult (succ (plus (succ _t_36) _t_36)) _v_35)))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_14))=(nat-to-int _qv_14)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(nat-to-int (plus _v_35 _v_35)))=(nat-to-int (mult (succ (plus (succ _t_36) _t_36)) _v_35)))
NOW TESTING (forall ((Nat)) ((nat-to-int (tri _qv_15))=(nat-to-int _qv_15)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(nat-to-int (plus _v_35 _v_35)))=(nat-to-int (mult (succ (plus (succ _t_36) _t_36)) _v_35)))
NOW TESTING (forall ((Nat)) ((nat-to-int (cubes _qv_16))=(nat-to-int _qv_16)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(nat-to-int (plus _v_35 _v_35)))=(nat-to-int (mult (succ (plus (succ _t_36) _t_36)) _v_35)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((mult _qv_17 (plus _qv_18 _qv_19))=(plus (mult _qv_17 _qv_18) (mult _qv_17 _qv_19))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(nat-to-int (plus _v_35 _v_35)))=(nat-to-int (mult (succ (plus (succ _t_36) _t_36)) _v_35)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus _qv_20 (mult _qv_21 _qv_22))=(mult (plus _qv_20 _qv_21) (plus _qv_20 _qv_22))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(nat-to-int (plus _v_35 _v_35)))=(nat-to-int (mult (succ (plus (succ _t_36) _t_36)) _v_35)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_23 _qv_24))=(plus (succ _qv_23) (succ _qv_24))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(nat-to-int (plus _v_35 _v_35)))=(nat-to-int (mult (succ (plus (succ _t_36) _t_36)) _v_35)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_23 _qv_24))=(plus (succ _qv_24) (succ _qv_23))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(nat-to-int (plus _v_35 _v_35)))=(nat-to-int (mult (succ (plus (succ _t_36) _t_36)) _v_35)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (mult _qv_25 _qv_26))=(mult (succ _qv_25) (succ _qv_26))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(nat-to-int (plus _v_35 _v_35)))=(nat-to-int (mult (succ (plus (succ _t_36) _t_36)) _v_35)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (mult _qv_25 _qv_26))=(mult (succ _qv_26) (succ _qv_25))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(nat-to-int (plus _v_35 _v_35)))=(nat-to-int (mult (succ (plus (succ _t_36) _t_36)) _v_35)))
NOW TESTING (forall ((Nat) (Nat)) ((tri (plus _qv_27 _qv_28))=(plus (tri _qv_27) (tri _qv_28))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(nat-to-int (plus _v_35 _v_35)))=(nat-to-int (mult (succ (plus (succ _t_36) _t_36)) _v_35)))
NOW TESTING (forall ((Nat) (Nat)) ((tri (plus _qv_27 _qv_28))=(plus (tri _qv_28) (tri _qv_27))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(nat-to-int (plus _v_35 _v_35)))=(nat-to-int (mult (succ (plus (succ _t_36) _t_36)) _v_35)))
NOW TESTING (forall ((Nat) (Nat)) ((tri (mult _qv_29 _qv_30))=(mult (tri _qv_29) (tri _qv_30))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(nat-to-int (plus _v_35 _v_35)))=(nat-to-int (mult (succ (plus (succ _t_36) _t_36)) _v_35)))
NOW TESTING (forall ((Nat) (Nat)) ((tri (mult _qv_29 _qv_30))=(mult (tri _qv_30) (tri _qv_29))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(nat-to-int (plus _v_35 _v_35)))=(nat-to-int (mult (succ (plus (succ _t_36) _t_36)) _v_35)))
NOW TESTING (forall ((Nat) (Nat)) ((cubes (plus _qv_31 _qv_32))=(plus (cubes _qv_31) (cubes _qv_32))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(nat-to-int (plus _v_35 _v_35)))=(nat-to-int (mult (succ (plus (succ _t_36) _t_36)) _v_35)))
NOW TESTING (forall ((Nat) (Nat)) ((cubes (plus _qv_31 _qv_32))=(plus (cubes _qv_32) (cubes _qv_31))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(nat-to-int (plus _v_35 _v_35)))=(nat-to-int (mult (succ (plus (succ _t_36) _t_36)) _v_35)))
NOW TESTING (forall ((Nat) (Nat)) ((cubes (mult _qv_33 _qv_34))=(mult (cubes _qv_33) (cubes _qv_34))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(nat-to-int (plus _v_35 _v_35)))=(nat-to-int (mult (succ (plus (succ _t_36) _t_36)) _v_35)))
NOW TESTING (forall ((Nat) (Nat)) ((cubes (mult _qv_33 _qv_34))=(mult (cubes _qv_34) (cubes _qv_33))))
USE ASSUMPTION FAILED

  backtrack to: (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(nat-to-int (plus _v_35 _v_35)))=(nat-to-int (mult (succ (plus (succ _t_36) _t_36)) _v_35)))
  rewritten [6]: (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(nat-to-int (plus _v_35 _v_35)))=(nat-to-int (plus (mult (plus (succ _t_36) _t_36) _v_35) _v_35)))
  Maximum recursion depth reached
CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(nat-to-int (plus _v_35 _v_35)))=(nat-to-int (mult (succ (plus (succ _t_36) _t_36)) _v_35)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(nat-to-int (plus _v_35 _v_35)))=(nat-to-int (mult (succ (plus (succ _t_36) _t_36)) _v_35)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_1 _qv_2)=(plus _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(nat-to-int (plus _v_35 _v_35)))=(nat-to-int (mult (succ (plus (succ _t_36) _t_36)) _v_35)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_3 _qv_4) _qv_5)=(plus _qv_3 (plus _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(nat-to-int (plus _v_35 _v_35)))=(nat-to-int (mult (succ (plus (succ _t_36) _t_36)) _v_35)))
NOW TESTING (forall ((Nat) (Nat)) ((mult _qv_6 _qv_7)=(mult _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(nat-to-int (plus _v_35 _v_35)))=(nat-to-int (mult (succ (plus (succ _t_36) _t_36)) _v_35)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((mult (mult _qv_8 _qv_9) _qv_10)=(mult _qv_8 (mult _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(nat-to-int (plus _v_35 _v_35)))=(nat-to-int (mult (succ (plus (succ _t_36) _t_36)) _v_35)))
NOW TESTING (forall ((Nat)) ((tri (tri _qv_11))=_qv_11))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(nat-to-int (plus _v_35 _v_35)))=(nat-to-int (mult (succ (plus (succ _t_36) _t_36)) _v_35)))
NOW TESTING (forall ((Nat)) ((cubes (cubes _qv_12))=_qv_12))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(nat-to-int (plus _v_35 _v_35)))=(nat-to-int (mult (succ (plus (succ _t_36) _t_36)) _v_35)))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(nat-to-int (plus _v_35 _v_35)))=(nat-to-int (mult (succ (plus (succ _t_36) _t_36)) _v_35)))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_14))=(nat-to-int _qv_14)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(nat-to-int (plus _v_35 _v_35)))=(nat-to-int (mult (succ (plus (succ _t_36) _t_36)) _v_35)))
NOW TESTING (forall ((Nat)) ((nat-to-int (tri _qv_15))=(nat-to-int _qv_15)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(nat-to-int (plus _v_35 _v_35)))=(nat-to-int (mult (succ (plus (succ _t_36) _t_36)) _v_35)))
NOW TESTING (forall ((Nat)) ((nat-to-int (cubes _qv_16))=(nat-to-int _qv_16)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(nat-to-int (plus _v_35 _v_35)))=(nat-to-int (mult (succ (plus (succ _t_36) _t_36)) _v_35)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((mult _qv_17 (plus _qv_18 _qv_19))=(plus (mult _qv_17 _qv_18) (mult _qv_17 _qv_19))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(nat-to-int (plus _v_35 _v_35)))=(nat-to-int (mult (succ (plus (succ _t_36) _t_36)) _v_35)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus _qv_20 (mult _qv_21 _qv_22))=(mult (plus _qv_20 _qv_21) (plus _qv_20 _qv_22))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(nat-to-int (plus _v_35 _v_35)))=(nat-to-int (mult (succ (plus (succ _t_36) _t_36)) _v_35)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_23 _qv_24))=(plus (succ _qv_23) (succ _qv_24))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(nat-to-int (plus _v_35 _v_35)))=(nat-to-int (mult (succ (plus (succ _t_36) _t_36)) _v_35)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_23 _qv_24))=(plus (succ _qv_24) (succ _qv_23))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(nat-to-int (plus _v_35 _v_35)))=(nat-to-int (mult (succ (plus (succ _t_36) _t_36)) _v_35)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (mult _qv_25 _qv_26))=(mult (succ _qv_25) (succ _qv_26))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(nat-to-int (plus _v_35 _v_35)))=(nat-to-int (mult (succ (plus (succ _t_36) _t_36)) _v_35)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (mult _qv_25 _qv_26))=(mult (succ _qv_26) (succ _qv_25))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(nat-to-int (plus _v_35 _v_35)))=(nat-to-int (mult (succ (plus (succ _t_36) _t_36)) _v_35)))
NOW TESTING (forall ((Nat) (Nat)) ((tri (plus _qv_27 _qv_28))=(plus (tri _qv_27) (tri _qv_28))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(nat-to-int (plus _v_35 _v_35)))=(nat-to-int (mult (succ (plus (succ _t_36) _t_36)) _v_35)))
NOW TESTING (forall ((Nat) (Nat)) ((tri (plus _qv_27 _qv_28))=(plus (tri _qv_28) (tri _qv_27))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(nat-to-int (plus _v_35 _v_35)))=(nat-to-int (mult (succ (plus (succ _t_36) _t_36)) _v_35)))
NOW TESTING (forall ((Nat) (Nat)) ((tri (mult _qv_29 _qv_30))=(mult (tri _qv_29) (tri _qv_30))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(nat-to-int (plus _v_35 _v_35)))=(nat-to-int (mult (succ (plus (succ _t_36) _t_36)) _v_35)))
NOW TESTING (forall ((Nat) (Nat)) ((tri (mult _qv_29 _qv_30))=(mult (tri _qv_30) (tri _qv_29))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(nat-to-int (plus _v_35 _v_35)))=(nat-to-int (mult (succ (plus (succ _t_36) _t_36)) _v_35)))
NOW TESTING (forall ((Nat) (Nat)) ((cubes (plus _qv_31 _qv_32))=(plus (cubes _qv_31) (cubes _qv_32))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(nat-to-int (plus _v_35 _v_35)))=(nat-to-int (mult (succ (plus (succ _t_36) _t_36)) _v_35)))
NOW TESTING (forall ((Nat) (Nat)) ((cubes (plus _qv_31 _qv_32))=(plus (cubes _qv_32) (cubes _qv_31))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(nat-to-int (plus _v_35 _v_35)))=(nat-to-int (mult (succ (plus (succ _t_36) _t_36)) _v_35)))
NOW TESTING (forall ((Nat) (Nat)) ((cubes (mult _qv_33 _qv_34))=(mult (cubes _qv_33) (cubes _qv_34))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(nat-to-int (plus _v_35 _v_35)))=(nat-to-int (mult (succ (plus (succ _t_36) _t_36)) _v_35)))
NOW TESTING (forall ((Nat) (Nat)) ((cubes (mult _qv_33 _qv_34))=(mult (cubes _qv_34) (cubes _qv_33))))
USE ASSUMPTION FAILED

  backtrack to: (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(nat-to-int (plus _v_35 _v_35)))=(nat-to-int (mult (succ (plus (succ _t_36) _t_36)) _v_35)))
  rewritten [12]: (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+((nat-to-int _v_35)+(nat-to-int _v_35)))=(nat-to-int (mult (succ (plus (succ _t_36) _t_36)) _v_35)))
  Maximum recursion depth reached
CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(nat-to-int (plus _v_35 _v_35)))=(nat-to-int (mult (succ (plus (succ _t_36) _t_36)) _v_35)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(nat-to-int (plus _v_35 _v_35)))=(nat-to-int (mult (succ (plus (succ _t_36) _t_36)) _v_35)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_1 _qv_2)=(plus _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(nat-to-int (plus _v_35 _v_35)))=(nat-to-int (mult (succ (plus (succ _t_36) _t_36)) _v_35)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_3 _qv_4) _qv_5)=(plus _qv_3 (plus _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(nat-to-int (plus _v_35 _v_35)))=(nat-to-int (mult (succ (plus (succ _t_36) _t_36)) _v_35)))
NOW TESTING (forall ((Nat) (Nat)) ((mult _qv_6 _qv_7)=(mult _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(nat-to-int (plus _v_35 _v_35)))=(nat-to-int (mult (succ (plus (succ _t_36) _t_36)) _v_35)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((mult (mult _qv_8 _qv_9) _qv_10)=(mult _qv_8 (mult _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(nat-to-int (plus _v_35 _v_35)))=(nat-to-int (mult (succ (plus (succ _t_36) _t_36)) _v_35)))
NOW TESTING (forall ((Nat)) ((tri (tri _qv_11))=_qv_11))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(nat-to-int (plus _v_35 _v_35)))=(nat-to-int (mult (succ (plus (succ _t_36) _t_36)) _v_35)))
NOW TESTING (forall ((Nat)) ((cubes (cubes _qv_12))=_qv_12))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(nat-to-int (plus _v_35 _v_35)))=(nat-to-int (mult (succ (plus (succ _t_36) _t_36)) _v_35)))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(nat-to-int (plus _v_35 _v_35)))=(nat-to-int (mult (succ (plus (succ _t_36) _t_36)) _v_35)))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_14))=(nat-to-int _qv_14)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(nat-to-int (plus _v_35 _v_35)))=(nat-to-int (mult (succ (plus (succ _t_36) _t_36)) _v_35)))
NOW TESTING (forall ((Nat)) ((nat-to-int (tri _qv_15))=(nat-to-int _qv_15)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(nat-to-int (plus _v_35 _v_35)))=(nat-to-int (mult (succ (plus (succ _t_36) _t_36)) _v_35)))
NOW TESTING (forall ((Nat)) ((nat-to-int (cubes _qv_16))=(nat-to-int _qv_16)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(nat-to-int (plus _v_35 _v_35)))=(nat-to-int (mult (succ (plus (succ _t_36) _t_36)) _v_35)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((mult _qv_17 (plus _qv_18 _qv_19))=(plus (mult _qv_17 _qv_18) (mult _qv_17 _qv_19))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(nat-to-int (plus _v_35 _v_35)))=(nat-to-int (mult (succ (plus (succ _t_36) _t_36)) _v_35)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus _qv_20 (mult _qv_21 _qv_22))=(mult (plus _qv_20 _qv_21) (plus _qv_20 _qv_22))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(nat-to-int (plus _v_35 _v_35)))=(nat-to-int (mult (succ (plus (succ _t_36) _t_36)) _v_35)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_23 _qv_24))=(plus (succ _qv_23) (succ _qv_24))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(nat-to-int (plus _v_35 _v_35)))=(nat-to-int (mult (succ (plus (succ _t_36) _t_36)) _v_35)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_23 _qv_24))=(plus (succ _qv_24) (succ _qv_23))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(nat-to-int (plus _v_35 _v_35)))=(nat-to-int (mult (succ (plus (succ _t_36) _t_36)) _v_35)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (mult _qv_25 _qv_26))=(mult (succ _qv_25) (succ _qv_26))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(nat-to-int (plus _v_35 _v_35)))=(nat-to-int (mult (succ (plus (succ _t_36) _t_36)) _v_35)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (mult _qv_25 _qv_26))=(mult (succ _qv_26) (succ _qv_25))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(nat-to-int (plus _v_35 _v_35)))=(nat-to-int (mult (succ (plus (succ _t_36) _t_36)) _v_35)))
NOW TESTING (forall ((Nat) (Nat)) ((tri (plus _qv_27 _qv_28))=(plus (tri _qv_27) (tri _qv_28))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(nat-to-int (plus _v_35 _v_35)))=(nat-to-int (mult (succ (plus (succ _t_36) _t_36)) _v_35)))
NOW TESTING (forall ((Nat) (Nat)) ((tri (plus _qv_27 _qv_28))=(plus (tri _qv_28) (tri _qv_27))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(nat-to-int (plus _v_35 _v_35)))=(nat-to-int (mult (succ (plus (succ _t_36) _t_36)) _v_35)))
NOW TESTING (forall ((Nat) (Nat)) ((tri (mult _qv_29 _qv_30))=(mult (tri _qv_29) (tri _qv_30))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(nat-to-int (plus _v_35 _v_35)))=(nat-to-int (mult (succ (plus (succ _t_36) _t_36)) _v_35)))
NOW TESTING (forall ((Nat) (Nat)) ((tri (mult _qv_29 _qv_30))=(mult (tri _qv_30) (tri _qv_29))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(nat-to-int (plus _v_35 _v_35)))=(nat-to-int (mult (succ (plus (succ _t_36) _t_36)) _v_35)))
NOW TESTING (forall ((Nat) (Nat)) ((cubes (plus _qv_31 _qv_32))=(plus (cubes _qv_31) (cubes _qv_32))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(nat-to-int (plus _v_35 _v_35)))=(nat-to-int (mult (succ (plus (succ _t_36) _t_36)) _v_35)))
NOW TESTING (forall ((Nat) (Nat)) ((cubes (plus _qv_31 _qv_32))=(plus (cubes _qv_32) (cubes _qv_31))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(nat-to-int (plus _v_35 _v_35)))=(nat-to-int (mult (succ (plus (succ _t_36) _t_36)) _v_35)))
NOW TESTING (forall ((Nat) (Nat)) ((cubes (mult _qv_33 _qv_34))=(mult (cubes _qv_33) (cubes _qv_34))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(nat-to-int (plus _v_35 _v_35)))=(nat-to-int (mult (succ (plus (succ _t_36) _t_36)) _v_35)))
NOW TESTING (forall ((Nat) (Nat)) ((cubes (mult _qv_33 _qv_34))=(mult (cubes _qv_34) (cubes _qv_33))))
USE ASSUMPTION FAILED

  backtrack to: (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(nat-to-int (plus _v_35 _v_35)))=(nat-to-int (mult (succ (plus (succ _t_36) _t_36)) _v_35)))
  rewritten [13]: (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(nat-to-int (plus _v_35 _v_35)))=(nat-to-int (mult (succ (plus _t_36 (succ _t_36))) _v_35)))
  Maximum recursion depth reached
CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(nat-to-int (plus _v_35 _v_35)))=(nat-to-int (mult (succ (plus (succ _t_36) _t_36)) _v_35)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(nat-to-int (plus _v_35 _v_35)))=(nat-to-int (mult (succ (plus (succ _t_36) _t_36)) _v_35)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_1 _qv_2)=(plus _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(nat-to-int (plus _v_35 _v_35)))=(nat-to-int (mult (succ (plus (succ _t_36) _t_36)) _v_35)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_3 _qv_4) _qv_5)=(plus _qv_3 (plus _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(nat-to-int (plus _v_35 _v_35)))=(nat-to-int (mult (succ (plus (succ _t_36) _t_36)) _v_35)))
NOW TESTING (forall ((Nat) (Nat)) ((mult _qv_6 _qv_7)=(mult _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(nat-to-int (plus _v_35 _v_35)))=(nat-to-int (mult (succ (plus (succ _t_36) _t_36)) _v_35)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((mult (mult _qv_8 _qv_9) _qv_10)=(mult _qv_8 (mult _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(nat-to-int (plus _v_35 _v_35)))=(nat-to-int (mult (succ (plus (succ _t_36) _t_36)) _v_35)))
NOW TESTING (forall ((Nat)) ((tri (tri _qv_11))=_qv_11))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(nat-to-int (plus _v_35 _v_35)))=(nat-to-int (mult (succ (plus (succ _t_36) _t_36)) _v_35)))
NOW TESTING (forall ((Nat)) ((cubes (cubes _qv_12))=_qv_12))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(nat-to-int (plus _v_35 _v_35)))=(nat-to-int (mult (succ (plus (succ _t_36) _t_36)) _v_35)))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(nat-to-int (plus _v_35 _v_35)))=(nat-to-int (mult (succ (plus (succ _t_36) _t_36)) _v_35)))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_14))=(nat-to-int _qv_14)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(nat-to-int (plus _v_35 _v_35)))=(nat-to-int (mult (succ (plus (succ _t_36) _t_36)) _v_35)))
NOW TESTING (forall ((Nat)) ((nat-to-int (tri _qv_15))=(nat-to-int _qv_15)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(nat-to-int (plus _v_35 _v_35)))=(nat-to-int (mult (succ (plus (succ _t_36) _t_36)) _v_35)))
NOW TESTING (forall ((Nat)) ((nat-to-int (cubes _qv_16))=(nat-to-int _qv_16)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(nat-to-int (plus _v_35 _v_35)))=(nat-to-int (mult (succ (plus (succ _t_36) _t_36)) _v_35)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((mult _qv_17 (plus _qv_18 _qv_19))=(plus (mult _qv_17 _qv_18) (mult _qv_17 _qv_19))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(nat-to-int (plus _v_35 _v_35)))=(nat-to-int (mult (succ (plus (succ _t_36) _t_36)) _v_35)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus _qv_20 (mult _qv_21 _qv_22))=(mult (plus _qv_20 _qv_21) (plus _qv_20 _qv_22))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(nat-to-int (plus _v_35 _v_35)))=(nat-to-int (mult (succ (plus (succ _t_36) _t_36)) _v_35)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_23 _qv_24))=(plus (succ _qv_23) (succ _qv_24))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(nat-to-int (plus _v_35 _v_35)))=(nat-to-int (mult (succ (plus (succ _t_36) _t_36)) _v_35)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_23 _qv_24))=(plus (succ _qv_24) (succ _qv_23))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(nat-to-int (plus _v_35 _v_35)))=(nat-to-int (mult (succ (plus (succ _t_36) _t_36)) _v_35)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (mult _qv_25 _qv_26))=(mult (succ _qv_25) (succ _qv_26))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(nat-to-int (plus _v_35 _v_35)))=(nat-to-int (mult (succ (plus (succ _t_36) _t_36)) _v_35)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (mult _qv_25 _qv_26))=(mult (succ _qv_26) (succ _qv_25))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(nat-to-int (plus _v_35 _v_35)))=(nat-to-int (mult (succ (plus (succ _t_36) _t_36)) _v_35)))
NOW TESTING (forall ((Nat) (Nat)) ((tri (plus _qv_27 _qv_28))=(plus (tri _qv_27) (tri _qv_28))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(nat-to-int (plus _v_35 _v_35)))=(nat-to-int (mult (succ (plus (succ _t_36) _t_36)) _v_35)))
NOW TESTING (forall ((Nat) (Nat)) ((tri (plus _qv_27 _qv_28))=(plus (tri _qv_28) (tri _qv_27))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(nat-to-int (plus _v_35 _v_35)))=(nat-to-int (mult (succ (plus (succ _t_36) _t_36)) _v_35)))
NOW TESTING (forall ((Nat) (Nat)) ((tri (mult _qv_29 _qv_30))=(mult (tri _qv_29) (tri _qv_30))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(nat-to-int (plus _v_35 _v_35)))=(nat-to-int (mult (succ (plus (succ _t_36) _t_36)) _v_35)))
NOW TESTING (forall ((Nat) (Nat)) ((tri (mult _qv_29 _qv_30))=(mult (tri _qv_30) (tri _qv_29))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(nat-to-int (plus _v_35 _v_35)))=(nat-to-int (mult (succ (plus (succ _t_36) _t_36)) _v_35)))
NOW TESTING (forall ((Nat) (Nat)) ((cubes (plus _qv_31 _qv_32))=(plus (cubes _qv_31) (cubes _qv_32))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(nat-to-int (plus _v_35 _v_35)))=(nat-to-int (mult (succ (plus (succ _t_36) _t_36)) _v_35)))
NOW TESTING (forall ((Nat) (Nat)) ((cubes (plus _qv_31 _qv_32))=(plus (cubes _qv_32) (cubes _qv_31))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(nat-to-int (plus _v_35 _v_35)))=(nat-to-int (mult (succ (plus (succ _t_36) _t_36)) _v_35)))
NOW TESTING (forall ((Nat) (Nat)) ((cubes (mult _qv_33 _qv_34))=(mult (cubes _qv_33) (cubes _qv_34))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(nat-to-int (plus _v_35 _v_35)))=(nat-to-int (mult (succ (plus (succ _t_36) _t_36)) _v_35)))
NOW TESTING (forall ((Nat) (Nat)) ((cubes (mult _qv_33 _qv_34))=(mult (cubes _qv_34) (cubes _qv_33))))
USE ASSUMPTION FAILED

  backtrack to: (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(nat-to-int (plus _v_35 _v_35)))=(nat-to-int (mult (succ (plus (succ _t_36) _t_36)) _v_35)))
  rewritten [15]: (((nat-to-int (mult (plus _v_35 _v_35) _t_36))+(nat-to-int (plus _v_35 _v_35)))=(nat-to-int (mult (succ (plus (succ _t_36) _t_36)) _v_35)))
  Maximum recursion depth reached
CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(nat-to-int (plus _v_35 _v_35)))=(nat-to-int (mult (succ (plus (succ _t_36) _t_36)) _v_35)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(nat-to-int (plus _v_35 _v_35)))=(nat-to-int (mult (succ (plus (succ _t_36) _t_36)) _v_35)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_1 _qv_2)=(plus _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(nat-to-int (plus _v_35 _v_35)))=(nat-to-int (mult (succ (plus (succ _t_36) _t_36)) _v_35)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_3 _qv_4) _qv_5)=(plus _qv_3 (plus _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(nat-to-int (plus _v_35 _v_35)))=(nat-to-int (mult (succ (plus (succ _t_36) _t_36)) _v_35)))
NOW TESTING (forall ((Nat) (Nat)) ((mult _qv_6 _qv_7)=(mult _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(nat-to-int (plus _v_35 _v_35)))=(nat-to-int (mult (succ (plus (succ _t_36) _t_36)) _v_35)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((mult (mult _qv_8 _qv_9) _qv_10)=(mult _qv_8 (mult _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(nat-to-int (plus _v_35 _v_35)))=(nat-to-int (mult (succ (plus (succ _t_36) _t_36)) _v_35)))
NOW TESTING (forall ((Nat)) ((tri (tri _qv_11))=_qv_11))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(nat-to-int (plus _v_35 _v_35)))=(nat-to-int (mult (succ (plus (succ _t_36) _t_36)) _v_35)))
NOW TESTING (forall ((Nat)) ((cubes (cubes _qv_12))=_qv_12))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(nat-to-int (plus _v_35 _v_35)))=(nat-to-int (mult (succ (plus (succ _t_36) _t_36)) _v_35)))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(nat-to-int (plus _v_35 _v_35)))=(nat-to-int (mult (succ (plus (succ _t_36) _t_36)) _v_35)))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_14))=(nat-to-int _qv_14)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(nat-to-int (plus _v_35 _v_35)))=(nat-to-int (mult (succ (plus (succ _t_36) _t_36)) _v_35)))
NOW TESTING (forall ((Nat)) ((nat-to-int (tri _qv_15))=(nat-to-int _qv_15)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(nat-to-int (plus _v_35 _v_35)))=(nat-to-int (mult (succ (plus (succ _t_36) _t_36)) _v_35)))
NOW TESTING (forall ((Nat)) ((nat-to-int (cubes _qv_16))=(nat-to-int _qv_16)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(nat-to-int (plus _v_35 _v_35)))=(nat-to-int (mult (succ (plus (succ _t_36) _t_36)) _v_35)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((mult _qv_17 (plus _qv_18 _qv_19))=(plus (mult _qv_17 _qv_18) (mult _qv_17 _qv_19))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(nat-to-int (plus _v_35 _v_35)))=(nat-to-int (mult (succ (plus (succ _t_36) _t_36)) _v_35)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus _qv_20 (mult _qv_21 _qv_22))=(mult (plus _qv_20 _qv_21) (plus _qv_20 _qv_22))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(nat-to-int (plus _v_35 _v_35)))=(nat-to-int (mult (succ (plus (succ _t_36) _t_36)) _v_35)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_23 _qv_24))=(plus (succ _qv_23) (succ _qv_24))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(nat-to-int (plus _v_35 _v_35)))=(nat-to-int (mult (succ (plus (succ _t_36) _t_36)) _v_35)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_23 _qv_24))=(plus (succ _qv_24) (succ _qv_23))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(nat-to-int (plus _v_35 _v_35)))=(nat-to-int (mult (succ (plus (succ _t_36) _t_36)) _v_35)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (mult _qv_25 _qv_26))=(mult (succ _qv_25) (succ _qv_26))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(nat-to-int (plus _v_35 _v_35)))=(nat-to-int (mult (succ (plus (succ _t_36) _t_36)) _v_35)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (mult _qv_25 _qv_26))=(mult (succ _qv_26) (succ _qv_25))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(nat-to-int (plus _v_35 _v_35)))=(nat-to-int (mult (succ (plus (succ _t_36) _t_36)) _v_35)))
NOW TESTING (forall ((Nat) (Nat)) ((tri (plus _qv_27 _qv_28))=(plus (tri _qv_27) (tri _qv_28))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(nat-to-int (plus _v_35 _v_35)))=(nat-to-int (mult (succ (plus (succ _t_36) _t_36)) _v_35)))
NOW TESTING (forall ((Nat) (Nat)) ((tri (plus _qv_27 _qv_28))=(plus (tri _qv_28) (tri _qv_27))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(nat-to-int (plus _v_35 _v_35)))=(nat-to-int (mult (succ (plus (succ _t_36) _t_36)) _v_35)))
NOW TESTING (forall ((Nat) (Nat)) ((tri (mult _qv_29 _qv_30))=(mult (tri _qv_29) (tri _qv_30))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(nat-to-int (plus _v_35 _v_35)))=(nat-to-int (mult (succ (plus (succ _t_36) _t_36)) _v_35)))
NOW TESTING (forall ((Nat) (Nat)) ((tri (mult _qv_29 _qv_30))=(mult (tri _qv_30) (tri _qv_29))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(nat-to-int (plus _v_35 _v_35)))=(nat-to-int (mult (succ (plus (succ _t_36) _t_36)) _v_35)))
NOW TESTING (forall ((Nat) (Nat)) ((cubes (plus _qv_31 _qv_32))=(plus (cubes _qv_31) (cubes _qv_32))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(nat-to-int (plus _v_35 _v_35)))=(nat-to-int (mult (succ (plus (succ _t_36) _t_36)) _v_35)))
NOW TESTING (forall ((Nat) (Nat)) ((cubes (plus _qv_31 _qv_32))=(plus (cubes _qv_32) (cubes _qv_31))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(nat-to-int (plus _v_35 _v_35)))=(nat-to-int (mult (succ (plus (succ _t_36) _t_36)) _v_35)))
NOW TESTING (forall ((Nat) (Nat)) ((cubes (mult _qv_33 _qv_34))=(mult (cubes _qv_33) (cubes _qv_34))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(nat-to-int (plus _v_35 _v_35)))=(nat-to-int (mult (succ (plus (succ _t_36) _t_36)) _v_35)))
NOW TESTING (forall ((Nat) (Nat)) ((cubes (mult _qv_33 _qv_34))=(mult (cubes _qv_34) (cubes _qv_33))))
USE ASSUMPTION FAILED

  backtrack to: (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(nat-to-int (plus _v_35 _v_35)))=(nat-to-int (mult (succ (plus (succ _t_36) _t_36)) _v_35)))
  rewritten [17]: (((nat-to-int (mult _v_35 (plus _t_36 _t_36)))+(nat-to-int (plus _v_35 _v_35)))=(nat-to-int (mult (succ (plus (succ _t_36) _t_36)) _v_35)))
  Maximum recursion depth reached
CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(nat-to-int (plus _v_35 _v_35)))=(nat-to-int (mult (succ (plus (succ _t_36) _t_36)) _v_35)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(nat-to-int (plus _v_35 _v_35)))=(nat-to-int (mult (succ (plus (succ _t_36) _t_36)) _v_35)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_1 _qv_2)=(plus _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(nat-to-int (plus _v_35 _v_35)))=(nat-to-int (mult (succ (plus (succ _t_36) _t_36)) _v_35)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_3 _qv_4) _qv_5)=(plus _qv_3 (plus _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(nat-to-int (plus _v_35 _v_35)))=(nat-to-int (mult (succ (plus (succ _t_36) _t_36)) _v_35)))
NOW TESTING (forall ((Nat) (Nat)) ((mult _qv_6 _qv_7)=(mult _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(nat-to-int (plus _v_35 _v_35)))=(nat-to-int (mult (succ (plus (succ _t_36) _t_36)) _v_35)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((mult (mult _qv_8 _qv_9) _qv_10)=(mult _qv_8 (mult _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(nat-to-int (plus _v_35 _v_35)))=(nat-to-int (mult (succ (plus (succ _t_36) _t_36)) _v_35)))
NOW TESTING (forall ((Nat)) ((tri (tri _qv_11))=_qv_11))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(nat-to-int (plus _v_35 _v_35)))=(nat-to-int (mult (succ (plus (succ _t_36) _t_36)) _v_35)))
NOW TESTING (forall ((Nat)) ((cubes (cubes _qv_12))=_qv_12))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(nat-to-int (plus _v_35 _v_35)))=(nat-to-int (mult (succ (plus (succ _t_36) _t_36)) _v_35)))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(nat-to-int (plus _v_35 _v_35)))=(nat-to-int (mult (succ (plus (succ _t_36) _t_36)) _v_35)))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_14))=(nat-to-int _qv_14)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(nat-to-int (plus _v_35 _v_35)))=(nat-to-int (mult (succ (plus (succ _t_36) _t_36)) _v_35)))
NOW TESTING (forall ((Nat)) ((nat-to-int (tri _qv_15))=(nat-to-int _qv_15)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(nat-to-int (plus _v_35 _v_35)))=(nat-to-int (mult (succ (plus (succ _t_36) _t_36)) _v_35)))
NOW TESTING (forall ((Nat)) ((nat-to-int (cubes _qv_16))=(nat-to-int _qv_16)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(nat-to-int (plus _v_35 _v_35)))=(nat-to-int (mult (succ (plus (succ _t_36) _t_36)) _v_35)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((mult _qv_17 (plus _qv_18 _qv_19))=(plus (mult _qv_17 _qv_18) (mult _qv_17 _qv_19))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(nat-to-int (plus _v_35 _v_35)))=(nat-to-int (mult (succ (plus (succ _t_36) _t_36)) _v_35)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus _qv_20 (mult _qv_21 _qv_22))=(mult (plus _qv_20 _qv_21) (plus _qv_20 _qv_22))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(nat-to-int (plus _v_35 _v_35)))=(nat-to-int (mult (succ (plus (succ _t_36) _t_36)) _v_35)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_23 _qv_24))=(plus (succ _qv_23) (succ _qv_24))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(nat-to-int (plus _v_35 _v_35)))=(nat-to-int (mult (succ (plus (succ _t_36) _t_36)) _v_35)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_23 _qv_24))=(plus (succ _qv_24) (succ _qv_23))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(nat-to-int (plus _v_35 _v_35)))=(nat-to-int (mult (succ (plus (succ _t_36) _t_36)) _v_35)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (mult _qv_25 _qv_26))=(mult (succ _qv_25) (succ _qv_26))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(nat-to-int (plus _v_35 _v_35)))=(nat-to-int (mult (succ (plus (succ _t_36) _t_36)) _v_35)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (mult _qv_25 _qv_26))=(mult (succ _qv_26) (succ _qv_25))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(nat-to-int (plus _v_35 _v_35)))=(nat-to-int (mult (succ (plus (succ _t_36) _t_36)) _v_35)))
NOW TESTING (forall ((Nat) (Nat)) ((tri (plus _qv_27 _qv_28))=(plus (tri _qv_27) (tri _qv_28))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(nat-to-int (plus _v_35 _v_35)))=(nat-to-int (mult (succ (plus (succ _t_36) _t_36)) _v_35)))
NOW TESTING (forall ((Nat) (Nat)) ((tri (plus _qv_27 _qv_28))=(plus (tri _qv_28) (tri _qv_27))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(nat-to-int (plus _v_35 _v_35)))=(nat-to-int (mult (succ (plus (succ _t_36) _t_36)) _v_35)))
NOW TESTING (forall ((Nat) (Nat)) ((tri (mult _qv_29 _qv_30))=(mult (tri _qv_29) (tri _qv_30))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(nat-to-int (plus _v_35 _v_35)))=(nat-to-int (mult (succ (plus (succ _t_36) _t_36)) _v_35)))
NOW TESTING (forall ((Nat) (Nat)) ((tri (mult _qv_29 _qv_30))=(mult (tri _qv_30) (tri _qv_29))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(nat-to-int (plus _v_35 _v_35)))=(nat-to-int (mult (succ (plus (succ _t_36) _t_36)) _v_35)))
NOW TESTING (forall ((Nat) (Nat)) ((cubes (plus _qv_31 _qv_32))=(plus (cubes _qv_31) (cubes _qv_32))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(nat-to-int (plus _v_35 _v_35)))=(nat-to-int (mult (succ (plus (succ _t_36) _t_36)) _v_35)))
NOW TESTING (forall ((Nat) (Nat)) ((cubes (plus _qv_31 _qv_32))=(plus (cubes _qv_32) (cubes _qv_31))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(nat-to-int (plus _v_35 _v_35)))=(nat-to-int (mult (succ (plus (succ _t_36) _t_36)) _v_35)))
NOW TESTING (forall ((Nat) (Nat)) ((cubes (mult _qv_33 _qv_34))=(mult (cubes _qv_33) (cubes _qv_34))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(nat-to-int (plus _v_35 _v_35)))=(nat-to-int (mult (succ (plus (succ _t_36) _t_36)) _v_35)))
NOW TESTING (forall ((Nat) (Nat)) ((cubes (mult _qv_33 _qv_34))=(mult (cubes _qv_34) (cubes _qv_33))))
USE ASSUMPTION FAILED

  backtrack to: (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(nat-to-int (plus _v_35 _v_35)))=(nat-to-int (mult (succ (plus (succ _t_36) _t_36)) _v_35)))
CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(nat-to-int (plus _v_35 _v_35)))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(nat-to-int (plus _v_35 _v_35)))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_1 _qv_2)=(plus _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(nat-to-int (plus _v_35 _v_35)))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_3 _qv_4) _qv_5)=(plus _qv_3 (plus _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(nat-to-int (plus _v_35 _v_35)))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((mult _qv_6 _qv_7)=(mult _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(nat-to-int (plus _v_35 _v_35)))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((mult (mult _qv_8 _qv_9) _qv_10)=(mult _qv_8 (mult _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(nat-to-int (plus _v_35 _v_35)))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat)) ((tri (tri _qv_11))=_qv_11))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(nat-to-int (plus _v_35 _v_35)))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat)) ((cubes (cubes _qv_12))=_qv_12))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(nat-to-int (plus _v_35 _v_35)))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(nat-to-int (plus _v_35 _v_35)))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_14))=(nat-to-int _qv_14)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(nat-to-int (plus _v_35 _v_35)))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat)) ((nat-to-int (tri _qv_15))=(nat-to-int _qv_15)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(nat-to-int (plus _v_35 _v_35)))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat)) ((nat-to-int (cubes _qv_16))=(nat-to-int _qv_16)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(nat-to-int (plus _v_35 _v_35)))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((mult _qv_17 (plus _qv_18 _qv_19))=(plus (mult _qv_17 _qv_18) (mult _qv_17 _qv_19))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(nat-to-int (plus _v_35 _v_35)))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus _qv_20 (mult _qv_21 _qv_22))=(mult (plus _qv_20 _qv_21) (plus _qv_20 _qv_22))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(nat-to-int (plus _v_35 _v_35)))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_23 _qv_24))=(plus (succ _qv_23) (succ _qv_24))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(nat-to-int (plus _v_35 _v_35)))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_23 _qv_24))=(plus (succ _qv_24) (succ _qv_23))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(nat-to-int (plus _v_35 _v_35)))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (mult _qv_25 _qv_26))=(mult (succ _qv_25) (succ _qv_26))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(nat-to-int (plus _v_35 _v_35)))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (mult _qv_25 _qv_26))=(mult (succ _qv_26) (succ _qv_25))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(nat-to-int (plus _v_35 _v_35)))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((tri (plus _qv_27 _qv_28))=(plus (tri _qv_27) (tri _qv_28))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(nat-to-int (plus _v_35 _v_35)))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((tri (plus _qv_27 _qv_28))=(plus (tri _qv_28) (tri _qv_27))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(nat-to-int (plus _v_35 _v_35)))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((tri (mult _qv_29 _qv_30))=(mult (tri _qv_29) (tri _qv_30))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(nat-to-int (plus _v_35 _v_35)))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((tri (mult _qv_29 _qv_30))=(mult (tri _qv_30) (tri _qv_29))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(nat-to-int (plus _v_35 _v_35)))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((cubes (plus _qv_31 _qv_32))=(plus (cubes _qv_31) (cubes _qv_32))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(nat-to-int (plus _v_35 _v_35)))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((cubes (plus _qv_31 _qv_32))=(plus (cubes _qv_32) (cubes _qv_31))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(nat-to-int (plus _v_35 _v_35)))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((cubes (mult _qv_33 _qv_34))=(mult (cubes _qv_33) (cubes _qv_34))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(nat-to-int (plus _v_35 _v_35)))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((cubes (mult _qv_33 _qv_34))=(mult (cubes _qv_34) (cubes _qv_33))))
USE ASSUMPTION FAILED

  backtrack to: (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(nat-to-int (plus _v_35 _v_35)))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
  rewritten [15]: (((nat-to-int (mult (plus _v_35 _v_35) _t_36))+(nat-to-int (plus _v_35 _v_35)))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
  rewritten [2]: (((nat-to-int (plus _v_35 _v_35))+(nat-to-int (mult (plus _v_35 _v_35) _t_36)))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
  Maximum recursion depth reached
CURRENT SUBGOAL (((nat-to-int (plus _v_35 _v_35))+(nat-to-int (mult (plus _v_35 _v_35) _t_36)))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (plus _v_35 _v_35))+(nat-to-int (mult (plus _v_35 _v_35) _t_36)))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_1 _qv_2)=(plus _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (plus _v_35 _v_35))+(nat-to-int (mult (plus _v_35 _v_35) _t_36)))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_3 _qv_4) _qv_5)=(plus _qv_3 (plus _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (plus _v_35 _v_35))+(nat-to-int (mult (plus _v_35 _v_35) _t_36)))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((mult _qv_6 _qv_7)=(mult _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (plus _v_35 _v_35))+(nat-to-int (mult (plus _v_35 _v_35) _t_36)))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((mult (mult _qv_8 _qv_9) _qv_10)=(mult _qv_8 (mult _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (plus _v_35 _v_35))+(nat-to-int (mult (plus _v_35 _v_35) _t_36)))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat)) ((tri (tri _qv_11))=_qv_11))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (plus _v_35 _v_35))+(nat-to-int (mult (plus _v_35 _v_35) _t_36)))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat)) ((cubes (cubes _qv_12))=_qv_12))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (plus _v_35 _v_35))+(nat-to-int (mult (plus _v_35 _v_35) _t_36)))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (plus _v_35 _v_35))+(nat-to-int (mult (plus _v_35 _v_35) _t_36)))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_14))=(nat-to-int _qv_14)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (plus _v_35 _v_35))+(nat-to-int (mult (plus _v_35 _v_35) _t_36)))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat)) ((nat-to-int (tri _qv_15))=(nat-to-int _qv_15)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (plus _v_35 _v_35))+(nat-to-int (mult (plus _v_35 _v_35) _t_36)))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat)) ((nat-to-int (cubes _qv_16))=(nat-to-int _qv_16)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (plus _v_35 _v_35))+(nat-to-int (mult (plus _v_35 _v_35) _t_36)))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((mult _qv_17 (plus _qv_18 _qv_19))=(plus (mult _qv_17 _qv_18) (mult _qv_17 _qv_19))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (plus _v_35 _v_35))+(nat-to-int (mult (plus _v_35 _v_35) _t_36)))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus _qv_20 (mult _qv_21 _qv_22))=(mult (plus _qv_20 _qv_21) (plus _qv_20 _qv_22))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (plus _v_35 _v_35))+(nat-to-int (mult (plus _v_35 _v_35) _t_36)))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_23 _qv_24))=(plus (succ _qv_23) (succ _qv_24))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (plus _v_35 _v_35))+(nat-to-int (mult (plus _v_35 _v_35) _t_36)))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_23 _qv_24))=(plus (succ _qv_24) (succ _qv_23))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (plus _v_35 _v_35))+(nat-to-int (mult (plus _v_35 _v_35) _t_36)))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (mult _qv_25 _qv_26))=(mult (succ _qv_25) (succ _qv_26))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (plus _v_35 _v_35))+(nat-to-int (mult (plus _v_35 _v_35) _t_36)))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (mult _qv_25 _qv_26))=(mult (succ _qv_26) (succ _qv_25))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (plus _v_35 _v_35))+(nat-to-int (mult (plus _v_35 _v_35) _t_36)))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((tri (plus _qv_27 _qv_28))=(plus (tri _qv_27) (tri _qv_28))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (plus _v_35 _v_35))+(nat-to-int (mult (plus _v_35 _v_35) _t_36)))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((tri (plus _qv_27 _qv_28))=(plus (tri _qv_28) (tri _qv_27))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (plus _v_35 _v_35))+(nat-to-int (mult (plus _v_35 _v_35) _t_36)))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((tri (mult _qv_29 _qv_30))=(mult (tri _qv_29) (tri _qv_30))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (plus _v_35 _v_35))+(nat-to-int (mult (plus _v_35 _v_35) _t_36)))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((tri (mult _qv_29 _qv_30))=(mult (tri _qv_30) (tri _qv_29))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (plus _v_35 _v_35))+(nat-to-int (mult (plus _v_35 _v_35) _t_36)))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((cubes (plus _qv_31 _qv_32))=(plus (cubes _qv_31) (cubes _qv_32))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (plus _v_35 _v_35))+(nat-to-int (mult (plus _v_35 _v_35) _t_36)))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((cubes (plus _qv_31 _qv_32))=(plus (cubes _qv_32) (cubes _qv_31))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (plus _v_35 _v_35))+(nat-to-int (mult (plus _v_35 _v_35) _t_36)))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((cubes (mult _qv_33 _qv_34))=(mult (cubes _qv_33) (cubes _qv_34))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (plus _v_35 _v_35))+(nat-to-int (mult (plus _v_35 _v_35) _t_36)))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((cubes (mult _qv_33 _qv_34))=(mult (cubes _qv_34) (cubes _qv_33))))
USE ASSUMPTION FAILED

  backtrack to: (((nat-to-int (plus _v_35 _v_35))+(nat-to-int (mult (plus _v_35 _v_35) _t_36)))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
  rewritten [4]: (((nat-to-int (plus _v_35 _v_35))+(nat-to-int (mult (plus _v_35 _v_35) _t_36)))=(nat-to-int (mult _v_35 (succ (succ (plus _t_36 _t_36))))))
  Maximum recursion depth reached
CURRENT SUBGOAL (((nat-to-int (plus _v_35 _v_35))+(nat-to-int (mult (plus _v_35 _v_35) _t_36)))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (plus _v_35 _v_35))+(nat-to-int (mult (plus _v_35 _v_35) _t_36)))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_1 _qv_2)=(plus _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (plus _v_35 _v_35))+(nat-to-int (mult (plus _v_35 _v_35) _t_36)))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_3 _qv_4) _qv_5)=(plus _qv_3 (plus _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (plus _v_35 _v_35))+(nat-to-int (mult (plus _v_35 _v_35) _t_36)))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((mult _qv_6 _qv_7)=(mult _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (plus _v_35 _v_35))+(nat-to-int (mult (plus _v_35 _v_35) _t_36)))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((mult (mult _qv_8 _qv_9) _qv_10)=(mult _qv_8 (mult _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (plus _v_35 _v_35))+(nat-to-int (mult (plus _v_35 _v_35) _t_36)))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat)) ((tri (tri _qv_11))=_qv_11))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (plus _v_35 _v_35))+(nat-to-int (mult (plus _v_35 _v_35) _t_36)))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat)) ((cubes (cubes _qv_12))=_qv_12))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (plus _v_35 _v_35))+(nat-to-int (mult (plus _v_35 _v_35) _t_36)))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (plus _v_35 _v_35))+(nat-to-int (mult (plus _v_35 _v_35) _t_36)))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_14))=(nat-to-int _qv_14)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (plus _v_35 _v_35))+(nat-to-int (mult (plus _v_35 _v_35) _t_36)))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat)) ((nat-to-int (tri _qv_15))=(nat-to-int _qv_15)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (plus _v_35 _v_35))+(nat-to-int (mult (plus _v_35 _v_35) _t_36)))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat)) ((nat-to-int (cubes _qv_16))=(nat-to-int _qv_16)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (plus _v_35 _v_35))+(nat-to-int (mult (plus _v_35 _v_35) _t_36)))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((mult _qv_17 (plus _qv_18 _qv_19))=(plus (mult _qv_17 _qv_18) (mult _qv_17 _qv_19))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (plus _v_35 _v_35))+(nat-to-int (mult (plus _v_35 _v_35) _t_36)))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus _qv_20 (mult _qv_21 _qv_22))=(mult (plus _qv_20 _qv_21) (plus _qv_20 _qv_22))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (plus _v_35 _v_35))+(nat-to-int (mult (plus _v_35 _v_35) _t_36)))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_23 _qv_24))=(plus (succ _qv_23) (succ _qv_24))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (plus _v_35 _v_35))+(nat-to-int (mult (plus _v_35 _v_35) _t_36)))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_23 _qv_24))=(plus (succ _qv_24) (succ _qv_23))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (plus _v_35 _v_35))+(nat-to-int (mult (plus _v_35 _v_35) _t_36)))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (mult _qv_25 _qv_26))=(mult (succ _qv_25) (succ _qv_26))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (plus _v_35 _v_35))+(nat-to-int (mult (plus _v_35 _v_35) _t_36)))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (mult _qv_25 _qv_26))=(mult (succ _qv_26) (succ _qv_25))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (plus _v_35 _v_35))+(nat-to-int (mult (plus _v_35 _v_35) _t_36)))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((tri (plus _qv_27 _qv_28))=(plus (tri _qv_27) (tri _qv_28))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (plus _v_35 _v_35))+(nat-to-int (mult (plus _v_35 _v_35) _t_36)))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((tri (plus _qv_27 _qv_28))=(plus (tri _qv_28) (tri _qv_27))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (plus _v_35 _v_35))+(nat-to-int (mult (plus _v_35 _v_35) _t_36)))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((tri (mult _qv_29 _qv_30))=(mult (tri _qv_29) (tri _qv_30))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (plus _v_35 _v_35))+(nat-to-int (mult (plus _v_35 _v_35) _t_36)))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((tri (mult _qv_29 _qv_30))=(mult (tri _qv_30) (tri _qv_29))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (plus _v_35 _v_35))+(nat-to-int (mult (plus _v_35 _v_35) _t_36)))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((cubes (plus _qv_31 _qv_32))=(plus (cubes _qv_31) (cubes _qv_32))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (plus _v_35 _v_35))+(nat-to-int (mult (plus _v_35 _v_35) _t_36)))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((cubes (plus _qv_31 _qv_32))=(plus (cubes _qv_32) (cubes _qv_31))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (plus _v_35 _v_35))+(nat-to-int (mult (plus _v_35 _v_35) _t_36)))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((cubes (mult _qv_33 _qv_34))=(mult (cubes _qv_33) (cubes _qv_34))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (plus _v_35 _v_35))+(nat-to-int (mult (plus _v_35 _v_35) _t_36)))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((cubes (mult _qv_33 _qv_34))=(mult (cubes _qv_34) (cubes _qv_33))))
USE ASSUMPTION FAILED

  backtrack to: (((nat-to-int (plus _v_35 _v_35))+(nat-to-int (mult (plus _v_35 _v_35) _t_36)))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
  rewritten [12]: ((((nat-to-int _v_35)+(nat-to-int _v_35))+(nat-to-int (mult (plus _v_35 _v_35) _t_36)))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
  Maximum recursion depth reached
CURRENT SUBGOAL (((nat-to-int (plus _v_35 _v_35))+(nat-to-int (mult (plus _v_35 _v_35) _t_36)))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (plus _v_35 _v_35))+(nat-to-int (mult (plus _v_35 _v_35) _t_36)))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_1 _qv_2)=(plus _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (plus _v_35 _v_35))+(nat-to-int (mult (plus _v_35 _v_35) _t_36)))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_3 _qv_4) _qv_5)=(plus _qv_3 (plus _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (plus _v_35 _v_35))+(nat-to-int (mult (plus _v_35 _v_35) _t_36)))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((mult _qv_6 _qv_7)=(mult _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (plus _v_35 _v_35))+(nat-to-int (mult (plus _v_35 _v_35) _t_36)))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((mult (mult _qv_8 _qv_9) _qv_10)=(mult _qv_8 (mult _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (plus _v_35 _v_35))+(nat-to-int (mult (plus _v_35 _v_35) _t_36)))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat)) ((tri (tri _qv_11))=_qv_11))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (plus _v_35 _v_35))+(nat-to-int (mult (plus _v_35 _v_35) _t_36)))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat)) ((cubes (cubes _qv_12))=_qv_12))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (plus _v_35 _v_35))+(nat-to-int (mult (plus _v_35 _v_35) _t_36)))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (plus _v_35 _v_35))+(nat-to-int (mult (plus _v_35 _v_35) _t_36)))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_14))=(nat-to-int _qv_14)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (plus _v_35 _v_35))+(nat-to-int (mult (plus _v_35 _v_35) _t_36)))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat)) ((nat-to-int (tri _qv_15))=(nat-to-int _qv_15)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (plus _v_35 _v_35))+(nat-to-int (mult (plus _v_35 _v_35) _t_36)))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat)) ((nat-to-int (cubes _qv_16))=(nat-to-int _qv_16)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (plus _v_35 _v_35))+(nat-to-int (mult (plus _v_35 _v_35) _t_36)))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((mult _qv_17 (plus _qv_18 _qv_19))=(plus (mult _qv_17 _qv_18) (mult _qv_17 _qv_19))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (plus _v_35 _v_35))+(nat-to-int (mult (plus _v_35 _v_35) _t_36)))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus _qv_20 (mult _qv_21 _qv_22))=(mult (plus _qv_20 _qv_21) (plus _qv_20 _qv_22))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (plus _v_35 _v_35))+(nat-to-int (mult (plus _v_35 _v_35) _t_36)))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_23 _qv_24))=(plus (succ _qv_23) (succ _qv_24))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (plus _v_35 _v_35))+(nat-to-int (mult (plus _v_35 _v_35) _t_36)))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_23 _qv_24))=(plus (succ _qv_24) (succ _qv_23))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (plus _v_35 _v_35))+(nat-to-int (mult (plus _v_35 _v_35) _t_36)))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (mult _qv_25 _qv_26))=(mult (succ _qv_25) (succ _qv_26))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (plus _v_35 _v_35))+(nat-to-int (mult (plus _v_35 _v_35) _t_36)))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (mult _qv_25 _qv_26))=(mult (succ _qv_26) (succ _qv_25))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (plus _v_35 _v_35))+(nat-to-int (mult (plus _v_35 _v_35) _t_36)))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((tri (plus _qv_27 _qv_28))=(plus (tri _qv_27) (tri _qv_28))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (plus _v_35 _v_35))+(nat-to-int (mult (plus _v_35 _v_35) _t_36)))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((tri (plus _qv_27 _qv_28))=(plus (tri _qv_28) (tri _qv_27))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (plus _v_35 _v_35))+(nat-to-int (mult (plus _v_35 _v_35) _t_36)))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((tri (mult _qv_29 _qv_30))=(mult (tri _qv_29) (tri _qv_30))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (plus _v_35 _v_35))+(nat-to-int (mult (plus _v_35 _v_35) _t_36)))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((tri (mult _qv_29 _qv_30))=(mult (tri _qv_30) (tri _qv_29))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (plus _v_35 _v_35))+(nat-to-int (mult (plus _v_35 _v_35) _t_36)))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((cubes (plus _qv_31 _qv_32))=(plus (cubes _qv_31) (cubes _qv_32))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (plus _v_35 _v_35))+(nat-to-int (mult (plus _v_35 _v_35) _t_36)))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((cubes (plus _qv_31 _qv_32))=(plus (cubes _qv_32) (cubes _qv_31))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (plus _v_35 _v_35))+(nat-to-int (mult (plus _v_35 _v_35) _t_36)))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((cubes (mult _qv_33 _qv_34))=(mult (cubes _qv_33) (cubes _qv_34))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (plus _v_35 _v_35))+(nat-to-int (mult (plus _v_35 _v_35) _t_36)))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((cubes (mult _qv_33 _qv_34))=(mult (cubes _qv_34) (cubes _qv_33))))
USE ASSUMPTION FAILED

  backtrack to: (((nat-to-int (plus _v_35 _v_35))+(nat-to-int (mult (plus _v_35 _v_35) _t_36)))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
  rewritten [13]: (((nat-to-int (plus _v_35 _v_35))+(nat-to-int (mult (plus _v_35 _v_35) _t_36)))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
  Maximum recursion depth reached
CURRENT SUBGOAL (((nat-to-int (plus _v_35 _v_35))+(nat-to-int (mult (plus _v_35 _v_35) _t_36)))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (plus _v_35 _v_35))+(nat-to-int (mult (plus _v_35 _v_35) _t_36)))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_1 _qv_2)=(plus _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (plus _v_35 _v_35))+(nat-to-int (mult (plus _v_35 _v_35) _t_36)))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_3 _qv_4) _qv_5)=(plus _qv_3 (plus _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (plus _v_35 _v_35))+(nat-to-int (mult (plus _v_35 _v_35) _t_36)))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((mult _qv_6 _qv_7)=(mult _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (plus _v_35 _v_35))+(nat-to-int (mult (plus _v_35 _v_35) _t_36)))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((mult (mult _qv_8 _qv_9) _qv_10)=(mult _qv_8 (mult _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (plus _v_35 _v_35))+(nat-to-int (mult (plus _v_35 _v_35) _t_36)))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat)) ((tri (tri _qv_11))=_qv_11))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (plus _v_35 _v_35))+(nat-to-int (mult (plus _v_35 _v_35) _t_36)))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat)) ((cubes (cubes _qv_12))=_qv_12))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (plus _v_35 _v_35))+(nat-to-int (mult (plus _v_35 _v_35) _t_36)))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (plus _v_35 _v_35))+(nat-to-int (mult (plus _v_35 _v_35) _t_36)))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_14))=(nat-to-int _qv_14)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (plus _v_35 _v_35))+(nat-to-int (mult (plus _v_35 _v_35) _t_36)))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat)) ((nat-to-int (tri _qv_15))=(nat-to-int _qv_15)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (plus _v_35 _v_35))+(nat-to-int (mult (plus _v_35 _v_35) _t_36)))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat)) ((nat-to-int (cubes _qv_16))=(nat-to-int _qv_16)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (plus _v_35 _v_35))+(nat-to-int (mult (plus _v_35 _v_35) _t_36)))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((mult _qv_17 (plus _qv_18 _qv_19))=(plus (mult _qv_17 _qv_18) (mult _qv_17 _qv_19))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (plus _v_35 _v_35))+(nat-to-int (mult (plus _v_35 _v_35) _t_36)))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus _qv_20 (mult _qv_21 _qv_22))=(mult (plus _qv_20 _qv_21) (plus _qv_20 _qv_22))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (plus _v_35 _v_35))+(nat-to-int (mult (plus _v_35 _v_35) _t_36)))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_23 _qv_24))=(plus (succ _qv_23) (succ _qv_24))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (plus _v_35 _v_35))+(nat-to-int (mult (plus _v_35 _v_35) _t_36)))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_23 _qv_24))=(plus (succ _qv_24) (succ _qv_23))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (plus _v_35 _v_35))+(nat-to-int (mult (plus _v_35 _v_35) _t_36)))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (mult _qv_25 _qv_26))=(mult (succ _qv_25) (succ _qv_26))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (plus _v_35 _v_35))+(nat-to-int (mult (plus _v_35 _v_35) _t_36)))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (mult _qv_25 _qv_26))=(mult (succ _qv_26) (succ _qv_25))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (plus _v_35 _v_35))+(nat-to-int (mult (plus _v_35 _v_35) _t_36)))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((tri (plus _qv_27 _qv_28))=(plus (tri _qv_27) (tri _qv_28))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (plus _v_35 _v_35))+(nat-to-int (mult (plus _v_35 _v_35) _t_36)))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((tri (plus _qv_27 _qv_28))=(plus (tri _qv_28) (tri _qv_27))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (plus _v_35 _v_35))+(nat-to-int (mult (plus _v_35 _v_35) _t_36)))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((tri (mult _qv_29 _qv_30))=(mult (tri _qv_29) (tri _qv_30))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (plus _v_35 _v_35))+(nat-to-int (mult (plus _v_35 _v_35) _t_36)))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((tri (mult _qv_29 _qv_30))=(mult (tri _qv_30) (tri _qv_29))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (plus _v_35 _v_35))+(nat-to-int (mult (plus _v_35 _v_35) _t_36)))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((cubes (plus _qv_31 _qv_32))=(plus (cubes _qv_31) (cubes _qv_32))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (plus _v_35 _v_35))+(nat-to-int (mult (plus _v_35 _v_35) _t_36)))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((cubes (plus _qv_31 _qv_32))=(plus (cubes _qv_32) (cubes _qv_31))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (plus _v_35 _v_35))+(nat-to-int (mult (plus _v_35 _v_35) _t_36)))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((cubes (mult _qv_33 _qv_34))=(mult (cubes _qv_33) (cubes _qv_34))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (plus _v_35 _v_35))+(nat-to-int (mult (plus _v_35 _v_35) _t_36)))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((cubes (mult _qv_33 _qv_34))=(mult (cubes _qv_34) (cubes _qv_33))))
USE ASSUMPTION FAILED

  backtrack to: (((nat-to-int (plus _v_35 _v_35))+(nat-to-int (mult (plus _v_35 _v_35) _t_36)))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
  rewritten [13]: (((nat-to-int (plus _v_35 _v_35))+(nat-to-int (mult (plus _v_35 _v_35) _t_36)))=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
  Maximum recursion depth reached
CURRENT SUBGOAL (((nat-to-int (plus _v_35 _v_35))+(nat-to-int (mult (plus _v_35 _v_35) _t_36)))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (plus _v_35 _v_35))+(nat-to-int (mult (plus _v_35 _v_35) _t_36)))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_1 _qv_2)=(plus _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (plus _v_35 _v_35))+(nat-to-int (mult (plus _v_35 _v_35) _t_36)))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_3 _qv_4) _qv_5)=(plus _qv_3 (plus _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (plus _v_35 _v_35))+(nat-to-int (mult (plus _v_35 _v_35) _t_36)))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((mult _qv_6 _qv_7)=(mult _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (plus _v_35 _v_35))+(nat-to-int (mult (plus _v_35 _v_35) _t_36)))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((mult (mult _qv_8 _qv_9) _qv_10)=(mult _qv_8 (mult _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (plus _v_35 _v_35))+(nat-to-int (mult (plus _v_35 _v_35) _t_36)))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat)) ((tri (tri _qv_11))=_qv_11))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (plus _v_35 _v_35))+(nat-to-int (mult (plus _v_35 _v_35) _t_36)))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat)) ((cubes (cubes _qv_12))=_qv_12))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (plus _v_35 _v_35))+(nat-to-int (mult (plus _v_35 _v_35) _t_36)))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (plus _v_35 _v_35))+(nat-to-int (mult (plus _v_35 _v_35) _t_36)))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_14))=(nat-to-int _qv_14)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (plus _v_35 _v_35))+(nat-to-int (mult (plus _v_35 _v_35) _t_36)))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat)) ((nat-to-int (tri _qv_15))=(nat-to-int _qv_15)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (plus _v_35 _v_35))+(nat-to-int (mult (plus _v_35 _v_35) _t_36)))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat)) ((nat-to-int (cubes _qv_16))=(nat-to-int _qv_16)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (plus _v_35 _v_35))+(nat-to-int (mult (plus _v_35 _v_35) _t_36)))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((mult _qv_17 (plus _qv_18 _qv_19))=(plus (mult _qv_17 _qv_18) (mult _qv_17 _qv_19))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (plus _v_35 _v_35))+(nat-to-int (mult (plus _v_35 _v_35) _t_36)))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus _qv_20 (mult _qv_21 _qv_22))=(mult (plus _qv_20 _qv_21) (plus _qv_20 _qv_22))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (plus _v_35 _v_35))+(nat-to-int (mult (plus _v_35 _v_35) _t_36)))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_23 _qv_24))=(plus (succ _qv_23) (succ _qv_24))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (plus _v_35 _v_35))+(nat-to-int (mult (plus _v_35 _v_35) _t_36)))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_23 _qv_24))=(plus (succ _qv_24) (succ _qv_23))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (plus _v_35 _v_35))+(nat-to-int (mult (plus _v_35 _v_35) _t_36)))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (mult _qv_25 _qv_26))=(mult (succ _qv_25) (succ _qv_26))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (plus _v_35 _v_35))+(nat-to-int (mult (plus _v_35 _v_35) _t_36)))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (mult _qv_25 _qv_26))=(mult (succ _qv_26) (succ _qv_25))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (plus _v_35 _v_35))+(nat-to-int (mult (plus _v_35 _v_35) _t_36)))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((tri (plus _qv_27 _qv_28))=(plus (tri _qv_27) (tri _qv_28))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (plus _v_35 _v_35))+(nat-to-int (mult (plus _v_35 _v_35) _t_36)))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((tri (plus _qv_27 _qv_28))=(plus (tri _qv_28) (tri _qv_27))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (plus _v_35 _v_35))+(nat-to-int (mult (plus _v_35 _v_35) _t_36)))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((tri (mult _qv_29 _qv_30))=(mult (tri _qv_29) (tri _qv_30))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (plus _v_35 _v_35))+(nat-to-int (mult (plus _v_35 _v_35) _t_36)))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((tri (mult _qv_29 _qv_30))=(mult (tri _qv_30) (tri _qv_29))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (plus _v_35 _v_35))+(nat-to-int (mult (plus _v_35 _v_35) _t_36)))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((cubes (plus _qv_31 _qv_32))=(plus (cubes _qv_31) (cubes _qv_32))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (plus _v_35 _v_35))+(nat-to-int (mult (plus _v_35 _v_35) _t_36)))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((cubes (plus _qv_31 _qv_32))=(plus (cubes _qv_32) (cubes _qv_31))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (plus _v_35 _v_35))+(nat-to-int (mult (plus _v_35 _v_35) _t_36)))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((cubes (mult _qv_33 _qv_34))=(mult (cubes _qv_33) (cubes _qv_34))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (plus _v_35 _v_35))+(nat-to-int (mult (plus _v_35 _v_35) _t_36)))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((cubes (mult _qv_33 _qv_34))=(mult (cubes _qv_34) (cubes _qv_33))))
USE ASSUMPTION FAILED

  backtrack to: (((nat-to-int (plus _v_35 _v_35))+(nat-to-int (mult (plus _v_35 _v_35) _t_36)))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
  rewritten [15]: (((nat-to-int (plus _v_35 _v_35))+(nat-to-int (mult (plus _v_35 _v_35) _t_36)))=(nat-to-int (mult (succ (plus (succ _t_36) _t_36)) _v_35)))
  Maximum recursion depth reached
CURRENT SUBGOAL (((nat-to-int (plus _v_35 _v_35))+(nat-to-int (mult (plus _v_35 _v_35) _t_36)))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (plus _v_35 _v_35))+(nat-to-int (mult (plus _v_35 _v_35) _t_36)))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_1 _qv_2)=(plus _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (plus _v_35 _v_35))+(nat-to-int (mult (plus _v_35 _v_35) _t_36)))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_3 _qv_4) _qv_5)=(plus _qv_3 (plus _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (plus _v_35 _v_35))+(nat-to-int (mult (plus _v_35 _v_35) _t_36)))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((mult _qv_6 _qv_7)=(mult _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (plus _v_35 _v_35))+(nat-to-int (mult (plus _v_35 _v_35) _t_36)))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((mult (mult _qv_8 _qv_9) _qv_10)=(mult _qv_8 (mult _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (plus _v_35 _v_35))+(nat-to-int (mult (plus _v_35 _v_35) _t_36)))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat)) ((tri (tri _qv_11))=_qv_11))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (plus _v_35 _v_35))+(nat-to-int (mult (plus _v_35 _v_35) _t_36)))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat)) ((cubes (cubes _qv_12))=_qv_12))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (plus _v_35 _v_35))+(nat-to-int (mult (plus _v_35 _v_35) _t_36)))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (plus _v_35 _v_35))+(nat-to-int (mult (plus _v_35 _v_35) _t_36)))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_14))=(nat-to-int _qv_14)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (plus _v_35 _v_35))+(nat-to-int (mult (plus _v_35 _v_35) _t_36)))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat)) ((nat-to-int (tri _qv_15))=(nat-to-int _qv_15)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (plus _v_35 _v_35))+(nat-to-int (mult (plus _v_35 _v_35) _t_36)))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat)) ((nat-to-int (cubes _qv_16))=(nat-to-int _qv_16)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (plus _v_35 _v_35))+(nat-to-int (mult (plus _v_35 _v_35) _t_36)))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((mult _qv_17 (plus _qv_18 _qv_19))=(plus (mult _qv_17 _qv_18) (mult _qv_17 _qv_19))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (plus _v_35 _v_35))+(nat-to-int (mult (plus _v_35 _v_35) _t_36)))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus _qv_20 (mult _qv_21 _qv_22))=(mult (plus _qv_20 _qv_21) (plus _qv_20 _qv_22))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (plus _v_35 _v_35))+(nat-to-int (mult (plus _v_35 _v_35) _t_36)))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_23 _qv_24))=(plus (succ _qv_23) (succ _qv_24))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (plus _v_35 _v_35))+(nat-to-int (mult (plus _v_35 _v_35) _t_36)))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_23 _qv_24))=(plus (succ _qv_24) (succ _qv_23))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (plus _v_35 _v_35))+(nat-to-int (mult (plus _v_35 _v_35) _t_36)))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (mult _qv_25 _qv_26))=(mult (succ _qv_25) (succ _qv_26))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (plus _v_35 _v_35))+(nat-to-int (mult (plus _v_35 _v_35) _t_36)))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (mult _qv_25 _qv_26))=(mult (succ _qv_26) (succ _qv_25))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (plus _v_35 _v_35))+(nat-to-int (mult (plus _v_35 _v_35) _t_36)))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((tri (plus _qv_27 _qv_28))=(plus (tri _qv_27) (tri _qv_28))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (plus _v_35 _v_35))+(nat-to-int (mult (plus _v_35 _v_35) _t_36)))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((tri (plus _qv_27 _qv_28))=(plus (tri _qv_28) (tri _qv_27))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (plus _v_35 _v_35))+(nat-to-int (mult (plus _v_35 _v_35) _t_36)))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((tri (mult _qv_29 _qv_30))=(mult (tri _qv_29) (tri _qv_30))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (plus _v_35 _v_35))+(nat-to-int (mult (plus _v_35 _v_35) _t_36)))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((tri (mult _qv_29 _qv_30))=(mult (tri _qv_30) (tri _qv_29))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (plus _v_35 _v_35))+(nat-to-int (mult (plus _v_35 _v_35) _t_36)))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((cubes (plus _qv_31 _qv_32))=(plus (cubes _qv_31) (cubes _qv_32))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (plus _v_35 _v_35))+(nat-to-int (mult (plus _v_35 _v_35) _t_36)))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((cubes (plus _qv_31 _qv_32))=(plus (cubes _qv_32) (cubes _qv_31))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (plus _v_35 _v_35))+(nat-to-int (mult (plus _v_35 _v_35) _t_36)))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((cubes (mult _qv_33 _qv_34))=(mult (cubes _qv_33) (cubes _qv_34))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (plus _v_35 _v_35))+(nat-to-int (mult (plus _v_35 _v_35) _t_36)))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((cubes (mult _qv_33 _qv_34))=(mult (cubes _qv_34) (cubes _qv_33))))
USE ASSUMPTION FAILED

  backtrack to: (((nat-to-int (plus _v_35 _v_35))+(nat-to-int (mult (plus _v_35 _v_35) _t_36)))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
  rewritten [15]: (((nat-to-int (plus _v_35 _v_35))+(nat-to-int (mult _t_36 (plus _v_35 _v_35))))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
  Maximum recursion depth reached
CURRENT SUBGOAL (((nat-to-int (plus _v_35 _v_35))+(nat-to-int (mult (plus _v_35 _v_35) _t_36)))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (plus _v_35 _v_35))+(nat-to-int (mult (plus _v_35 _v_35) _t_36)))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_1 _qv_2)=(plus _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (plus _v_35 _v_35))+(nat-to-int (mult (plus _v_35 _v_35) _t_36)))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_3 _qv_4) _qv_5)=(plus _qv_3 (plus _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (plus _v_35 _v_35))+(nat-to-int (mult (plus _v_35 _v_35) _t_36)))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((mult _qv_6 _qv_7)=(mult _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (plus _v_35 _v_35))+(nat-to-int (mult (plus _v_35 _v_35) _t_36)))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((mult (mult _qv_8 _qv_9) _qv_10)=(mult _qv_8 (mult _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (plus _v_35 _v_35))+(nat-to-int (mult (plus _v_35 _v_35) _t_36)))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat)) ((tri (tri _qv_11))=_qv_11))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (plus _v_35 _v_35))+(nat-to-int (mult (plus _v_35 _v_35) _t_36)))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat)) ((cubes (cubes _qv_12))=_qv_12))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (plus _v_35 _v_35))+(nat-to-int (mult (plus _v_35 _v_35) _t_36)))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (plus _v_35 _v_35))+(nat-to-int (mult (plus _v_35 _v_35) _t_36)))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_14))=(nat-to-int _qv_14)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (plus _v_35 _v_35))+(nat-to-int (mult (plus _v_35 _v_35) _t_36)))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat)) ((nat-to-int (tri _qv_15))=(nat-to-int _qv_15)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (plus _v_35 _v_35))+(nat-to-int (mult (plus _v_35 _v_35) _t_36)))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat)) ((nat-to-int (cubes _qv_16))=(nat-to-int _qv_16)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (plus _v_35 _v_35))+(nat-to-int (mult (plus _v_35 _v_35) _t_36)))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((mult _qv_17 (plus _qv_18 _qv_19))=(plus (mult _qv_17 _qv_18) (mult _qv_17 _qv_19))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (plus _v_35 _v_35))+(nat-to-int (mult (plus _v_35 _v_35) _t_36)))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus _qv_20 (mult _qv_21 _qv_22))=(mult (plus _qv_20 _qv_21) (plus _qv_20 _qv_22))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (plus _v_35 _v_35))+(nat-to-int (mult (plus _v_35 _v_35) _t_36)))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_23 _qv_24))=(plus (succ _qv_23) (succ _qv_24))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (plus _v_35 _v_35))+(nat-to-int (mult (plus _v_35 _v_35) _t_36)))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_23 _qv_24))=(plus (succ _qv_24) (succ _qv_23))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (plus _v_35 _v_35))+(nat-to-int (mult (plus _v_35 _v_35) _t_36)))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (mult _qv_25 _qv_26))=(mult (succ _qv_25) (succ _qv_26))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (plus _v_35 _v_35))+(nat-to-int (mult (plus _v_35 _v_35) _t_36)))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (mult _qv_25 _qv_26))=(mult (succ _qv_26) (succ _qv_25))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (plus _v_35 _v_35))+(nat-to-int (mult (plus _v_35 _v_35) _t_36)))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((tri (plus _qv_27 _qv_28))=(plus (tri _qv_27) (tri _qv_28))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (plus _v_35 _v_35))+(nat-to-int (mult (plus _v_35 _v_35) _t_36)))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((tri (plus _qv_27 _qv_28))=(plus (tri _qv_28) (tri _qv_27))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (plus _v_35 _v_35))+(nat-to-int (mult (plus _v_35 _v_35) _t_36)))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((tri (mult _qv_29 _qv_30))=(mult (tri _qv_29) (tri _qv_30))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (plus _v_35 _v_35))+(nat-to-int (mult (plus _v_35 _v_35) _t_36)))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((tri (mult _qv_29 _qv_30))=(mult (tri _qv_30) (tri _qv_29))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (plus _v_35 _v_35))+(nat-to-int (mult (plus _v_35 _v_35) _t_36)))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((cubes (plus _qv_31 _qv_32))=(plus (cubes _qv_31) (cubes _qv_32))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (plus _v_35 _v_35))+(nat-to-int (mult (plus _v_35 _v_35) _t_36)))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((cubes (plus _qv_31 _qv_32))=(plus (cubes _qv_32) (cubes _qv_31))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (plus _v_35 _v_35))+(nat-to-int (mult (plus _v_35 _v_35) _t_36)))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((cubes (mult _qv_33 _qv_34))=(mult (cubes _qv_33) (cubes _qv_34))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (plus _v_35 _v_35))+(nat-to-int (mult (plus _v_35 _v_35) _t_36)))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((cubes (mult _qv_33 _qv_34))=(mult (cubes _qv_34) (cubes _qv_33))))
USE ASSUMPTION FAILED

  backtrack to: (((nat-to-int (plus _v_35 _v_35))+(nat-to-int (mult (plus _v_35 _v_35) _t_36)))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
  rewritten [2]: (((nat-to-int (plus _v_35 _v_35))+(nat-to-int (mult (plus _v_35 _v_35) _t_36)))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
  Maximum recursion depth reached
CURRENT SUBGOAL (((nat-to-int (plus _v_35 _v_35))+(nat-to-int (mult (plus _v_35 _v_35) _t_36)))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (plus _v_35 _v_35))+(nat-to-int (mult (plus _v_35 _v_35) _t_36)))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_1 _qv_2)=(plus _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (plus _v_35 _v_35))+(nat-to-int (mult (plus _v_35 _v_35) _t_36)))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_3 _qv_4) _qv_5)=(plus _qv_3 (plus _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (plus _v_35 _v_35))+(nat-to-int (mult (plus _v_35 _v_35) _t_36)))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((mult _qv_6 _qv_7)=(mult _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (plus _v_35 _v_35))+(nat-to-int (mult (plus _v_35 _v_35) _t_36)))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((mult (mult _qv_8 _qv_9) _qv_10)=(mult _qv_8 (mult _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (plus _v_35 _v_35))+(nat-to-int (mult (plus _v_35 _v_35) _t_36)))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat)) ((tri (tri _qv_11))=_qv_11))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (plus _v_35 _v_35))+(nat-to-int (mult (plus _v_35 _v_35) _t_36)))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat)) ((cubes (cubes _qv_12))=_qv_12))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (plus _v_35 _v_35))+(nat-to-int (mult (plus _v_35 _v_35) _t_36)))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (plus _v_35 _v_35))+(nat-to-int (mult (plus _v_35 _v_35) _t_36)))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_14))=(nat-to-int _qv_14)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (plus _v_35 _v_35))+(nat-to-int (mult (plus _v_35 _v_35) _t_36)))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat)) ((nat-to-int (tri _qv_15))=(nat-to-int _qv_15)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (plus _v_35 _v_35))+(nat-to-int (mult (plus _v_35 _v_35) _t_36)))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat)) ((nat-to-int (cubes _qv_16))=(nat-to-int _qv_16)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (plus _v_35 _v_35))+(nat-to-int (mult (plus _v_35 _v_35) _t_36)))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((mult _qv_17 (plus _qv_18 _qv_19))=(plus (mult _qv_17 _qv_18) (mult _qv_17 _qv_19))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (plus _v_35 _v_35))+(nat-to-int (mult (plus _v_35 _v_35) _t_36)))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus _qv_20 (mult _qv_21 _qv_22))=(mult (plus _qv_20 _qv_21) (plus _qv_20 _qv_22))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (plus _v_35 _v_35))+(nat-to-int (mult (plus _v_35 _v_35) _t_36)))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_23 _qv_24))=(plus (succ _qv_23) (succ _qv_24))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (plus _v_35 _v_35))+(nat-to-int (mult (plus _v_35 _v_35) _t_36)))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_23 _qv_24))=(plus (succ _qv_24) (succ _qv_23))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (plus _v_35 _v_35))+(nat-to-int (mult (plus _v_35 _v_35) _t_36)))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (mult _qv_25 _qv_26))=(mult (succ _qv_25) (succ _qv_26))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (plus _v_35 _v_35))+(nat-to-int (mult (plus _v_35 _v_35) _t_36)))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (mult _qv_25 _qv_26))=(mult (succ _qv_26) (succ _qv_25))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (plus _v_35 _v_35))+(nat-to-int (mult (plus _v_35 _v_35) _t_36)))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((tri (plus _qv_27 _qv_28))=(plus (tri _qv_27) (tri _qv_28))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (plus _v_35 _v_35))+(nat-to-int (mult (plus _v_35 _v_35) _t_36)))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((tri (plus _qv_27 _qv_28))=(plus (tri _qv_28) (tri _qv_27))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (plus _v_35 _v_35))+(nat-to-int (mult (plus _v_35 _v_35) _t_36)))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((tri (mult _qv_29 _qv_30))=(mult (tri _qv_29) (tri _qv_30))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (plus _v_35 _v_35))+(nat-to-int (mult (plus _v_35 _v_35) _t_36)))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((tri (mult _qv_29 _qv_30))=(mult (tri _qv_30) (tri _qv_29))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (plus _v_35 _v_35))+(nat-to-int (mult (plus _v_35 _v_35) _t_36)))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((cubes (plus _qv_31 _qv_32))=(plus (cubes _qv_31) (cubes _qv_32))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (plus _v_35 _v_35))+(nat-to-int (mult (plus _v_35 _v_35) _t_36)))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((cubes (plus _qv_31 _qv_32))=(plus (cubes _qv_32) (cubes _qv_31))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (plus _v_35 _v_35))+(nat-to-int (mult (plus _v_35 _v_35) _t_36)))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((cubes (mult _qv_33 _qv_34))=(mult (cubes _qv_33) (cubes _qv_34))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (plus _v_35 _v_35))+(nat-to-int (mult (plus _v_35 _v_35) _t_36)))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((cubes (mult _qv_33 _qv_34))=(mult (cubes _qv_34) (cubes _qv_33))))
USE ASSUMPTION FAILED

  backtrack to: (((nat-to-int (plus _v_35 _v_35))+(nat-to-int (mult (plus _v_35 _v_35) _t_36)))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
  rewritten [4]: (((nat-to-int (plus _v_35 _v_35))+(nat-to-int (mult (plus _v_35 _v_35) _t_36)))=(nat-to-int (mult _v_35 (succ (succ (plus _t_36 _t_36))))))
  Maximum recursion depth reached
CURRENT SUBGOAL (((nat-to-int (plus _v_35 _v_35))+(nat-to-int (mult (plus _v_35 _v_35) _t_36)))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (plus _v_35 _v_35))+(nat-to-int (mult (plus _v_35 _v_35) _t_36)))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_1 _qv_2)=(plus _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (plus _v_35 _v_35))+(nat-to-int (mult (plus _v_35 _v_35) _t_36)))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_3 _qv_4) _qv_5)=(plus _qv_3 (plus _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (plus _v_35 _v_35))+(nat-to-int (mult (plus _v_35 _v_35) _t_36)))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((mult _qv_6 _qv_7)=(mult _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (plus _v_35 _v_35))+(nat-to-int (mult (plus _v_35 _v_35) _t_36)))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((mult (mult _qv_8 _qv_9) _qv_10)=(mult _qv_8 (mult _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (plus _v_35 _v_35))+(nat-to-int (mult (plus _v_35 _v_35) _t_36)))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat)) ((tri (tri _qv_11))=_qv_11))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (plus _v_35 _v_35))+(nat-to-int (mult (plus _v_35 _v_35) _t_36)))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat)) ((cubes (cubes _qv_12))=_qv_12))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (plus _v_35 _v_35))+(nat-to-int (mult (plus _v_35 _v_35) _t_36)))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (plus _v_35 _v_35))+(nat-to-int (mult (plus _v_35 _v_35) _t_36)))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_14))=(nat-to-int _qv_14)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (plus _v_35 _v_35))+(nat-to-int (mult (plus _v_35 _v_35) _t_36)))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat)) ((nat-to-int (tri _qv_15))=(nat-to-int _qv_15)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (plus _v_35 _v_35))+(nat-to-int (mult (plus _v_35 _v_35) _t_36)))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat)) ((nat-to-int (cubes _qv_16))=(nat-to-int _qv_16)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (plus _v_35 _v_35))+(nat-to-int (mult (plus _v_35 _v_35) _t_36)))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((mult _qv_17 (plus _qv_18 _qv_19))=(plus (mult _qv_17 _qv_18) (mult _qv_17 _qv_19))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (plus _v_35 _v_35))+(nat-to-int (mult (plus _v_35 _v_35) _t_36)))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus _qv_20 (mult _qv_21 _qv_22))=(mult (plus _qv_20 _qv_21) (plus _qv_20 _qv_22))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (plus _v_35 _v_35))+(nat-to-int (mult (plus _v_35 _v_35) _t_36)))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_23 _qv_24))=(plus (succ _qv_23) (succ _qv_24))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (plus _v_35 _v_35))+(nat-to-int (mult (plus _v_35 _v_35) _t_36)))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_23 _qv_24))=(plus (succ _qv_24) (succ _qv_23))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (plus _v_35 _v_35))+(nat-to-int (mult (plus _v_35 _v_35) _t_36)))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (mult _qv_25 _qv_26))=(mult (succ _qv_25) (succ _qv_26))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (plus _v_35 _v_35))+(nat-to-int (mult (plus _v_35 _v_35) _t_36)))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (mult _qv_25 _qv_26))=(mult (succ _qv_26) (succ _qv_25))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (plus _v_35 _v_35))+(nat-to-int (mult (plus _v_35 _v_35) _t_36)))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((tri (plus _qv_27 _qv_28))=(plus (tri _qv_27) (tri _qv_28))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (plus _v_35 _v_35))+(nat-to-int (mult (plus _v_35 _v_35) _t_36)))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((tri (plus _qv_27 _qv_28))=(plus (tri _qv_28) (tri _qv_27))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (plus _v_35 _v_35))+(nat-to-int (mult (plus _v_35 _v_35) _t_36)))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((tri (mult _qv_29 _qv_30))=(mult (tri _qv_29) (tri _qv_30))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (plus _v_35 _v_35))+(nat-to-int (mult (plus _v_35 _v_35) _t_36)))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((tri (mult _qv_29 _qv_30))=(mult (tri _qv_30) (tri _qv_29))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (plus _v_35 _v_35))+(nat-to-int (mult (plus _v_35 _v_35) _t_36)))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((cubes (plus _qv_31 _qv_32))=(plus (cubes _qv_31) (cubes _qv_32))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (plus _v_35 _v_35))+(nat-to-int (mult (plus _v_35 _v_35) _t_36)))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((cubes (plus _qv_31 _qv_32))=(plus (cubes _qv_32) (cubes _qv_31))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (plus _v_35 _v_35))+(nat-to-int (mult (plus _v_35 _v_35) _t_36)))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((cubes (mult _qv_33 _qv_34))=(mult (cubes _qv_33) (cubes _qv_34))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (plus _v_35 _v_35))+(nat-to-int (mult (plus _v_35 _v_35) _t_36)))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((cubes (mult _qv_33 _qv_34))=(mult (cubes _qv_34) (cubes _qv_33))))
USE ASSUMPTION FAILED

  backtrack to: (((nat-to-int (plus _v_35 _v_35))+(nat-to-int (mult (plus _v_35 _v_35) _t_36)))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
  rewritten [12]: ((((nat-to-int _v_35)+(nat-to-int _v_35))+(nat-to-int (mult (plus _v_35 _v_35) _t_36)))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
  Maximum recursion depth reached
CURRENT SUBGOAL (((nat-to-int (plus _v_35 _v_35))+(nat-to-int (mult (plus _v_35 _v_35) _t_36)))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (plus _v_35 _v_35))+(nat-to-int (mult (plus _v_35 _v_35) _t_36)))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_1 _qv_2)=(plus _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (plus _v_35 _v_35))+(nat-to-int (mult (plus _v_35 _v_35) _t_36)))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_3 _qv_4) _qv_5)=(plus _qv_3 (plus _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (plus _v_35 _v_35))+(nat-to-int (mult (plus _v_35 _v_35) _t_36)))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((mult _qv_6 _qv_7)=(mult _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (plus _v_35 _v_35))+(nat-to-int (mult (plus _v_35 _v_35) _t_36)))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((mult (mult _qv_8 _qv_9) _qv_10)=(mult _qv_8 (mult _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (plus _v_35 _v_35))+(nat-to-int (mult (plus _v_35 _v_35) _t_36)))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat)) ((tri (tri _qv_11))=_qv_11))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (plus _v_35 _v_35))+(nat-to-int (mult (plus _v_35 _v_35) _t_36)))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat)) ((cubes (cubes _qv_12))=_qv_12))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (plus _v_35 _v_35))+(nat-to-int (mult (plus _v_35 _v_35) _t_36)))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (plus _v_35 _v_35))+(nat-to-int (mult (plus _v_35 _v_35) _t_36)))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_14))=(nat-to-int _qv_14)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (plus _v_35 _v_35))+(nat-to-int (mult (plus _v_35 _v_35) _t_36)))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat)) ((nat-to-int (tri _qv_15))=(nat-to-int _qv_15)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (plus _v_35 _v_35))+(nat-to-int (mult (plus _v_35 _v_35) _t_36)))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat)) ((nat-to-int (cubes _qv_16))=(nat-to-int _qv_16)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (plus _v_35 _v_35))+(nat-to-int (mult (plus _v_35 _v_35) _t_36)))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((mult _qv_17 (plus _qv_18 _qv_19))=(plus (mult _qv_17 _qv_18) (mult _qv_17 _qv_19))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (plus _v_35 _v_35))+(nat-to-int (mult (plus _v_35 _v_35) _t_36)))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus _qv_20 (mult _qv_21 _qv_22))=(mult (plus _qv_20 _qv_21) (plus _qv_20 _qv_22))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (plus _v_35 _v_35))+(nat-to-int (mult (plus _v_35 _v_35) _t_36)))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_23 _qv_24))=(plus (succ _qv_23) (succ _qv_24))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (plus _v_35 _v_35))+(nat-to-int (mult (plus _v_35 _v_35) _t_36)))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_23 _qv_24))=(plus (succ _qv_24) (succ _qv_23))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (plus _v_35 _v_35))+(nat-to-int (mult (plus _v_35 _v_35) _t_36)))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (mult _qv_25 _qv_26))=(mult (succ _qv_25) (succ _qv_26))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (plus _v_35 _v_35))+(nat-to-int (mult (plus _v_35 _v_35) _t_36)))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (mult _qv_25 _qv_26))=(mult (succ _qv_26) (succ _qv_25))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (plus _v_35 _v_35))+(nat-to-int (mult (plus _v_35 _v_35) _t_36)))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((tri (plus _qv_27 _qv_28))=(plus (tri _qv_27) (tri _qv_28))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (plus _v_35 _v_35))+(nat-to-int (mult (plus _v_35 _v_35) _t_36)))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((tri (plus _qv_27 _qv_28))=(plus (tri _qv_28) (tri _qv_27))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (plus _v_35 _v_35))+(nat-to-int (mult (plus _v_35 _v_35) _t_36)))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((tri (mult _qv_29 _qv_30))=(mult (tri _qv_29) (tri _qv_30))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (plus _v_35 _v_35))+(nat-to-int (mult (plus _v_35 _v_35) _t_36)))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((tri (mult _qv_29 _qv_30))=(mult (tri _qv_30) (tri _qv_29))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (plus _v_35 _v_35))+(nat-to-int (mult (plus _v_35 _v_35) _t_36)))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((cubes (plus _qv_31 _qv_32))=(plus (cubes _qv_31) (cubes _qv_32))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (plus _v_35 _v_35))+(nat-to-int (mult (plus _v_35 _v_35) _t_36)))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((cubes (plus _qv_31 _qv_32))=(plus (cubes _qv_32) (cubes _qv_31))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (plus _v_35 _v_35))+(nat-to-int (mult (plus _v_35 _v_35) _t_36)))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((cubes (mult _qv_33 _qv_34))=(mult (cubes _qv_33) (cubes _qv_34))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (plus _v_35 _v_35))+(nat-to-int (mult (plus _v_35 _v_35) _t_36)))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((cubes (mult _qv_33 _qv_34))=(mult (cubes _qv_34) (cubes _qv_33))))
USE ASSUMPTION FAILED

  backtrack to: (((nat-to-int (plus _v_35 _v_35))+(nat-to-int (mult (plus _v_35 _v_35) _t_36)))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
  rewritten [13]: (((nat-to-int (plus _v_35 _v_35))+(nat-to-int (mult (plus _v_35 _v_35) _t_36)))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
  Maximum recursion depth reached
CURRENT SUBGOAL (((nat-to-int (plus _v_35 _v_35))+(nat-to-int (mult (plus _v_35 _v_35) _t_36)))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (plus _v_35 _v_35))+(nat-to-int (mult (plus _v_35 _v_35) _t_36)))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_1 _qv_2)=(plus _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (plus _v_35 _v_35))+(nat-to-int (mult (plus _v_35 _v_35) _t_36)))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_3 _qv_4) _qv_5)=(plus _qv_3 (plus _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (plus _v_35 _v_35))+(nat-to-int (mult (plus _v_35 _v_35) _t_36)))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((mult _qv_6 _qv_7)=(mult _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (plus _v_35 _v_35))+(nat-to-int (mult (plus _v_35 _v_35) _t_36)))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((mult (mult _qv_8 _qv_9) _qv_10)=(mult _qv_8 (mult _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (plus _v_35 _v_35))+(nat-to-int (mult (plus _v_35 _v_35) _t_36)))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat)) ((tri (tri _qv_11))=_qv_11))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (plus _v_35 _v_35))+(nat-to-int (mult (plus _v_35 _v_35) _t_36)))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat)) ((cubes (cubes _qv_12))=_qv_12))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (plus _v_35 _v_35))+(nat-to-int (mult (plus _v_35 _v_35) _t_36)))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (plus _v_35 _v_35))+(nat-to-int (mult (plus _v_35 _v_35) _t_36)))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_14))=(nat-to-int _qv_14)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (plus _v_35 _v_35))+(nat-to-int (mult (plus _v_35 _v_35) _t_36)))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat)) ((nat-to-int (tri _qv_15))=(nat-to-int _qv_15)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (plus _v_35 _v_35))+(nat-to-int (mult (plus _v_35 _v_35) _t_36)))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat)) ((nat-to-int (cubes _qv_16))=(nat-to-int _qv_16)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (plus _v_35 _v_35))+(nat-to-int (mult (plus _v_35 _v_35) _t_36)))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((mult _qv_17 (plus _qv_18 _qv_19))=(plus (mult _qv_17 _qv_18) (mult _qv_17 _qv_19))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (plus _v_35 _v_35))+(nat-to-int (mult (plus _v_35 _v_35) _t_36)))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus _qv_20 (mult _qv_21 _qv_22))=(mult (plus _qv_20 _qv_21) (plus _qv_20 _qv_22))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (plus _v_35 _v_35))+(nat-to-int (mult (plus _v_35 _v_35) _t_36)))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_23 _qv_24))=(plus (succ _qv_23) (succ _qv_24))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (plus _v_35 _v_35))+(nat-to-int (mult (plus _v_35 _v_35) _t_36)))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_23 _qv_24))=(plus (succ _qv_24) (succ _qv_23))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (plus _v_35 _v_35))+(nat-to-int (mult (plus _v_35 _v_35) _t_36)))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (mult _qv_25 _qv_26))=(mult (succ _qv_25) (succ _qv_26))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (plus _v_35 _v_35))+(nat-to-int (mult (plus _v_35 _v_35) _t_36)))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (mult _qv_25 _qv_26))=(mult (succ _qv_26) (succ _qv_25))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (plus _v_35 _v_35))+(nat-to-int (mult (plus _v_35 _v_35) _t_36)))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((tri (plus _qv_27 _qv_28))=(plus (tri _qv_27) (tri _qv_28))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (plus _v_35 _v_35))+(nat-to-int (mult (plus _v_35 _v_35) _t_36)))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((tri (plus _qv_27 _qv_28))=(plus (tri _qv_28) (tri _qv_27))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (plus _v_35 _v_35))+(nat-to-int (mult (plus _v_35 _v_35) _t_36)))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((tri (mult _qv_29 _qv_30))=(mult (tri _qv_29) (tri _qv_30))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (plus _v_35 _v_35))+(nat-to-int (mult (plus _v_35 _v_35) _t_36)))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((tri (mult _qv_29 _qv_30))=(mult (tri _qv_30) (tri _qv_29))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (plus _v_35 _v_35))+(nat-to-int (mult (plus _v_35 _v_35) _t_36)))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((cubes (plus _qv_31 _qv_32))=(plus (cubes _qv_31) (cubes _qv_32))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (plus _v_35 _v_35))+(nat-to-int (mult (plus _v_35 _v_35) _t_36)))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((cubes (plus _qv_31 _qv_32))=(plus (cubes _qv_32) (cubes _qv_31))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (plus _v_35 _v_35))+(nat-to-int (mult (plus _v_35 _v_35) _t_36)))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((cubes (mult _qv_33 _qv_34))=(mult (cubes _qv_33) (cubes _qv_34))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (plus _v_35 _v_35))+(nat-to-int (mult (plus _v_35 _v_35) _t_36)))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((cubes (mult _qv_33 _qv_34))=(mult (cubes _qv_34) (cubes _qv_33))))
USE ASSUMPTION FAILED

  backtrack to: (((nat-to-int (plus _v_35 _v_35))+(nat-to-int (mult (plus _v_35 _v_35) _t_36)))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
  rewritten [13]: (((nat-to-int (plus _v_35 _v_35))+(nat-to-int (mult (plus _v_35 _v_35) _t_36)))=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
  Maximum recursion depth reached
CURRENT SUBGOAL (((nat-to-int (plus _v_35 _v_35))+(nat-to-int (mult (plus _v_35 _v_35) _t_36)))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (plus _v_35 _v_35))+(nat-to-int (mult (plus _v_35 _v_35) _t_36)))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_1 _qv_2)=(plus _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (plus _v_35 _v_35))+(nat-to-int (mult (plus _v_35 _v_35) _t_36)))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_3 _qv_4) _qv_5)=(plus _qv_3 (plus _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (plus _v_35 _v_35))+(nat-to-int (mult (plus _v_35 _v_35) _t_36)))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((mult _qv_6 _qv_7)=(mult _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (plus _v_35 _v_35))+(nat-to-int (mult (plus _v_35 _v_35) _t_36)))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((mult (mult _qv_8 _qv_9) _qv_10)=(mult _qv_8 (mult _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (plus _v_35 _v_35))+(nat-to-int (mult (plus _v_35 _v_35) _t_36)))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat)) ((tri (tri _qv_11))=_qv_11))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (plus _v_35 _v_35))+(nat-to-int (mult (plus _v_35 _v_35) _t_36)))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat)) ((cubes (cubes _qv_12))=_qv_12))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (plus _v_35 _v_35))+(nat-to-int (mult (plus _v_35 _v_35) _t_36)))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (plus _v_35 _v_35))+(nat-to-int (mult (plus _v_35 _v_35) _t_36)))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_14))=(nat-to-int _qv_14)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (plus _v_35 _v_35))+(nat-to-int (mult (plus _v_35 _v_35) _t_36)))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat)) ((nat-to-int (tri _qv_15))=(nat-to-int _qv_15)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (plus _v_35 _v_35))+(nat-to-int (mult (plus _v_35 _v_35) _t_36)))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat)) ((nat-to-int (cubes _qv_16))=(nat-to-int _qv_16)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (plus _v_35 _v_35))+(nat-to-int (mult (plus _v_35 _v_35) _t_36)))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((mult _qv_17 (plus _qv_18 _qv_19))=(plus (mult _qv_17 _qv_18) (mult _qv_17 _qv_19))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (plus _v_35 _v_35))+(nat-to-int (mult (plus _v_35 _v_35) _t_36)))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus _qv_20 (mult _qv_21 _qv_22))=(mult (plus _qv_20 _qv_21) (plus _qv_20 _qv_22))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (plus _v_35 _v_35))+(nat-to-int (mult (plus _v_35 _v_35) _t_36)))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_23 _qv_24))=(plus (succ _qv_23) (succ _qv_24))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (plus _v_35 _v_35))+(nat-to-int (mult (plus _v_35 _v_35) _t_36)))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_23 _qv_24))=(plus (succ _qv_24) (succ _qv_23))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (plus _v_35 _v_35))+(nat-to-int (mult (plus _v_35 _v_35) _t_36)))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (mult _qv_25 _qv_26))=(mult (succ _qv_25) (succ _qv_26))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (plus _v_35 _v_35))+(nat-to-int (mult (plus _v_35 _v_35) _t_36)))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (mult _qv_25 _qv_26))=(mult (succ _qv_26) (succ _qv_25))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (plus _v_35 _v_35))+(nat-to-int (mult (plus _v_35 _v_35) _t_36)))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((tri (plus _qv_27 _qv_28))=(plus (tri _qv_27) (tri _qv_28))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (plus _v_35 _v_35))+(nat-to-int (mult (plus _v_35 _v_35) _t_36)))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((tri (plus _qv_27 _qv_28))=(plus (tri _qv_28) (tri _qv_27))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (plus _v_35 _v_35))+(nat-to-int (mult (plus _v_35 _v_35) _t_36)))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((tri (mult _qv_29 _qv_30))=(mult (tri _qv_29) (tri _qv_30))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (plus _v_35 _v_35))+(nat-to-int (mult (plus _v_35 _v_35) _t_36)))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((tri (mult _qv_29 _qv_30))=(mult (tri _qv_30) (tri _qv_29))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (plus _v_35 _v_35))+(nat-to-int (mult (plus _v_35 _v_35) _t_36)))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((cubes (plus _qv_31 _qv_32))=(plus (cubes _qv_31) (cubes _qv_32))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (plus _v_35 _v_35))+(nat-to-int (mult (plus _v_35 _v_35) _t_36)))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((cubes (plus _qv_31 _qv_32))=(plus (cubes _qv_32) (cubes _qv_31))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (plus _v_35 _v_35))+(nat-to-int (mult (plus _v_35 _v_35) _t_36)))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((cubes (mult _qv_33 _qv_34))=(mult (cubes _qv_33) (cubes _qv_34))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (plus _v_35 _v_35))+(nat-to-int (mult (plus _v_35 _v_35) _t_36)))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((cubes (mult _qv_33 _qv_34))=(mult (cubes _qv_34) (cubes _qv_33))))
USE ASSUMPTION FAILED

  backtrack to: (((nat-to-int (plus _v_35 _v_35))+(nat-to-int (mult (plus _v_35 _v_35) _t_36)))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
  rewritten [15]: (((nat-to-int (plus _v_35 _v_35))+(nat-to-int (mult (plus _v_35 _v_35) _t_36)))=(nat-to-int (mult (succ (plus (succ _t_36) _t_36)) _v_35)))
  Maximum recursion depth reached
CURRENT SUBGOAL (((nat-to-int (plus _v_35 _v_35))+(nat-to-int (mult (plus _v_35 _v_35) _t_36)))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (plus _v_35 _v_35))+(nat-to-int (mult (plus _v_35 _v_35) _t_36)))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_1 _qv_2)=(plus _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (plus _v_35 _v_35))+(nat-to-int (mult (plus _v_35 _v_35) _t_36)))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_3 _qv_4) _qv_5)=(plus _qv_3 (plus _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (plus _v_35 _v_35))+(nat-to-int (mult (plus _v_35 _v_35) _t_36)))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((mult _qv_6 _qv_7)=(mult _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (plus _v_35 _v_35))+(nat-to-int (mult (plus _v_35 _v_35) _t_36)))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((mult (mult _qv_8 _qv_9) _qv_10)=(mult _qv_8 (mult _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (plus _v_35 _v_35))+(nat-to-int (mult (plus _v_35 _v_35) _t_36)))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat)) ((tri (tri _qv_11))=_qv_11))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (plus _v_35 _v_35))+(nat-to-int (mult (plus _v_35 _v_35) _t_36)))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat)) ((cubes (cubes _qv_12))=_qv_12))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (plus _v_35 _v_35))+(nat-to-int (mult (plus _v_35 _v_35) _t_36)))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (plus _v_35 _v_35))+(nat-to-int (mult (plus _v_35 _v_35) _t_36)))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_14))=(nat-to-int _qv_14)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (plus _v_35 _v_35))+(nat-to-int (mult (plus _v_35 _v_35) _t_36)))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat)) ((nat-to-int (tri _qv_15))=(nat-to-int _qv_15)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (plus _v_35 _v_35))+(nat-to-int (mult (plus _v_35 _v_35) _t_36)))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat)) ((nat-to-int (cubes _qv_16))=(nat-to-int _qv_16)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (plus _v_35 _v_35))+(nat-to-int (mult (plus _v_35 _v_35) _t_36)))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((mult _qv_17 (plus _qv_18 _qv_19))=(plus (mult _qv_17 _qv_18) (mult _qv_17 _qv_19))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (plus _v_35 _v_35))+(nat-to-int (mult (plus _v_35 _v_35) _t_36)))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus _qv_20 (mult _qv_21 _qv_22))=(mult (plus _qv_20 _qv_21) (plus _qv_20 _qv_22))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (plus _v_35 _v_35))+(nat-to-int (mult (plus _v_35 _v_35) _t_36)))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_23 _qv_24))=(plus (succ _qv_23) (succ _qv_24))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (plus _v_35 _v_35))+(nat-to-int (mult (plus _v_35 _v_35) _t_36)))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_23 _qv_24))=(plus (succ _qv_24) (succ _qv_23))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (plus _v_35 _v_35))+(nat-to-int (mult (plus _v_35 _v_35) _t_36)))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (mult _qv_25 _qv_26))=(mult (succ _qv_25) (succ _qv_26))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (plus _v_35 _v_35))+(nat-to-int (mult (plus _v_35 _v_35) _t_36)))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (mult _qv_25 _qv_26))=(mult (succ _qv_26) (succ _qv_25))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (plus _v_35 _v_35))+(nat-to-int (mult (plus _v_35 _v_35) _t_36)))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((tri (plus _qv_27 _qv_28))=(plus (tri _qv_27) (tri _qv_28))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (plus _v_35 _v_35))+(nat-to-int (mult (plus _v_35 _v_35) _t_36)))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((tri (plus _qv_27 _qv_28))=(plus (tri _qv_28) (tri _qv_27))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (plus _v_35 _v_35))+(nat-to-int (mult (plus _v_35 _v_35) _t_36)))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((tri (mult _qv_29 _qv_30))=(mult (tri _qv_29) (tri _qv_30))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (plus _v_35 _v_35))+(nat-to-int (mult (plus _v_35 _v_35) _t_36)))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((tri (mult _qv_29 _qv_30))=(mult (tri _qv_30) (tri _qv_29))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (plus _v_35 _v_35))+(nat-to-int (mult (plus _v_35 _v_35) _t_36)))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((cubes (plus _qv_31 _qv_32))=(plus (cubes _qv_31) (cubes _qv_32))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (plus _v_35 _v_35))+(nat-to-int (mult (plus _v_35 _v_35) _t_36)))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((cubes (plus _qv_31 _qv_32))=(plus (cubes _qv_32) (cubes _qv_31))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (plus _v_35 _v_35))+(nat-to-int (mult (plus _v_35 _v_35) _t_36)))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((cubes (mult _qv_33 _qv_34))=(mult (cubes _qv_33) (cubes _qv_34))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (plus _v_35 _v_35))+(nat-to-int (mult (plus _v_35 _v_35) _t_36)))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((cubes (mult _qv_33 _qv_34))=(mult (cubes _qv_34) (cubes _qv_33))))
USE ASSUMPTION FAILED

  backtrack to: (((nat-to-int (plus _v_35 _v_35))+(nat-to-int (mult (plus _v_35 _v_35) _t_36)))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
  rewritten [15]: (((nat-to-int (plus _v_35 _v_35))+(nat-to-int (mult _t_36 (plus _v_35 _v_35))))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
  Maximum recursion depth reached
CURRENT SUBGOAL (((nat-to-int (plus _v_35 _v_35))+(nat-to-int (mult (plus _v_35 _v_35) _t_36)))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (plus _v_35 _v_35))+(nat-to-int (mult (plus _v_35 _v_35) _t_36)))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_1 _qv_2)=(plus _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (plus _v_35 _v_35))+(nat-to-int (mult (plus _v_35 _v_35) _t_36)))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_3 _qv_4) _qv_5)=(plus _qv_3 (plus _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (plus _v_35 _v_35))+(nat-to-int (mult (plus _v_35 _v_35) _t_36)))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((mult _qv_6 _qv_7)=(mult _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (plus _v_35 _v_35))+(nat-to-int (mult (plus _v_35 _v_35) _t_36)))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((mult (mult _qv_8 _qv_9) _qv_10)=(mult _qv_8 (mult _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (plus _v_35 _v_35))+(nat-to-int (mult (plus _v_35 _v_35) _t_36)))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat)) ((tri (tri _qv_11))=_qv_11))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (plus _v_35 _v_35))+(nat-to-int (mult (plus _v_35 _v_35) _t_36)))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat)) ((cubes (cubes _qv_12))=_qv_12))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (plus _v_35 _v_35))+(nat-to-int (mult (plus _v_35 _v_35) _t_36)))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (plus _v_35 _v_35))+(nat-to-int (mult (plus _v_35 _v_35) _t_36)))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_14))=(nat-to-int _qv_14)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (plus _v_35 _v_35))+(nat-to-int (mult (plus _v_35 _v_35) _t_36)))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat)) ((nat-to-int (tri _qv_15))=(nat-to-int _qv_15)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (plus _v_35 _v_35))+(nat-to-int (mult (plus _v_35 _v_35) _t_36)))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat)) ((nat-to-int (cubes _qv_16))=(nat-to-int _qv_16)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (plus _v_35 _v_35))+(nat-to-int (mult (plus _v_35 _v_35) _t_36)))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((mult _qv_17 (plus _qv_18 _qv_19))=(plus (mult _qv_17 _qv_18) (mult _qv_17 _qv_19))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (plus _v_35 _v_35))+(nat-to-int (mult (plus _v_35 _v_35) _t_36)))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus _qv_20 (mult _qv_21 _qv_22))=(mult (plus _qv_20 _qv_21) (plus _qv_20 _qv_22))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (plus _v_35 _v_35))+(nat-to-int (mult (plus _v_35 _v_35) _t_36)))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_23 _qv_24))=(plus (succ _qv_23) (succ _qv_24))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (plus _v_35 _v_35))+(nat-to-int (mult (plus _v_35 _v_35) _t_36)))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_23 _qv_24))=(plus (succ _qv_24) (succ _qv_23))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (plus _v_35 _v_35))+(nat-to-int (mult (plus _v_35 _v_35) _t_36)))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (mult _qv_25 _qv_26))=(mult (succ _qv_25) (succ _qv_26))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (plus _v_35 _v_35))+(nat-to-int (mult (plus _v_35 _v_35) _t_36)))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (mult _qv_25 _qv_26))=(mult (succ _qv_26) (succ _qv_25))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (plus _v_35 _v_35))+(nat-to-int (mult (plus _v_35 _v_35) _t_36)))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((tri (plus _qv_27 _qv_28))=(plus (tri _qv_27) (tri _qv_28))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (plus _v_35 _v_35))+(nat-to-int (mult (plus _v_35 _v_35) _t_36)))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((tri (plus _qv_27 _qv_28))=(plus (tri _qv_28) (tri _qv_27))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (plus _v_35 _v_35))+(nat-to-int (mult (plus _v_35 _v_35) _t_36)))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((tri (mult _qv_29 _qv_30))=(mult (tri _qv_29) (tri _qv_30))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (plus _v_35 _v_35))+(nat-to-int (mult (plus _v_35 _v_35) _t_36)))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((tri (mult _qv_29 _qv_30))=(mult (tri _qv_30) (tri _qv_29))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (plus _v_35 _v_35))+(nat-to-int (mult (plus _v_35 _v_35) _t_36)))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((cubes (plus _qv_31 _qv_32))=(plus (cubes _qv_31) (cubes _qv_32))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (plus _v_35 _v_35))+(nat-to-int (mult (plus _v_35 _v_35) _t_36)))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((cubes (plus _qv_31 _qv_32))=(plus (cubes _qv_32) (cubes _qv_31))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (plus _v_35 _v_35))+(nat-to-int (mult (plus _v_35 _v_35) _t_36)))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((cubes (mult _qv_33 _qv_34))=(mult (cubes _qv_33) (cubes _qv_34))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (plus _v_35 _v_35))+(nat-to-int (mult (plus _v_35 _v_35) _t_36)))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((cubes (mult _qv_33 _qv_34))=(mult (cubes _qv_34) (cubes _qv_33))))
USE ASSUMPTION FAILED

  backtrack to: (((nat-to-int (plus _v_35 _v_35))+(nat-to-int (mult (plus _v_35 _v_35) _t_36)))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(nat-to-int (plus _v_35 _v_35)))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(nat-to-int (plus _v_35 _v_35)))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_1 _qv_2)=(plus _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(nat-to-int (plus _v_35 _v_35)))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_3 _qv_4) _qv_5)=(plus _qv_3 (plus _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(nat-to-int (plus _v_35 _v_35)))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((mult _qv_6 _qv_7)=(mult _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(nat-to-int (plus _v_35 _v_35)))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((mult (mult _qv_8 _qv_9) _qv_10)=(mult _qv_8 (mult _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(nat-to-int (plus _v_35 _v_35)))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat)) ((tri (tri _qv_11))=_qv_11))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(nat-to-int (plus _v_35 _v_35)))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat)) ((cubes (cubes _qv_12))=_qv_12))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(nat-to-int (plus _v_35 _v_35)))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(nat-to-int (plus _v_35 _v_35)))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_14))=(nat-to-int _qv_14)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(nat-to-int (plus _v_35 _v_35)))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat)) ((nat-to-int (tri _qv_15))=(nat-to-int _qv_15)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(nat-to-int (plus _v_35 _v_35)))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat)) ((nat-to-int (cubes _qv_16))=(nat-to-int _qv_16)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(nat-to-int (plus _v_35 _v_35)))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((mult _qv_17 (plus _qv_18 _qv_19))=(plus (mult _qv_17 _qv_18) (mult _qv_17 _qv_19))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(nat-to-int (plus _v_35 _v_35)))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus _qv_20 (mult _qv_21 _qv_22))=(mult (plus _qv_20 _qv_21) (plus _qv_20 _qv_22))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(nat-to-int (plus _v_35 _v_35)))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_23 _qv_24))=(plus (succ _qv_23) (succ _qv_24))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(nat-to-int (plus _v_35 _v_35)))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_23 _qv_24))=(plus (succ _qv_24) (succ _qv_23))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(nat-to-int (plus _v_35 _v_35)))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (mult _qv_25 _qv_26))=(mult (succ _qv_25) (succ _qv_26))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(nat-to-int (plus _v_35 _v_35)))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (mult _qv_25 _qv_26))=(mult (succ _qv_26) (succ _qv_25))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(nat-to-int (plus _v_35 _v_35)))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((tri (plus _qv_27 _qv_28))=(plus (tri _qv_27) (tri _qv_28))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(nat-to-int (plus _v_35 _v_35)))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((tri (plus _qv_27 _qv_28))=(plus (tri _qv_28) (tri _qv_27))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(nat-to-int (plus _v_35 _v_35)))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((tri (mult _qv_29 _qv_30))=(mult (tri _qv_29) (tri _qv_30))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(nat-to-int (plus _v_35 _v_35)))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((tri (mult _qv_29 _qv_30))=(mult (tri _qv_30) (tri _qv_29))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(nat-to-int (plus _v_35 _v_35)))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((cubes (plus _qv_31 _qv_32))=(plus (cubes _qv_31) (cubes _qv_32))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(nat-to-int (plus _v_35 _v_35)))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((cubes (plus _qv_31 _qv_32))=(plus (cubes _qv_32) (cubes _qv_31))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(nat-to-int (plus _v_35 _v_35)))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((cubes (mult _qv_33 _qv_34))=(mult (cubes _qv_33) (cubes _qv_34))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(nat-to-int (plus _v_35 _v_35)))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((cubes (mult _qv_33 _qv_34))=(mult (cubes _qv_34) (cubes _qv_33))))
USE ASSUMPTION FAILED

  backtrack to: (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(nat-to-int (plus _v_35 _v_35)))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
  rewritten [17]: (((nat-to-int (mult _v_35 (plus _t_36 _t_36)))+(nat-to-int (plus _v_35 _v_35)))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
  rewritten [2]: (((nat-to-int (plus _v_35 _v_35))+(nat-to-int (mult _v_35 (plus _t_36 _t_36))))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
  Maximum recursion depth reached
CURRENT SUBGOAL (((nat-to-int (plus _v_35 _v_35))+(nat-to-int (mult _v_35 (plus _t_36 _t_36))))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (plus _v_35 _v_35))+(nat-to-int (mult _v_35 (plus _t_36 _t_36))))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_1 _qv_2)=(plus _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (plus _v_35 _v_35))+(nat-to-int (mult _v_35 (plus _t_36 _t_36))))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_3 _qv_4) _qv_5)=(plus _qv_3 (plus _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (plus _v_35 _v_35))+(nat-to-int (mult _v_35 (plus _t_36 _t_36))))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((mult _qv_6 _qv_7)=(mult _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (plus _v_35 _v_35))+(nat-to-int (mult _v_35 (plus _t_36 _t_36))))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((mult (mult _qv_8 _qv_9) _qv_10)=(mult _qv_8 (mult _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (plus _v_35 _v_35))+(nat-to-int (mult _v_35 (plus _t_36 _t_36))))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat)) ((tri (tri _qv_11))=_qv_11))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (plus _v_35 _v_35))+(nat-to-int (mult _v_35 (plus _t_36 _t_36))))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat)) ((cubes (cubes _qv_12))=_qv_12))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (plus _v_35 _v_35))+(nat-to-int (mult _v_35 (plus _t_36 _t_36))))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (plus _v_35 _v_35))+(nat-to-int (mult _v_35 (plus _t_36 _t_36))))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_14))=(nat-to-int _qv_14)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (plus _v_35 _v_35))+(nat-to-int (mult _v_35 (plus _t_36 _t_36))))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat)) ((nat-to-int (tri _qv_15))=(nat-to-int _qv_15)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (plus _v_35 _v_35))+(nat-to-int (mult _v_35 (plus _t_36 _t_36))))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat)) ((nat-to-int (cubes _qv_16))=(nat-to-int _qv_16)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (plus _v_35 _v_35))+(nat-to-int (mult _v_35 (plus _t_36 _t_36))))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((mult _qv_17 (plus _qv_18 _qv_19))=(plus (mult _qv_17 _qv_18) (mult _qv_17 _qv_19))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (plus _v_35 _v_35))+(nat-to-int (mult _v_35 (plus _t_36 _t_36))))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus _qv_20 (mult _qv_21 _qv_22))=(mult (plus _qv_20 _qv_21) (plus _qv_20 _qv_22))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (plus _v_35 _v_35))+(nat-to-int (mult _v_35 (plus _t_36 _t_36))))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_23 _qv_24))=(plus (succ _qv_23) (succ _qv_24))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (plus _v_35 _v_35))+(nat-to-int (mult _v_35 (plus _t_36 _t_36))))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_23 _qv_24))=(plus (succ _qv_24) (succ _qv_23))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (plus _v_35 _v_35))+(nat-to-int (mult _v_35 (plus _t_36 _t_36))))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (mult _qv_25 _qv_26))=(mult (succ _qv_25) (succ _qv_26))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (plus _v_35 _v_35))+(nat-to-int (mult _v_35 (plus _t_36 _t_36))))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (mult _qv_25 _qv_26))=(mult (succ _qv_26) (succ _qv_25))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (plus _v_35 _v_35))+(nat-to-int (mult _v_35 (plus _t_36 _t_36))))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((tri (plus _qv_27 _qv_28))=(plus (tri _qv_27) (tri _qv_28))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (plus _v_35 _v_35))+(nat-to-int (mult _v_35 (plus _t_36 _t_36))))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((tri (plus _qv_27 _qv_28))=(plus (tri _qv_28) (tri _qv_27))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (plus _v_35 _v_35))+(nat-to-int (mult _v_35 (plus _t_36 _t_36))))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((tri (mult _qv_29 _qv_30))=(mult (tri _qv_29) (tri _qv_30))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (plus _v_35 _v_35))+(nat-to-int (mult _v_35 (plus _t_36 _t_36))))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((tri (mult _qv_29 _qv_30))=(mult (tri _qv_30) (tri _qv_29))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (plus _v_35 _v_35))+(nat-to-int (mult _v_35 (plus _t_36 _t_36))))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((cubes (plus _qv_31 _qv_32))=(plus (cubes _qv_31) (cubes _qv_32))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (plus _v_35 _v_35))+(nat-to-int (mult _v_35 (plus _t_36 _t_36))))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((cubes (plus _qv_31 _qv_32))=(plus (cubes _qv_32) (cubes _qv_31))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (plus _v_35 _v_35))+(nat-to-int (mult _v_35 (plus _t_36 _t_36))))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((cubes (mult _qv_33 _qv_34))=(mult (cubes _qv_33) (cubes _qv_34))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (plus _v_35 _v_35))+(nat-to-int (mult _v_35 (plus _t_36 _t_36))))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((cubes (mult _qv_33 _qv_34))=(mult (cubes _qv_34) (cubes _qv_33))))
USE ASSUMPTION FAILED

  backtrack to: (((nat-to-int (plus _v_35 _v_35))+(nat-to-int (mult _v_35 (plus _t_36 _t_36))))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
  rewritten [4]: (((nat-to-int (plus _v_35 _v_35))+(nat-to-int (mult _v_35 (plus _t_36 _t_36))))=(nat-to-int (mult _v_35 (succ (succ (plus _t_36 _t_36))))))
  Maximum recursion depth reached
CURRENT SUBGOAL (((nat-to-int (plus _v_35 _v_35))+(nat-to-int (mult _v_35 (plus _t_36 _t_36))))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (plus _v_35 _v_35))+(nat-to-int (mult _v_35 (plus _t_36 _t_36))))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_1 _qv_2)=(plus _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (plus _v_35 _v_35))+(nat-to-int (mult _v_35 (plus _t_36 _t_36))))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_3 _qv_4) _qv_5)=(plus _qv_3 (plus _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (plus _v_35 _v_35))+(nat-to-int (mult _v_35 (plus _t_36 _t_36))))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((mult _qv_6 _qv_7)=(mult _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (plus _v_35 _v_35))+(nat-to-int (mult _v_35 (plus _t_36 _t_36))))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((mult (mult _qv_8 _qv_9) _qv_10)=(mult _qv_8 (mult _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (plus _v_35 _v_35))+(nat-to-int (mult _v_35 (plus _t_36 _t_36))))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat)) ((tri (tri _qv_11))=_qv_11))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (plus _v_35 _v_35))+(nat-to-int (mult _v_35 (plus _t_36 _t_36))))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat)) ((cubes (cubes _qv_12))=_qv_12))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (plus _v_35 _v_35))+(nat-to-int (mult _v_35 (plus _t_36 _t_36))))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (plus _v_35 _v_35))+(nat-to-int (mult _v_35 (plus _t_36 _t_36))))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_14))=(nat-to-int _qv_14)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (plus _v_35 _v_35))+(nat-to-int (mult _v_35 (plus _t_36 _t_36))))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat)) ((nat-to-int (tri _qv_15))=(nat-to-int _qv_15)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (plus _v_35 _v_35))+(nat-to-int (mult _v_35 (plus _t_36 _t_36))))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat)) ((nat-to-int (cubes _qv_16))=(nat-to-int _qv_16)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (plus _v_35 _v_35))+(nat-to-int (mult _v_35 (plus _t_36 _t_36))))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((mult _qv_17 (plus _qv_18 _qv_19))=(plus (mult _qv_17 _qv_18) (mult _qv_17 _qv_19))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (plus _v_35 _v_35))+(nat-to-int (mult _v_35 (plus _t_36 _t_36))))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus _qv_20 (mult _qv_21 _qv_22))=(mult (plus _qv_20 _qv_21) (plus _qv_20 _qv_22))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (plus _v_35 _v_35))+(nat-to-int (mult _v_35 (plus _t_36 _t_36))))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_23 _qv_24))=(plus (succ _qv_23) (succ _qv_24))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (plus _v_35 _v_35))+(nat-to-int (mult _v_35 (plus _t_36 _t_36))))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_23 _qv_24))=(plus (succ _qv_24) (succ _qv_23))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (plus _v_35 _v_35))+(nat-to-int (mult _v_35 (plus _t_36 _t_36))))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (mult _qv_25 _qv_26))=(mult (succ _qv_25) (succ _qv_26))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (plus _v_35 _v_35))+(nat-to-int (mult _v_35 (plus _t_36 _t_36))))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (mult _qv_25 _qv_26))=(mult (succ _qv_26) (succ _qv_25))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (plus _v_35 _v_35))+(nat-to-int (mult _v_35 (plus _t_36 _t_36))))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((tri (plus _qv_27 _qv_28))=(plus (tri _qv_27) (tri _qv_28))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (plus _v_35 _v_35))+(nat-to-int (mult _v_35 (plus _t_36 _t_36))))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((tri (plus _qv_27 _qv_28))=(plus (tri _qv_28) (tri _qv_27))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (plus _v_35 _v_35))+(nat-to-int (mult _v_35 (plus _t_36 _t_36))))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((tri (mult _qv_29 _qv_30))=(mult (tri _qv_29) (tri _qv_30))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (plus _v_35 _v_35))+(nat-to-int (mult _v_35 (plus _t_36 _t_36))))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((tri (mult _qv_29 _qv_30))=(mult (tri _qv_30) (tri _qv_29))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (plus _v_35 _v_35))+(nat-to-int (mult _v_35 (plus _t_36 _t_36))))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((cubes (plus _qv_31 _qv_32))=(plus (cubes _qv_31) (cubes _qv_32))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (plus _v_35 _v_35))+(nat-to-int (mult _v_35 (plus _t_36 _t_36))))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((cubes (plus _qv_31 _qv_32))=(plus (cubes _qv_32) (cubes _qv_31))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (plus _v_35 _v_35))+(nat-to-int (mult _v_35 (plus _t_36 _t_36))))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((cubes (mult _qv_33 _qv_34))=(mult (cubes _qv_33) (cubes _qv_34))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (plus _v_35 _v_35))+(nat-to-int (mult _v_35 (plus _t_36 _t_36))))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((cubes (mult _qv_33 _qv_34))=(mult (cubes _qv_34) (cubes _qv_33))))
USE ASSUMPTION FAILED

  backtrack to: (((nat-to-int (plus _v_35 _v_35))+(nat-to-int (mult _v_35 (plus _t_36 _t_36))))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
  rewritten [12]: ((((nat-to-int _v_35)+(nat-to-int _v_35))+(nat-to-int (mult _v_35 (plus _t_36 _t_36))))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
  Maximum recursion depth reached
CURRENT SUBGOAL (((nat-to-int (plus _v_35 _v_35))+(nat-to-int (mult _v_35 (plus _t_36 _t_36))))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (plus _v_35 _v_35))+(nat-to-int (mult _v_35 (plus _t_36 _t_36))))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_1 _qv_2)=(plus _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (plus _v_35 _v_35))+(nat-to-int (mult _v_35 (plus _t_36 _t_36))))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_3 _qv_4) _qv_5)=(plus _qv_3 (plus _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (plus _v_35 _v_35))+(nat-to-int (mult _v_35 (plus _t_36 _t_36))))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((mult _qv_6 _qv_7)=(mult _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (plus _v_35 _v_35))+(nat-to-int (mult _v_35 (plus _t_36 _t_36))))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((mult (mult _qv_8 _qv_9) _qv_10)=(mult _qv_8 (mult _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (plus _v_35 _v_35))+(nat-to-int (mult _v_35 (plus _t_36 _t_36))))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat)) ((tri (tri _qv_11))=_qv_11))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (plus _v_35 _v_35))+(nat-to-int (mult _v_35 (plus _t_36 _t_36))))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat)) ((cubes (cubes _qv_12))=_qv_12))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (plus _v_35 _v_35))+(nat-to-int (mult _v_35 (plus _t_36 _t_36))))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (plus _v_35 _v_35))+(nat-to-int (mult _v_35 (plus _t_36 _t_36))))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_14))=(nat-to-int _qv_14)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (plus _v_35 _v_35))+(nat-to-int (mult _v_35 (plus _t_36 _t_36))))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat)) ((nat-to-int (tri _qv_15))=(nat-to-int _qv_15)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (plus _v_35 _v_35))+(nat-to-int (mult _v_35 (plus _t_36 _t_36))))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat)) ((nat-to-int (cubes _qv_16))=(nat-to-int _qv_16)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (plus _v_35 _v_35))+(nat-to-int (mult _v_35 (plus _t_36 _t_36))))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((mult _qv_17 (plus _qv_18 _qv_19))=(plus (mult _qv_17 _qv_18) (mult _qv_17 _qv_19))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (plus _v_35 _v_35))+(nat-to-int (mult _v_35 (plus _t_36 _t_36))))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus _qv_20 (mult _qv_21 _qv_22))=(mult (plus _qv_20 _qv_21) (plus _qv_20 _qv_22))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (plus _v_35 _v_35))+(nat-to-int (mult _v_35 (plus _t_36 _t_36))))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_23 _qv_24))=(plus (succ _qv_23) (succ _qv_24))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (plus _v_35 _v_35))+(nat-to-int (mult _v_35 (plus _t_36 _t_36))))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_23 _qv_24))=(plus (succ _qv_24) (succ _qv_23))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (plus _v_35 _v_35))+(nat-to-int (mult _v_35 (plus _t_36 _t_36))))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (mult _qv_25 _qv_26))=(mult (succ _qv_25) (succ _qv_26))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (plus _v_35 _v_35))+(nat-to-int (mult _v_35 (plus _t_36 _t_36))))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (mult _qv_25 _qv_26))=(mult (succ _qv_26) (succ _qv_25))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (plus _v_35 _v_35))+(nat-to-int (mult _v_35 (plus _t_36 _t_36))))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((tri (plus _qv_27 _qv_28))=(plus (tri _qv_27) (tri _qv_28))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (plus _v_35 _v_35))+(nat-to-int (mult _v_35 (plus _t_36 _t_36))))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((tri (plus _qv_27 _qv_28))=(plus (tri _qv_28) (tri _qv_27))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (plus _v_35 _v_35))+(nat-to-int (mult _v_35 (plus _t_36 _t_36))))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((tri (mult _qv_29 _qv_30))=(mult (tri _qv_29) (tri _qv_30))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (plus _v_35 _v_35))+(nat-to-int (mult _v_35 (plus _t_36 _t_36))))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((tri (mult _qv_29 _qv_30))=(mult (tri _qv_30) (tri _qv_29))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (plus _v_35 _v_35))+(nat-to-int (mult _v_35 (plus _t_36 _t_36))))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((cubes (plus _qv_31 _qv_32))=(plus (cubes _qv_31) (cubes _qv_32))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (plus _v_35 _v_35))+(nat-to-int (mult _v_35 (plus _t_36 _t_36))))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((cubes (plus _qv_31 _qv_32))=(plus (cubes _qv_32) (cubes _qv_31))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (plus _v_35 _v_35))+(nat-to-int (mult _v_35 (plus _t_36 _t_36))))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((cubes (mult _qv_33 _qv_34))=(mult (cubes _qv_33) (cubes _qv_34))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (plus _v_35 _v_35))+(nat-to-int (mult _v_35 (plus _t_36 _t_36))))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((cubes (mult _qv_33 _qv_34))=(mult (cubes _qv_34) (cubes _qv_33))))
USE ASSUMPTION FAILED

  backtrack to: (((nat-to-int (plus _v_35 _v_35))+(nat-to-int (mult _v_35 (plus _t_36 _t_36))))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
  rewritten [13]: (((nat-to-int (plus _v_35 _v_35))+(nat-to-int (mult _v_35 (plus _t_36 _t_36))))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
  Maximum recursion depth reached
CURRENT SUBGOAL (((nat-to-int (plus _v_35 _v_35))+(nat-to-int (mult _v_35 (plus _t_36 _t_36))))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (plus _v_35 _v_35))+(nat-to-int (mult _v_35 (plus _t_36 _t_36))))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_1 _qv_2)=(plus _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (plus _v_35 _v_35))+(nat-to-int (mult _v_35 (plus _t_36 _t_36))))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_3 _qv_4) _qv_5)=(plus _qv_3 (plus _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (plus _v_35 _v_35))+(nat-to-int (mult _v_35 (plus _t_36 _t_36))))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((mult _qv_6 _qv_7)=(mult _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (plus _v_35 _v_35))+(nat-to-int (mult _v_35 (plus _t_36 _t_36))))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((mult (mult _qv_8 _qv_9) _qv_10)=(mult _qv_8 (mult _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (plus _v_35 _v_35))+(nat-to-int (mult _v_35 (plus _t_36 _t_36))))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat)) ((tri (tri _qv_11))=_qv_11))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (plus _v_35 _v_35))+(nat-to-int (mult _v_35 (plus _t_36 _t_36))))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat)) ((cubes (cubes _qv_12))=_qv_12))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (plus _v_35 _v_35))+(nat-to-int (mult _v_35 (plus _t_36 _t_36))))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (plus _v_35 _v_35))+(nat-to-int (mult _v_35 (plus _t_36 _t_36))))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_14))=(nat-to-int _qv_14)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (plus _v_35 _v_35))+(nat-to-int (mult _v_35 (plus _t_36 _t_36))))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat)) ((nat-to-int (tri _qv_15))=(nat-to-int _qv_15)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (plus _v_35 _v_35))+(nat-to-int (mult _v_35 (plus _t_36 _t_36))))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat)) ((nat-to-int (cubes _qv_16))=(nat-to-int _qv_16)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (plus _v_35 _v_35))+(nat-to-int (mult _v_35 (plus _t_36 _t_36))))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((mult _qv_17 (plus _qv_18 _qv_19))=(plus (mult _qv_17 _qv_18) (mult _qv_17 _qv_19))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (plus _v_35 _v_35))+(nat-to-int (mult _v_35 (plus _t_36 _t_36))))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus _qv_20 (mult _qv_21 _qv_22))=(mult (plus _qv_20 _qv_21) (plus _qv_20 _qv_22))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (plus _v_35 _v_35))+(nat-to-int (mult _v_35 (plus _t_36 _t_36))))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_23 _qv_24))=(plus (succ _qv_23) (succ _qv_24))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (plus _v_35 _v_35))+(nat-to-int (mult _v_35 (plus _t_36 _t_36))))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_23 _qv_24))=(plus (succ _qv_24) (succ _qv_23))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (plus _v_35 _v_35))+(nat-to-int (mult _v_35 (plus _t_36 _t_36))))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (mult _qv_25 _qv_26))=(mult (succ _qv_25) (succ _qv_26))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (plus _v_35 _v_35))+(nat-to-int (mult _v_35 (plus _t_36 _t_36))))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (mult _qv_25 _qv_26))=(mult (succ _qv_26) (succ _qv_25))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (plus _v_35 _v_35))+(nat-to-int (mult _v_35 (plus _t_36 _t_36))))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((tri (plus _qv_27 _qv_28))=(plus (tri _qv_27) (tri _qv_28))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (plus _v_35 _v_35))+(nat-to-int (mult _v_35 (plus _t_36 _t_36))))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((tri (plus _qv_27 _qv_28))=(plus (tri _qv_28) (tri _qv_27))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (plus _v_35 _v_35))+(nat-to-int (mult _v_35 (plus _t_36 _t_36))))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((tri (mult _qv_29 _qv_30))=(mult (tri _qv_29) (tri _qv_30))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (plus _v_35 _v_35))+(nat-to-int (mult _v_35 (plus _t_36 _t_36))))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((tri (mult _qv_29 _qv_30))=(mult (tri _qv_30) (tri _qv_29))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (plus _v_35 _v_35))+(nat-to-int (mult _v_35 (plus _t_36 _t_36))))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((cubes (plus _qv_31 _qv_32))=(plus (cubes _qv_31) (cubes _qv_32))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (plus _v_35 _v_35))+(nat-to-int (mult _v_35 (plus _t_36 _t_36))))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((cubes (plus _qv_31 _qv_32))=(plus (cubes _qv_32) (cubes _qv_31))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (plus _v_35 _v_35))+(nat-to-int (mult _v_35 (plus _t_36 _t_36))))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((cubes (mult _qv_33 _qv_34))=(mult (cubes _qv_33) (cubes _qv_34))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (plus _v_35 _v_35))+(nat-to-int (mult _v_35 (plus _t_36 _t_36))))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((cubes (mult _qv_33 _qv_34))=(mult (cubes _qv_34) (cubes _qv_33))))
USE ASSUMPTION FAILED

  backtrack to: (((nat-to-int (plus _v_35 _v_35))+(nat-to-int (mult _v_35 (plus _t_36 _t_36))))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
  rewritten [13]: (((nat-to-int (plus _v_35 _v_35))+(nat-to-int (mult _v_35 (plus _t_36 _t_36))))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
  Maximum recursion depth reached
CURRENT SUBGOAL (((nat-to-int (plus _v_35 _v_35))+(nat-to-int (mult _v_35 (plus _t_36 _t_36))))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (plus _v_35 _v_35))+(nat-to-int (mult _v_35 (plus _t_36 _t_36))))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_1 _qv_2)=(plus _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (plus _v_35 _v_35))+(nat-to-int (mult _v_35 (plus _t_36 _t_36))))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_3 _qv_4) _qv_5)=(plus _qv_3 (plus _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (plus _v_35 _v_35))+(nat-to-int (mult _v_35 (plus _t_36 _t_36))))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((mult _qv_6 _qv_7)=(mult _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (plus _v_35 _v_35))+(nat-to-int (mult _v_35 (plus _t_36 _t_36))))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((mult (mult _qv_8 _qv_9) _qv_10)=(mult _qv_8 (mult _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (plus _v_35 _v_35))+(nat-to-int (mult _v_35 (plus _t_36 _t_36))))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat)) ((tri (tri _qv_11))=_qv_11))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (plus _v_35 _v_35))+(nat-to-int (mult _v_35 (plus _t_36 _t_36))))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat)) ((cubes (cubes _qv_12))=_qv_12))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (plus _v_35 _v_35))+(nat-to-int (mult _v_35 (plus _t_36 _t_36))))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (plus _v_35 _v_35))+(nat-to-int (mult _v_35 (plus _t_36 _t_36))))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_14))=(nat-to-int _qv_14)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (plus _v_35 _v_35))+(nat-to-int (mult _v_35 (plus _t_36 _t_36))))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat)) ((nat-to-int (tri _qv_15))=(nat-to-int _qv_15)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (plus _v_35 _v_35))+(nat-to-int (mult _v_35 (plus _t_36 _t_36))))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat)) ((nat-to-int (cubes _qv_16))=(nat-to-int _qv_16)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (plus _v_35 _v_35))+(nat-to-int (mult _v_35 (plus _t_36 _t_36))))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((mult _qv_17 (plus _qv_18 _qv_19))=(plus (mult _qv_17 _qv_18) (mult _qv_17 _qv_19))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (plus _v_35 _v_35))+(nat-to-int (mult _v_35 (plus _t_36 _t_36))))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus _qv_20 (mult _qv_21 _qv_22))=(mult (plus _qv_20 _qv_21) (plus _qv_20 _qv_22))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (plus _v_35 _v_35))+(nat-to-int (mult _v_35 (plus _t_36 _t_36))))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_23 _qv_24))=(plus (succ _qv_23) (succ _qv_24))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (plus _v_35 _v_35))+(nat-to-int (mult _v_35 (plus _t_36 _t_36))))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_23 _qv_24))=(plus (succ _qv_24) (succ _qv_23))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (plus _v_35 _v_35))+(nat-to-int (mult _v_35 (plus _t_36 _t_36))))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (mult _qv_25 _qv_26))=(mult (succ _qv_25) (succ _qv_26))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (plus _v_35 _v_35))+(nat-to-int (mult _v_35 (plus _t_36 _t_36))))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (mult _qv_25 _qv_26))=(mult (succ _qv_26) (succ _qv_25))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (plus _v_35 _v_35))+(nat-to-int (mult _v_35 (plus _t_36 _t_36))))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((tri (plus _qv_27 _qv_28))=(plus (tri _qv_27) (tri _qv_28))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (plus _v_35 _v_35))+(nat-to-int (mult _v_35 (plus _t_36 _t_36))))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((tri (plus _qv_27 _qv_28))=(plus (tri _qv_28) (tri _qv_27))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (plus _v_35 _v_35))+(nat-to-int (mult _v_35 (plus _t_36 _t_36))))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((tri (mult _qv_29 _qv_30))=(mult (tri _qv_29) (tri _qv_30))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (plus _v_35 _v_35))+(nat-to-int (mult _v_35 (plus _t_36 _t_36))))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((tri (mult _qv_29 _qv_30))=(mult (tri _qv_30) (tri _qv_29))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (plus _v_35 _v_35))+(nat-to-int (mult _v_35 (plus _t_36 _t_36))))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((cubes (plus _qv_31 _qv_32))=(plus (cubes _qv_31) (cubes _qv_32))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (plus _v_35 _v_35))+(nat-to-int (mult _v_35 (plus _t_36 _t_36))))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((cubes (plus _qv_31 _qv_32))=(plus (cubes _qv_32) (cubes _qv_31))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (plus _v_35 _v_35))+(nat-to-int (mult _v_35 (plus _t_36 _t_36))))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((cubes (mult _qv_33 _qv_34))=(mult (cubes _qv_33) (cubes _qv_34))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (plus _v_35 _v_35))+(nat-to-int (mult _v_35 (plus _t_36 _t_36))))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((cubes (mult _qv_33 _qv_34))=(mult (cubes _qv_34) (cubes _qv_33))))
USE ASSUMPTION FAILED

  backtrack to: (((nat-to-int (plus _v_35 _v_35))+(nat-to-int (mult _v_35 (plus _t_36 _t_36))))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
  rewritten [13]: (((nat-to-int (plus _v_35 _v_35))+(nat-to-int (mult _v_35 (plus _t_36 _t_36))))=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
  Maximum recursion depth reached
CURRENT SUBGOAL (((nat-to-int (plus _v_35 _v_35))+(nat-to-int (mult _v_35 (plus _t_36 _t_36))))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (plus _v_35 _v_35))+(nat-to-int (mult _v_35 (plus _t_36 _t_36))))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_1 _qv_2)=(plus _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (plus _v_35 _v_35))+(nat-to-int (mult _v_35 (plus _t_36 _t_36))))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_3 _qv_4) _qv_5)=(plus _qv_3 (plus _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (plus _v_35 _v_35))+(nat-to-int (mult _v_35 (plus _t_36 _t_36))))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((mult _qv_6 _qv_7)=(mult _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (plus _v_35 _v_35))+(nat-to-int (mult _v_35 (plus _t_36 _t_36))))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((mult (mult _qv_8 _qv_9) _qv_10)=(mult _qv_8 (mult _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (plus _v_35 _v_35))+(nat-to-int (mult _v_35 (plus _t_36 _t_36))))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat)) ((tri (tri _qv_11))=_qv_11))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (plus _v_35 _v_35))+(nat-to-int (mult _v_35 (plus _t_36 _t_36))))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat)) ((cubes (cubes _qv_12))=_qv_12))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (plus _v_35 _v_35))+(nat-to-int (mult _v_35 (plus _t_36 _t_36))))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (plus _v_35 _v_35))+(nat-to-int (mult _v_35 (plus _t_36 _t_36))))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_14))=(nat-to-int _qv_14)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (plus _v_35 _v_35))+(nat-to-int (mult _v_35 (plus _t_36 _t_36))))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat)) ((nat-to-int (tri _qv_15))=(nat-to-int _qv_15)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (plus _v_35 _v_35))+(nat-to-int (mult _v_35 (plus _t_36 _t_36))))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat)) ((nat-to-int (cubes _qv_16))=(nat-to-int _qv_16)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (plus _v_35 _v_35))+(nat-to-int (mult _v_35 (plus _t_36 _t_36))))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((mult _qv_17 (plus _qv_18 _qv_19))=(plus (mult _qv_17 _qv_18) (mult _qv_17 _qv_19))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (plus _v_35 _v_35))+(nat-to-int (mult _v_35 (plus _t_36 _t_36))))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus _qv_20 (mult _qv_21 _qv_22))=(mult (plus _qv_20 _qv_21) (plus _qv_20 _qv_22))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (plus _v_35 _v_35))+(nat-to-int (mult _v_35 (plus _t_36 _t_36))))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_23 _qv_24))=(plus (succ _qv_23) (succ _qv_24))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (plus _v_35 _v_35))+(nat-to-int (mult _v_35 (plus _t_36 _t_36))))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_23 _qv_24))=(plus (succ _qv_24) (succ _qv_23))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (plus _v_35 _v_35))+(nat-to-int (mult _v_35 (plus _t_36 _t_36))))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (mult _qv_25 _qv_26))=(mult (succ _qv_25) (succ _qv_26))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (plus _v_35 _v_35))+(nat-to-int (mult _v_35 (plus _t_36 _t_36))))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (mult _qv_25 _qv_26))=(mult (succ _qv_26) (succ _qv_25))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (plus _v_35 _v_35))+(nat-to-int (mult _v_35 (plus _t_36 _t_36))))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((tri (plus _qv_27 _qv_28))=(plus (tri _qv_27) (tri _qv_28))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (plus _v_35 _v_35))+(nat-to-int (mult _v_35 (plus _t_36 _t_36))))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((tri (plus _qv_27 _qv_28))=(plus (tri _qv_28) (tri _qv_27))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (plus _v_35 _v_35))+(nat-to-int (mult _v_35 (plus _t_36 _t_36))))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((tri (mult _qv_29 _qv_30))=(mult (tri _qv_29) (tri _qv_30))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (plus _v_35 _v_35))+(nat-to-int (mult _v_35 (plus _t_36 _t_36))))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((tri (mult _qv_29 _qv_30))=(mult (tri _qv_30) (tri _qv_29))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (plus _v_35 _v_35))+(nat-to-int (mult _v_35 (plus _t_36 _t_36))))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((cubes (plus _qv_31 _qv_32))=(plus (cubes _qv_31) (cubes _qv_32))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (plus _v_35 _v_35))+(nat-to-int (mult _v_35 (plus _t_36 _t_36))))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((cubes (plus _qv_31 _qv_32))=(plus (cubes _qv_32) (cubes _qv_31))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (plus _v_35 _v_35))+(nat-to-int (mult _v_35 (plus _t_36 _t_36))))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((cubes (mult _qv_33 _qv_34))=(mult (cubes _qv_33) (cubes _qv_34))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (plus _v_35 _v_35))+(nat-to-int (mult _v_35 (plus _t_36 _t_36))))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((cubes (mult _qv_33 _qv_34))=(mult (cubes _qv_34) (cubes _qv_33))))
USE ASSUMPTION FAILED

  backtrack to: (((nat-to-int (plus _v_35 _v_35))+(nat-to-int (mult _v_35 (plus _t_36 _t_36))))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
  rewritten [15]: (((nat-to-int (plus _v_35 _v_35))+(nat-to-int (mult (plus _t_36 _t_36) _v_35)))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
  Maximum recursion depth reached
CURRENT SUBGOAL (((nat-to-int (plus _v_35 _v_35))+(nat-to-int (mult _v_35 (plus _t_36 _t_36))))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (plus _v_35 _v_35))+(nat-to-int (mult _v_35 (plus _t_36 _t_36))))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_1 _qv_2)=(plus _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (plus _v_35 _v_35))+(nat-to-int (mult _v_35 (plus _t_36 _t_36))))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_3 _qv_4) _qv_5)=(plus _qv_3 (plus _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (plus _v_35 _v_35))+(nat-to-int (mult _v_35 (plus _t_36 _t_36))))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((mult _qv_6 _qv_7)=(mult _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (plus _v_35 _v_35))+(nat-to-int (mult _v_35 (plus _t_36 _t_36))))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((mult (mult _qv_8 _qv_9) _qv_10)=(mult _qv_8 (mult _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (plus _v_35 _v_35))+(nat-to-int (mult _v_35 (plus _t_36 _t_36))))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat)) ((tri (tri _qv_11))=_qv_11))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (plus _v_35 _v_35))+(nat-to-int (mult _v_35 (plus _t_36 _t_36))))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat)) ((cubes (cubes _qv_12))=_qv_12))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (plus _v_35 _v_35))+(nat-to-int (mult _v_35 (plus _t_36 _t_36))))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (plus _v_35 _v_35))+(nat-to-int (mult _v_35 (plus _t_36 _t_36))))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_14))=(nat-to-int _qv_14)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (plus _v_35 _v_35))+(nat-to-int (mult _v_35 (plus _t_36 _t_36))))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat)) ((nat-to-int (tri _qv_15))=(nat-to-int _qv_15)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (plus _v_35 _v_35))+(nat-to-int (mult _v_35 (plus _t_36 _t_36))))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat)) ((nat-to-int (cubes _qv_16))=(nat-to-int _qv_16)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (plus _v_35 _v_35))+(nat-to-int (mult _v_35 (plus _t_36 _t_36))))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((mult _qv_17 (plus _qv_18 _qv_19))=(plus (mult _qv_17 _qv_18) (mult _qv_17 _qv_19))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (plus _v_35 _v_35))+(nat-to-int (mult _v_35 (plus _t_36 _t_36))))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus _qv_20 (mult _qv_21 _qv_22))=(mult (plus _qv_20 _qv_21) (plus _qv_20 _qv_22))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (plus _v_35 _v_35))+(nat-to-int (mult _v_35 (plus _t_36 _t_36))))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_23 _qv_24))=(plus (succ _qv_23) (succ _qv_24))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (plus _v_35 _v_35))+(nat-to-int (mult _v_35 (plus _t_36 _t_36))))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_23 _qv_24))=(plus (succ _qv_24) (succ _qv_23))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (plus _v_35 _v_35))+(nat-to-int (mult _v_35 (plus _t_36 _t_36))))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (mult _qv_25 _qv_26))=(mult (succ _qv_25) (succ _qv_26))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (plus _v_35 _v_35))+(nat-to-int (mult _v_35 (plus _t_36 _t_36))))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (mult _qv_25 _qv_26))=(mult (succ _qv_26) (succ _qv_25))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (plus _v_35 _v_35))+(nat-to-int (mult _v_35 (plus _t_36 _t_36))))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((tri (plus _qv_27 _qv_28))=(plus (tri _qv_27) (tri _qv_28))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (plus _v_35 _v_35))+(nat-to-int (mult _v_35 (plus _t_36 _t_36))))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((tri (plus _qv_27 _qv_28))=(plus (tri _qv_28) (tri _qv_27))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (plus _v_35 _v_35))+(nat-to-int (mult _v_35 (plus _t_36 _t_36))))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((tri (mult _qv_29 _qv_30))=(mult (tri _qv_29) (tri _qv_30))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (plus _v_35 _v_35))+(nat-to-int (mult _v_35 (plus _t_36 _t_36))))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((tri (mult _qv_29 _qv_30))=(mult (tri _qv_30) (tri _qv_29))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (plus _v_35 _v_35))+(nat-to-int (mult _v_35 (plus _t_36 _t_36))))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((cubes (plus _qv_31 _qv_32))=(plus (cubes _qv_31) (cubes _qv_32))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (plus _v_35 _v_35))+(nat-to-int (mult _v_35 (plus _t_36 _t_36))))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((cubes (plus _qv_31 _qv_32))=(plus (cubes _qv_32) (cubes _qv_31))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (plus _v_35 _v_35))+(nat-to-int (mult _v_35 (plus _t_36 _t_36))))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((cubes (mult _qv_33 _qv_34))=(mult (cubes _qv_33) (cubes _qv_34))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (plus _v_35 _v_35))+(nat-to-int (mult _v_35 (plus _t_36 _t_36))))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((cubes (mult _qv_33 _qv_34))=(mult (cubes _qv_34) (cubes _qv_33))))
USE ASSUMPTION FAILED

  backtrack to: (((nat-to-int (plus _v_35 _v_35))+(nat-to-int (mult _v_35 (plus _t_36 _t_36))))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
  rewritten [15]: (((nat-to-int (plus _v_35 _v_35))+(nat-to-int (mult _v_35 (plus _t_36 _t_36))))=(nat-to-int (mult (succ (plus (succ _t_36) _t_36)) _v_35)))
  Maximum recursion depth reached
CURRENT SUBGOAL (((nat-to-int (plus _v_35 _v_35))+(nat-to-int (mult _v_35 (plus _t_36 _t_36))))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (plus _v_35 _v_35))+(nat-to-int (mult _v_35 (plus _t_36 _t_36))))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_1 _qv_2)=(plus _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (plus _v_35 _v_35))+(nat-to-int (mult _v_35 (plus _t_36 _t_36))))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_3 _qv_4) _qv_5)=(plus _qv_3 (plus _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (plus _v_35 _v_35))+(nat-to-int (mult _v_35 (plus _t_36 _t_36))))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((mult _qv_6 _qv_7)=(mult _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (plus _v_35 _v_35))+(nat-to-int (mult _v_35 (plus _t_36 _t_36))))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((mult (mult _qv_8 _qv_9) _qv_10)=(mult _qv_8 (mult _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (plus _v_35 _v_35))+(nat-to-int (mult _v_35 (plus _t_36 _t_36))))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat)) ((tri (tri _qv_11))=_qv_11))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (plus _v_35 _v_35))+(nat-to-int (mult _v_35 (plus _t_36 _t_36))))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat)) ((cubes (cubes _qv_12))=_qv_12))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (plus _v_35 _v_35))+(nat-to-int (mult _v_35 (plus _t_36 _t_36))))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (plus _v_35 _v_35))+(nat-to-int (mult _v_35 (plus _t_36 _t_36))))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_14))=(nat-to-int _qv_14)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (plus _v_35 _v_35))+(nat-to-int (mult _v_35 (plus _t_36 _t_36))))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat)) ((nat-to-int (tri _qv_15))=(nat-to-int _qv_15)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (plus _v_35 _v_35))+(nat-to-int (mult _v_35 (plus _t_36 _t_36))))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat)) ((nat-to-int (cubes _qv_16))=(nat-to-int _qv_16)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (plus _v_35 _v_35))+(nat-to-int (mult _v_35 (plus _t_36 _t_36))))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((mult _qv_17 (plus _qv_18 _qv_19))=(plus (mult _qv_17 _qv_18) (mult _qv_17 _qv_19))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (plus _v_35 _v_35))+(nat-to-int (mult _v_35 (plus _t_36 _t_36))))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus _qv_20 (mult _qv_21 _qv_22))=(mult (plus _qv_20 _qv_21) (plus _qv_20 _qv_22))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (plus _v_35 _v_35))+(nat-to-int (mult _v_35 (plus _t_36 _t_36))))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_23 _qv_24))=(plus (succ _qv_23) (succ _qv_24))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (plus _v_35 _v_35))+(nat-to-int (mult _v_35 (plus _t_36 _t_36))))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_23 _qv_24))=(plus (succ _qv_24) (succ _qv_23))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (plus _v_35 _v_35))+(nat-to-int (mult _v_35 (plus _t_36 _t_36))))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (mult _qv_25 _qv_26))=(mult (succ _qv_25) (succ _qv_26))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (plus _v_35 _v_35))+(nat-to-int (mult _v_35 (plus _t_36 _t_36))))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (mult _qv_25 _qv_26))=(mult (succ _qv_26) (succ _qv_25))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (plus _v_35 _v_35))+(nat-to-int (mult _v_35 (plus _t_36 _t_36))))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((tri (plus _qv_27 _qv_28))=(plus (tri _qv_27) (tri _qv_28))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (plus _v_35 _v_35))+(nat-to-int (mult _v_35 (plus _t_36 _t_36))))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((tri (plus _qv_27 _qv_28))=(plus (tri _qv_28) (tri _qv_27))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (plus _v_35 _v_35))+(nat-to-int (mult _v_35 (plus _t_36 _t_36))))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((tri (mult _qv_29 _qv_30))=(mult (tri _qv_29) (tri _qv_30))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (plus _v_35 _v_35))+(nat-to-int (mult _v_35 (plus _t_36 _t_36))))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((tri (mult _qv_29 _qv_30))=(mult (tri _qv_30) (tri _qv_29))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (plus _v_35 _v_35))+(nat-to-int (mult _v_35 (plus _t_36 _t_36))))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((cubes (plus _qv_31 _qv_32))=(plus (cubes _qv_31) (cubes _qv_32))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (plus _v_35 _v_35))+(nat-to-int (mult _v_35 (plus _t_36 _t_36))))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((cubes (plus _qv_31 _qv_32))=(plus (cubes _qv_32) (cubes _qv_31))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (plus _v_35 _v_35))+(nat-to-int (mult _v_35 (plus _t_36 _t_36))))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((cubes (mult _qv_33 _qv_34))=(mult (cubes _qv_33) (cubes _qv_34))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (plus _v_35 _v_35))+(nat-to-int (mult _v_35 (plus _t_36 _t_36))))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((cubes (mult _qv_33 _qv_34))=(mult (cubes _qv_34) (cubes _qv_33))))
USE ASSUMPTION FAILED

  backtrack to: (((nat-to-int (plus _v_35 _v_35))+(nat-to-int (mult _v_35 (plus _t_36 _t_36))))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
  rewritten [18]: (((nat-to-int (plus _v_35 _v_35))+(nat-to-int (mult _t_36 (plus _v_35 _v_35))))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
  Maximum recursion depth reached
CURRENT SUBGOAL (((nat-to-int (plus _v_35 _v_35))+(nat-to-int (mult _v_35 (plus _t_36 _t_36))))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (plus _v_35 _v_35))+(nat-to-int (mult _v_35 (plus _t_36 _t_36))))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_1 _qv_2)=(plus _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (plus _v_35 _v_35))+(nat-to-int (mult _v_35 (plus _t_36 _t_36))))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_3 _qv_4) _qv_5)=(plus _qv_3 (plus _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (plus _v_35 _v_35))+(nat-to-int (mult _v_35 (plus _t_36 _t_36))))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((mult _qv_6 _qv_7)=(mult _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (plus _v_35 _v_35))+(nat-to-int (mult _v_35 (plus _t_36 _t_36))))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((mult (mult _qv_8 _qv_9) _qv_10)=(mult _qv_8 (mult _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (plus _v_35 _v_35))+(nat-to-int (mult _v_35 (plus _t_36 _t_36))))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat)) ((tri (tri _qv_11))=_qv_11))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (plus _v_35 _v_35))+(nat-to-int (mult _v_35 (plus _t_36 _t_36))))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat)) ((cubes (cubes _qv_12))=_qv_12))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (plus _v_35 _v_35))+(nat-to-int (mult _v_35 (plus _t_36 _t_36))))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (plus _v_35 _v_35))+(nat-to-int (mult _v_35 (plus _t_36 _t_36))))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_14))=(nat-to-int _qv_14)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (plus _v_35 _v_35))+(nat-to-int (mult _v_35 (plus _t_36 _t_36))))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat)) ((nat-to-int (tri _qv_15))=(nat-to-int _qv_15)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (plus _v_35 _v_35))+(nat-to-int (mult _v_35 (plus _t_36 _t_36))))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat)) ((nat-to-int (cubes _qv_16))=(nat-to-int _qv_16)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (plus _v_35 _v_35))+(nat-to-int (mult _v_35 (plus _t_36 _t_36))))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((mult _qv_17 (plus _qv_18 _qv_19))=(plus (mult _qv_17 _qv_18) (mult _qv_17 _qv_19))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (plus _v_35 _v_35))+(nat-to-int (mult _v_35 (plus _t_36 _t_36))))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus _qv_20 (mult _qv_21 _qv_22))=(mult (plus _qv_20 _qv_21) (plus _qv_20 _qv_22))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (plus _v_35 _v_35))+(nat-to-int (mult _v_35 (plus _t_36 _t_36))))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_23 _qv_24))=(plus (succ _qv_23) (succ _qv_24))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (plus _v_35 _v_35))+(nat-to-int (mult _v_35 (plus _t_36 _t_36))))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_23 _qv_24))=(plus (succ _qv_24) (succ _qv_23))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (plus _v_35 _v_35))+(nat-to-int (mult _v_35 (plus _t_36 _t_36))))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (mult _qv_25 _qv_26))=(mult (succ _qv_25) (succ _qv_26))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (plus _v_35 _v_35))+(nat-to-int (mult _v_35 (plus _t_36 _t_36))))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (mult _qv_25 _qv_26))=(mult (succ _qv_26) (succ _qv_25))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (plus _v_35 _v_35))+(nat-to-int (mult _v_35 (plus _t_36 _t_36))))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((tri (plus _qv_27 _qv_28))=(plus (tri _qv_27) (tri _qv_28))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (plus _v_35 _v_35))+(nat-to-int (mult _v_35 (plus _t_36 _t_36))))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((tri (plus _qv_27 _qv_28))=(plus (tri _qv_28) (tri _qv_27))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (plus _v_35 _v_35))+(nat-to-int (mult _v_35 (plus _t_36 _t_36))))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((tri (mult _qv_29 _qv_30))=(mult (tri _qv_29) (tri _qv_30))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (plus _v_35 _v_35))+(nat-to-int (mult _v_35 (plus _t_36 _t_36))))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((tri (mult _qv_29 _qv_30))=(mult (tri _qv_30) (tri _qv_29))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (plus _v_35 _v_35))+(nat-to-int (mult _v_35 (plus _t_36 _t_36))))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((cubes (plus _qv_31 _qv_32))=(plus (cubes _qv_31) (cubes _qv_32))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (plus _v_35 _v_35))+(nat-to-int (mult _v_35 (plus _t_36 _t_36))))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((cubes (plus _qv_31 _qv_32))=(plus (cubes _qv_32) (cubes _qv_31))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (plus _v_35 _v_35))+(nat-to-int (mult _v_35 (plus _t_36 _t_36))))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((cubes (mult _qv_33 _qv_34))=(mult (cubes _qv_33) (cubes _qv_34))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (plus _v_35 _v_35))+(nat-to-int (mult _v_35 (plus _t_36 _t_36))))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((cubes (mult _qv_33 _qv_34))=(mult (cubes _qv_34) (cubes _qv_33))))
USE ASSUMPTION FAILED

  backtrack to: (((nat-to-int (plus _v_35 _v_35))+(nat-to-int (mult _v_35 (plus _t_36 _t_36))))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
  rewritten [2]: (((nat-to-int (plus _v_35 _v_35))+(nat-to-int (mult _v_35 (plus _t_36 _t_36))))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
  Maximum recursion depth reached
CURRENT SUBGOAL (((nat-to-int (plus _v_35 _v_35))+(nat-to-int (mult _v_35 (plus _t_36 _t_36))))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (plus _v_35 _v_35))+(nat-to-int (mult _v_35 (plus _t_36 _t_36))))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_1 _qv_2)=(plus _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (plus _v_35 _v_35))+(nat-to-int (mult _v_35 (plus _t_36 _t_36))))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_3 _qv_4) _qv_5)=(plus _qv_3 (plus _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (plus _v_35 _v_35))+(nat-to-int (mult _v_35 (plus _t_36 _t_36))))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((mult _qv_6 _qv_7)=(mult _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (plus _v_35 _v_35))+(nat-to-int (mult _v_35 (plus _t_36 _t_36))))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((mult (mult _qv_8 _qv_9) _qv_10)=(mult _qv_8 (mult _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (plus _v_35 _v_35))+(nat-to-int (mult _v_35 (plus _t_36 _t_36))))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat)) ((tri (tri _qv_11))=_qv_11))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (plus _v_35 _v_35))+(nat-to-int (mult _v_35 (plus _t_36 _t_36))))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat)) ((cubes (cubes _qv_12))=_qv_12))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (plus _v_35 _v_35))+(nat-to-int (mult _v_35 (plus _t_36 _t_36))))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (plus _v_35 _v_35))+(nat-to-int (mult _v_35 (plus _t_36 _t_36))))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_14))=(nat-to-int _qv_14)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (plus _v_35 _v_35))+(nat-to-int (mult _v_35 (plus _t_36 _t_36))))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat)) ((nat-to-int (tri _qv_15))=(nat-to-int _qv_15)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (plus _v_35 _v_35))+(nat-to-int (mult _v_35 (plus _t_36 _t_36))))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat)) ((nat-to-int (cubes _qv_16))=(nat-to-int _qv_16)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (plus _v_35 _v_35))+(nat-to-int (mult _v_35 (plus _t_36 _t_36))))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((mult _qv_17 (plus _qv_18 _qv_19))=(plus (mult _qv_17 _qv_18) (mult _qv_17 _qv_19))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (plus _v_35 _v_35))+(nat-to-int (mult _v_35 (plus _t_36 _t_36))))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus _qv_20 (mult _qv_21 _qv_22))=(mult (plus _qv_20 _qv_21) (plus _qv_20 _qv_22))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (plus _v_35 _v_35))+(nat-to-int (mult _v_35 (plus _t_36 _t_36))))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_23 _qv_24))=(plus (succ _qv_23) (succ _qv_24))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (plus _v_35 _v_35))+(nat-to-int (mult _v_35 (plus _t_36 _t_36))))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_23 _qv_24))=(plus (succ _qv_24) (succ _qv_23))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (plus _v_35 _v_35))+(nat-to-int (mult _v_35 (plus _t_36 _t_36))))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (mult _qv_25 _qv_26))=(mult (succ _qv_25) (succ _qv_26))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (plus _v_35 _v_35))+(nat-to-int (mult _v_35 (plus _t_36 _t_36))))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (mult _qv_25 _qv_26))=(mult (succ _qv_26) (succ _qv_25))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (plus _v_35 _v_35))+(nat-to-int (mult _v_35 (plus _t_36 _t_36))))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((tri (plus _qv_27 _qv_28))=(plus (tri _qv_27) (tri _qv_28))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (plus _v_35 _v_35))+(nat-to-int (mult _v_35 (plus _t_36 _t_36))))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((tri (plus _qv_27 _qv_28))=(plus (tri _qv_28) (tri _qv_27))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (plus _v_35 _v_35))+(nat-to-int (mult _v_35 (plus _t_36 _t_36))))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((tri (mult _qv_29 _qv_30))=(mult (tri _qv_29) (tri _qv_30))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (plus _v_35 _v_35))+(nat-to-int (mult _v_35 (plus _t_36 _t_36))))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((tri (mult _qv_29 _qv_30))=(mult (tri _qv_30) (tri _qv_29))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (plus _v_35 _v_35))+(nat-to-int (mult _v_35 (plus _t_36 _t_36))))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((cubes (plus _qv_31 _qv_32))=(plus (cubes _qv_31) (cubes _qv_32))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (plus _v_35 _v_35))+(nat-to-int (mult _v_35 (plus _t_36 _t_36))))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((cubes (plus _qv_31 _qv_32))=(plus (cubes _qv_32) (cubes _qv_31))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (plus _v_35 _v_35))+(nat-to-int (mult _v_35 (plus _t_36 _t_36))))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((cubes (mult _qv_33 _qv_34))=(mult (cubes _qv_33) (cubes _qv_34))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (plus _v_35 _v_35))+(nat-to-int (mult _v_35 (plus _t_36 _t_36))))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((cubes (mult _qv_33 _qv_34))=(mult (cubes _qv_34) (cubes _qv_33))))
USE ASSUMPTION FAILED

  backtrack to: (((nat-to-int (plus _v_35 _v_35))+(nat-to-int (mult _v_35 (plus _t_36 _t_36))))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
  rewritten [4]: (((nat-to-int (plus _v_35 _v_35))+(nat-to-int (mult _v_35 (plus _t_36 _t_36))))=(nat-to-int (mult _v_35 (succ (succ (plus _t_36 _t_36))))))
  Maximum recursion depth reached
CURRENT SUBGOAL (((nat-to-int (plus _v_35 _v_35))+(nat-to-int (mult _v_35 (plus _t_36 _t_36))))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (plus _v_35 _v_35))+(nat-to-int (mult _v_35 (plus _t_36 _t_36))))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_1 _qv_2)=(plus _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (plus _v_35 _v_35))+(nat-to-int (mult _v_35 (plus _t_36 _t_36))))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_3 _qv_4) _qv_5)=(plus _qv_3 (plus _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (plus _v_35 _v_35))+(nat-to-int (mult _v_35 (plus _t_36 _t_36))))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((mult _qv_6 _qv_7)=(mult _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (plus _v_35 _v_35))+(nat-to-int (mult _v_35 (plus _t_36 _t_36))))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((mult (mult _qv_8 _qv_9) _qv_10)=(mult _qv_8 (mult _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (plus _v_35 _v_35))+(nat-to-int (mult _v_35 (plus _t_36 _t_36))))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat)) ((tri (tri _qv_11))=_qv_11))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (plus _v_35 _v_35))+(nat-to-int (mult _v_35 (plus _t_36 _t_36))))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat)) ((cubes (cubes _qv_12))=_qv_12))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (plus _v_35 _v_35))+(nat-to-int (mult _v_35 (plus _t_36 _t_36))))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (plus _v_35 _v_35))+(nat-to-int (mult _v_35 (plus _t_36 _t_36))))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_14))=(nat-to-int _qv_14)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (plus _v_35 _v_35))+(nat-to-int (mult _v_35 (plus _t_36 _t_36))))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat)) ((nat-to-int (tri _qv_15))=(nat-to-int _qv_15)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (plus _v_35 _v_35))+(nat-to-int (mult _v_35 (plus _t_36 _t_36))))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat)) ((nat-to-int (cubes _qv_16))=(nat-to-int _qv_16)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (plus _v_35 _v_35))+(nat-to-int (mult _v_35 (plus _t_36 _t_36))))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((mult _qv_17 (plus _qv_18 _qv_19))=(plus (mult _qv_17 _qv_18) (mult _qv_17 _qv_19))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (plus _v_35 _v_35))+(nat-to-int (mult _v_35 (plus _t_36 _t_36))))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus _qv_20 (mult _qv_21 _qv_22))=(mult (plus _qv_20 _qv_21) (plus _qv_20 _qv_22))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (plus _v_35 _v_35))+(nat-to-int (mult _v_35 (plus _t_36 _t_36))))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_23 _qv_24))=(plus (succ _qv_23) (succ _qv_24))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (plus _v_35 _v_35))+(nat-to-int (mult _v_35 (plus _t_36 _t_36))))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_23 _qv_24))=(plus (succ _qv_24) (succ _qv_23))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (plus _v_35 _v_35))+(nat-to-int (mult _v_35 (plus _t_36 _t_36))))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (mult _qv_25 _qv_26))=(mult (succ _qv_25) (succ _qv_26))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (plus _v_35 _v_35))+(nat-to-int (mult _v_35 (plus _t_36 _t_36))))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (mult _qv_25 _qv_26))=(mult (succ _qv_26) (succ _qv_25))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (plus _v_35 _v_35))+(nat-to-int (mult _v_35 (plus _t_36 _t_36))))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((tri (plus _qv_27 _qv_28))=(plus (tri _qv_27) (tri _qv_28))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (plus _v_35 _v_35))+(nat-to-int (mult _v_35 (plus _t_36 _t_36))))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((tri (plus _qv_27 _qv_28))=(plus (tri _qv_28) (tri _qv_27))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (plus _v_35 _v_35))+(nat-to-int (mult _v_35 (plus _t_36 _t_36))))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((tri (mult _qv_29 _qv_30))=(mult (tri _qv_29) (tri _qv_30))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (plus _v_35 _v_35))+(nat-to-int (mult _v_35 (plus _t_36 _t_36))))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((tri (mult _qv_29 _qv_30))=(mult (tri _qv_30) (tri _qv_29))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (plus _v_35 _v_35))+(nat-to-int (mult _v_35 (plus _t_36 _t_36))))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((cubes (plus _qv_31 _qv_32))=(plus (cubes _qv_31) (cubes _qv_32))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (plus _v_35 _v_35))+(nat-to-int (mult _v_35 (plus _t_36 _t_36))))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((cubes (plus _qv_31 _qv_32))=(plus (cubes _qv_32) (cubes _qv_31))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (plus _v_35 _v_35))+(nat-to-int (mult _v_35 (plus _t_36 _t_36))))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((cubes (mult _qv_33 _qv_34))=(mult (cubes _qv_33) (cubes _qv_34))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (plus _v_35 _v_35))+(nat-to-int (mult _v_35 (plus _t_36 _t_36))))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((cubes (mult _qv_33 _qv_34))=(mult (cubes _qv_34) (cubes _qv_33))))
USE ASSUMPTION FAILED

  backtrack to: (((nat-to-int (plus _v_35 _v_35))+(nat-to-int (mult _v_35 (plus _t_36 _t_36))))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
  rewritten [12]: ((((nat-to-int _v_35)+(nat-to-int _v_35))+(nat-to-int (mult _v_35 (plus _t_36 _t_36))))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
  Maximum recursion depth reached
CURRENT SUBGOAL (((nat-to-int (plus _v_35 _v_35))+(nat-to-int (mult _v_35 (plus _t_36 _t_36))))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (plus _v_35 _v_35))+(nat-to-int (mult _v_35 (plus _t_36 _t_36))))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_1 _qv_2)=(plus _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (plus _v_35 _v_35))+(nat-to-int (mult _v_35 (plus _t_36 _t_36))))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_3 _qv_4) _qv_5)=(plus _qv_3 (plus _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (plus _v_35 _v_35))+(nat-to-int (mult _v_35 (plus _t_36 _t_36))))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((mult _qv_6 _qv_7)=(mult _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (plus _v_35 _v_35))+(nat-to-int (mult _v_35 (plus _t_36 _t_36))))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((mult (mult _qv_8 _qv_9) _qv_10)=(mult _qv_8 (mult _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (plus _v_35 _v_35))+(nat-to-int (mult _v_35 (plus _t_36 _t_36))))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat)) ((tri (tri _qv_11))=_qv_11))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (plus _v_35 _v_35))+(nat-to-int (mult _v_35 (plus _t_36 _t_36))))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat)) ((cubes (cubes _qv_12))=_qv_12))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (plus _v_35 _v_35))+(nat-to-int (mult _v_35 (plus _t_36 _t_36))))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (plus _v_35 _v_35))+(nat-to-int (mult _v_35 (plus _t_36 _t_36))))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_14))=(nat-to-int _qv_14)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (plus _v_35 _v_35))+(nat-to-int (mult _v_35 (plus _t_36 _t_36))))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat)) ((nat-to-int (tri _qv_15))=(nat-to-int _qv_15)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (plus _v_35 _v_35))+(nat-to-int (mult _v_35 (plus _t_36 _t_36))))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat)) ((nat-to-int (cubes _qv_16))=(nat-to-int _qv_16)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (plus _v_35 _v_35))+(nat-to-int (mult _v_35 (plus _t_36 _t_36))))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((mult _qv_17 (plus _qv_18 _qv_19))=(plus (mult _qv_17 _qv_18) (mult _qv_17 _qv_19))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (plus _v_35 _v_35))+(nat-to-int (mult _v_35 (plus _t_36 _t_36))))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus _qv_20 (mult _qv_21 _qv_22))=(mult (plus _qv_20 _qv_21) (plus _qv_20 _qv_22))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (plus _v_35 _v_35))+(nat-to-int (mult _v_35 (plus _t_36 _t_36))))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_23 _qv_24))=(plus (succ _qv_23) (succ _qv_24))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (plus _v_35 _v_35))+(nat-to-int (mult _v_35 (plus _t_36 _t_36))))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_23 _qv_24))=(plus (succ _qv_24) (succ _qv_23))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (plus _v_35 _v_35))+(nat-to-int (mult _v_35 (plus _t_36 _t_36))))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (mult _qv_25 _qv_26))=(mult (succ _qv_25) (succ _qv_26))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (plus _v_35 _v_35))+(nat-to-int (mult _v_35 (plus _t_36 _t_36))))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (mult _qv_25 _qv_26))=(mult (succ _qv_26) (succ _qv_25))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (plus _v_35 _v_35))+(nat-to-int (mult _v_35 (plus _t_36 _t_36))))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((tri (plus _qv_27 _qv_28))=(plus (tri _qv_27) (tri _qv_28))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (plus _v_35 _v_35))+(nat-to-int (mult _v_35 (plus _t_36 _t_36))))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((tri (plus _qv_27 _qv_28))=(plus (tri _qv_28) (tri _qv_27))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (plus _v_35 _v_35))+(nat-to-int (mult _v_35 (plus _t_36 _t_36))))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((tri (mult _qv_29 _qv_30))=(mult (tri _qv_29) (tri _qv_30))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (plus _v_35 _v_35))+(nat-to-int (mult _v_35 (plus _t_36 _t_36))))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((tri (mult _qv_29 _qv_30))=(mult (tri _qv_30) (tri _qv_29))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (plus _v_35 _v_35))+(nat-to-int (mult _v_35 (plus _t_36 _t_36))))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((cubes (plus _qv_31 _qv_32))=(plus (cubes _qv_31) (cubes _qv_32))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (plus _v_35 _v_35))+(nat-to-int (mult _v_35 (plus _t_36 _t_36))))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((cubes (plus _qv_31 _qv_32))=(plus (cubes _qv_32) (cubes _qv_31))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (plus _v_35 _v_35))+(nat-to-int (mult _v_35 (plus _t_36 _t_36))))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((cubes (mult _qv_33 _qv_34))=(mult (cubes _qv_33) (cubes _qv_34))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (plus _v_35 _v_35))+(nat-to-int (mult _v_35 (plus _t_36 _t_36))))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((cubes (mult _qv_33 _qv_34))=(mult (cubes _qv_34) (cubes _qv_33))))
USE ASSUMPTION FAILED

  backtrack to: (((nat-to-int (plus _v_35 _v_35))+(nat-to-int (mult _v_35 (plus _t_36 _t_36))))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
  rewritten [13]: (((nat-to-int (plus _v_35 _v_35))+(nat-to-int (mult _v_35 (plus _t_36 _t_36))))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
  Maximum recursion depth reached
CURRENT SUBGOAL (((nat-to-int (plus _v_35 _v_35))+(nat-to-int (mult _v_35 (plus _t_36 _t_36))))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (plus _v_35 _v_35))+(nat-to-int (mult _v_35 (plus _t_36 _t_36))))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_1 _qv_2)=(plus _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (plus _v_35 _v_35))+(nat-to-int (mult _v_35 (plus _t_36 _t_36))))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_3 _qv_4) _qv_5)=(plus _qv_3 (plus _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (plus _v_35 _v_35))+(nat-to-int (mult _v_35 (plus _t_36 _t_36))))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((mult _qv_6 _qv_7)=(mult _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (plus _v_35 _v_35))+(nat-to-int (mult _v_35 (plus _t_36 _t_36))))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((mult (mult _qv_8 _qv_9) _qv_10)=(mult _qv_8 (mult _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (plus _v_35 _v_35))+(nat-to-int (mult _v_35 (plus _t_36 _t_36))))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat)) ((tri (tri _qv_11))=_qv_11))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (plus _v_35 _v_35))+(nat-to-int (mult _v_35 (plus _t_36 _t_36))))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat)) ((cubes (cubes _qv_12))=_qv_12))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (plus _v_35 _v_35))+(nat-to-int (mult _v_35 (plus _t_36 _t_36))))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (plus _v_35 _v_35))+(nat-to-int (mult _v_35 (plus _t_36 _t_36))))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_14))=(nat-to-int _qv_14)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (plus _v_35 _v_35))+(nat-to-int (mult _v_35 (plus _t_36 _t_36))))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat)) ((nat-to-int (tri _qv_15))=(nat-to-int _qv_15)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (plus _v_35 _v_35))+(nat-to-int (mult _v_35 (plus _t_36 _t_36))))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat)) ((nat-to-int (cubes _qv_16))=(nat-to-int _qv_16)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (plus _v_35 _v_35))+(nat-to-int (mult _v_35 (plus _t_36 _t_36))))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((mult _qv_17 (plus _qv_18 _qv_19))=(plus (mult _qv_17 _qv_18) (mult _qv_17 _qv_19))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (plus _v_35 _v_35))+(nat-to-int (mult _v_35 (plus _t_36 _t_36))))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus _qv_20 (mult _qv_21 _qv_22))=(mult (plus _qv_20 _qv_21) (plus _qv_20 _qv_22))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (plus _v_35 _v_35))+(nat-to-int (mult _v_35 (plus _t_36 _t_36))))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_23 _qv_24))=(plus (succ _qv_23) (succ _qv_24))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (plus _v_35 _v_35))+(nat-to-int (mult _v_35 (plus _t_36 _t_36))))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_23 _qv_24))=(plus (succ _qv_24) (succ _qv_23))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (plus _v_35 _v_35))+(nat-to-int (mult _v_35 (plus _t_36 _t_36))))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (mult _qv_25 _qv_26))=(mult (succ _qv_25) (succ _qv_26))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (plus _v_35 _v_35))+(nat-to-int (mult _v_35 (plus _t_36 _t_36))))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (mult _qv_25 _qv_26))=(mult (succ _qv_26) (succ _qv_25))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (plus _v_35 _v_35))+(nat-to-int (mult _v_35 (plus _t_36 _t_36))))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((tri (plus _qv_27 _qv_28))=(plus (tri _qv_27) (tri _qv_28))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (plus _v_35 _v_35))+(nat-to-int (mult _v_35 (plus _t_36 _t_36))))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((tri (plus _qv_27 _qv_28))=(plus (tri _qv_28) (tri _qv_27))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (plus _v_35 _v_35))+(nat-to-int (mult _v_35 (plus _t_36 _t_36))))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((tri (mult _qv_29 _qv_30))=(mult (tri _qv_29) (tri _qv_30))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (plus _v_35 _v_35))+(nat-to-int (mult _v_35 (plus _t_36 _t_36))))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((tri (mult _qv_29 _qv_30))=(mult (tri _qv_30) (tri _qv_29))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (plus _v_35 _v_35))+(nat-to-int (mult _v_35 (plus _t_36 _t_36))))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((cubes (plus _qv_31 _qv_32))=(plus (cubes _qv_31) (cubes _qv_32))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (plus _v_35 _v_35))+(nat-to-int (mult _v_35 (plus _t_36 _t_36))))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((cubes (plus _qv_31 _qv_32))=(plus (cubes _qv_32) (cubes _qv_31))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (plus _v_35 _v_35))+(nat-to-int (mult _v_35 (plus _t_36 _t_36))))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((cubes (mult _qv_33 _qv_34))=(mult (cubes _qv_33) (cubes _qv_34))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (plus _v_35 _v_35))+(nat-to-int (mult _v_35 (plus _t_36 _t_36))))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((cubes (mult _qv_33 _qv_34))=(mult (cubes _qv_34) (cubes _qv_33))))
USE ASSUMPTION FAILED

  backtrack to: (((nat-to-int (plus _v_35 _v_35))+(nat-to-int (mult _v_35 (plus _t_36 _t_36))))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
  rewritten [13]: (((nat-to-int (plus _v_35 _v_35))+(nat-to-int (mult _v_35 (plus _t_36 _t_36))))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
  Maximum recursion depth reached
CURRENT SUBGOAL (((nat-to-int (plus _v_35 _v_35))+(nat-to-int (mult _v_35 (plus _t_36 _t_36))))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (plus _v_35 _v_35))+(nat-to-int (mult _v_35 (plus _t_36 _t_36))))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_1 _qv_2)=(plus _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (plus _v_35 _v_35))+(nat-to-int (mult _v_35 (plus _t_36 _t_36))))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_3 _qv_4) _qv_5)=(plus _qv_3 (plus _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (plus _v_35 _v_35))+(nat-to-int (mult _v_35 (plus _t_36 _t_36))))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((mult _qv_6 _qv_7)=(mult _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (plus _v_35 _v_35))+(nat-to-int (mult _v_35 (plus _t_36 _t_36))))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((mult (mult _qv_8 _qv_9) _qv_10)=(mult _qv_8 (mult _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (plus _v_35 _v_35))+(nat-to-int (mult _v_35 (plus _t_36 _t_36))))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat)) ((tri (tri _qv_11))=_qv_11))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (plus _v_35 _v_35))+(nat-to-int (mult _v_35 (plus _t_36 _t_36))))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat)) ((cubes (cubes _qv_12))=_qv_12))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (plus _v_35 _v_35))+(nat-to-int (mult _v_35 (plus _t_36 _t_36))))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (plus _v_35 _v_35))+(nat-to-int (mult _v_35 (plus _t_36 _t_36))))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_14))=(nat-to-int _qv_14)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (plus _v_35 _v_35))+(nat-to-int (mult _v_35 (plus _t_36 _t_36))))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat)) ((nat-to-int (tri _qv_15))=(nat-to-int _qv_15)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (plus _v_35 _v_35))+(nat-to-int (mult _v_35 (plus _t_36 _t_36))))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat)) ((nat-to-int (cubes _qv_16))=(nat-to-int _qv_16)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (plus _v_35 _v_35))+(nat-to-int (mult _v_35 (plus _t_36 _t_36))))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((mult _qv_17 (plus _qv_18 _qv_19))=(plus (mult _qv_17 _qv_18) (mult _qv_17 _qv_19))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (plus _v_35 _v_35))+(nat-to-int (mult _v_35 (plus _t_36 _t_36))))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus _qv_20 (mult _qv_21 _qv_22))=(mult (plus _qv_20 _qv_21) (plus _qv_20 _qv_22))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (plus _v_35 _v_35))+(nat-to-int (mult _v_35 (plus _t_36 _t_36))))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_23 _qv_24))=(plus (succ _qv_23) (succ _qv_24))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (plus _v_35 _v_35))+(nat-to-int (mult _v_35 (plus _t_36 _t_36))))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_23 _qv_24))=(plus (succ _qv_24) (succ _qv_23))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (plus _v_35 _v_35))+(nat-to-int (mult _v_35 (plus _t_36 _t_36))))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (mult _qv_25 _qv_26))=(mult (succ _qv_25) (succ _qv_26))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (plus _v_35 _v_35))+(nat-to-int (mult _v_35 (plus _t_36 _t_36))))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (mult _qv_25 _qv_26))=(mult (succ _qv_26) (succ _qv_25))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (plus _v_35 _v_35))+(nat-to-int (mult _v_35 (plus _t_36 _t_36))))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((tri (plus _qv_27 _qv_28))=(plus (tri _qv_27) (tri _qv_28))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (plus _v_35 _v_35))+(nat-to-int (mult _v_35 (plus _t_36 _t_36))))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((tri (plus _qv_27 _qv_28))=(plus (tri _qv_28) (tri _qv_27))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (plus _v_35 _v_35))+(nat-to-int (mult _v_35 (plus _t_36 _t_36))))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((tri (mult _qv_29 _qv_30))=(mult (tri _qv_29) (tri _qv_30))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (plus _v_35 _v_35))+(nat-to-int (mult _v_35 (plus _t_36 _t_36))))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((tri (mult _qv_29 _qv_30))=(mult (tri _qv_30) (tri _qv_29))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (plus _v_35 _v_35))+(nat-to-int (mult _v_35 (plus _t_36 _t_36))))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((cubes (plus _qv_31 _qv_32))=(plus (cubes _qv_31) (cubes _qv_32))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (plus _v_35 _v_35))+(nat-to-int (mult _v_35 (plus _t_36 _t_36))))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((cubes (plus _qv_31 _qv_32))=(plus (cubes _qv_32) (cubes _qv_31))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (plus _v_35 _v_35))+(nat-to-int (mult _v_35 (plus _t_36 _t_36))))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((cubes (mult _qv_33 _qv_34))=(mult (cubes _qv_33) (cubes _qv_34))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (plus _v_35 _v_35))+(nat-to-int (mult _v_35 (plus _t_36 _t_36))))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((cubes (mult _qv_33 _qv_34))=(mult (cubes _qv_34) (cubes _qv_33))))
USE ASSUMPTION FAILED

  backtrack to: (((nat-to-int (plus _v_35 _v_35))+(nat-to-int (mult _v_35 (plus _t_36 _t_36))))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
  rewritten [13]: (((nat-to-int (plus _v_35 _v_35))+(nat-to-int (mult _v_35 (plus _t_36 _t_36))))=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
  Maximum recursion depth reached
CURRENT SUBGOAL (((nat-to-int (plus _v_35 _v_35))+(nat-to-int (mult _v_35 (plus _t_36 _t_36))))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (plus _v_35 _v_35))+(nat-to-int (mult _v_35 (plus _t_36 _t_36))))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_1 _qv_2)=(plus _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (plus _v_35 _v_35))+(nat-to-int (mult _v_35 (plus _t_36 _t_36))))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_3 _qv_4) _qv_5)=(plus _qv_3 (plus _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (plus _v_35 _v_35))+(nat-to-int (mult _v_35 (plus _t_36 _t_36))))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((mult _qv_6 _qv_7)=(mult _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (plus _v_35 _v_35))+(nat-to-int (mult _v_35 (plus _t_36 _t_36))))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((mult (mult _qv_8 _qv_9) _qv_10)=(mult _qv_8 (mult _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (plus _v_35 _v_35))+(nat-to-int (mult _v_35 (plus _t_36 _t_36))))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat)) ((tri (tri _qv_11))=_qv_11))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (plus _v_35 _v_35))+(nat-to-int (mult _v_35 (plus _t_36 _t_36))))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat)) ((cubes (cubes _qv_12))=_qv_12))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (plus _v_35 _v_35))+(nat-to-int (mult _v_35 (plus _t_36 _t_36))))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (plus _v_35 _v_35))+(nat-to-int (mult _v_35 (plus _t_36 _t_36))))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_14))=(nat-to-int _qv_14)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (plus _v_35 _v_35))+(nat-to-int (mult _v_35 (plus _t_36 _t_36))))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat)) ((nat-to-int (tri _qv_15))=(nat-to-int _qv_15)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (plus _v_35 _v_35))+(nat-to-int (mult _v_35 (plus _t_36 _t_36))))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat)) ((nat-to-int (cubes _qv_16))=(nat-to-int _qv_16)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (plus _v_35 _v_35))+(nat-to-int (mult _v_35 (plus _t_36 _t_36))))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((mult _qv_17 (plus _qv_18 _qv_19))=(plus (mult _qv_17 _qv_18) (mult _qv_17 _qv_19))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (plus _v_35 _v_35))+(nat-to-int (mult _v_35 (plus _t_36 _t_36))))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus _qv_20 (mult _qv_21 _qv_22))=(mult (plus _qv_20 _qv_21) (plus _qv_20 _qv_22))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (plus _v_35 _v_35))+(nat-to-int (mult _v_35 (plus _t_36 _t_36))))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_23 _qv_24))=(plus (succ _qv_23) (succ _qv_24))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (plus _v_35 _v_35))+(nat-to-int (mult _v_35 (plus _t_36 _t_36))))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_23 _qv_24))=(plus (succ _qv_24) (succ _qv_23))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (plus _v_35 _v_35))+(nat-to-int (mult _v_35 (plus _t_36 _t_36))))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (mult _qv_25 _qv_26))=(mult (succ _qv_25) (succ _qv_26))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (plus _v_35 _v_35))+(nat-to-int (mult _v_35 (plus _t_36 _t_36))))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (mult _qv_25 _qv_26))=(mult (succ _qv_26) (succ _qv_25))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (plus _v_35 _v_35))+(nat-to-int (mult _v_35 (plus _t_36 _t_36))))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((tri (plus _qv_27 _qv_28))=(plus (tri _qv_27) (tri _qv_28))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (plus _v_35 _v_35))+(nat-to-int (mult _v_35 (plus _t_36 _t_36))))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((tri (plus _qv_27 _qv_28))=(plus (tri _qv_28) (tri _qv_27))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (plus _v_35 _v_35))+(nat-to-int (mult _v_35 (plus _t_36 _t_36))))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((tri (mult _qv_29 _qv_30))=(mult (tri _qv_29) (tri _qv_30))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (plus _v_35 _v_35))+(nat-to-int (mult _v_35 (plus _t_36 _t_36))))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((tri (mult _qv_29 _qv_30))=(mult (tri _qv_30) (tri _qv_29))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (plus _v_35 _v_35))+(nat-to-int (mult _v_35 (plus _t_36 _t_36))))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((cubes (plus _qv_31 _qv_32))=(plus (cubes _qv_31) (cubes _qv_32))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (plus _v_35 _v_35))+(nat-to-int (mult _v_35 (plus _t_36 _t_36))))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((cubes (plus _qv_31 _qv_32))=(plus (cubes _qv_32) (cubes _qv_31))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (plus _v_35 _v_35))+(nat-to-int (mult _v_35 (plus _t_36 _t_36))))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((cubes (mult _qv_33 _qv_34))=(mult (cubes _qv_33) (cubes _qv_34))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (plus _v_35 _v_35))+(nat-to-int (mult _v_35 (plus _t_36 _t_36))))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((cubes (mult _qv_33 _qv_34))=(mult (cubes _qv_34) (cubes _qv_33))))
USE ASSUMPTION FAILED

  backtrack to: (((nat-to-int (plus _v_35 _v_35))+(nat-to-int (mult _v_35 (plus _t_36 _t_36))))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
  rewritten [15]: (((nat-to-int (plus _v_35 _v_35))+(nat-to-int (mult (plus _t_36 _t_36) _v_35)))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
  Maximum recursion depth reached
CURRENT SUBGOAL (((nat-to-int (plus _v_35 _v_35))+(nat-to-int (mult _v_35 (plus _t_36 _t_36))))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (plus _v_35 _v_35))+(nat-to-int (mult _v_35 (plus _t_36 _t_36))))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_1 _qv_2)=(plus _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (plus _v_35 _v_35))+(nat-to-int (mult _v_35 (plus _t_36 _t_36))))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_3 _qv_4) _qv_5)=(plus _qv_3 (plus _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (plus _v_35 _v_35))+(nat-to-int (mult _v_35 (plus _t_36 _t_36))))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((mult _qv_6 _qv_7)=(mult _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (plus _v_35 _v_35))+(nat-to-int (mult _v_35 (plus _t_36 _t_36))))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((mult (mult _qv_8 _qv_9) _qv_10)=(mult _qv_8 (mult _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (plus _v_35 _v_35))+(nat-to-int (mult _v_35 (plus _t_36 _t_36))))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat)) ((tri (tri _qv_11))=_qv_11))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (plus _v_35 _v_35))+(nat-to-int (mult _v_35 (plus _t_36 _t_36))))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat)) ((cubes (cubes _qv_12))=_qv_12))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (plus _v_35 _v_35))+(nat-to-int (mult _v_35 (plus _t_36 _t_36))))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (plus _v_35 _v_35))+(nat-to-int (mult _v_35 (plus _t_36 _t_36))))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_14))=(nat-to-int _qv_14)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (plus _v_35 _v_35))+(nat-to-int (mult _v_35 (plus _t_36 _t_36))))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat)) ((nat-to-int (tri _qv_15))=(nat-to-int _qv_15)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (plus _v_35 _v_35))+(nat-to-int (mult _v_35 (plus _t_36 _t_36))))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat)) ((nat-to-int (cubes _qv_16))=(nat-to-int _qv_16)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (plus _v_35 _v_35))+(nat-to-int (mult _v_35 (plus _t_36 _t_36))))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((mult _qv_17 (plus _qv_18 _qv_19))=(plus (mult _qv_17 _qv_18) (mult _qv_17 _qv_19))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (plus _v_35 _v_35))+(nat-to-int (mult _v_35 (plus _t_36 _t_36))))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus _qv_20 (mult _qv_21 _qv_22))=(mult (plus _qv_20 _qv_21) (plus _qv_20 _qv_22))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (plus _v_35 _v_35))+(nat-to-int (mult _v_35 (plus _t_36 _t_36))))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_23 _qv_24))=(plus (succ _qv_23) (succ _qv_24))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (plus _v_35 _v_35))+(nat-to-int (mult _v_35 (plus _t_36 _t_36))))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_23 _qv_24))=(plus (succ _qv_24) (succ _qv_23))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (plus _v_35 _v_35))+(nat-to-int (mult _v_35 (plus _t_36 _t_36))))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (mult _qv_25 _qv_26))=(mult (succ _qv_25) (succ _qv_26))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (plus _v_35 _v_35))+(nat-to-int (mult _v_35 (plus _t_36 _t_36))))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (mult _qv_25 _qv_26))=(mult (succ _qv_26) (succ _qv_25))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (plus _v_35 _v_35))+(nat-to-int (mult _v_35 (plus _t_36 _t_36))))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((tri (plus _qv_27 _qv_28))=(plus (tri _qv_27) (tri _qv_28))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (plus _v_35 _v_35))+(nat-to-int (mult _v_35 (plus _t_36 _t_36))))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((tri (plus _qv_27 _qv_28))=(plus (tri _qv_28) (tri _qv_27))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (plus _v_35 _v_35))+(nat-to-int (mult _v_35 (plus _t_36 _t_36))))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((tri (mult _qv_29 _qv_30))=(mult (tri _qv_29) (tri _qv_30))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (plus _v_35 _v_35))+(nat-to-int (mult _v_35 (plus _t_36 _t_36))))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((tri (mult _qv_29 _qv_30))=(mult (tri _qv_30) (tri _qv_29))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (plus _v_35 _v_35))+(nat-to-int (mult _v_35 (plus _t_36 _t_36))))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((cubes (plus _qv_31 _qv_32))=(plus (cubes _qv_31) (cubes _qv_32))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (plus _v_35 _v_35))+(nat-to-int (mult _v_35 (plus _t_36 _t_36))))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((cubes (plus _qv_31 _qv_32))=(plus (cubes _qv_32) (cubes _qv_31))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (plus _v_35 _v_35))+(nat-to-int (mult _v_35 (plus _t_36 _t_36))))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((cubes (mult _qv_33 _qv_34))=(mult (cubes _qv_33) (cubes _qv_34))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (plus _v_35 _v_35))+(nat-to-int (mult _v_35 (plus _t_36 _t_36))))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((cubes (mult _qv_33 _qv_34))=(mult (cubes _qv_34) (cubes _qv_33))))
USE ASSUMPTION FAILED

  backtrack to: (((nat-to-int (plus _v_35 _v_35))+(nat-to-int (mult _v_35 (plus _t_36 _t_36))))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
  rewritten [15]: (((nat-to-int (plus _v_35 _v_35))+(nat-to-int (mult _v_35 (plus _t_36 _t_36))))=(nat-to-int (mult (succ (plus (succ _t_36) _t_36)) _v_35)))
  Maximum recursion depth reached
CURRENT SUBGOAL (((nat-to-int (plus _v_35 _v_35))+(nat-to-int (mult _v_35 (plus _t_36 _t_36))))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (plus _v_35 _v_35))+(nat-to-int (mult _v_35 (plus _t_36 _t_36))))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_1 _qv_2)=(plus _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (plus _v_35 _v_35))+(nat-to-int (mult _v_35 (plus _t_36 _t_36))))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_3 _qv_4) _qv_5)=(plus _qv_3 (plus _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (plus _v_35 _v_35))+(nat-to-int (mult _v_35 (plus _t_36 _t_36))))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((mult _qv_6 _qv_7)=(mult _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (plus _v_35 _v_35))+(nat-to-int (mult _v_35 (plus _t_36 _t_36))))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((mult (mult _qv_8 _qv_9) _qv_10)=(mult _qv_8 (mult _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (plus _v_35 _v_35))+(nat-to-int (mult _v_35 (plus _t_36 _t_36))))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat)) ((tri (tri _qv_11))=_qv_11))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (plus _v_35 _v_35))+(nat-to-int (mult _v_35 (plus _t_36 _t_36))))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat)) ((cubes (cubes _qv_12))=_qv_12))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (plus _v_35 _v_35))+(nat-to-int (mult _v_35 (plus _t_36 _t_36))))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (plus _v_35 _v_35))+(nat-to-int (mult _v_35 (plus _t_36 _t_36))))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_14))=(nat-to-int _qv_14)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (plus _v_35 _v_35))+(nat-to-int (mult _v_35 (plus _t_36 _t_36))))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat)) ((nat-to-int (tri _qv_15))=(nat-to-int _qv_15)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (plus _v_35 _v_35))+(nat-to-int (mult _v_35 (plus _t_36 _t_36))))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat)) ((nat-to-int (cubes _qv_16))=(nat-to-int _qv_16)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (plus _v_35 _v_35))+(nat-to-int (mult _v_35 (plus _t_36 _t_36))))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((mult _qv_17 (plus _qv_18 _qv_19))=(plus (mult _qv_17 _qv_18) (mult _qv_17 _qv_19))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (plus _v_35 _v_35))+(nat-to-int (mult _v_35 (plus _t_36 _t_36))))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus _qv_20 (mult _qv_21 _qv_22))=(mult (plus _qv_20 _qv_21) (plus _qv_20 _qv_22))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (plus _v_35 _v_35))+(nat-to-int (mult _v_35 (plus _t_36 _t_36))))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_23 _qv_24))=(plus (succ _qv_23) (succ _qv_24))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (plus _v_35 _v_35))+(nat-to-int (mult _v_35 (plus _t_36 _t_36))))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_23 _qv_24))=(plus (succ _qv_24) (succ _qv_23))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (plus _v_35 _v_35))+(nat-to-int (mult _v_35 (plus _t_36 _t_36))))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (mult _qv_25 _qv_26))=(mult (succ _qv_25) (succ _qv_26))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (plus _v_35 _v_35))+(nat-to-int (mult _v_35 (plus _t_36 _t_36))))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (mult _qv_25 _qv_26))=(mult (succ _qv_26) (succ _qv_25))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (plus _v_35 _v_35))+(nat-to-int (mult _v_35 (plus _t_36 _t_36))))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((tri (plus _qv_27 _qv_28))=(plus (tri _qv_27) (tri _qv_28))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (plus _v_35 _v_35))+(nat-to-int (mult _v_35 (plus _t_36 _t_36))))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((tri (plus _qv_27 _qv_28))=(plus (tri _qv_28) (tri _qv_27))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (plus _v_35 _v_35))+(nat-to-int (mult _v_35 (plus _t_36 _t_36))))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((tri (mult _qv_29 _qv_30))=(mult (tri _qv_29) (tri _qv_30))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (plus _v_35 _v_35))+(nat-to-int (mult _v_35 (plus _t_36 _t_36))))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((tri (mult _qv_29 _qv_30))=(mult (tri _qv_30) (tri _qv_29))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (plus _v_35 _v_35))+(nat-to-int (mult _v_35 (plus _t_36 _t_36))))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((cubes (plus _qv_31 _qv_32))=(plus (cubes _qv_31) (cubes _qv_32))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (plus _v_35 _v_35))+(nat-to-int (mult _v_35 (plus _t_36 _t_36))))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((cubes (plus _qv_31 _qv_32))=(plus (cubes _qv_32) (cubes _qv_31))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (plus _v_35 _v_35))+(nat-to-int (mult _v_35 (plus _t_36 _t_36))))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((cubes (mult _qv_33 _qv_34))=(mult (cubes _qv_33) (cubes _qv_34))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (plus _v_35 _v_35))+(nat-to-int (mult _v_35 (plus _t_36 _t_36))))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((cubes (mult _qv_33 _qv_34))=(mult (cubes _qv_34) (cubes _qv_33))))
USE ASSUMPTION FAILED

  backtrack to: (((nat-to-int (plus _v_35 _v_35))+(nat-to-int (mult _v_35 (plus _t_36 _t_36))))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
  rewritten [18]: (((nat-to-int (plus _v_35 _v_35))+(nat-to-int (mult _t_36 (plus _v_35 _v_35))))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
  Maximum recursion depth reached
CURRENT SUBGOAL (((nat-to-int (plus _v_35 _v_35))+(nat-to-int (mult _v_35 (plus _t_36 _t_36))))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (plus _v_35 _v_35))+(nat-to-int (mult _v_35 (plus _t_36 _t_36))))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_1 _qv_2)=(plus _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (plus _v_35 _v_35))+(nat-to-int (mult _v_35 (plus _t_36 _t_36))))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_3 _qv_4) _qv_5)=(plus _qv_3 (plus _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (plus _v_35 _v_35))+(nat-to-int (mult _v_35 (plus _t_36 _t_36))))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((mult _qv_6 _qv_7)=(mult _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (plus _v_35 _v_35))+(nat-to-int (mult _v_35 (plus _t_36 _t_36))))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((mult (mult _qv_8 _qv_9) _qv_10)=(mult _qv_8 (mult _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (plus _v_35 _v_35))+(nat-to-int (mult _v_35 (plus _t_36 _t_36))))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat)) ((tri (tri _qv_11))=_qv_11))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (plus _v_35 _v_35))+(nat-to-int (mult _v_35 (plus _t_36 _t_36))))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat)) ((cubes (cubes _qv_12))=_qv_12))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (plus _v_35 _v_35))+(nat-to-int (mult _v_35 (plus _t_36 _t_36))))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (plus _v_35 _v_35))+(nat-to-int (mult _v_35 (plus _t_36 _t_36))))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_14))=(nat-to-int _qv_14)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (plus _v_35 _v_35))+(nat-to-int (mult _v_35 (plus _t_36 _t_36))))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat)) ((nat-to-int (tri _qv_15))=(nat-to-int _qv_15)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (plus _v_35 _v_35))+(nat-to-int (mult _v_35 (plus _t_36 _t_36))))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat)) ((nat-to-int (cubes _qv_16))=(nat-to-int _qv_16)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (plus _v_35 _v_35))+(nat-to-int (mult _v_35 (plus _t_36 _t_36))))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((mult _qv_17 (plus _qv_18 _qv_19))=(plus (mult _qv_17 _qv_18) (mult _qv_17 _qv_19))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (plus _v_35 _v_35))+(nat-to-int (mult _v_35 (plus _t_36 _t_36))))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus _qv_20 (mult _qv_21 _qv_22))=(mult (plus _qv_20 _qv_21) (plus _qv_20 _qv_22))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (plus _v_35 _v_35))+(nat-to-int (mult _v_35 (plus _t_36 _t_36))))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_23 _qv_24))=(plus (succ _qv_23) (succ _qv_24))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (plus _v_35 _v_35))+(nat-to-int (mult _v_35 (plus _t_36 _t_36))))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_23 _qv_24))=(plus (succ _qv_24) (succ _qv_23))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (plus _v_35 _v_35))+(nat-to-int (mult _v_35 (plus _t_36 _t_36))))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (mult _qv_25 _qv_26))=(mult (succ _qv_25) (succ _qv_26))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (plus _v_35 _v_35))+(nat-to-int (mult _v_35 (plus _t_36 _t_36))))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (mult _qv_25 _qv_26))=(mult (succ _qv_26) (succ _qv_25))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (plus _v_35 _v_35))+(nat-to-int (mult _v_35 (plus _t_36 _t_36))))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((tri (plus _qv_27 _qv_28))=(plus (tri _qv_27) (tri _qv_28))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (plus _v_35 _v_35))+(nat-to-int (mult _v_35 (plus _t_36 _t_36))))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((tri (plus _qv_27 _qv_28))=(plus (tri _qv_28) (tri _qv_27))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (plus _v_35 _v_35))+(nat-to-int (mult _v_35 (plus _t_36 _t_36))))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((tri (mult _qv_29 _qv_30))=(mult (tri _qv_29) (tri _qv_30))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (plus _v_35 _v_35))+(nat-to-int (mult _v_35 (plus _t_36 _t_36))))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((tri (mult _qv_29 _qv_30))=(mult (tri _qv_30) (tri _qv_29))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (plus _v_35 _v_35))+(nat-to-int (mult _v_35 (plus _t_36 _t_36))))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((cubes (plus _qv_31 _qv_32))=(plus (cubes _qv_31) (cubes _qv_32))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (plus _v_35 _v_35))+(nat-to-int (mult _v_35 (plus _t_36 _t_36))))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((cubes (plus _qv_31 _qv_32))=(plus (cubes _qv_32) (cubes _qv_31))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (plus _v_35 _v_35))+(nat-to-int (mult _v_35 (plus _t_36 _t_36))))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((cubes (mult _qv_33 _qv_34))=(mult (cubes _qv_33) (cubes _qv_34))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (plus _v_35 _v_35))+(nat-to-int (mult _v_35 (plus _t_36 _t_36))))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((cubes (mult _qv_33 _qv_34))=(mult (cubes _qv_34) (cubes _qv_33))))
USE ASSUMPTION FAILED

  backtrack to: (((nat-to-int (plus _v_35 _v_35))+(nat-to-int (mult _v_35 (plus _t_36 _t_36))))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(nat-to-int (plus _v_35 _v_35)))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(nat-to-int (plus _v_35 _v_35)))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_1 _qv_2)=(plus _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(nat-to-int (plus _v_35 _v_35)))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_3 _qv_4) _qv_5)=(plus _qv_3 (plus _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(nat-to-int (plus _v_35 _v_35)))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((mult _qv_6 _qv_7)=(mult _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(nat-to-int (plus _v_35 _v_35)))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((mult (mult _qv_8 _qv_9) _qv_10)=(mult _qv_8 (mult _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(nat-to-int (plus _v_35 _v_35)))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat)) ((tri (tri _qv_11))=_qv_11))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(nat-to-int (plus _v_35 _v_35)))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat)) ((cubes (cubes _qv_12))=_qv_12))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(nat-to-int (plus _v_35 _v_35)))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(nat-to-int (plus _v_35 _v_35)))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_14))=(nat-to-int _qv_14)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(nat-to-int (plus _v_35 _v_35)))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat)) ((nat-to-int (tri _qv_15))=(nat-to-int _qv_15)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(nat-to-int (plus _v_35 _v_35)))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat)) ((nat-to-int (cubes _qv_16))=(nat-to-int _qv_16)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(nat-to-int (plus _v_35 _v_35)))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((mult _qv_17 (plus _qv_18 _qv_19))=(plus (mult _qv_17 _qv_18) (mult _qv_17 _qv_19))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(nat-to-int (plus _v_35 _v_35)))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus _qv_20 (mult _qv_21 _qv_22))=(mult (plus _qv_20 _qv_21) (plus _qv_20 _qv_22))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(nat-to-int (plus _v_35 _v_35)))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_23 _qv_24))=(plus (succ _qv_23) (succ _qv_24))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(nat-to-int (plus _v_35 _v_35)))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_23 _qv_24))=(plus (succ _qv_24) (succ _qv_23))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(nat-to-int (plus _v_35 _v_35)))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (mult _qv_25 _qv_26))=(mult (succ _qv_25) (succ _qv_26))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(nat-to-int (plus _v_35 _v_35)))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (mult _qv_25 _qv_26))=(mult (succ _qv_26) (succ _qv_25))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(nat-to-int (plus _v_35 _v_35)))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((tri (plus _qv_27 _qv_28))=(plus (tri _qv_27) (tri _qv_28))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(nat-to-int (plus _v_35 _v_35)))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((tri (plus _qv_27 _qv_28))=(plus (tri _qv_28) (tri _qv_27))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(nat-to-int (plus _v_35 _v_35)))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((tri (mult _qv_29 _qv_30))=(mult (tri _qv_29) (tri _qv_30))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(nat-to-int (plus _v_35 _v_35)))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((tri (mult _qv_29 _qv_30))=(mult (tri _qv_30) (tri _qv_29))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(nat-to-int (plus _v_35 _v_35)))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((cubes (plus _qv_31 _qv_32))=(plus (cubes _qv_31) (cubes _qv_32))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(nat-to-int (plus _v_35 _v_35)))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((cubes (plus _qv_31 _qv_32))=(plus (cubes _qv_32) (cubes _qv_31))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(nat-to-int (plus _v_35 _v_35)))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((cubes (mult _qv_33 _qv_34))=(mult (cubes _qv_33) (cubes _qv_34))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(nat-to-int (plus _v_35 _v_35)))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((cubes (mult _qv_33 _qv_34))=(mult (cubes _qv_34) (cubes _qv_33))))
USE ASSUMPTION FAILED

  backtrack to: (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(nat-to-int (plus _v_35 _v_35)))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
  rewritten [4]: (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(nat-to-int (plus _v_35 _v_35)))=(nat-to-int (mult _v_35 (succ (succ (plus _t_36 _t_36))))))
  rewritten [12]: (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+((nat-to-int _v_35)+(nat-to-int _v_35)))=(nat-to-int (mult _v_35 (succ (succ (plus _t_36 _t_36))))))
  Maximum recursion depth reached
CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(nat-to-int (plus _v_35 _v_35)))=(nat-to-int (mult _v_35 (succ (succ (plus _t_36 _t_36))))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(nat-to-int (plus _v_35 _v_35)))=(nat-to-int (mult _v_35 (succ (succ (plus _t_36 _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_1 _qv_2)=(plus _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(nat-to-int (plus _v_35 _v_35)))=(nat-to-int (mult _v_35 (succ (succ (plus _t_36 _t_36))))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_3 _qv_4) _qv_5)=(plus _qv_3 (plus _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(nat-to-int (plus _v_35 _v_35)))=(nat-to-int (mult _v_35 (succ (succ (plus _t_36 _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((mult _qv_6 _qv_7)=(mult _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(nat-to-int (plus _v_35 _v_35)))=(nat-to-int (mult _v_35 (succ (succ (plus _t_36 _t_36))))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((mult (mult _qv_8 _qv_9) _qv_10)=(mult _qv_8 (mult _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(nat-to-int (plus _v_35 _v_35)))=(nat-to-int (mult _v_35 (succ (succ (plus _t_36 _t_36))))))
NOW TESTING (forall ((Nat)) ((tri (tri _qv_11))=_qv_11))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(nat-to-int (plus _v_35 _v_35)))=(nat-to-int (mult _v_35 (succ (succ (plus _t_36 _t_36))))))
NOW TESTING (forall ((Nat)) ((cubes (cubes _qv_12))=_qv_12))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(nat-to-int (plus _v_35 _v_35)))=(nat-to-int (mult _v_35 (succ (succ (plus _t_36 _t_36))))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(nat-to-int (plus _v_35 _v_35)))=(nat-to-int (mult _v_35 (succ (succ (plus _t_36 _t_36))))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_14))=(nat-to-int _qv_14)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(nat-to-int (plus _v_35 _v_35)))=(nat-to-int (mult _v_35 (succ (succ (plus _t_36 _t_36))))))
NOW TESTING (forall ((Nat)) ((nat-to-int (tri _qv_15))=(nat-to-int _qv_15)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(nat-to-int (plus _v_35 _v_35)))=(nat-to-int (mult _v_35 (succ (succ (plus _t_36 _t_36))))))
NOW TESTING (forall ((Nat)) ((nat-to-int (cubes _qv_16))=(nat-to-int _qv_16)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(nat-to-int (plus _v_35 _v_35)))=(nat-to-int (mult _v_35 (succ (succ (plus _t_36 _t_36))))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((mult _qv_17 (plus _qv_18 _qv_19))=(plus (mult _qv_17 _qv_18) (mult _qv_17 _qv_19))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(nat-to-int (plus _v_35 _v_35)))=(nat-to-int (mult _v_35 (succ (succ (plus _t_36 _t_36))))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus _qv_20 (mult _qv_21 _qv_22))=(mult (plus _qv_20 _qv_21) (plus _qv_20 _qv_22))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(nat-to-int (plus _v_35 _v_35)))=(nat-to-int (mult _v_35 (succ (succ (plus _t_36 _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_23 _qv_24))=(plus (succ _qv_23) (succ _qv_24))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(nat-to-int (plus _v_35 _v_35)))=(nat-to-int (mult _v_35 (succ (succ (plus _t_36 _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_23 _qv_24))=(plus (succ _qv_24) (succ _qv_23))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(nat-to-int (plus _v_35 _v_35)))=(nat-to-int (mult _v_35 (succ (succ (plus _t_36 _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (mult _qv_25 _qv_26))=(mult (succ _qv_25) (succ _qv_26))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(nat-to-int (plus _v_35 _v_35)))=(nat-to-int (mult _v_35 (succ (succ (plus _t_36 _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (mult _qv_25 _qv_26))=(mult (succ _qv_26) (succ _qv_25))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(nat-to-int (plus _v_35 _v_35)))=(nat-to-int (mult _v_35 (succ (succ (plus _t_36 _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((tri (plus _qv_27 _qv_28))=(plus (tri _qv_27) (tri _qv_28))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(nat-to-int (plus _v_35 _v_35)))=(nat-to-int (mult _v_35 (succ (succ (plus _t_36 _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((tri (plus _qv_27 _qv_28))=(plus (tri _qv_28) (tri _qv_27))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(nat-to-int (plus _v_35 _v_35)))=(nat-to-int (mult _v_35 (succ (succ (plus _t_36 _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((tri (mult _qv_29 _qv_30))=(mult (tri _qv_29) (tri _qv_30))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(nat-to-int (plus _v_35 _v_35)))=(nat-to-int (mult _v_35 (succ (succ (plus _t_36 _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((tri (mult _qv_29 _qv_30))=(mult (tri _qv_30) (tri _qv_29))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(nat-to-int (plus _v_35 _v_35)))=(nat-to-int (mult _v_35 (succ (succ (plus _t_36 _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((cubes (plus _qv_31 _qv_32))=(plus (cubes _qv_31) (cubes _qv_32))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(nat-to-int (plus _v_35 _v_35)))=(nat-to-int (mult _v_35 (succ (succ (plus _t_36 _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((cubes (plus _qv_31 _qv_32))=(plus (cubes _qv_32) (cubes _qv_31))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(nat-to-int (plus _v_35 _v_35)))=(nat-to-int (mult _v_35 (succ (succ (plus _t_36 _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((cubes (mult _qv_33 _qv_34))=(mult (cubes _qv_33) (cubes _qv_34))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(nat-to-int (plus _v_35 _v_35)))=(nat-to-int (mult _v_35 (succ (succ (plus _t_36 _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((cubes (mult _qv_33 _qv_34))=(mult (cubes _qv_34) (cubes _qv_33))))
USE ASSUMPTION FAILED

  backtrack to: (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(nat-to-int (plus _v_35 _v_35)))=(nat-to-int (mult _v_35 (succ (succ (plus _t_36 _t_36))))))
  rewritten [15]: (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(nat-to-int (plus _v_35 _v_35)))=(nat-to-int (mult (succ (succ (plus _t_36 _t_36))) _v_35)))
  Maximum recursion depth reached
CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(nat-to-int (plus _v_35 _v_35)))=(nat-to-int (mult _v_35 (succ (succ (plus _t_36 _t_36))))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(nat-to-int (plus _v_35 _v_35)))=(nat-to-int (mult _v_35 (succ (succ (plus _t_36 _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_1 _qv_2)=(plus _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(nat-to-int (plus _v_35 _v_35)))=(nat-to-int (mult _v_35 (succ (succ (plus _t_36 _t_36))))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_3 _qv_4) _qv_5)=(plus _qv_3 (plus _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(nat-to-int (plus _v_35 _v_35)))=(nat-to-int (mult _v_35 (succ (succ (plus _t_36 _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((mult _qv_6 _qv_7)=(mult _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(nat-to-int (plus _v_35 _v_35)))=(nat-to-int (mult _v_35 (succ (succ (plus _t_36 _t_36))))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((mult (mult _qv_8 _qv_9) _qv_10)=(mult _qv_8 (mult _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(nat-to-int (plus _v_35 _v_35)))=(nat-to-int (mult _v_35 (succ (succ (plus _t_36 _t_36))))))
NOW TESTING (forall ((Nat)) ((tri (tri _qv_11))=_qv_11))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(nat-to-int (plus _v_35 _v_35)))=(nat-to-int (mult _v_35 (succ (succ (plus _t_36 _t_36))))))
NOW TESTING (forall ((Nat)) ((cubes (cubes _qv_12))=_qv_12))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(nat-to-int (plus _v_35 _v_35)))=(nat-to-int (mult _v_35 (succ (succ (plus _t_36 _t_36))))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(nat-to-int (plus _v_35 _v_35)))=(nat-to-int (mult _v_35 (succ (succ (plus _t_36 _t_36))))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_14))=(nat-to-int _qv_14)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(nat-to-int (plus _v_35 _v_35)))=(nat-to-int (mult _v_35 (succ (succ (plus _t_36 _t_36))))))
NOW TESTING (forall ((Nat)) ((nat-to-int (tri _qv_15))=(nat-to-int _qv_15)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(nat-to-int (plus _v_35 _v_35)))=(nat-to-int (mult _v_35 (succ (succ (plus _t_36 _t_36))))))
NOW TESTING (forall ((Nat)) ((nat-to-int (cubes _qv_16))=(nat-to-int _qv_16)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(nat-to-int (plus _v_35 _v_35)))=(nat-to-int (mult _v_35 (succ (succ (plus _t_36 _t_36))))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((mult _qv_17 (plus _qv_18 _qv_19))=(plus (mult _qv_17 _qv_18) (mult _qv_17 _qv_19))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(nat-to-int (plus _v_35 _v_35)))=(nat-to-int (mult _v_35 (succ (succ (plus _t_36 _t_36))))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus _qv_20 (mult _qv_21 _qv_22))=(mult (plus _qv_20 _qv_21) (plus _qv_20 _qv_22))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(nat-to-int (plus _v_35 _v_35)))=(nat-to-int (mult _v_35 (succ (succ (plus _t_36 _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_23 _qv_24))=(plus (succ _qv_23) (succ _qv_24))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(nat-to-int (plus _v_35 _v_35)))=(nat-to-int (mult _v_35 (succ (succ (plus _t_36 _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_23 _qv_24))=(plus (succ _qv_24) (succ _qv_23))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(nat-to-int (plus _v_35 _v_35)))=(nat-to-int (mult _v_35 (succ (succ (plus _t_36 _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (mult _qv_25 _qv_26))=(mult (succ _qv_25) (succ _qv_26))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(nat-to-int (plus _v_35 _v_35)))=(nat-to-int (mult _v_35 (succ (succ (plus _t_36 _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (mult _qv_25 _qv_26))=(mult (succ _qv_26) (succ _qv_25))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(nat-to-int (plus _v_35 _v_35)))=(nat-to-int (mult _v_35 (succ (succ (plus _t_36 _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((tri (plus _qv_27 _qv_28))=(plus (tri _qv_27) (tri _qv_28))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(nat-to-int (plus _v_35 _v_35)))=(nat-to-int (mult _v_35 (succ (succ (plus _t_36 _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((tri (plus _qv_27 _qv_28))=(plus (tri _qv_28) (tri _qv_27))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(nat-to-int (plus _v_35 _v_35)))=(nat-to-int (mult _v_35 (succ (succ (plus _t_36 _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((tri (mult _qv_29 _qv_30))=(mult (tri _qv_29) (tri _qv_30))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(nat-to-int (plus _v_35 _v_35)))=(nat-to-int (mult _v_35 (succ (succ (plus _t_36 _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((tri (mult _qv_29 _qv_30))=(mult (tri _qv_30) (tri _qv_29))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(nat-to-int (plus _v_35 _v_35)))=(nat-to-int (mult _v_35 (succ (succ (plus _t_36 _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((cubes (plus _qv_31 _qv_32))=(plus (cubes _qv_31) (cubes _qv_32))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(nat-to-int (plus _v_35 _v_35)))=(nat-to-int (mult _v_35 (succ (succ (plus _t_36 _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((cubes (plus _qv_31 _qv_32))=(plus (cubes _qv_32) (cubes _qv_31))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(nat-to-int (plus _v_35 _v_35)))=(nat-to-int (mult _v_35 (succ (succ (plus _t_36 _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((cubes (mult _qv_33 _qv_34))=(mult (cubes _qv_33) (cubes _qv_34))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(nat-to-int (plus _v_35 _v_35)))=(nat-to-int (mult _v_35 (succ (succ (plus _t_36 _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((cubes (mult _qv_33 _qv_34))=(mult (cubes _qv_34) (cubes _qv_33))))
USE ASSUMPTION FAILED

  backtrack to: (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(nat-to-int (plus _v_35 _v_35)))=(nat-to-int (mult _v_35 (succ (succ (plus _t_36 _t_36))))))
  rewritten [15]: (((nat-to-int (mult (plus _v_35 _v_35) _t_36))+(nat-to-int (plus _v_35 _v_35)))=(nat-to-int (mult _v_35 (succ (succ (plus _t_36 _t_36))))))
  Maximum recursion depth reached
CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(nat-to-int (plus _v_35 _v_35)))=(nat-to-int (mult _v_35 (succ (succ (plus _t_36 _t_36))))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(nat-to-int (plus _v_35 _v_35)))=(nat-to-int (mult _v_35 (succ (succ (plus _t_36 _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_1 _qv_2)=(plus _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(nat-to-int (plus _v_35 _v_35)))=(nat-to-int (mult _v_35 (succ (succ (plus _t_36 _t_36))))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_3 _qv_4) _qv_5)=(plus _qv_3 (plus _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(nat-to-int (plus _v_35 _v_35)))=(nat-to-int (mult _v_35 (succ (succ (plus _t_36 _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((mult _qv_6 _qv_7)=(mult _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(nat-to-int (plus _v_35 _v_35)))=(nat-to-int (mult _v_35 (succ (succ (plus _t_36 _t_36))))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((mult (mult _qv_8 _qv_9) _qv_10)=(mult _qv_8 (mult _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(nat-to-int (plus _v_35 _v_35)))=(nat-to-int (mult _v_35 (succ (succ (plus _t_36 _t_36))))))
NOW TESTING (forall ((Nat)) ((tri (tri _qv_11))=_qv_11))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(nat-to-int (plus _v_35 _v_35)))=(nat-to-int (mult _v_35 (succ (succ (plus _t_36 _t_36))))))
NOW TESTING (forall ((Nat)) ((cubes (cubes _qv_12))=_qv_12))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(nat-to-int (plus _v_35 _v_35)))=(nat-to-int (mult _v_35 (succ (succ (plus _t_36 _t_36))))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(nat-to-int (plus _v_35 _v_35)))=(nat-to-int (mult _v_35 (succ (succ (plus _t_36 _t_36))))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_14))=(nat-to-int _qv_14)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(nat-to-int (plus _v_35 _v_35)))=(nat-to-int (mult _v_35 (succ (succ (plus _t_36 _t_36))))))
NOW TESTING (forall ((Nat)) ((nat-to-int (tri _qv_15))=(nat-to-int _qv_15)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(nat-to-int (plus _v_35 _v_35)))=(nat-to-int (mult _v_35 (succ (succ (plus _t_36 _t_36))))))
NOW TESTING (forall ((Nat)) ((nat-to-int (cubes _qv_16))=(nat-to-int _qv_16)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(nat-to-int (plus _v_35 _v_35)))=(nat-to-int (mult _v_35 (succ (succ (plus _t_36 _t_36))))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((mult _qv_17 (plus _qv_18 _qv_19))=(plus (mult _qv_17 _qv_18) (mult _qv_17 _qv_19))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(nat-to-int (plus _v_35 _v_35)))=(nat-to-int (mult _v_35 (succ (succ (plus _t_36 _t_36))))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus _qv_20 (mult _qv_21 _qv_22))=(mult (plus _qv_20 _qv_21) (plus _qv_20 _qv_22))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(nat-to-int (plus _v_35 _v_35)))=(nat-to-int (mult _v_35 (succ (succ (plus _t_36 _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_23 _qv_24))=(plus (succ _qv_23) (succ _qv_24))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(nat-to-int (plus _v_35 _v_35)))=(nat-to-int (mult _v_35 (succ (succ (plus _t_36 _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_23 _qv_24))=(plus (succ _qv_24) (succ _qv_23))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(nat-to-int (plus _v_35 _v_35)))=(nat-to-int (mult _v_35 (succ (succ (plus _t_36 _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (mult _qv_25 _qv_26))=(mult (succ _qv_25) (succ _qv_26))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(nat-to-int (plus _v_35 _v_35)))=(nat-to-int (mult _v_35 (succ (succ (plus _t_36 _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (mult _qv_25 _qv_26))=(mult (succ _qv_26) (succ _qv_25))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(nat-to-int (plus _v_35 _v_35)))=(nat-to-int (mult _v_35 (succ (succ (plus _t_36 _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((tri (plus _qv_27 _qv_28))=(plus (tri _qv_27) (tri _qv_28))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(nat-to-int (plus _v_35 _v_35)))=(nat-to-int (mult _v_35 (succ (succ (plus _t_36 _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((tri (plus _qv_27 _qv_28))=(plus (tri _qv_28) (tri _qv_27))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(nat-to-int (plus _v_35 _v_35)))=(nat-to-int (mult _v_35 (succ (succ (plus _t_36 _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((tri (mult _qv_29 _qv_30))=(mult (tri _qv_29) (tri _qv_30))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(nat-to-int (plus _v_35 _v_35)))=(nat-to-int (mult _v_35 (succ (succ (plus _t_36 _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((tri (mult _qv_29 _qv_30))=(mult (tri _qv_30) (tri _qv_29))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(nat-to-int (plus _v_35 _v_35)))=(nat-to-int (mult _v_35 (succ (succ (plus _t_36 _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((cubes (plus _qv_31 _qv_32))=(plus (cubes _qv_31) (cubes _qv_32))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(nat-to-int (plus _v_35 _v_35)))=(nat-to-int (mult _v_35 (succ (succ (plus _t_36 _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((cubes (plus _qv_31 _qv_32))=(plus (cubes _qv_32) (cubes _qv_31))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(nat-to-int (plus _v_35 _v_35)))=(nat-to-int (mult _v_35 (succ (succ (plus _t_36 _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((cubes (mult _qv_33 _qv_34))=(mult (cubes _qv_33) (cubes _qv_34))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(nat-to-int (plus _v_35 _v_35)))=(nat-to-int (mult _v_35 (succ (succ (plus _t_36 _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((cubes (mult _qv_33 _qv_34))=(mult (cubes _qv_34) (cubes _qv_33))))
USE ASSUMPTION FAILED

  backtrack to: (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(nat-to-int (plus _v_35 _v_35)))=(nat-to-int (mult _v_35 (succ (succ (plus _t_36 _t_36))))))
  rewritten [17]: (((nat-to-int (mult _v_35 (plus _t_36 _t_36)))+(nat-to-int (plus _v_35 _v_35)))=(nat-to-int (mult _v_35 (succ (succ (plus _t_36 _t_36))))))
  Maximum recursion depth reached
CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(nat-to-int (plus _v_35 _v_35)))=(nat-to-int (mult _v_35 (succ (succ (plus _t_36 _t_36))))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(nat-to-int (plus _v_35 _v_35)))=(nat-to-int (mult _v_35 (succ (succ (plus _t_36 _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_1 _qv_2)=(plus _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(nat-to-int (plus _v_35 _v_35)))=(nat-to-int (mult _v_35 (succ (succ (plus _t_36 _t_36))))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_3 _qv_4) _qv_5)=(plus _qv_3 (plus _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(nat-to-int (plus _v_35 _v_35)))=(nat-to-int (mult _v_35 (succ (succ (plus _t_36 _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((mult _qv_6 _qv_7)=(mult _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(nat-to-int (plus _v_35 _v_35)))=(nat-to-int (mult _v_35 (succ (succ (plus _t_36 _t_36))))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((mult (mult _qv_8 _qv_9) _qv_10)=(mult _qv_8 (mult _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(nat-to-int (plus _v_35 _v_35)))=(nat-to-int (mult _v_35 (succ (succ (plus _t_36 _t_36))))))
NOW TESTING (forall ((Nat)) ((tri (tri _qv_11))=_qv_11))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(nat-to-int (plus _v_35 _v_35)))=(nat-to-int (mult _v_35 (succ (succ (plus _t_36 _t_36))))))
NOW TESTING (forall ((Nat)) ((cubes (cubes _qv_12))=_qv_12))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(nat-to-int (plus _v_35 _v_35)))=(nat-to-int (mult _v_35 (succ (succ (plus _t_36 _t_36))))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(nat-to-int (plus _v_35 _v_35)))=(nat-to-int (mult _v_35 (succ (succ (plus _t_36 _t_36))))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_14))=(nat-to-int _qv_14)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(nat-to-int (plus _v_35 _v_35)))=(nat-to-int (mult _v_35 (succ (succ (plus _t_36 _t_36))))))
NOW TESTING (forall ((Nat)) ((nat-to-int (tri _qv_15))=(nat-to-int _qv_15)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(nat-to-int (plus _v_35 _v_35)))=(nat-to-int (mult _v_35 (succ (succ (plus _t_36 _t_36))))))
NOW TESTING (forall ((Nat)) ((nat-to-int (cubes _qv_16))=(nat-to-int _qv_16)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(nat-to-int (plus _v_35 _v_35)))=(nat-to-int (mult _v_35 (succ (succ (plus _t_36 _t_36))))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((mult _qv_17 (plus _qv_18 _qv_19))=(plus (mult _qv_17 _qv_18) (mult _qv_17 _qv_19))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(nat-to-int (plus _v_35 _v_35)))=(nat-to-int (mult _v_35 (succ (succ (plus _t_36 _t_36))))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus _qv_20 (mult _qv_21 _qv_22))=(mult (plus _qv_20 _qv_21) (plus _qv_20 _qv_22))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(nat-to-int (plus _v_35 _v_35)))=(nat-to-int (mult _v_35 (succ (succ (plus _t_36 _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_23 _qv_24))=(plus (succ _qv_23) (succ _qv_24))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(nat-to-int (plus _v_35 _v_35)))=(nat-to-int (mult _v_35 (succ (succ (plus _t_36 _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_23 _qv_24))=(plus (succ _qv_24) (succ _qv_23))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(nat-to-int (plus _v_35 _v_35)))=(nat-to-int (mult _v_35 (succ (succ (plus _t_36 _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (mult _qv_25 _qv_26))=(mult (succ _qv_25) (succ _qv_26))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(nat-to-int (plus _v_35 _v_35)))=(nat-to-int (mult _v_35 (succ (succ (plus _t_36 _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (mult _qv_25 _qv_26))=(mult (succ _qv_26) (succ _qv_25))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(nat-to-int (plus _v_35 _v_35)))=(nat-to-int (mult _v_35 (succ (succ (plus _t_36 _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((tri (plus _qv_27 _qv_28))=(plus (tri _qv_27) (tri _qv_28))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(nat-to-int (plus _v_35 _v_35)))=(nat-to-int (mult _v_35 (succ (succ (plus _t_36 _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((tri (plus _qv_27 _qv_28))=(plus (tri _qv_28) (tri _qv_27))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(nat-to-int (plus _v_35 _v_35)))=(nat-to-int (mult _v_35 (succ (succ (plus _t_36 _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((tri (mult _qv_29 _qv_30))=(mult (tri _qv_29) (tri _qv_30))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(nat-to-int (plus _v_35 _v_35)))=(nat-to-int (mult _v_35 (succ (succ (plus _t_36 _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((tri (mult _qv_29 _qv_30))=(mult (tri _qv_30) (tri _qv_29))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(nat-to-int (plus _v_35 _v_35)))=(nat-to-int (mult _v_35 (succ (succ (plus _t_36 _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((cubes (plus _qv_31 _qv_32))=(plus (cubes _qv_31) (cubes _qv_32))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(nat-to-int (plus _v_35 _v_35)))=(nat-to-int (mult _v_35 (succ (succ (plus _t_36 _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((cubes (plus _qv_31 _qv_32))=(plus (cubes _qv_32) (cubes _qv_31))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(nat-to-int (plus _v_35 _v_35)))=(nat-to-int (mult _v_35 (succ (succ (plus _t_36 _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((cubes (mult _qv_33 _qv_34))=(mult (cubes _qv_33) (cubes _qv_34))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(nat-to-int (plus _v_35 _v_35)))=(nat-to-int (mult _v_35 (succ (succ (plus _t_36 _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((cubes (mult _qv_33 _qv_34))=(mult (cubes _qv_34) (cubes _qv_33))))
USE ASSUMPTION FAILED

  backtrack to: (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(nat-to-int (plus _v_35 _v_35)))=(nat-to-int (mult _v_35 (succ (succ (plus _t_36 _t_36))))))
  rewritten [12]: (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+((nat-to-int _v_35)+(nat-to-int _v_35)))=(nat-to-int (mult _v_35 (succ (succ (plus _t_36 _t_36))))))
  Maximum recursion depth reached
CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(nat-to-int (plus _v_35 _v_35)))=(nat-to-int (mult _v_35 (succ (succ (plus _t_36 _t_36))))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(nat-to-int (plus _v_35 _v_35)))=(nat-to-int (mult _v_35 (succ (succ (plus _t_36 _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_1 _qv_2)=(plus _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(nat-to-int (plus _v_35 _v_35)))=(nat-to-int (mult _v_35 (succ (succ (plus _t_36 _t_36))))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_3 _qv_4) _qv_5)=(plus _qv_3 (plus _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(nat-to-int (plus _v_35 _v_35)))=(nat-to-int (mult _v_35 (succ (succ (plus _t_36 _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((mult _qv_6 _qv_7)=(mult _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(nat-to-int (plus _v_35 _v_35)))=(nat-to-int (mult _v_35 (succ (succ (plus _t_36 _t_36))))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((mult (mult _qv_8 _qv_9) _qv_10)=(mult _qv_8 (mult _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(nat-to-int (plus _v_35 _v_35)))=(nat-to-int (mult _v_35 (succ (succ (plus _t_36 _t_36))))))
NOW TESTING (forall ((Nat)) ((tri (tri _qv_11))=_qv_11))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(nat-to-int (plus _v_35 _v_35)))=(nat-to-int (mult _v_35 (succ (succ (plus _t_36 _t_36))))))
NOW TESTING (forall ((Nat)) ((cubes (cubes _qv_12))=_qv_12))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(nat-to-int (plus _v_35 _v_35)))=(nat-to-int (mult _v_35 (succ (succ (plus _t_36 _t_36))))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(nat-to-int (plus _v_35 _v_35)))=(nat-to-int (mult _v_35 (succ (succ (plus _t_36 _t_36))))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_14))=(nat-to-int _qv_14)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(nat-to-int (plus _v_35 _v_35)))=(nat-to-int (mult _v_35 (succ (succ (plus _t_36 _t_36))))))
NOW TESTING (forall ((Nat)) ((nat-to-int (tri _qv_15))=(nat-to-int _qv_15)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(nat-to-int (plus _v_35 _v_35)))=(nat-to-int (mult _v_35 (succ (succ (plus _t_36 _t_36))))))
NOW TESTING (forall ((Nat)) ((nat-to-int (cubes _qv_16))=(nat-to-int _qv_16)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(nat-to-int (plus _v_35 _v_35)))=(nat-to-int (mult _v_35 (succ (succ (plus _t_36 _t_36))))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((mult _qv_17 (plus _qv_18 _qv_19))=(plus (mult _qv_17 _qv_18) (mult _qv_17 _qv_19))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(nat-to-int (plus _v_35 _v_35)))=(nat-to-int (mult _v_35 (succ (succ (plus _t_36 _t_36))))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus _qv_20 (mult _qv_21 _qv_22))=(mult (plus _qv_20 _qv_21) (plus _qv_20 _qv_22))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(nat-to-int (plus _v_35 _v_35)))=(nat-to-int (mult _v_35 (succ (succ (plus _t_36 _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_23 _qv_24))=(plus (succ _qv_23) (succ _qv_24))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(nat-to-int (plus _v_35 _v_35)))=(nat-to-int (mult _v_35 (succ (succ (plus _t_36 _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_23 _qv_24))=(plus (succ _qv_24) (succ _qv_23))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(nat-to-int (plus _v_35 _v_35)))=(nat-to-int (mult _v_35 (succ (succ (plus _t_36 _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (mult _qv_25 _qv_26))=(mult (succ _qv_25) (succ _qv_26))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(nat-to-int (plus _v_35 _v_35)))=(nat-to-int (mult _v_35 (succ (succ (plus _t_36 _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (mult _qv_25 _qv_26))=(mult (succ _qv_26) (succ _qv_25))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(nat-to-int (plus _v_35 _v_35)))=(nat-to-int (mult _v_35 (succ (succ (plus _t_36 _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((tri (plus _qv_27 _qv_28))=(plus (tri _qv_27) (tri _qv_28))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(nat-to-int (plus _v_35 _v_35)))=(nat-to-int (mult _v_35 (succ (succ (plus _t_36 _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((tri (plus _qv_27 _qv_28))=(plus (tri _qv_28) (tri _qv_27))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(nat-to-int (plus _v_35 _v_35)))=(nat-to-int (mult _v_35 (succ (succ (plus _t_36 _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((tri (mult _qv_29 _qv_30))=(mult (tri _qv_29) (tri _qv_30))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(nat-to-int (plus _v_35 _v_35)))=(nat-to-int (mult _v_35 (succ (succ (plus _t_36 _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((tri (mult _qv_29 _qv_30))=(mult (tri _qv_30) (tri _qv_29))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(nat-to-int (plus _v_35 _v_35)))=(nat-to-int (mult _v_35 (succ (succ (plus _t_36 _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((cubes (plus _qv_31 _qv_32))=(plus (cubes _qv_31) (cubes _qv_32))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(nat-to-int (plus _v_35 _v_35)))=(nat-to-int (mult _v_35 (succ (succ (plus _t_36 _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((cubes (plus _qv_31 _qv_32))=(plus (cubes _qv_32) (cubes _qv_31))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(nat-to-int (plus _v_35 _v_35)))=(nat-to-int (mult _v_35 (succ (succ (plus _t_36 _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((cubes (mult _qv_33 _qv_34))=(mult (cubes _qv_33) (cubes _qv_34))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(nat-to-int (plus _v_35 _v_35)))=(nat-to-int (mult _v_35 (succ (succ (plus _t_36 _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((cubes (mult _qv_33 _qv_34))=(mult (cubes _qv_34) (cubes _qv_33))))
USE ASSUMPTION FAILED

  backtrack to: (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(nat-to-int (plus _v_35 _v_35)))=(nat-to-int (mult _v_35 (succ (succ (plus _t_36 _t_36))))))
  rewritten [15]: (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(nat-to-int (plus _v_35 _v_35)))=(nat-to-int (mult (succ (succ (plus _t_36 _t_36))) _v_35)))
  Maximum recursion depth reached
CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(nat-to-int (plus _v_35 _v_35)))=(nat-to-int (mult _v_35 (succ (succ (plus _t_36 _t_36))))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(nat-to-int (plus _v_35 _v_35)))=(nat-to-int (mult _v_35 (succ (succ (plus _t_36 _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_1 _qv_2)=(plus _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(nat-to-int (plus _v_35 _v_35)))=(nat-to-int (mult _v_35 (succ (succ (plus _t_36 _t_36))))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_3 _qv_4) _qv_5)=(plus _qv_3 (plus _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(nat-to-int (plus _v_35 _v_35)))=(nat-to-int (mult _v_35 (succ (succ (plus _t_36 _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((mult _qv_6 _qv_7)=(mult _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(nat-to-int (plus _v_35 _v_35)))=(nat-to-int (mult _v_35 (succ (succ (plus _t_36 _t_36))))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((mult (mult _qv_8 _qv_9) _qv_10)=(mult _qv_8 (mult _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(nat-to-int (plus _v_35 _v_35)))=(nat-to-int (mult _v_35 (succ (succ (plus _t_36 _t_36))))))
NOW TESTING (forall ((Nat)) ((tri (tri _qv_11))=_qv_11))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(nat-to-int (plus _v_35 _v_35)))=(nat-to-int (mult _v_35 (succ (succ (plus _t_36 _t_36))))))
NOW TESTING (forall ((Nat)) ((cubes (cubes _qv_12))=_qv_12))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(nat-to-int (plus _v_35 _v_35)))=(nat-to-int (mult _v_35 (succ (succ (plus _t_36 _t_36))))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(nat-to-int (plus _v_35 _v_35)))=(nat-to-int (mult _v_35 (succ (succ (plus _t_36 _t_36))))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_14))=(nat-to-int _qv_14)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(nat-to-int (plus _v_35 _v_35)))=(nat-to-int (mult _v_35 (succ (succ (plus _t_36 _t_36))))))
NOW TESTING (forall ((Nat)) ((nat-to-int (tri _qv_15))=(nat-to-int _qv_15)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(nat-to-int (plus _v_35 _v_35)))=(nat-to-int (mult _v_35 (succ (succ (plus _t_36 _t_36))))))
NOW TESTING (forall ((Nat)) ((nat-to-int (cubes _qv_16))=(nat-to-int _qv_16)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(nat-to-int (plus _v_35 _v_35)))=(nat-to-int (mult _v_35 (succ (succ (plus _t_36 _t_36))))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((mult _qv_17 (plus _qv_18 _qv_19))=(plus (mult _qv_17 _qv_18) (mult _qv_17 _qv_19))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(nat-to-int (plus _v_35 _v_35)))=(nat-to-int (mult _v_35 (succ (succ (plus _t_36 _t_36))))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus _qv_20 (mult _qv_21 _qv_22))=(mult (plus _qv_20 _qv_21) (plus _qv_20 _qv_22))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(nat-to-int (plus _v_35 _v_35)))=(nat-to-int (mult _v_35 (succ (succ (plus _t_36 _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_23 _qv_24))=(plus (succ _qv_23) (succ _qv_24))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(nat-to-int (plus _v_35 _v_35)))=(nat-to-int (mult _v_35 (succ (succ (plus _t_36 _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_23 _qv_24))=(plus (succ _qv_24) (succ _qv_23))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(nat-to-int (plus _v_35 _v_35)))=(nat-to-int (mult _v_35 (succ (succ (plus _t_36 _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (mult _qv_25 _qv_26))=(mult (succ _qv_25) (succ _qv_26))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(nat-to-int (plus _v_35 _v_35)))=(nat-to-int (mult _v_35 (succ (succ (plus _t_36 _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (mult _qv_25 _qv_26))=(mult (succ _qv_26) (succ _qv_25))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(nat-to-int (plus _v_35 _v_35)))=(nat-to-int (mult _v_35 (succ (succ (plus _t_36 _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((tri (plus _qv_27 _qv_28))=(plus (tri _qv_27) (tri _qv_28))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(nat-to-int (plus _v_35 _v_35)))=(nat-to-int (mult _v_35 (succ (succ (plus _t_36 _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((tri (plus _qv_27 _qv_28))=(plus (tri _qv_28) (tri _qv_27))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(nat-to-int (plus _v_35 _v_35)))=(nat-to-int (mult _v_35 (succ (succ (plus _t_36 _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((tri (mult _qv_29 _qv_30))=(mult (tri _qv_29) (tri _qv_30))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(nat-to-int (plus _v_35 _v_35)))=(nat-to-int (mult _v_35 (succ (succ (plus _t_36 _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((tri (mult _qv_29 _qv_30))=(mult (tri _qv_30) (tri _qv_29))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(nat-to-int (plus _v_35 _v_35)))=(nat-to-int (mult _v_35 (succ (succ (plus _t_36 _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((cubes (plus _qv_31 _qv_32))=(plus (cubes _qv_31) (cubes _qv_32))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(nat-to-int (plus _v_35 _v_35)))=(nat-to-int (mult _v_35 (succ (succ (plus _t_36 _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((cubes (plus _qv_31 _qv_32))=(plus (cubes _qv_32) (cubes _qv_31))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(nat-to-int (plus _v_35 _v_35)))=(nat-to-int (mult _v_35 (succ (succ (plus _t_36 _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((cubes (mult _qv_33 _qv_34))=(mult (cubes _qv_33) (cubes _qv_34))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(nat-to-int (plus _v_35 _v_35)))=(nat-to-int (mult _v_35 (succ (succ (plus _t_36 _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((cubes (mult _qv_33 _qv_34))=(mult (cubes _qv_34) (cubes _qv_33))))
USE ASSUMPTION FAILED

  backtrack to: (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(nat-to-int (plus _v_35 _v_35)))=(nat-to-int (mult _v_35 (succ (succ (plus _t_36 _t_36))))))
  rewritten [15]: (((nat-to-int (mult (plus _v_35 _v_35) _t_36))+(nat-to-int (plus _v_35 _v_35)))=(nat-to-int (mult _v_35 (succ (succ (plus _t_36 _t_36))))))
  Maximum recursion depth reached
CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(nat-to-int (plus _v_35 _v_35)))=(nat-to-int (mult _v_35 (succ (succ (plus _t_36 _t_36))))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(nat-to-int (plus _v_35 _v_35)))=(nat-to-int (mult _v_35 (succ (succ (plus _t_36 _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_1 _qv_2)=(plus _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(nat-to-int (plus _v_35 _v_35)))=(nat-to-int (mult _v_35 (succ (succ (plus _t_36 _t_36))))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_3 _qv_4) _qv_5)=(plus _qv_3 (plus _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(nat-to-int (plus _v_35 _v_35)))=(nat-to-int (mult _v_35 (succ (succ (plus _t_36 _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((mult _qv_6 _qv_7)=(mult _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(nat-to-int (plus _v_35 _v_35)))=(nat-to-int (mult _v_35 (succ (succ (plus _t_36 _t_36))))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((mult (mult _qv_8 _qv_9) _qv_10)=(mult _qv_8 (mult _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(nat-to-int (plus _v_35 _v_35)))=(nat-to-int (mult _v_35 (succ (succ (plus _t_36 _t_36))))))
NOW TESTING (forall ((Nat)) ((tri (tri _qv_11))=_qv_11))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(nat-to-int (plus _v_35 _v_35)))=(nat-to-int (mult _v_35 (succ (succ (plus _t_36 _t_36))))))
NOW TESTING (forall ((Nat)) ((cubes (cubes _qv_12))=_qv_12))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(nat-to-int (plus _v_35 _v_35)))=(nat-to-int (mult _v_35 (succ (succ (plus _t_36 _t_36))))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(nat-to-int (plus _v_35 _v_35)))=(nat-to-int (mult _v_35 (succ (succ (plus _t_36 _t_36))))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_14))=(nat-to-int _qv_14)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(nat-to-int (plus _v_35 _v_35)))=(nat-to-int (mult _v_35 (succ (succ (plus _t_36 _t_36))))))
NOW TESTING (forall ((Nat)) ((nat-to-int (tri _qv_15))=(nat-to-int _qv_15)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(nat-to-int (plus _v_35 _v_35)))=(nat-to-int (mult _v_35 (succ (succ (plus _t_36 _t_36))))))
NOW TESTING (forall ((Nat)) ((nat-to-int (cubes _qv_16))=(nat-to-int _qv_16)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(nat-to-int (plus _v_35 _v_35)))=(nat-to-int (mult _v_35 (succ (succ (plus _t_36 _t_36))))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((mult _qv_17 (plus _qv_18 _qv_19))=(plus (mult _qv_17 _qv_18) (mult _qv_17 _qv_19))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(nat-to-int (plus _v_35 _v_35)))=(nat-to-int (mult _v_35 (succ (succ (plus _t_36 _t_36))))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus _qv_20 (mult _qv_21 _qv_22))=(mult (plus _qv_20 _qv_21) (plus _qv_20 _qv_22))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(nat-to-int (plus _v_35 _v_35)))=(nat-to-int (mult _v_35 (succ (succ (plus _t_36 _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_23 _qv_24))=(plus (succ _qv_23) (succ _qv_24))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(nat-to-int (plus _v_35 _v_35)))=(nat-to-int (mult _v_35 (succ (succ (plus _t_36 _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_23 _qv_24))=(plus (succ _qv_24) (succ _qv_23))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(nat-to-int (plus _v_35 _v_35)))=(nat-to-int (mult _v_35 (succ (succ (plus _t_36 _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (mult _qv_25 _qv_26))=(mult (succ _qv_25) (succ _qv_26))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(nat-to-int (plus _v_35 _v_35)))=(nat-to-int (mult _v_35 (succ (succ (plus _t_36 _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (mult _qv_25 _qv_26))=(mult (succ _qv_26) (succ _qv_25))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(nat-to-int (plus _v_35 _v_35)))=(nat-to-int (mult _v_35 (succ (succ (plus _t_36 _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((tri (plus _qv_27 _qv_28))=(plus (tri _qv_27) (tri _qv_28))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(nat-to-int (plus _v_35 _v_35)))=(nat-to-int (mult _v_35 (succ (succ (plus _t_36 _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((tri (plus _qv_27 _qv_28))=(plus (tri _qv_28) (tri _qv_27))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(nat-to-int (plus _v_35 _v_35)))=(nat-to-int (mult _v_35 (succ (succ (plus _t_36 _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((tri (mult _qv_29 _qv_30))=(mult (tri _qv_29) (tri _qv_30))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(nat-to-int (plus _v_35 _v_35)))=(nat-to-int (mult _v_35 (succ (succ (plus _t_36 _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((tri (mult _qv_29 _qv_30))=(mult (tri _qv_30) (tri _qv_29))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(nat-to-int (plus _v_35 _v_35)))=(nat-to-int (mult _v_35 (succ (succ (plus _t_36 _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((cubes (plus _qv_31 _qv_32))=(plus (cubes _qv_31) (cubes _qv_32))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(nat-to-int (plus _v_35 _v_35)))=(nat-to-int (mult _v_35 (succ (succ (plus _t_36 _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((cubes (plus _qv_31 _qv_32))=(plus (cubes _qv_32) (cubes _qv_31))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(nat-to-int (plus _v_35 _v_35)))=(nat-to-int (mult _v_35 (succ (succ (plus _t_36 _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((cubes (mult _qv_33 _qv_34))=(mult (cubes _qv_33) (cubes _qv_34))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(nat-to-int (plus _v_35 _v_35)))=(nat-to-int (mult _v_35 (succ (succ (plus _t_36 _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((cubes (mult _qv_33 _qv_34))=(mult (cubes _qv_34) (cubes _qv_33))))
USE ASSUMPTION FAILED

  backtrack to: (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(nat-to-int (plus _v_35 _v_35)))=(nat-to-int (mult _v_35 (succ (succ (plus _t_36 _t_36))))))
  rewritten [17]: (((nat-to-int (mult _v_35 (plus _t_36 _t_36)))+(nat-to-int (plus _v_35 _v_35)))=(nat-to-int (mult _v_35 (succ (succ (plus _t_36 _t_36))))))
  Maximum recursion depth reached
CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(nat-to-int (plus _v_35 _v_35)))=(nat-to-int (mult _v_35 (succ (succ (plus _t_36 _t_36))))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(nat-to-int (plus _v_35 _v_35)))=(nat-to-int (mult _v_35 (succ (succ (plus _t_36 _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_1 _qv_2)=(plus _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(nat-to-int (plus _v_35 _v_35)))=(nat-to-int (mult _v_35 (succ (succ (plus _t_36 _t_36))))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_3 _qv_4) _qv_5)=(plus _qv_3 (plus _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(nat-to-int (plus _v_35 _v_35)))=(nat-to-int (mult _v_35 (succ (succ (plus _t_36 _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((mult _qv_6 _qv_7)=(mult _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(nat-to-int (plus _v_35 _v_35)))=(nat-to-int (mult _v_35 (succ (succ (plus _t_36 _t_36))))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((mult (mult _qv_8 _qv_9) _qv_10)=(mult _qv_8 (mult _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(nat-to-int (plus _v_35 _v_35)))=(nat-to-int (mult _v_35 (succ (succ (plus _t_36 _t_36))))))
NOW TESTING (forall ((Nat)) ((tri (tri _qv_11))=_qv_11))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(nat-to-int (plus _v_35 _v_35)))=(nat-to-int (mult _v_35 (succ (succ (plus _t_36 _t_36))))))
NOW TESTING (forall ((Nat)) ((cubes (cubes _qv_12))=_qv_12))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(nat-to-int (plus _v_35 _v_35)))=(nat-to-int (mult _v_35 (succ (succ (plus _t_36 _t_36))))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(nat-to-int (plus _v_35 _v_35)))=(nat-to-int (mult _v_35 (succ (succ (plus _t_36 _t_36))))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_14))=(nat-to-int _qv_14)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(nat-to-int (plus _v_35 _v_35)))=(nat-to-int (mult _v_35 (succ (succ (plus _t_36 _t_36))))))
NOW TESTING (forall ((Nat)) ((nat-to-int (tri _qv_15))=(nat-to-int _qv_15)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(nat-to-int (plus _v_35 _v_35)))=(nat-to-int (mult _v_35 (succ (succ (plus _t_36 _t_36))))))
NOW TESTING (forall ((Nat)) ((nat-to-int (cubes _qv_16))=(nat-to-int _qv_16)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(nat-to-int (plus _v_35 _v_35)))=(nat-to-int (mult _v_35 (succ (succ (plus _t_36 _t_36))))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((mult _qv_17 (plus _qv_18 _qv_19))=(plus (mult _qv_17 _qv_18) (mult _qv_17 _qv_19))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(nat-to-int (plus _v_35 _v_35)))=(nat-to-int (mult _v_35 (succ (succ (plus _t_36 _t_36))))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus _qv_20 (mult _qv_21 _qv_22))=(mult (plus _qv_20 _qv_21) (plus _qv_20 _qv_22))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(nat-to-int (plus _v_35 _v_35)))=(nat-to-int (mult _v_35 (succ (succ (plus _t_36 _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_23 _qv_24))=(plus (succ _qv_23) (succ _qv_24))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(nat-to-int (plus _v_35 _v_35)))=(nat-to-int (mult _v_35 (succ (succ (plus _t_36 _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_23 _qv_24))=(plus (succ _qv_24) (succ _qv_23))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(nat-to-int (plus _v_35 _v_35)))=(nat-to-int (mult _v_35 (succ (succ (plus _t_36 _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (mult _qv_25 _qv_26))=(mult (succ _qv_25) (succ _qv_26))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(nat-to-int (plus _v_35 _v_35)))=(nat-to-int (mult _v_35 (succ (succ (plus _t_36 _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (mult _qv_25 _qv_26))=(mult (succ _qv_26) (succ _qv_25))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(nat-to-int (plus _v_35 _v_35)))=(nat-to-int (mult _v_35 (succ (succ (plus _t_36 _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((tri (plus _qv_27 _qv_28))=(plus (tri _qv_27) (tri _qv_28))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(nat-to-int (plus _v_35 _v_35)))=(nat-to-int (mult _v_35 (succ (succ (plus _t_36 _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((tri (plus _qv_27 _qv_28))=(plus (tri _qv_28) (tri _qv_27))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(nat-to-int (plus _v_35 _v_35)))=(nat-to-int (mult _v_35 (succ (succ (plus _t_36 _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((tri (mult _qv_29 _qv_30))=(mult (tri _qv_29) (tri _qv_30))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(nat-to-int (plus _v_35 _v_35)))=(nat-to-int (mult _v_35 (succ (succ (plus _t_36 _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((tri (mult _qv_29 _qv_30))=(mult (tri _qv_30) (tri _qv_29))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(nat-to-int (plus _v_35 _v_35)))=(nat-to-int (mult _v_35 (succ (succ (plus _t_36 _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((cubes (plus _qv_31 _qv_32))=(plus (cubes _qv_31) (cubes _qv_32))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(nat-to-int (plus _v_35 _v_35)))=(nat-to-int (mult _v_35 (succ (succ (plus _t_36 _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((cubes (plus _qv_31 _qv_32))=(plus (cubes _qv_32) (cubes _qv_31))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(nat-to-int (plus _v_35 _v_35)))=(nat-to-int (mult _v_35 (succ (succ (plus _t_36 _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((cubes (mult _qv_33 _qv_34))=(mult (cubes _qv_33) (cubes _qv_34))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(nat-to-int (plus _v_35 _v_35)))=(nat-to-int (mult _v_35 (succ (succ (plus _t_36 _t_36))))))
NOW TESTING (forall ((Nat) (Nat)) ((cubes (mult _qv_33 _qv_34))=(mult (cubes _qv_34) (cubes _qv_33))))
USE ASSUMPTION FAILED

  backtrack to: (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(nat-to-int (plus _v_35 _v_35)))=(nat-to-int (mult _v_35 (succ (succ (plus _t_36 _t_36))))))
CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(nat-to-int (plus _v_35 _v_35)))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(nat-to-int (plus _v_35 _v_35)))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_1 _qv_2)=(plus _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(nat-to-int (plus _v_35 _v_35)))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_3 _qv_4) _qv_5)=(plus _qv_3 (plus _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(nat-to-int (plus _v_35 _v_35)))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((mult _qv_6 _qv_7)=(mult _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(nat-to-int (plus _v_35 _v_35)))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((mult (mult _qv_8 _qv_9) _qv_10)=(mult _qv_8 (mult _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(nat-to-int (plus _v_35 _v_35)))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat)) ((tri (tri _qv_11))=_qv_11))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(nat-to-int (plus _v_35 _v_35)))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat)) ((cubes (cubes _qv_12))=_qv_12))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(nat-to-int (plus _v_35 _v_35)))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(nat-to-int (plus _v_35 _v_35)))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_14))=(nat-to-int _qv_14)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(nat-to-int (plus _v_35 _v_35)))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat)) ((nat-to-int (tri _qv_15))=(nat-to-int _qv_15)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(nat-to-int (plus _v_35 _v_35)))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat)) ((nat-to-int (cubes _qv_16))=(nat-to-int _qv_16)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(nat-to-int (plus _v_35 _v_35)))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((mult _qv_17 (plus _qv_18 _qv_19))=(plus (mult _qv_17 _qv_18) (mult _qv_17 _qv_19))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(nat-to-int (plus _v_35 _v_35)))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus _qv_20 (mult _qv_21 _qv_22))=(mult (plus _qv_20 _qv_21) (plus _qv_20 _qv_22))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(nat-to-int (plus _v_35 _v_35)))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_23 _qv_24))=(plus (succ _qv_23) (succ _qv_24))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(nat-to-int (plus _v_35 _v_35)))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_23 _qv_24))=(plus (succ _qv_24) (succ _qv_23))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(nat-to-int (plus _v_35 _v_35)))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (mult _qv_25 _qv_26))=(mult (succ _qv_25) (succ _qv_26))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(nat-to-int (plus _v_35 _v_35)))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (mult _qv_25 _qv_26))=(mult (succ _qv_26) (succ _qv_25))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(nat-to-int (plus _v_35 _v_35)))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((tri (plus _qv_27 _qv_28))=(plus (tri _qv_27) (tri _qv_28))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(nat-to-int (plus _v_35 _v_35)))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((tri (plus _qv_27 _qv_28))=(plus (tri _qv_28) (tri _qv_27))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(nat-to-int (plus _v_35 _v_35)))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((tri (mult _qv_29 _qv_30))=(mult (tri _qv_29) (tri _qv_30))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(nat-to-int (plus _v_35 _v_35)))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((tri (mult _qv_29 _qv_30))=(mult (tri _qv_30) (tri _qv_29))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(nat-to-int (plus _v_35 _v_35)))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((cubes (plus _qv_31 _qv_32))=(plus (cubes _qv_31) (cubes _qv_32))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(nat-to-int (plus _v_35 _v_35)))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((cubes (plus _qv_31 _qv_32))=(plus (cubes _qv_32) (cubes _qv_31))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(nat-to-int (plus _v_35 _v_35)))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((cubes (mult _qv_33 _qv_34))=(mult (cubes _qv_33) (cubes _qv_34))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(nat-to-int (plus _v_35 _v_35)))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((cubes (mult _qv_33 _qv_34))=(mult (cubes _qv_34) (cubes _qv_33))))
USE ASSUMPTION FAILED

  backtrack to: (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(nat-to-int (plus _v_35 _v_35)))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
  rewritten [12]: (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+((nat-to-int _v_35)+(nat-to-int _v_35)))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
  rewritten [2]: (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(2*(nat-to-int _v_35)))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
  Maximum recursion depth reached
CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_1 _qv_2)=(plus _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_3 _qv_4) _qv_5)=(plus _qv_3 (plus _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((mult _qv_6 _qv_7)=(mult _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((mult (mult _qv_8 _qv_9) _qv_10)=(mult _qv_8 (mult _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat)) ((tri (tri _qv_11))=_qv_11))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat)) ((cubes (cubes _qv_12))=_qv_12))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_14))=(nat-to-int _qv_14)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat)) ((nat-to-int (tri _qv_15))=(nat-to-int _qv_15)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat)) ((nat-to-int (cubes _qv_16))=(nat-to-int _qv_16)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((mult _qv_17 (plus _qv_18 _qv_19))=(plus (mult _qv_17 _qv_18) (mult _qv_17 _qv_19))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus _qv_20 (mult _qv_21 _qv_22))=(mult (plus _qv_20 _qv_21) (plus _qv_20 _qv_22))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_23 _qv_24))=(plus (succ _qv_23) (succ _qv_24))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_23 _qv_24))=(plus (succ _qv_24) (succ _qv_23))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (mult _qv_25 _qv_26))=(mult (succ _qv_25) (succ _qv_26))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (mult _qv_25 _qv_26))=(mult (succ _qv_26) (succ _qv_25))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((tri (plus _qv_27 _qv_28))=(plus (tri _qv_27) (tri _qv_28))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((tri (plus _qv_27 _qv_28))=(plus (tri _qv_28) (tri _qv_27))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((tri (mult _qv_29 _qv_30))=(mult (tri _qv_29) (tri _qv_30))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((tri (mult _qv_29 _qv_30))=(mult (tri _qv_30) (tri _qv_29))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((cubes (plus _qv_31 _qv_32))=(plus (cubes _qv_31) (cubes _qv_32))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((cubes (plus _qv_31 _qv_32))=(plus (cubes _qv_32) (cubes _qv_31))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((cubes (mult _qv_33 _qv_34))=(mult (cubes _qv_33) (cubes _qv_34))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((cubes (mult _qv_33 _qv_34))=(mult (cubes _qv_34) (cubes _qv_33))))
USE ASSUMPTION FAILED

  backtrack to: ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
  rewritten [4]: ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (succ (plus _t_36 _t_36))))))
  Maximum recursion depth reached
CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_1 _qv_2)=(plus _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_3 _qv_4) _qv_5)=(plus _qv_3 (plus _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((mult _qv_6 _qv_7)=(mult _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((mult (mult _qv_8 _qv_9) _qv_10)=(mult _qv_8 (mult _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat)) ((tri (tri _qv_11))=_qv_11))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat)) ((cubes (cubes _qv_12))=_qv_12))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_14))=(nat-to-int _qv_14)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat)) ((nat-to-int (tri _qv_15))=(nat-to-int _qv_15)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat)) ((nat-to-int (cubes _qv_16))=(nat-to-int _qv_16)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((mult _qv_17 (plus _qv_18 _qv_19))=(plus (mult _qv_17 _qv_18) (mult _qv_17 _qv_19))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus _qv_20 (mult _qv_21 _qv_22))=(mult (plus _qv_20 _qv_21) (plus _qv_20 _qv_22))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_23 _qv_24))=(plus (succ _qv_23) (succ _qv_24))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_23 _qv_24))=(plus (succ _qv_24) (succ _qv_23))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (mult _qv_25 _qv_26))=(mult (succ _qv_25) (succ _qv_26))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (mult _qv_25 _qv_26))=(mult (succ _qv_26) (succ _qv_25))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((tri (plus _qv_27 _qv_28))=(plus (tri _qv_27) (tri _qv_28))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((tri (plus _qv_27 _qv_28))=(plus (tri _qv_28) (tri _qv_27))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((tri (mult _qv_29 _qv_30))=(mult (tri _qv_29) (tri _qv_30))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((tri (mult _qv_29 _qv_30))=(mult (tri _qv_30) (tri _qv_29))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((cubes (plus _qv_31 _qv_32))=(plus (cubes _qv_31) (cubes _qv_32))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((cubes (plus _qv_31 _qv_32))=(plus (cubes _qv_32) (cubes _qv_31))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((cubes (mult _qv_33 _qv_34))=(mult (cubes _qv_33) (cubes _qv_34))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((cubes (mult _qv_33 _qv_34))=(mult (cubes _qv_34) (cubes _qv_33))))
USE ASSUMPTION FAILED

  backtrack to: ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
  rewritten [13]: ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
  Maximum recursion depth reached
CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_1 _qv_2)=(plus _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_3 _qv_4) _qv_5)=(plus _qv_3 (plus _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((mult _qv_6 _qv_7)=(mult _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((mult (mult _qv_8 _qv_9) _qv_10)=(mult _qv_8 (mult _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat)) ((tri (tri _qv_11))=_qv_11))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat)) ((cubes (cubes _qv_12))=_qv_12))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_14))=(nat-to-int _qv_14)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat)) ((nat-to-int (tri _qv_15))=(nat-to-int _qv_15)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat)) ((nat-to-int (cubes _qv_16))=(nat-to-int _qv_16)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((mult _qv_17 (plus _qv_18 _qv_19))=(plus (mult _qv_17 _qv_18) (mult _qv_17 _qv_19))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus _qv_20 (mult _qv_21 _qv_22))=(mult (plus _qv_20 _qv_21) (plus _qv_20 _qv_22))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_23 _qv_24))=(plus (succ _qv_23) (succ _qv_24))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_23 _qv_24))=(plus (succ _qv_24) (succ _qv_23))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (mult _qv_25 _qv_26))=(mult (succ _qv_25) (succ _qv_26))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (mult _qv_25 _qv_26))=(mult (succ _qv_26) (succ _qv_25))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((tri (plus _qv_27 _qv_28))=(plus (tri _qv_27) (tri _qv_28))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((tri (plus _qv_27 _qv_28))=(plus (tri _qv_28) (tri _qv_27))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((tri (mult _qv_29 _qv_30))=(mult (tri _qv_29) (tri _qv_30))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((tri (mult _qv_29 _qv_30))=(mult (tri _qv_30) (tri _qv_29))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((cubes (plus _qv_31 _qv_32))=(plus (cubes _qv_31) (cubes _qv_32))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((cubes (plus _qv_31 _qv_32))=(plus (cubes _qv_32) (cubes _qv_31))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((cubes (mult _qv_33 _qv_34))=(mult (cubes _qv_33) (cubes _qv_34))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((cubes (mult _qv_33 _qv_34))=(mult (cubes _qv_34) (cubes _qv_33))))
USE ASSUMPTION FAILED

  backtrack to: ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
  rewritten [13]: ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
  Maximum recursion depth reached
CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_1 _qv_2)=(plus _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_3 _qv_4) _qv_5)=(plus _qv_3 (plus _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((mult _qv_6 _qv_7)=(mult _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((mult (mult _qv_8 _qv_9) _qv_10)=(mult _qv_8 (mult _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat)) ((tri (tri _qv_11))=_qv_11))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat)) ((cubes (cubes _qv_12))=_qv_12))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_14))=(nat-to-int _qv_14)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat)) ((nat-to-int (tri _qv_15))=(nat-to-int _qv_15)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat)) ((nat-to-int (cubes _qv_16))=(nat-to-int _qv_16)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((mult _qv_17 (plus _qv_18 _qv_19))=(plus (mult _qv_17 _qv_18) (mult _qv_17 _qv_19))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus _qv_20 (mult _qv_21 _qv_22))=(mult (plus _qv_20 _qv_21) (plus _qv_20 _qv_22))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_23 _qv_24))=(plus (succ _qv_23) (succ _qv_24))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_23 _qv_24))=(plus (succ _qv_24) (succ _qv_23))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (mult _qv_25 _qv_26))=(mult (succ _qv_25) (succ _qv_26))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (mult _qv_25 _qv_26))=(mult (succ _qv_26) (succ _qv_25))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((tri (plus _qv_27 _qv_28))=(plus (tri _qv_27) (tri _qv_28))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((tri (plus _qv_27 _qv_28))=(plus (tri _qv_28) (tri _qv_27))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((tri (mult _qv_29 _qv_30))=(mult (tri _qv_29) (tri _qv_30))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((tri (mult _qv_29 _qv_30))=(mult (tri _qv_30) (tri _qv_29))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((cubes (plus _qv_31 _qv_32))=(plus (cubes _qv_31) (cubes _qv_32))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((cubes (plus _qv_31 _qv_32))=(plus (cubes _qv_32) (cubes _qv_31))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((cubes (mult _qv_33 _qv_34))=(mult (cubes _qv_33) (cubes _qv_34))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((cubes (mult _qv_33 _qv_34))=(mult (cubes _qv_34) (cubes _qv_33))))
USE ASSUMPTION FAILED

  backtrack to: ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
  rewritten [15]: ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult (succ (plus (succ _t_36) _t_36)) _v_35)))
  Maximum recursion depth reached
CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_1 _qv_2)=(plus _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_3 _qv_4) _qv_5)=(plus _qv_3 (plus _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((mult _qv_6 _qv_7)=(mult _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((mult (mult _qv_8 _qv_9) _qv_10)=(mult _qv_8 (mult _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat)) ((tri (tri _qv_11))=_qv_11))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat)) ((cubes (cubes _qv_12))=_qv_12))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_14))=(nat-to-int _qv_14)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat)) ((nat-to-int (tri _qv_15))=(nat-to-int _qv_15)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat)) ((nat-to-int (cubes _qv_16))=(nat-to-int _qv_16)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((mult _qv_17 (plus _qv_18 _qv_19))=(plus (mult _qv_17 _qv_18) (mult _qv_17 _qv_19))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus _qv_20 (mult _qv_21 _qv_22))=(mult (plus _qv_20 _qv_21) (plus _qv_20 _qv_22))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_23 _qv_24))=(plus (succ _qv_23) (succ _qv_24))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_23 _qv_24))=(plus (succ _qv_24) (succ _qv_23))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (mult _qv_25 _qv_26))=(mult (succ _qv_25) (succ _qv_26))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (mult _qv_25 _qv_26))=(mult (succ _qv_26) (succ _qv_25))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((tri (plus _qv_27 _qv_28))=(plus (tri _qv_27) (tri _qv_28))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((tri (plus _qv_27 _qv_28))=(plus (tri _qv_28) (tri _qv_27))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((tri (mult _qv_29 _qv_30))=(mult (tri _qv_29) (tri _qv_30))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((tri (mult _qv_29 _qv_30))=(mult (tri _qv_30) (tri _qv_29))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((cubes (plus _qv_31 _qv_32))=(plus (cubes _qv_31) (cubes _qv_32))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((cubes (plus _qv_31 _qv_32))=(plus (cubes _qv_32) (cubes _qv_31))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((cubes (mult _qv_33 _qv_34))=(mult (cubes _qv_33) (cubes _qv_34))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((cubes (mult _qv_33 _qv_34))=(mult (cubes _qv_34) (cubes _qv_33))))
USE ASSUMPTION FAILED

  backtrack to: ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
  rewritten [15]: ([+    (nat-to-int (mult (plus _v_35 _v_35) _t_36))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
  Maximum recursion depth reached
CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_1 _qv_2)=(plus _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_3 _qv_4) _qv_5)=(plus _qv_3 (plus _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((mult _qv_6 _qv_7)=(mult _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((mult (mult _qv_8 _qv_9) _qv_10)=(mult _qv_8 (mult _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat)) ((tri (tri _qv_11))=_qv_11))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat)) ((cubes (cubes _qv_12))=_qv_12))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_14))=(nat-to-int _qv_14)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat)) ((nat-to-int (tri _qv_15))=(nat-to-int _qv_15)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat)) ((nat-to-int (cubes _qv_16))=(nat-to-int _qv_16)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((mult _qv_17 (plus _qv_18 _qv_19))=(plus (mult _qv_17 _qv_18) (mult _qv_17 _qv_19))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus _qv_20 (mult _qv_21 _qv_22))=(mult (plus _qv_20 _qv_21) (plus _qv_20 _qv_22))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_23 _qv_24))=(plus (succ _qv_23) (succ _qv_24))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_23 _qv_24))=(plus (succ _qv_24) (succ _qv_23))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (mult _qv_25 _qv_26))=(mult (succ _qv_25) (succ _qv_26))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (mult _qv_25 _qv_26))=(mult (succ _qv_26) (succ _qv_25))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((tri (plus _qv_27 _qv_28))=(plus (tri _qv_27) (tri _qv_28))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((tri (plus _qv_27 _qv_28))=(plus (tri _qv_28) (tri _qv_27))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((tri (mult _qv_29 _qv_30))=(mult (tri _qv_29) (tri _qv_30))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((tri (mult _qv_29 _qv_30))=(mult (tri _qv_30) (tri _qv_29))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((cubes (plus _qv_31 _qv_32))=(plus (cubes _qv_31) (cubes _qv_32))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((cubes (plus _qv_31 _qv_32))=(plus (cubes _qv_32) (cubes _qv_31))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((cubes (mult _qv_33 _qv_34))=(mult (cubes _qv_33) (cubes _qv_34))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((cubes (mult _qv_33 _qv_34))=(mult (cubes _qv_34) (cubes _qv_33))))
USE ASSUMPTION FAILED

  backtrack to: ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
  rewritten [17]: ([+    (nat-to-int (mult _v_35 (plus _t_36 _t_36)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
  Maximum recursion depth reached
CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_1 _qv_2)=(plus _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_3 _qv_4) _qv_5)=(plus _qv_3 (plus _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((mult _qv_6 _qv_7)=(mult _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((mult (mult _qv_8 _qv_9) _qv_10)=(mult _qv_8 (mult _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat)) ((tri (tri _qv_11))=_qv_11))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat)) ((cubes (cubes _qv_12))=_qv_12))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_14))=(nat-to-int _qv_14)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat)) ((nat-to-int (tri _qv_15))=(nat-to-int _qv_15)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat)) ((nat-to-int (cubes _qv_16))=(nat-to-int _qv_16)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((mult _qv_17 (plus _qv_18 _qv_19))=(plus (mult _qv_17 _qv_18) (mult _qv_17 _qv_19))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus _qv_20 (mult _qv_21 _qv_22))=(mult (plus _qv_20 _qv_21) (plus _qv_20 _qv_22))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_23 _qv_24))=(plus (succ _qv_23) (succ _qv_24))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_23 _qv_24))=(plus (succ _qv_24) (succ _qv_23))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (mult _qv_25 _qv_26))=(mult (succ _qv_25) (succ _qv_26))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (mult _qv_25 _qv_26))=(mult (succ _qv_26) (succ _qv_25))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((tri (plus _qv_27 _qv_28))=(plus (tri _qv_27) (tri _qv_28))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((tri (plus _qv_27 _qv_28))=(plus (tri _qv_28) (tri _qv_27))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((tri (mult _qv_29 _qv_30))=(mult (tri _qv_29) (tri _qv_30))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((tri (mult _qv_29 _qv_30))=(mult (tri _qv_30) (tri _qv_29))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((cubes (plus _qv_31 _qv_32))=(plus (cubes _qv_31) (cubes _qv_32))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((cubes (plus _qv_31 _qv_32))=(plus (cubes _qv_32) (cubes _qv_31))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((cubes (mult _qv_33 _qv_34))=(mult (cubes _qv_33) (cubes _qv_34))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((cubes (mult _qv_33 _qv_34))=(mult (cubes _qv_34) (cubes _qv_33))))
USE ASSUMPTION FAILED

  backtrack to: ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
  rewritten [2]: (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(2*(nat-to-int _v_35)))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
  Maximum recursion depth reached
CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_1 _qv_2)=(plus _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_3 _qv_4) _qv_5)=(plus _qv_3 (plus _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((mult _qv_6 _qv_7)=(mult _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((mult (mult _qv_8 _qv_9) _qv_10)=(mult _qv_8 (mult _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat)) ((tri (tri _qv_11))=_qv_11))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat)) ((cubes (cubes _qv_12))=_qv_12))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_14))=(nat-to-int _qv_14)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat)) ((nat-to-int (tri _qv_15))=(nat-to-int _qv_15)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat)) ((nat-to-int (cubes _qv_16))=(nat-to-int _qv_16)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((mult _qv_17 (plus _qv_18 _qv_19))=(plus (mult _qv_17 _qv_18) (mult _qv_17 _qv_19))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus _qv_20 (mult _qv_21 _qv_22))=(mult (plus _qv_20 _qv_21) (plus _qv_20 _qv_22))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_23 _qv_24))=(plus (succ _qv_23) (succ _qv_24))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_23 _qv_24))=(plus (succ _qv_24) (succ _qv_23))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (mult _qv_25 _qv_26))=(mult (succ _qv_25) (succ _qv_26))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (mult _qv_25 _qv_26))=(mult (succ _qv_26) (succ _qv_25))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((tri (plus _qv_27 _qv_28))=(plus (tri _qv_27) (tri _qv_28))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((tri (plus _qv_27 _qv_28))=(plus (tri _qv_28) (tri _qv_27))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((tri (mult _qv_29 _qv_30))=(mult (tri _qv_29) (tri _qv_30))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((tri (mult _qv_29 _qv_30))=(mult (tri _qv_30) (tri _qv_29))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((cubes (plus _qv_31 _qv_32))=(plus (cubes _qv_31) (cubes _qv_32))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((cubes (plus _qv_31 _qv_32))=(plus (cubes _qv_32) (cubes _qv_31))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((cubes (mult _qv_33 _qv_34))=(mult (cubes _qv_33) (cubes _qv_34))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((cubes (mult _qv_33 _qv_34))=(mult (cubes _qv_34) (cubes _qv_33))))
USE ASSUMPTION FAILED

  backtrack to: ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
  rewritten [4]: ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (succ (plus _t_36 _t_36))))))
  Maximum recursion depth reached
CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_1 _qv_2)=(plus _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_3 _qv_4) _qv_5)=(plus _qv_3 (plus _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((mult _qv_6 _qv_7)=(mult _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((mult (mult _qv_8 _qv_9) _qv_10)=(mult _qv_8 (mult _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat)) ((tri (tri _qv_11))=_qv_11))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat)) ((cubes (cubes _qv_12))=_qv_12))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_14))=(nat-to-int _qv_14)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat)) ((nat-to-int (tri _qv_15))=(nat-to-int _qv_15)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat)) ((nat-to-int (cubes _qv_16))=(nat-to-int _qv_16)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((mult _qv_17 (plus _qv_18 _qv_19))=(plus (mult _qv_17 _qv_18) (mult _qv_17 _qv_19))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus _qv_20 (mult _qv_21 _qv_22))=(mult (plus _qv_20 _qv_21) (plus _qv_20 _qv_22))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_23 _qv_24))=(plus (succ _qv_23) (succ _qv_24))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_23 _qv_24))=(plus (succ _qv_24) (succ _qv_23))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (mult _qv_25 _qv_26))=(mult (succ _qv_25) (succ _qv_26))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (mult _qv_25 _qv_26))=(mult (succ _qv_26) (succ _qv_25))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((tri (plus _qv_27 _qv_28))=(plus (tri _qv_27) (tri _qv_28))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((tri (plus _qv_27 _qv_28))=(plus (tri _qv_28) (tri _qv_27))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((tri (mult _qv_29 _qv_30))=(mult (tri _qv_29) (tri _qv_30))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((tri (mult _qv_29 _qv_30))=(mult (tri _qv_30) (tri _qv_29))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((cubes (plus _qv_31 _qv_32))=(plus (cubes _qv_31) (cubes _qv_32))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((cubes (plus _qv_31 _qv_32))=(plus (cubes _qv_32) (cubes _qv_31))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((cubes (mult _qv_33 _qv_34))=(mult (cubes _qv_33) (cubes _qv_34))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((cubes (mult _qv_33 _qv_34))=(mult (cubes _qv_34) (cubes _qv_33))))
USE ASSUMPTION FAILED

  backtrack to: ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
  rewritten [13]: ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
  Maximum recursion depth reached
CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_1 _qv_2)=(plus _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_3 _qv_4) _qv_5)=(plus _qv_3 (plus _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((mult _qv_6 _qv_7)=(mult _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((mult (mult _qv_8 _qv_9) _qv_10)=(mult _qv_8 (mult _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat)) ((tri (tri _qv_11))=_qv_11))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat)) ((cubes (cubes _qv_12))=_qv_12))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_14))=(nat-to-int _qv_14)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat)) ((nat-to-int (tri _qv_15))=(nat-to-int _qv_15)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat)) ((nat-to-int (cubes _qv_16))=(nat-to-int _qv_16)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((mult _qv_17 (plus _qv_18 _qv_19))=(plus (mult _qv_17 _qv_18) (mult _qv_17 _qv_19))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus _qv_20 (mult _qv_21 _qv_22))=(mult (plus _qv_20 _qv_21) (plus _qv_20 _qv_22))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_23 _qv_24))=(plus (succ _qv_23) (succ _qv_24))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_23 _qv_24))=(plus (succ _qv_24) (succ _qv_23))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (mult _qv_25 _qv_26))=(mult (succ _qv_25) (succ _qv_26))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (mult _qv_25 _qv_26))=(mult (succ _qv_26) (succ _qv_25))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((tri (plus _qv_27 _qv_28))=(plus (tri _qv_27) (tri _qv_28))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((tri (plus _qv_27 _qv_28))=(plus (tri _qv_28) (tri _qv_27))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((tri (mult _qv_29 _qv_30))=(mult (tri _qv_29) (tri _qv_30))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((tri (mult _qv_29 _qv_30))=(mult (tri _qv_30) (tri _qv_29))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((cubes (plus _qv_31 _qv_32))=(plus (cubes _qv_31) (cubes _qv_32))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((cubes (plus _qv_31 _qv_32))=(plus (cubes _qv_32) (cubes _qv_31))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((cubes (mult _qv_33 _qv_34))=(mult (cubes _qv_33) (cubes _qv_34))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((cubes (mult _qv_33 _qv_34))=(mult (cubes _qv_34) (cubes _qv_33))))
USE ASSUMPTION FAILED

  backtrack to: ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
  rewritten [13]: ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
  Maximum recursion depth reached
CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_1 _qv_2)=(plus _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_3 _qv_4) _qv_5)=(plus _qv_3 (plus _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((mult _qv_6 _qv_7)=(mult _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((mult (mult _qv_8 _qv_9) _qv_10)=(mult _qv_8 (mult _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat)) ((tri (tri _qv_11))=_qv_11))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat)) ((cubes (cubes _qv_12))=_qv_12))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_14))=(nat-to-int _qv_14)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat)) ((nat-to-int (tri _qv_15))=(nat-to-int _qv_15)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat)) ((nat-to-int (cubes _qv_16))=(nat-to-int _qv_16)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((mult _qv_17 (plus _qv_18 _qv_19))=(plus (mult _qv_17 _qv_18) (mult _qv_17 _qv_19))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus _qv_20 (mult _qv_21 _qv_22))=(mult (plus _qv_20 _qv_21) (plus _qv_20 _qv_22))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_23 _qv_24))=(plus (succ _qv_23) (succ _qv_24))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_23 _qv_24))=(plus (succ _qv_24) (succ _qv_23))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (mult _qv_25 _qv_26))=(mult (succ _qv_25) (succ _qv_26))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (mult _qv_25 _qv_26))=(mult (succ _qv_26) (succ _qv_25))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((tri (plus _qv_27 _qv_28))=(plus (tri _qv_27) (tri _qv_28))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((tri (plus _qv_27 _qv_28))=(plus (tri _qv_28) (tri _qv_27))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((tri (mult _qv_29 _qv_30))=(mult (tri _qv_29) (tri _qv_30))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((tri (mult _qv_29 _qv_30))=(mult (tri _qv_30) (tri _qv_29))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((cubes (plus _qv_31 _qv_32))=(plus (cubes _qv_31) (cubes _qv_32))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((cubes (plus _qv_31 _qv_32))=(plus (cubes _qv_32) (cubes _qv_31))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((cubes (mult _qv_33 _qv_34))=(mult (cubes _qv_33) (cubes _qv_34))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((cubes (mult _qv_33 _qv_34))=(mult (cubes _qv_34) (cubes _qv_33))))
USE ASSUMPTION FAILED

  backtrack to: ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
  rewritten [15]: ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult (succ (plus (succ _t_36) _t_36)) _v_35)))
  Maximum recursion depth reached
CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_1 _qv_2)=(plus _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_3 _qv_4) _qv_5)=(plus _qv_3 (plus _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((mult _qv_6 _qv_7)=(mult _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((mult (mult _qv_8 _qv_9) _qv_10)=(mult _qv_8 (mult _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat)) ((tri (tri _qv_11))=_qv_11))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat)) ((cubes (cubes _qv_12))=_qv_12))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_14))=(nat-to-int _qv_14)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat)) ((nat-to-int (tri _qv_15))=(nat-to-int _qv_15)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat)) ((nat-to-int (cubes _qv_16))=(nat-to-int _qv_16)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((mult _qv_17 (plus _qv_18 _qv_19))=(plus (mult _qv_17 _qv_18) (mult _qv_17 _qv_19))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus _qv_20 (mult _qv_21 _qv_22))=(mult (plus _qv_20 _qv_21) (plus _qv_20 _qv_22))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_23 _qv_24))=(plus (succ _qv_23) (succ _qv_24))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_23 _qv_24))=(plus (succ _qv_24) (succ _qv_23))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (mult _qv_25 _qv_26))=(mult (succ _qv_25) (succ _qv_26))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (mult _qv_25 _qv_26))=(mult (succ _qv_26) (succ _qv_25))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((tri (plus _qv_27 _qv_28))=(plus (tri _qv_27) (tri _qv_28))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((tri (plus _qv_27 _qv_28))=(plus (tri _qv_28) (tri _qv_27))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((tri (mult _qv_29 _qv_30))=(mult (tri _qv_29) (tri _qv_30))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((tri (mult _qv_29 _qv_30))=(mult (tri _qv_30) (tri _qv_29))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((cubes (plus _qv_31 _qv_32))=(plus (cubes _qv_31) (cubes _qv_32))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((cubes (plus _qv_31 _qv_32))=(plus (cubes _qv_32) (cubes _qv_31))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((cubes (mult _qv_33 _qv_34))=(mult (cubes _qv_33) (cubes _qv_34))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((cubes (mult _qv_33 _qv_34))=(mult (cubes _qv_34) (cubes _qv_33))))
USE ASSUMPTION FAILED

  backtrack to: ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
  rewritten [15]: ([+    (nat-to-int (mult (plus _v_35 _v_35) _t_36))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
  Maximum recursion depth reached
CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_1 _qv_2)=(plus _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_3 _qv_4) _qv_5)=(plus _qv_3 (plus _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((mult _qv_6 _qv_7)=(mult _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((mult (mult _qv_8 _qv_9) _qv_10)=(mult _qv_8 (mult _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat)) ((tri (tri _qv_11))=_qv_11))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat)) ((cubes (cubes _qv_12))=_qv_12))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_14))=(nat-to-int _qv_14)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat)) ((nat-to-int (tri _qv_15))=(nat-to-int _qv_15)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat)) ((nat-to-int (cubes _qv_16))=(nat-to-int _qv_16)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((mult _qv_17 (plus _qv_18 _qv_19))=(plus (mult _qv_17 _qv_18) (mult _qv_17 _qv_19))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus _qv_20 (mult _qv_21 _qv_22))=(mult (plus _qv_20 _qv_21) (plus _qv_20 _qv_22))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_23 _qv_24))=(plus (succ _qv_23) (succ _qv_24))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_23 _qv_24))=(plus (succ _qv_24) (succ _qv_23))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (mult _qv_25 _qv_26))=(mult (succ _qv_25) (succ _qv_26))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (mult _qv_25 _qv_26))=(mult (succ _qv_26) (succ _qv_25))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((tri (plus _qv_27 _qv_28))=(plus (tri _qv_27) (tri _qv_28))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((tri (plus _qv_27 _qv_28))=(plus (tri _qv_28) (tri _qv_27))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((tri (mult _qv_29 _qv_30))=(mult (tri _qv_29) (tri _qv_30))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((tri (mult _qv_29 _qv_30))=(mult (tri _qv_30) (tri _qv_29))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((cubes (plus _qv_31 _qv_32))=(plus (cubes _qv_31) (cubes _qv_32))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((cubes (plus _qv_31 _qv_32))=(plus (cubes _qv_32) (cubes _qv_31))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((cubes (mult _qv_33 _qv_34))=(mult (cubes _qv_33) (cubes _qv_34))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((cubes (mult _qv_33 _qv_34))=(mult (cubes _qv_34) (cubes _qv_33))))
USE ASSUMPTION FAILED

  backtrack to: ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
  rewritten [17]: ([+    (nat-to-int (mult _v_35 (plus _t_36 _t_36)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
  Maximum recursion depth reached
CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_1 _qv_2)=(plus _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_3 _qv_4) _qv_5)=(plus _qv_3 (plus _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((mult _qv_6 _qv_7)=(mult _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((mult (mult _qv_8 _qv_9) _qv_10)=(mult _qv_8 (mult _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat)) ((tri (tri _qv_11))=_qv_11))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat)) ((cubes (cubes _qv_12))=_qv_12))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_14))=(nat-to-int _qv_14)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat)) ((nat-to-int (tri _qv_15))=(nat-to-int _qv_15)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat)) ((nat-to-int (cubes _qv_16))=(nat-to-int _qv_16)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((mult _qv_17 (plus _qv_18 _qv_19))=(plus (mult _qv_17 _qv_18) (mult _qv_17 _qv_19))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus _qv_20 (mult _qv_21 _qv_22))=(mult (plus _qv_20 _qv_21) (plus _qv_20 _qv_22))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_23 _qv_24))=(plus (succ _qv_23) (succ _qv_24))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_23 _qv_24))=(plus (succ _qv_24) (succ _qv_23))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (mult _qv_25 _qv_26))=(mult (succ _qv_25) (succ _qv_26))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (mult _qv_25 _qv_26))=(mult (succ _qv_26) (succ _qv_25))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((tri (plus _qv_27 _qv_28))=(plus (tri _qv_27) (tri _qv_28))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((tri (plus _qv_27 _qv_28))=(plus (tri _qv_28) (tri _qv_27))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((tri (mult _qv_29 _qv_30))=(mult (tri _qv_29) (tri _qv_30))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((tri (mult _qv_29 _qv_30))=(mult (tri _qv_30) (tri _qv_29))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((cubes (plus _qv_31 _qv_32))=(plus (cubes _qv_31) (cubes _qv_32))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((cubes (plus _qv_31 _qv_32))=(plus (cubes _qv_32) (cubes _qv_31))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((cubes (mult _qv_33 _qv_34))=(mult (cubes _qv_33) (cubes _qv_34))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((cubes (mult _qv_33 _qv_34))=(mult (cubes _qv_34) (cubes _qv_33))))
USE ASSUMPTION FAILED

  backtrack to: ([+    (nat-to-int (mult _t_36 (plus _v_35 _v_35)))    (nat-to-int _v_35)    (nat-to-int _v_35)]=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(nat-to-int (plus _v_35 _v_35)))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(nat-to-int (plus _v_35 _v_35)))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_1 _qv_2)=(plus _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(nat-to-int (plus _v_35 _v_35)))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_3 _qv_4) _qv_5)=(plus _qv_3 (plus _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(nat-to-int (plus _v_35 _v_35)))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((mult _qv_6 _qv_7)=(mult _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(nat-to-int (plus _v_35 _v_35)))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((mult (mult _qv_8 _qv_9) _qv_10)=(mult _qv_8 (mult _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(nat-to-int (plus _v_35 _v_35)))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat)) ((tri (tri _qv_11))=_qv_11))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(nat-to-int (plus _v_35 _v_35)))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat)) ((cubes (cubes _qv_12))=_qv_12))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(nat-to-int (plus _v_35 _v_35)))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(nat-to-int (plus _v_35 _v_35)))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_14))=(nat-to-int _qv_14)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(nat-to-int (plus _v_35 _v_35)))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat)) ((nat-to-int (tri _qv_15))=(nat-to-int _qv_15)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(nat-to-int (plus _v_35 _v_35)))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat)) ((nat-to-int (cubes _qv_16))=(nat-to-int _qv_16)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(nat-to-int (plus _v_35 _v_35)))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((mult _qv_17 (plus _qv_18 _qv_19))=(plus (mult _qv_17 _qv_18) (mult _qv_17 _qv_19))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(nat-to-int (plus _v_35 _v_35)))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus _qv_20 (mult _qv_21 _qv_22))=(mult (plus _qv_20 _qv_21) (plus _qv_20 _qv_22))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(nat-to-int (plus _v_35 _v_35)))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_23 _qv_24))=(plus (succ _qv_23) (succ _qv_24))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(nat-to-int (plus _v_35 _v_35)))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_23 _qv_24))=(plus (succ _qv_24) (succ _qv_23))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(nat-to-int (plus _v_35 _v_35)))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (mult _qv_25 _qv_26))=(mult (succ _qv_25) (succ _qv_26))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(nat-to-int (plus _v_35 _v_35)))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (mult _qv_25 _qv_26))=(mult (succ _qv_26) (succ _qv_25))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(nat-to-int (plus _v_35 _v_35)))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((tri (plus _qv_27 _qv_28))=(plus (tri _qv_27) (tri _qv_28))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(nat-to-int (plus _v_35 _v_35)))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((tri (plus _qv_27 _qv_28))=(plus (tri _qv_28) (tri _qv_27))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(nat-to-int (plus _v_35 _v_35)))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((tri (mult _qv_29 _qv_30))=(mult (tri _qv_29) (tri _qv_30))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(nat-to-int (plus _v_35 _v_35)))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((tri (mult _qv_29 _qv_30))=(mult (tri _qv_30) (tri _qv_29))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(nat-to-int (plus _v_35 _v_35)))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((cubes (plus _qv_31 _qv_32))=(plus (cubes _qv_31) (cubes _qv_32))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(nat-to-int (plus _v_35 _v_35)))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((cubes (plus _qv_31 _qv_32))=(plus (cubes _qv_32) (cubes _qv_31))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(nat-to-int (plus _v_35 _v_35)))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((cubes (mult _qv_33 _qv_34))=(mult (cubes _qv_33) (cubes _qv_34))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(nat-to-int (plus _v_35 _v_35)))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((cubes (mult _qv_33 _qv_34))=(mult (cubes _qv_34) (cubes _qv_33))))
USE ASSUMPTION FAILED

  backtrack to: (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(nat-to-int (plus _v_35 _v_35)))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
  rewritten [15]: (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(nat-to-int (plus _v_35 _v_35)))=(nat-to-int (mult (succ (plus (succ _t_36) _t_36)) _v_35)))
  rewritten [4]: (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(nat-to-int (plus _v_35 _v_35)))=(nat-to-int (mult (succ (succ (plus _t_36 _t_36))) _v_35)))
  Maximum recursion depth reached
CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(nat-to-int (plus _v_35 _v_35)))=(nat-to-int (mult (succ (plus (succ _t_36) _t_36)) _v_35)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(nat-to-int (plus _v_35 _v_35)))=(nat-to-int (mult (succ (plus (succ _t_36) _t_36)) _v_35)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_1 _qv_2)=(plus _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(nat-to-int (plus _v_35 _v_35)))=(nat-to-int (mult (succ (plus (succ _t_36) _t_36)) _v_35)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_3 _qv_4) _qv_5)=(plus _qv_3 (plus _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(nat-to-int (plus _v_35 _v_35)))=(nat-to-int (mult (succ (plus (succ _t_36) _t_36)) _v_35)))
NOW TESTING (forall ((Nat) (Nat)) ((mult _qv_6 _qv_7)=(mult _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(nat-to-int (plus _v_35 _v_35)))=(nat-to-int (mult (succ (plus (succ _t_36) _t_36)) _v_35)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((mult (mult _qv_8 _qv_9) _qv_10)=(mult _qv_8 (mult _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(nat-to-int (plus _v_35 _v_35)))=(nat-to-int (mult (succ (plus (succ _t_36) _t_36)) _v_35)))
NOW TESTING (forall ((Nat)) ((tri (tri _qv_11))=_qv_11))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(nat-to-int (plus _v_35 _v_35)))=(nat-to-int (mult (succ (plus (succ _t_36) _t_36)) _v_35)))
NOW TESTING (forall ((Nat)) ((cubes (cubes _qv_12))=_qv_12))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(nat-to-int (plus _v_35 _v_35)))=(nat-to-int (mult (succ (plus (succ _t_36) _t_36)) _v_35)))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(nat-to-int (plus _v_35 _v_35)))=(nat-to-int (mult (succ (plus (succ _t_36) _t_36)) _v_35)))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_14))=(nat-to-int _qv_14)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(nat-to-int (plus _v_35 _v_35)))=(nat-to-int (mult (succ (plus (succ _t_36) _t_36)) _v_35)))
NOW TESTING (forall ((Nat)) ((nat-to-int (tri _qv_15))=(nat-to-int _qv_15)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(nat-to-int (plus _v_35 _v_35)))=(nat-to-int (mult (succ (plus (succ _t_36) _t_36)) _v_35)))
NOW TESTING (forall ((Nat)) ((nat-to-int (cubes _qv_16))=(nat-to-int _qv_16)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(nat-to-int (plus _v_35 _v_35)))=(nat-to-int (mult (succ (plus (succ _t_36) _t_36)) _v_35)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((mult _qv_17 (plus _qv_18 _qv_19))=(plus (mult _qv_17 _qv_18) (mult _qv_17 _qv_19))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(nat-to-int (plus _v_35 _v_35)))=(nat-to-int (mult (succ (plus (succ _t_36) _t_36)) _v_35)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus _qv_20 (mult _qv_21 _qv_22))=(mult (plus _qv_20 _qv_21) (plus _qv_20 _qv_22))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(nat-to-int (plus _v_35 _v_35)))=(nat-to-int (mult (succ (plus (succ _t_36) _t_36)) _v_35)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_23 _qv_24))=(plus (succ _qv_23) (succ _qv_24))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(nat-to-int (plus _v_35 _v_35)))=(nat-to-int (mult (succ (plus (succ _t_36) _t_36)) _v_35)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_23 _qv_24))=(plus (succ _qv_24) (succ _qv_23))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(nat-to-int (plus _v_35 _v_35)))=(nat-to-int (mult (succ (plus (succ _t_36) _t_36)) _v_35)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (mult _qv_25 _qv_26))=(mult (succ _qv_25) (succ _qv_26))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(nat-to-int (plus _v_35 _v_35)))=(nat-to-int (mult (succ (plus (succ _t_36) _t_36)) _v_35)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (mult _qv_25 _qv_26))=(mult (succ _qv_26) (succ _qv_25))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(nat-to-int (plus _v_35 _v_35)))=(nat-to-int (mult (succ (plus (succ _t_36) _t_36)) _v_35)))
NOW TESTING (forall ((Nat) (Nat)) ((tri (plus _qv_27 _qv_28))=(plus (tri _qv_27) (tri _qv_28))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(nat-to-int (plus _v_35 _v_35)))=(nat-to-int (mult (succ (plus (succ _t_36) _t_36)) _v_35)))
NOW TESTING (forall ((Nat) (Nat)) ((tri (plus _qv_27 _qv_28))=(plus (tri _qv_28) (tri _qv_27))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(nat-to-int (plus _v_35 _v_35)))=(nat-to-int (mult (succ (plus (succ _t_36) _t_36)) _v_35)))
NOW TESTING (forall ((Nat) (Nat)) ((tri (mult _qv_29 _qv_30))=(mult (tri _qv_29) (tri _qv_30))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(nat-to-int (plus _v_35 _v_35)))=(nat-to-int (mult (succ (plus (succ _t_36) _t_36)) _v_35)))
NOW TESTING (forall ((Nat) (Nat)) ((tri (mult _qv_29 _qv_30))=(mult (tri _qv_30) (tri _qv_29))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(nat-to-int (plus _v_35 _v_35)))=(nat-to-int (mult (succ (plus (succ _t_36) _t_36)) _v_35)))
NOW TESTING (forall ((Nat) (Nat)) ((cubes (plus _qv_31 _qv_32))=(plus (cubes _qv_31) (cubes _qv_32))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(nat-to-int (plus _v_35 _v_35)))=(nat-to-int (mult (succ (plus (succ _t_36) _t_36)) _v_35)))
NOW TESTING (forall ((Nat) (Nat)) ((cubes (plus _qv_31 _qv_32))=(plus (cubes _qv_32) (cubes _qv_31))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(nat-to-int (plus _v_35 _v_35)))=(nat-to-int (mult (succ (plus (succ _t_36) _t_36)) _v_35)))
NOW TESTING (forall ((Nat) (Nat)) ((cubes (mult _qv_33 _qv_34))=(mult (cubes _qv_33) (cubes _qv_34))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(nat-to-int (plus _v_35 _v_35)))=(nat-to-int (mult (succ (plus (succ _t_36) _t_36)) _v_35)))
NOW TESTING (forall ((Nat) (Nat)) ((cubes (mult _qv_33 _qv_34))=(mult (cubes _qv_34) (cubes _qv_33))))
USE ASSUMPTION FAILED

  backtrack to: (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(nat-to-int (plus _v_35 _v_35)))=(nat-to-int (mult (succ (plus (succ _t_36) _t_36)) _v_35)))
  rewritten [6]: (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(nat-to-int (plus _v_35 _v_35)))=(nat-to-int (plus (mult (plus (succ _t_36) _t_36) _v_35) _v_35)))
  Maximum recursion depth reached
CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(nat-to-int (plus _v_35 _v_35)))=(nat-to-int (mult (succ (plus (succ _t_36) _t_36)) _v_35)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(nat-to-int (plus _v_35 _v_35)))=(nat-to-int (mult (succ (plus (succ _t_36) _t_36)) _v_35)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_1 _qv_2)=(plus _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(nat-to-int (plus _v_35 _v_35)))=(nat-to-int (mult (succ (plus (succ _t_36) _t_36)) _v_35)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_3 _qv_4) _qv_5)=(plus _qv_3 (plus _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(nat-to-int (plus _v_35 _v_35)))=(nat-to-int (mult (succ (plus (succ _t_36) _t_36)) _v_35)))
NOW TESTING (forall ((Nat) (Nat)) ((mult _qv_6 _qv_7)=(mult _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(nat-to-int (plus _v_35 _v_35)))=(nat-to-int (mult (succ (plus (succ _t_36) _t_36)) _v_35)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((mult (mult _qv_8 _qv_9) _qv_10)=(mult _qv_8 (mult _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(nat-to-int (plus _v_35 _v_35)))=(nat-to-int (mult (succ (plus (succ _t_36) _t_36)) _v_35)))
NOW TESTING (forall ((Nat)) ((tri (tri _qv_11))=_qv_11))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(nat-to-int (plus _v_35 _v_35)))=(nat-to-int (mult (succ (plus (succ _t_36) _t_36)) _v_35)))
NOW TESTING (forall ((Nat)) ((cubes (cubes _qv_12))=_qv_12))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(nat-to-int (plus _v_35 _v_35)))=(nat-to-int (mult (succ (plus (succ _t_36) _t_36)) _v_35)))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(nat-to-int (plus _v_35 _v_35)))=(nat-to-int (mult (succ (plus (succ _t_36) _t_36)) _v_35)))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_14))=(nat-to-int _qv_14)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(nat-to-int (plus _v_35 _v_35)))=(nat-to-int (mult (succ (plus (succ _t_36) _t_36)) _v_35)))
NOW TESTING (forall ((Nat)) ((nat-to-int (tri _qv_15))=(nat-to-int _qv_15)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(nat-to-int (plus _v_35 _v_35)))=(nat-to-int (mult (succ (plus (succ _t_36) _t_36)) _v_35)))
NOW TESTING (forall ((Nat)) ((nat-to-int (cubes _qv_16))=(nat-to-int _qv_16)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(nat-to-int (plus _v_35 _v_35)))=(nat-to-int (mult (succ (plus (succ _t_36) _t_36)) _v_35)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((mult _qv_17 (plus _qv_18 _qv_19))=(plus (mult _qv_17 _qv_18) (mult _qv_17 _qv_19))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(nat-to-int (plus _v_35 _v_35)))=(nat-to-int (mult (succ (plus (succ _t_36) _t_36)) _v_35)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus _qv_20 (mult _qv_21 _qv_22))=(mult (plus _qv_20 _qv_21) (plus _qv_20 _qv_22))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(nat-to-int (plus _v_35 _v_35)))=(nat-to-int (mult (succ (plus (succ _t_36) _t_36)) _v_35)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_23 _qv_24))=(plus (succ _qv_23) (succ _qv_24))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(nat-to-int (plus _v_35 _v_35)))=(nat-to-int (mult (succ (plus (succ _t_36) _t_36)) _v_35)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_23 _qv_24))=(plus (succ _qv_24) (succ _qv_23))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(nat-to-int (plus _v_35 _v_35)))=(nat-to-int (mult (succ (plus (succ _t_36) _t_36)) _v_35)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (mult _qv_25 _qv_26))=(mult (succ _qv_25) (succ _qv_26))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(nat-to-int (plus _v_35 _v_35)))=(nat-to-int (mult (succ (plus (succ _t_36) _t_36)) _v_35)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (mult _qv_25 _qv_26))=(mult (succ _qv_26) (succ _qv_25))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(nat-to-int (plus _v_35 _v_35)))=(nat-to-int (mult (succ (plus (succ _t_36) _t_36)) _v_35)))
NOW TESTING (forall ((Nat) (Nat)) ((tri (plus _qv_27 _qv_28))=(plus (tri _qv_27) (tri _qv_28))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(nat-to-int (plus _v_35 _v_35)))=(nat-to-int (mult (succ (plus (succ _t_36) _t_36)) _v_35)))
NOW TESTING (forall ((Nat) (Nat)) ((tri (plus _qv_27 _qv_28))=(plus (tri _qv_28) (tri _qv_27))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(nat-to-int (plus _v_35 _v_35)))=(nat-to-int (mult (succ (plus (succ _t_36) _t_36)) _v_35)))
NOW TESTING (forall ((Nat) (Nat)) ((tri (mult _qv_29 _qv_30))=(mult (tri _qv_29) (tri _qv_30))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(nat-to-int (plus _v_35 _v_35)))=(nat-to-int (mult (succ (plus (succ _t_36) _t_36)) _v_35)))
NOW TESTING (forall ((Nat) (Nat)) ((tri (mult _qv_29 _qv_30))=(mult (tri _qv_30) (tri _qv_29))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(nat-to-int (plus _v_35 _v_35)))=(nat-to-int (mult (succ (plus (succ _t_36) _t_36)) _v_35)))
NOW TESTING (forall ((Nat) (Nat)) ((cubes (plus _qv_31 _qv_32))=(plus (cubes _qv_31) (cubes _qv_32))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(nat-to-int (plus _v_35 _v_35)))=(nat-to-int (mult (succ (plus (succ _t_36) _t_36)) _v_35)))
NOW TESTING (forall ((Nat) (Nat)) ((cubes (plus _qv_31 _qv_32))=(plus (cubes _qv_32) (cubes _qv_31))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(nat-to-int (plus _v_35 _v_35)))=(nat-to-int (mult (succ (plus (succ _t_36) _t_36)) _v_35)))
NOW TESTING (forall ((Nat) (Nat)) ((cubes (mult _qv_33 _qv_34))=(mult (cubes _qv_33) (cubes _qv_34))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(nat-to-int (plus _v_35 _v_35)))=(nat-to-int (mult (succ (plus (succ _t_36) _t_36)) _v_35)))
NOW TESTING (forall ((Nat) (Nat)) ((cubes (mult _qv_33 _qv_34))=(mult (cubes _qv_34) (cubes _qv_33))))
USE ASSUMPTION FAILED

  backtrack to: (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(nat-to-int (plus _v_35 _v_35)))=(nat-to-int (mult (succ (plus (succ _t_36) _t_36)) _v_35)))
  rewritten [12]: (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+((nat-to-int _v_35)+(nat-to-int _v_35)))=(nat-to-int (mult (succ (plus (succ _t_36) _t_36)) _v_35)))
  Maximum recursion depth reached
CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(nat-to-int (plus _v_35 _v_35)))=(nat-to-int (mult (succ (plus (succ _t_36) _t_36)) _v_35)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(nat-to-int (plus _v_35 _v_35)))=(nat-to-int (mult (succ (plus (succ _t_36) _t_36)) _v_35)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_1 _qv_2)=(plus _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(nat-to-int (plus _v_35 _v_35)))=(nat-to-int (mult (succ (plus (succ _t_36) _t_36)) _v_35)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_3 _qv_4) _qv_5)=(plus _qv_3 (plus _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(nat-to-int (plus _v_35 _v_35)))=(nat-to-int (mult (succ (plus (succ _t_36) _t_36)) _v_35)))
NOW TESTING (forall ((Nat) (Nat)) ((mult _qv_6 _qv_7)=(mult _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(nat-to-int (plus _v_35 _v_35)))=(nat-to-int (mult (succ (plus (succ _t_36) _t_36)) _v_35)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((mult (mult _qv_8 _qv_9) _qv_10)=(mult _qv_8 (mult _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(nat-to-int (plus _v_35 _v_35)))=(nat-to-int (mult (succ (plus (succ _t_36) _t_36)) _v_35)))
NOW TESTING (forall ((Nat)) ((tri (tri _qv_11))=_qv_11))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(nat-to-int (plus _v_35 _v_35)))=(nat-to-int (mult (succ (plus (succ _t_36) _t_36)) _v_35)))
NOW TESTING (forall ((Nat)) ((cubes (cubes _qv_12))=_qv_12))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(nat-to-int (plus _v_35 _v_35)))=(nat-to-int (mult (succ (plus (succ _t_36) _t_36)) _v_35)))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(nat-to-int (plus _v_35 _v_35)))=(nat-to-int (mult (succ (plus (succ _t_36) _t_36)) _v_35)))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_14))=(nat-to-int _qv_14)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(nat-to-int (plus _v_35 _v_35)))=(nat-to-int (mult (succ (plus (succ _t_36) _t_36)) _v_35)))
NOW TESTING (forall ((Nat)) ((nat-to-int (tri _qv_15))=(nat-to-int _qv_15)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(nat-to-int (plus _v_35 _v_35)))=(nat-to-int (mult (succ (plus (succ _t_36) _t_36)) _v_35)))
NOW TESTING (forall ((Nat)) ((nat-to-int (cubes _qv_16))=(nat-to-int _qv_16)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(nat-to-int (plus _v_35 _v_35)))=(nat-to-int (mult (succ (plus (succ _t_36) _t_36)) _v_35)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((mult _qv_17 (plus _qv_18 _qv_19))=(plus (mult _qv_17 _qv_18) (mult _qv_17 _qv_19))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(nat-to-int (plus _v_35 _v_35)))=(nat-to-int (mult (succ (plus (succ _t_36) _t_36)) _v_35)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus _qv_20 (mult _qv_21 _qv_22))=(mult (plus _qv_20 _qv_21) (plus _qv_20 _qv_22))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(nat-to-int (plus _v_35 _v_35)))=(nat-to-int (mult (succ (plus (succ _t_36) _t_36)) _v_35)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_23 _qv_24))=(plus (succ _qv_23) (succ _qv_24))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(nat-to-int (plus _v_35 _v_35)))=(nat-to-int (mult (succ (plus (succ _t_36) _t_36)) _v_35)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_23 _qv_24))=(plus (succ _qv_24) (succ _qv_23))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(nat-to-int (plus _v_35 _v_35)))=(nat-to-int (mult (succ (plus (succ _t_36) _t_36)) _v_35)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (mult _qv_25 _qv_26))=(mult (succ _qv_25) (succ _qv_26))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(nat-to-int (plus _v_35 _v_35)))=(nat-to-int (mult (succ (plus (succ _t_36) _t_36)) _v_35)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (mult _qv_25 _qv_26))=(mult (succ _qv_26) (succ _qv_25))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(nat-to-int (plus _v_35 _v_35)))=(nat-to-int (mult (succ (plus (succ _t_36) _t_36)) _v_35)))
NOW TESTING (forall ((Nat) (Nat)) ((tri (plus _qv_27 _qv_28))=(plus (tri _qv_27) (tri _qv_28))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(nat-to-int (plus _v_35 _v_35)))=(nat-to-int (mult (succ (plus (succ _t_36) _t_36)) _v_35)))
NOW TESTING (forall ((Nat) (Nat)) ((tri (plus _qv_27 _qv_28))=(plus (tri _qv_28) (tri _qv_27))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(nat-to-int (plus _v_35 _v_35)))=(nat-to-int (mult (succ (plus (succ _t_36) _t_36)) _v_35)))
NOW TESTING (forall ((Nat) (Nat)) ((tri (mult _qv_29 _qv_30))=(mult (tri _qv_29) (tri _qv_30))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(nat-to-int (plus _v_35 _v_35)))=(nat-to-int (mult (succ (plus (succ _t_36) _t_36)) _v_35)))
NOW TESTING (forall ((Nat) (Nat)) ((tri (mult _qv_29 _qv_30))=(mult (tri _qv_30) (tri _qv_29))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(nat-to-int (plus _v_35 _v_35)))=(nat-to-int (mult (succ (plus (succ _t_36) _t_36)) _v_35)))
NOW TESTING (forall ((Nat) (Nat)) ((cubes (plus _qv_31 _qv_32))=(plus (cubes _qv_31) (cubes _qv_32))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(nat-to-int (plus _v_35 _v_35)))=(nat-to-int (mult (succ (plus (succ _t_36) _t_36)) _v_35)))
NOW TESTING (forall ((Nat) (Nat)) ((cubes (plus _qv_31 _qv_32))=(plus (cubes _qv_32) (cubes _qv_31))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(nat-to-int (plus _v_35 _v_35)))=(nat-to-int (mult (succ (plus (succ _t_36) _t_36)) _v_35)))
NOW TESTING (forall ((Nat) (Nat)) ((cubes (mult _qv_33 _qv_34))=(mult (cubes _qv_33) (cubes _qv_34))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(nat-to-int (plus _v_35 _v_35)))=(nat-to-int (mult (succ (plus (succ _t_36) _t_36)) _v_35)))
NOW TESTING (forall ((Nat) (Nat)) ((cubes (mult _qv_33 _qv_34))=(mult (cubes _qv_34) (cubes _qv_33))))
USE ASSUMPTION FAILED

  backtrack to: (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(nat-to-int (plus _v_35 _v_35)))=(nat-to-int (mult (succ (plus (succ _t_36) _t_36)) _v_35)))
  rewritten [13]: (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(nat-to-int (plus _v_35 _v_35)))=(nat-to-int (mult (succ (plus _t_36 (succ _t_36))) _v_35)))
  Maximum recursion depth reached
CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(nat-to-int (plus _v_35 _v_35)))=(nat-to-int (mult (succ (plus (succ _t_36) _t_36)) _v_35)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(nat-to-int (plus _v_35 _v_35)))=(nat-to-int (mult (succ (plus (succ _t_36) _t_36)) _v_35)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_1 _qv_2)=(plus _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(nat-to-int (plus _v_35 _v_35)))=(nat-to-int (mult (succ (plus (succ _t_36) _t_36)) _v_35)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_3 _qv_4) _qv_5)=(plus _qv_3 (plus _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(nat-to-int (plus _v_35 _v_35)))=(nat-to-int (mult (succ (plus (succ _t_36) _t_36)) _v_35)))
NOW TESTING (forall ((Nat) (Nat)) ((mult _qv_6 _qv_7)=(mult _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(nat-to-int (plus _v_35 _v_35)))=(nat-to-int (mult (succ (plus (succ _t_36) _t_36)) _v_35)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((mult (mult _qv_8 _qv_9) _qv_10)=(mult _qv_8 (mult _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(nat-to-int (plus _v_35 _v_35)))=(nat-to-int (mult (succ (plus (succ _t_36) _t_36)) _v_35)))
NOW TESTING (forall ((Nat)) ((tri (tri _qv_11))=_qv_11))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(nat-to-int (plus _v_35 _v_35)))=(nat-to-int (mult (succ (plus (succ _t_36) _t_36)) _v_35)))
NOW TESTING (forall ((Nat)) ((cubes (cubes _qv_12))=_qv_12))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(nat-to-int (plus _v_35 _v_35)))=(nat-to-int (mult (succ (plus (succ _t_36) _t_36)) _v_35)))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(nat-to-int (plus _v_35 _v_35)))=(nat-to-int (mult (succ (plus (succ _t_36) _t_36)) _v_35)))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_14))=(nat-to-int _qv_14)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(nat-to-int (plus _v_35 _v_35)))=(nat-to-int (mult (succ (plus (succ _t_36) _t_36)) _v_35)))
NOW TESTING (forall ((Nat)) ((nat-to-int (tri _qv_15))=(nat-to-int _qv_15)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(nat-to-int (plus _v_35 _v_35)))=(nat-to-int (mult (succ (plus (succ _t_36) _t_36)) _v_35)))
NOW TESTING (forall ((Nat)) ((nat-to-int (cubes _qv_16))=(nat-to-int _qv_16)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(nat-to-int (plus _v_35 _v_35)))=(nat-to-int (mult (succ (plus (succ _t_36) _t_36)) _v_35)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((mult _qv_17 (plus _qv_18 _qv_19))=(plus (mult _qv_17 _qv_18) (mult _qv_17 _qv_19))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(nat-to-int (plus _v_35 _v_35)))=(nat-to-int (mult (succ (plus (succ _t_36) _t_36)) _v_35)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus _qv_20 (mult _qv_21 _qv_22))=(mult (plus _qv_20 _qv_21) (plus _qv_20 _qv_22))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(nat-to-int (plus _v_35 _v_35)))=(nat-to-int (mult (succ (plus (succ _t_36) _t_36)) _v_35)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_23 _qv_24))=(plus (succ _qv_23) (succ _qv_24))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(nat-to-int (plus _v_35 _v_35)))=(nat-to-int (mult (succ (plus (succ _t_36) _t_36)) _v_35)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_23 _qv_24))=(plus (succ _qv_24) (succ _qv_23))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(nat-to-int (plus _v_35 _v_35)))=(nat-to-int (mult (succ (plus (succ _t_36) _t_36)) _v_35)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (mult _qv_25 _qv_26))=(mult (succ _qv_25) (succ _qv_26))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(nat-to-int (plus _v_35 _v_35)))=(nat-to-int (mult (succ (plus (succ _t_36) _t_36)) _v_35)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (mult _qv_25 _qv_26))=(mult (succ _qv_26) (succ _qv_25))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(nat-to-int (plus _v_35 _v_35)))=(nat-to-int (mult (succ (plus (succ _t_36) _t_36)) _v_35)))
NOW TESTING (forall ((Nat) (Nat)) ((tri (plus _qv_27 _qv_28))=(plus (tri _qv_27) (tri _qv_28))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(nat-to-int (plus _v_35 _v_35)))=(nat-to-int (mult (succ (plus (succ _t_36) _t_36)) _v_35)))
NOW TESTING (forall ((Nat) (Nat)) ((tri (plus _qv_27 _qv_28))=(plus (tri _qv_28) (tri _qv_27))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(nat-to-int (plus _v_35 _v_35)))=(nat-to-int (mult (succ (plus (succ _t_36) _t_36)) _v_35)))
NOW TESTING (forall ((Nat) (Nat)) ((tri (mult _qv_29 _qv_30))=(mult (tri _qv_29) (tri _qv_30))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(nat-to-int (plus _v_35 _v_35)))=(nat-to-int (mult (succ (plus (succ _t_36) _t_36)) _v_35)))
NOW TESTING (forall ((Nat) (Nat)) ((tri (mult _qv_29 _qv_30))=(mult (tri _qv_30) (tri _qv_29))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(nat-to-int (plus _v_35 _v_35)))=(nat-to-int (mult (succ (plus (succ _t_36) _t_36)) _v_35)))
NOW TESTING (forall ((Nat) (Nat)) ((cubes (plus _qv_31 _qv_32))=(plus (cubes _qv_31) (cubes _qv_32))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(nat-to-int (plus _v_35 _v_35)))=(nat-to-int (mult (succ (plus (succ _t_36) _t_36)) _v_35)))
NOW TESTING (forall ((Nat) (Nat)) ((cubes (plus _qv_31 _qv_32))=(plus (cubes _qv_32) (cubes _qv_31))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(nat-to-int (plus _v_35 _v_35)))=(nat-to-int (mult (succ (plus (succ _t_36) _t_36)) _v_35)))
NOW TESTING (forall ((Nat) (Nat)) ((cubes (mult _qv_33 _qv_34))=(mult (cubes _qv_33) (cubes _qv_34))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(nat-to-int (plus _v_35 _v_35)))=(nat-to-int (mult (succ (plus (succ _t_36) _t_36)) _v_35)))
NOW TESTING (forall ((Nat) (Nat)) ((cubes (mult _qv_33 _qv_34))=(mult (cubes _qv_34) (cubes _qv_33))))
USE ASSUMPTION FAILED

  backtrack to: (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(nat-to-int (plus _v_35 _v_35)))=(nat-to-int (mult (succ (plus (succ _t_36) _t_36)) _v_35)))
  rewritten [15]: (((nat-to-int (mult (plus _v_35 _v_35) _t_36))+(nat-to-int (plus _v_35 _v_35)))=(nat-to-int (mult (succ (plus (succ _t_36) _t_36)) _v_35)))
  Maximum recursion depth reached
CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(nat-to-int (plus _v_35 _v_35)))=(nat-to-int (mult (succ (plus (succ _t_36) _t_36)) _v_35)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(nat-to-int (plus _v_35 _v_35)))=(nat-to-int (mult (succ (plus (succ _t_36) _t_36)) _v_35)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_1 _qv_2)=(plus _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(nat-to-int (plus _v_35 _v_35)))=(nat-to-int (mult (succ (plus (succ _t_36) _t_36)) _v_35)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_3 _qv_4) _qv_5)=(plus _qv_3 (plus _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(nat-to-int (plus _v_35 _v_35)))=(nat-to-int (mult (succ (plus (succ _t_36) _t_36)) _v_35)))
NOW TESTING (forall ((Nat) (Nat)) ((mult _qv_6 _qv_7)=(mult _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(nat-to-int (plus _v_35 _v_35)))=(nat-to-int (mult (succ (plus (succ _t_36) _t_36)) _v_35)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((mult (mult _qv_8 _qv_9) _qv_10)=(mult _qv_8 (mult _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(nat-to-int (plus _v_35 _v_35)))=(nat-to-int (mult (succ (plus (succ _t_36) _t_36)) _v_35)))
NOW TESTING (forall ((Nat)) ((tri (tri _qv_11))=_qv_11))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(nat-to-int (plus _v_35 _v_35)))=(nat-to-int (mult (succ (plus (succ _t_36) _t_36)) _v_35)))
NOW TESTING (forall ((Nat)) ((cubes (cubes _qv_12))=_qv_12))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(nat-to-int (plus _v_35 _v_35)))=(nat-to-int (mult (succ (plus (succ _t_36) _t_36)) _v_35)))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(nat-to-int (plus _v_35 _v_35)))=(nat-to-int (mult (succ (plus (succ _t_36) _t_36)) _v_35)))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_14))=(nat-to-int _qv_14)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(nat-to-int (plus _v_35 _v_35)))=(nat-to-int (mult (succ (plus (succ _t_36) _t_36)) _v_35)))
NOW TESTING (forall ((Nat)) ((nat-to-int (tri _qv_15))=(nat-to-int _qv_15)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(nat-to-int (plus _v_35 _v_35)))=(nat-to-int (mult (succ (plus (succ _t_36) _t_36)) _v_35)))
NOW TESTING (forall ((Nat)) ((nat-to-int (cubes _qv_16))=(nat-to-int _qv_16)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(nat-to-int (plus _v_35 _v_35)))=(nat-to-int (mult (succ (plus (succ _t_36) _t_36)) _v_35)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((mult _qv_17 (plus _qv_18 _qv_19))=(plus (mult _qv_17 _qv_18) (mult _qv_17 _qv_19))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(nat-to-int (plus _v_35 _v_35)))=(nat-to-int (mult (succ (plus (succ _t_36) _t_36)) _v_35)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus _qv_20 (mult _qv_21 _qv_22))=(mult (plus _qv_20 _qv_21) (plus _qv_20 _qv_22))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(nat-to-int (plus _v_35 _v_35)))=(nat-to-int (mult (succ (plus (succ _t_36) _t_36)) _v_35)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_23 _qv_24))=(plus (succ _qv_23) (succ _qv_24))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(nat-to-int (plus _v_35 _v_35)))=(nat-to-int (mult (succ (plus (succ _t_36) _t_36)) _v_35)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_23 _qv_24))=(plus (succ _qv_24) (succ _qv_23))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(nat-to-int (plus _v_35 _v_35)))=(nat-to-int (mult (succ (plus (succ _t_36) _t_36)) _v_35)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (mult _qv_25 _qv_26))=(mult (succ _qv_25) (succ _qv_26))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(nat-to-int (plus _v_35 _v_35)))=(nat-to-int (mult (succ (plus (succ _t_36) _t_36)) _v_35)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (mult _qv_25 _qv_26))=(mult (succ _qv_26) (succ _qv_25))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(nat-to-int (plus _v_35 _v_35)))=(nat-to-int (mult (succ (plus (succ _t_36) _t_36)) _v_35)))
NOW TESTING (forall ((Nat) (Nat)) ((tri (plus _qv_27 _qv_28))=(plus (tri _qv_27) (tri _qv_28))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(nat-to-int (plus _v_35 _v_35)))=(nat-to-int (mult (succ (plus (succ _t_36) _t_36)) _v_35)))
NOW TESTING (forall ((Nat) (Nat)) ((tri (plus _qv_27 _qv_28))=(plus (tri _qv_28) (tri _qv_27))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(nat-to-int (plus _v_35 _v_35)))=(nat-to-int (mult (succ (plus (succ _t_36) _t_36)) _v_35)))
NOW TESTING (forall ((Nat) (Nat)) ((tri (mult _qv_29 _qv_30))=(mult (tri _qv_29) (tri _qv_30))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(nat-to-int (plus _v_35 _v_35)))=(nat-to-int (mult (succ (plus (succ _t_36) _t_36)) _v_35)))
NOW TESTING (forall ((Nat) (Nat)) ((tri (mult _qv_29 _qv_30))=(mult (tri _qv_30) (tri _qv_29))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(nat-to-int (plus _v_35 _v_35)))=(nat-to-int (mult (succ (plus (succ _t_36) _t_36)) _v_35)))
NOW TESTING (forall ((Nat) (Nat)) ((cubes (plus _qv_31 _qv_32))=(plus (cubes _qv_31) (cubes _qv_32))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(nat-to-int (plus _v_35 _v_35)))=(nat-to-int (mult (succ (plus (succ _t_36) _t_36)) _v_35)))
NOW TESTING (forall ((Nat) (Nat)) ((cubes (plus _qv_31 _qv_32))=(plus (cubes _qv_32) (cubes _qv_31))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(nat-to-int (plus _v_35 _v_35)))=(nat-to-int (mult (succ (plus (succ _t_36) _t_36)) _v_35)))
NOW TESTING (forall ((Nat) (Nat)) ((cubes (mult _qv_33 _qv_34))=(mult (cubes _qv_33) (cubes _qv_34))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(nat-to-int (plus _v_35 _v_35)))=(nat-to-int (mult (succ (plus (succ _t_36) _t_36)) _v_35)))
NOW TESTING (forall ((Nat) (Nat)) ((cubes (mult _qv_33 _qv_34))=(mult (cubes _qv_34) (cubes _qv_33))))
USE ASSUMPTION FAILED

  backtrack to: (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(nat-to-int (plus _v_35 _v_35)))=(nat-to-int (mult (succ (plus (succ _t_36) _t_36)) _v_35)))
  rewritten [17]: (((nat-to-int (mult _v_35 (plus _t_36 _t_36)))+(nat-to-int (plus _v_35 _v_35)))=(nat-to-int (mult (succ (plus (succ _t_36) _t_36)) _v_35)))
  Maximum recursion depth reached
CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(nat-to-int (plus _v_35 _v_35)))=(nat-to-int (mult (succ (plus (succ _t_36) _t_36)) _v_35)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(nat-to-int (plus _v_35 _v_35)))=(nat-to-int (mult (succ (plus (succ _t_36) _t_36)) _v_35)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_1 _qv_2)=(plus _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(nat-to-int (plus _v_35 _v_35)))=(nat-to-int (mult (succ (plus (succ _t_36) _t_36)) _v_35)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_3 _qv_4) _qv_5)=(plus _qv_3 (plus _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(nat-to-int (plus _v_35 _v_35)))=(nat-to-int (mult (succ (plus (succ _t_36) _t_36)) _v_35)))
NOW TESTING (forall ((Nat) (Nat)) ((mult _qv_6 _qv_7)=(mult _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(nat-to-int (plus _v_35 _v_35)))=(nat-to-int (mult (succ (plus (succ _t_36) _t_36)) _v_35)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((mult (mult _qv_8 _qv_9) _qv_10)=(mult _qv_8 (mult _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(nat-to-int (plus _v_35 _v_35)))=(nat-to-int (mult (succ (plus (succ _t_36) _t_36)) _v_35)))
NOW TESTING (forall ((Nat)) ((tri (tri _qv_11))=_qv_11))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(nat-to-int (plus _v_35 _v_35)))=(nat-to-int (mult (succ (plus (succ _t_36) _t_36)) _v_35)))
NOW TESTING (forall ((Nat)) ((cubes (cubes _qv_12))=_qv_12))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(nat-to-int (plus _v_35 _v_35)))=(nat-to-int (mult (succ (plus (succ _t_36) _t_36)) _v_35)))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(nat-to-int (plus _v_35 _v_35)))=(nat-to-int (mult (succ (plus (succ _t_36) _t_36)) _v_35)))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_14))=(nat-to-int _qv_14)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(nat-to-int (plus _v_35 _v_35)))=(nat-to-int (mult (succ (plus (succ _t_36) _t_36)) _v_35)))
NOW TESTING (forall ((Nat)) ((nat-to-int (tri _qv_15))=(nat-to-int _qv_15)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(nat-to-int (plus _v_35 _v_35)))=(nat-to-int (mult (succ (plus (succ _t_36) _t_36)) _v_35)))
NOW TESTING (forall ((Nat)) ((nat-to-int (cubes _qv_16))=(nat-to-int _qv_16)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(nat-to-int (plus _v_35 _v_35)))=(nat-to-int (mult (succ (plus (succ _t_36) _t_36)) _v_35)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((mult _qv_17 (plus _qv_18 _qv_19))=(plus (mult _qv_17 _qv_18) (mult _qv_17 _qv_19))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(nat-to-int (plus _v_35 _v_35)))=(nat-to-int (mult (succ (plus (succ _t_36) _t_36)) _v_35)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus _qv_20 (mult _qv_21 _qv_22))=(mult (plus _qv_20 _qv_21) (plus _qv_20 _qv_22))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(nat-to-int (plus _v_35 _v_35)))=(nat-to-int (mult (succ (plus (succ _t_36) _t_36)) _v_35)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_23 _qv_24))=(plus (succ _qv_23) (succ _qv_24))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(nat-to-int (plus _v_35 _v_35)))=(nat-to-int (mult (succ (plus (succ _t_36) _t_36)) _v_35)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_23 _qv_24))=(plus (succ _qv_24) (succ _qv_23))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(nat-to-int (plus _v_35 _v_35)))=(nat-to-int (mult (succ (plus (succ _t_36) _t_36)) _v_35)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (mult _qv_25 _qv_26))=(mult (succ _qv_25) (succ _qv_26))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(nat-to-int (plus _v_35 _v_35)))=(nat-to-int (mult (succ (plus (succ _t_36) _t_36)) _v_35)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (mult _qv_25 _qv_26))=(mult (succ _qv_26) (succ _qv_25))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(nat-to-int (plus _v_35 _v_35)))=(nat-to-int (mult (succ (plus (succ _t_36) _t_36)) _v_35)))
NOW TESTING (forall ((Nat) (Nat)) ((tri (plus _qv_27 _qv_28))=(plus (tri _qv_27) (tri _qv_28))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(nat-to-int (plus _v_35 _v_35)))=(nat-to-int (mult (succ (plus (succ _t_36) _t_36)) _v_35)))
NOW TESTING (forall ((Nat) (Nat)) ((tri (plus _qv_27 _qv_28))=(plus (tri _qv_28) (tri _qv_27))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(nat-to-int (plus _v_35 _v_35)))=(nat-to-int (mult (succ (plus (succ _t_36) _t_36)) _v_35)))
NOW TESTING (forall ((Nat) (Nat)) ((tri (mult _qv_29 _qv_30))=(mult (tri _qv_29) (tri _qv_30))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(nat-to-int (plus _v_35 _v_35)))=(nat-to-int (mult (succ (plus (succ _t_36) _t_36)) _v_35)))
NOW TESTING (forall ((Nat) (Nat)) ((tri (mult _qv_29 _qv_30))=(mult (tri _qv_30) (tri _qv_29))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(nat-to-int (plus _v_35 _v_35)))=(nat-to-int (mult (succ (plus (succ _t_36) _t_36)) _v_35)))
NOW TESTING (forall ((Nat) (Nat)) ((cubes (plus _qv_31 _qv_32))=(plus (cubes _qv_31) (cubes _qv_32))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(nat-to-int (plus _v_35 _v_35)))=(nat-to-int (mult (succ (plus (succ _t_36) _t_36)) _v_35)))
NOW TESTING (forall ((Nat) (Nat)) ((cubes (plus _qv_31 _qv_32))=(plus (cubes _qv_32) (cubes _qv_31))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(nat-to-int (plus _v_35 _v_35)))=(nat-to-int (mult (succ (plus (succ _t_36) _t_36)) _v_35)))
NOW TESTING (forall ((Nat) (Nat)) ((cubes (mult _qv_33 _qv_34))=(mult (cubes _qv_33) (cubes _qv_34))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(nat-to-int (plus _v_35 _v_35)))=(nat-to-int (mult (succ (plus (succ _t_36) _t_36)) _v_35)))
NOW TESTING (forall ((Nat) (Nat)) ((cubes (mult _qv_33 _qv_34))=(mult (cubes _qv_34) (cubes _qv_33))))
USE ASSUMPTION FAILED

  backtrack to: (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(nat-to-int (plus _v_35 _v_35)))=(nat-to-int (mult (succ (plus (succ _t_36) _t_36)) _v_35)))
  rewritten [4]: (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(nat-to-int (plus _v_35 _v_35)))=(nat-to-int (mult (succ (succ (plus _t_36 _t_36))) _v_35)))
  Maximum recursion depth reached
CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(nat-to-int (plus _v_35 _v_35)))=(nat-to-int (mult (succ (plus (succ _t_36) _t_36)) _v_35)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(nat-to-int (plus _v_35 _v_35)))=(nat-to-int (mult (succ (plus (succ _t_36) _t_36)) _v_35)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_1 _qv_2)=(plus _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(nat-to-int (plus _v_35 _v_35)))=(nat-to-int (mult (succ (plus (succ _t_36) _t_36)) _v_35)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_3 _qv_4) _qv_5)=(plus _qv_3 (plus _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(nat-to-int (plus _v_35 _v_35)))=(nat-to-int (mult (succ (plus (succ _t_36) _t_36)) _v_35)))
NOW TESTING (forall ((Nat) (Nat)) ((mult _qv_6 _qv_7)=(mult _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(nat-to-int (plus _v_35 _v_35)))=(nat-to-int (mult (succ (plus (succ _t_36) _t_36)) _v_35)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((mult (mult _qv_8 _qv_9) _qv_10)=(mult _qv_8 (mult _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(nat-to-int (plus _v_35 _v_35)))=(nat-to-int (mult (succ (plus (succ _t_36) _t_36)) _v_35)))
NOW TESTING (forall ((Nat)) ((tri (tri _qv_11))=_qv_11))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(nat-to-int (plus _v_35 _v_35)))=(nat-to-int (mult (succ (plus (succ _t_36) _t_36)) _v_35)))
NOW TESTING (forall ((Nat)) ((cubes (cubes _qv_12))=_qv_12))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(nat-to-int (plus _v_35 _v_35)))=(nat-to-int (mult (succ (plus (succ _t_36) _t_36)) _v_35)))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(nat-to-int (plus _v_35 _v_35)))=(nat-to-int (mult (succ (plus (succ _t_36) _t_36)) _v_35)))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_14))=(nat-to-int _qv_14)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(nat-to-int (plus _v_35 _v_35)))=(nat-to-int (mult (succ (plus (succ _t_36) _t_36)) _v_35)))
NOW TESTING (forall ((Nat)) ((nat-to-int (tri _qv_15))=(nat-to-int _qv_15)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(nat-to-int (plus _v_35 _v_35)))=(nat-to-int (mult (succ (plus (succ _t_36) _t_36)) _v_35)))
NOW TESTING (forall ((Nat)) ((nat-to-int (cubes _qv_16))=(nat-to-int _qv_16)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(nat-to-int (plus _v_35 _v_35)))=(nat-to-int (mult (succ (plus (succ _t_36) _t_36)) _v_35)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((mult _qv_17 (plus _qv_18 _qv_19))=(plus (mult _qv_17 _qv_18) (mult _qv_17 _qv_19))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(nat-to-int (plus _v_35 _v_35)))=(nat-to-int (mult (succ (plus (succ _t_36) _t_36)) _v_35)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus _qv_20 (mult _qv_21 _qv_22))=(mult (plus _qv_20 _qv_21) (plus _qv_20 _qv_22))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(nat-to-int (plus _v_35 _v_35)))=(nat-to-int (mult (succ (plus (succ _t_36) _t_36)) _v_35)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_23 _qv_24))=(plus (succ _qv_23) (succ _qv_24))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(nat-to-int (plus _v_35 _v_35)))=(nat-to-int (mult (succ (plus (succ _t_36) _t_36)) _v_35)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_23 _qv_24))=(plus (succ _qv_24) (succ _qv_23))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(nat-to-int (plus _v_35 _v_35)))=(nat-to-int (mult (succ (plus (succ _t_36) _t_36)) _v_35)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (mult _qv_25 _qv_26))=(mult (succ _qv_25) (succ _qv_26))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(nat-to-int (plus _v_35 _v_35)))=(nat-to-int (mult (succ (plus (succ _t_36) _t_36)) _v_35)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (mult _qv_25 _qv_26))=(mult (succ _qv_26) (succ _qv_25))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(nat-to-int (plus _v_35 _v_35)))=(nat-to-int (mult (succ (plus (succ _t_36) _t_36)) _v_35)))
NOW TESTING (forall ((Nat) (Nat)) ((tri (plus _qv_27 _qv_28))=(plus (tri _qv_27) (tri _qv_28))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(nat-to-int (plus _v_35 _v_35)))=(nat-to-int (mult (succ (plus (succ _t_36) _t_36)) _v_35)))
NOW TESTING (forall ((Nat) (Nat)) ((tri (plus _qv_27 _qv_28))=(plus (tri _qv_28) (tri _qv_27))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(nat-to-int (plus _v_35 _v_35)))=(nat-to-int (mult (succ (plus (succ _t_36) _t_36)) _v_35)))
NOW TESTING (forall ((Nat) (Nat)) ((tri (mult _qv_29 _qv_30))=(mult (tri _qv_29) (tri _qv_30))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(nat-to-int (plus _v_35 _v_35)))=(nat-to-int (mult (succ (plus (succ _t_36) _t_36)) _v_35)))
NOW TESTING (forall ((Nat) (Nat)) ((tri (mult _qv_29 _qv_30))=(mult (tri _qv_30) (tri _qv_29))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(nat-to-int (plus _v_35 _v_35)))=(nat-to-int (mult (succ (plus (succ _t_36) _t_36)) _v_35)))
NOW TESTING (forall ((Nat) (Nat)) ((cubes (plus _qv_31 _qv_32))=(plus (cubes _qv_31) (cubes _qv_32))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(nat-to-int (plus _v_35 _v_35)))=(nat-to-int (mult (succ (plus (succ _t_36) _t_36)) _v_35)))
NOW TESTING (forall ((Nat) (Nat)) ((cubes (plus _qv_31 _qv_32))=(plus (cubes _qv_32) (cubes _qv_31))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(nat-to-int (plus _v_35 _v_35)))=(nat-to-int (mult (succ (plus (succ _t_36) _t_36)) _v_35)))
NOW TESTING (forall ((Nat) (Nat)) ((cubes (mult _qv_33 _qv_34))=(mult (cubes _qv_33) (cubes _qv_34))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(nat-to-int (plus _v_35 _v_35)))=(nat-to-int (mult (succ (plus (succ _t_36) _t_36)) _v_35)))
NOW TESTING (forall ((Nat) (Nat)) ((cubes (mult _qv_33 _qv_34))=(mult (cubes _qv_34) (cubes _qv_33))))
USE ASSUMPTION FAILED

  backtrack to: (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(nat-to-int (plus _v_35 _v_35)))=(nat-to-int (mult (succ (plus (succ _t_36) _t_36)) _v_35)))
  rewritten [6]: (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(nat-to-int (plus _v_35 _v_35)))=(nat-to-int (plus (mult (plus (succ _t_36) _t_36) _v_35) _v_35)))
  Maximum recursion depth reached
CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(nat-to-int (plus _v_35 _v_35)))=(nat-to-int (mult (succ (plus (succ _t_36) _t_36)) _v_35)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(nat-to-int (plus _v_35 _v_35)))=(nat-to-int (mult (succ (plus (succ _t_36) _t_36)) _v_35)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_1 _qv_2)=(plus _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(nat-to-int (plus _v_35 _v_35)))=(nat-to-int (mult (succ (plus (succ _t_36) _t_36)) _v_35)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_3 _qv_4) _qv_5)=(plus _qv_3 (plus _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(nat-to-int (plus _v_35 _v_35)))=(nat-to-int (mult (succ (plus (succ _t_36) _t_36)) _v_35)))
NOW TESTING (forall ((Nat) (Nat)) ((mult _qv_6 _qv_7)=(mult _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(nat-to-int (plus _v_35 _v_35)))=(nat-to-int (mult (succ (plus (succ _t_36) _t_36)) _v_35)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((mult (mult _qv_8 _qv_9) _qv_10)=(mult _qv_8 (mult _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(nat-to-int (plus _v_35 _v_35)))=(nat-to-int (mult (succ (plus (succ _t_36) _t_36)) _v_35)))
NOW TESTING (forall ((Nat)) ((tri (tri _qv_11))=_qv_11))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(nat-to-int (plus _v_35 _v_35)))=(nat-to-int (mult (succ (plus (succ _t_36) _t_36)) _v_35)))
NOW TESTING (forall ((Nat)) ((cubes (cubes _qv_12))=_qv_12))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(nat-to-int (plus _v_35 _v_35)))=(nat-to-int (mult (succ (plus (succ _t_36) _t_36)) _v_35)))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(nat-to-int (plus _v_35 _v_35)))=(nat-to-int (mult (succ (plus (succ _t_36) _t_36)) _v_35)))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_14))=(nat-to-int _qv_14)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(nat-to-int (plus _v_35 _v_35)))=(nat-to-int (mult (succ (plus (succ _t_36) _t_36)) _v_35)))
NOW TESTING (forall ((Nat)) ((nat-to-int (tri _qv_15))=(nat-to-int _qv_15)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(nat-to-int (plus _v_35 _v_35)))=(nat-to-int (mult (succ (plus (succ _t_36) _t_36)) _v_35)))
NOW TESTING (forall ((Nat)) ((nat-to-int (cubes _qv_16))=(nat-to-int _qv_16)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(nat-to-int (plus _v_35 _v_35)))=(nat-to-int (mult (succ (plus (succ _t_36) _t_36)) _v_35)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((mult _qv_17 (plus _qv_18 _qv_19))=(plus (mult _qv_17 _qv_18) (mult _qv_17 _qv_19))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(nat-to-int (plus _v_35 _v_35)))=(nat-to-int (mult (succ (plus (succ _t_36) _t_36)) _v_35)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus _qv_20 (mult _qv_21 _qv_22))=(mult (plus _qv_20 _qv_21) (plus _qv_20 _qv_22))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(nat-to-int (plus _v_35 _v_35)))=(nat-to-int (mult (succ (plus (succ _t_36) _t_36)) _v_35)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_23 _qv_24))=(plus (succ _qv_23) (succ _qv_24))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(nat-to-int (plus _v_35 _v_35)))=(nat-to-int (mult (succ (plus (succ _t_36) _t_36)) _v_35)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_23 _qv_24))=(plus (succ _qv_24) (succ _qv_23))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(nat-to-int (plus _v_35 _v_35)))=(nat-to-int (mult (succ (plus (succ _t_36) _t_36)) _v_35)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (mult _qv_25 _qv_26))=(mult (succ _qv_25) (succ _qv_26))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(nat-to-int (plus _v_35 _v_35)))=(nat-to-int (mult (succ (plus (succ _t_36) _t_36)) _v_35)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (mult _qv_25 _qv_26))=(mult (succ _qv_26) (succ _qv_25))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(nat-to-int (plus _v_35 _v_35)))=(nat-to-int (mult (succ (plus (succ _t_36) _t_36)) _v_35)))
NOW TESTING (forall ((Nat) (Nat)) ((tri (plus _qv_27 _qv_28))=(plus (tri _qv_27) (tri _qv_28))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(nat-to-int (plus _v_35 _v_35)))=(nat-to-int (mult (succ (plus (succ _t_36) _t_36)) _v_35)))
NOW TESTING (forall ((Nat) (Nat)) ((tri (plus _qv_27 _qv_28))=(plus (tri _qv_28) (tri _qv_27))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(nat-to-int (plus _v_35 _v_35)))=(nat-to-int (mult (succ (plus (succ _t_36) _t_36)) _v_35)))
NOW TESTING (forall ((Nat) (Nat)) ((tri (mult _qv_29 _qv_30))=(mult (tri _qv_29) (tri _qv_30))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(nat-to-int (plus _v_35 _v_35)))=(nat-to-int (mult (succ (plus (succ _t_36) _t_36)) _v_35)))
NOW TESTING (forall ((Nat) (Nat)) ((tri (mult _qv_29 _qv_30))=(mult (tri _qv_30) (tri _qv_29))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(nat-to-int (plus _v_35 _v_35)))=(nat-to-int (mult (succ (plus (succ _t_36) _t_36)) _v_35)))
NOW TESTING (forall ((Nat) (Nat)) ((cubes (plus _qv_31 _qv_32))=(plus (cubes _qv_31) (cubes _qv_32))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(nat-to-int (plus _v_35 _v_35)))=(nat-to-int (mult (succ (plus (succ _t_36) _t_36)) _v_35)))
NOW TESTING (forall ((Nat) (Nat)) ((cubes (plus _qv_31 _qv_32))=(plus (cubes _qv_32) (cubes _qv_31))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(nat-to-int (plus _v_35 _v_35)))=(nat-to-int (mult (succ (plus (succ _t_36) _t_36)) _v_35)))
NOW TESTING (forall ((Nat) (Nat)) ((cubes (mult _qv_33 _qv_34))=(mult (cubes _qv_33) (cubes _qv_34))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(nat-to-int (plus _v_35 _v_35)))=(nat-to-int (mult (succ (plus (succ _t_36) _t_36)) _v_35)))
NOW TESTING (forall ((Nat) (Nat)) ((cubes (mult _qv_33 _qv_34))=(mult (cubes _qv_34) (cubes _qv_33))))
USE ASSUMPTION FAILED

  backtrack to: (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(nat-to-int (plus _v_35 _v_35)))=(nat-to-int (mult (succ (plus (succ _t_36) _t_36)) _v_35)))
  rewritten [12]: (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+((nat-to-int _v_35)+(nat-to-int _v_35)))=(nat-to-int (mult (succ (plus (succ _t_36) _t_36)) _v_35)))
  Maximum recursion depth reached
CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(nat-to-int (plus _v_35 _v_35)))=(nat-to-int (mult (succ (plus (succ _t_36) _t_36)) _v_35)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(nat-to-int (plus _v_35 _v_35)))=(nat-to-int (mult (succ (plus (succ _t_36) _t_36)) _v_35)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_1 _qv_2)=(plus _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(nat-to-int (plus _v_35 _v_35)))=(nat-to-int (mult (succ (plus (succ _t_36) _t_36)) _v_35)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_3 _qv_4) _qv_5)=(plus _qv_3 (plus _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(nat-to-int (plus _v_35 _v_35)))=(nat-to-int (mult (succ (plus (succ _t_36) _t_36)) _v_35)))
NOW TESTING (forall ((Nat) (Nat)) ((mult _qv_6 _qv_7)=(mult _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(nat-to-int (plus _v_35 _v_35)))=(nat-to-int (mult (succ (plus (succ _t_36) _t_36)) _v_35)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((mult (mult _qv_8 _qv_9) _qv_10)=(mult _qv_8 (mult _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(nat-to-int (plus _v_35 _v_35)))=(nat-to-int (mult (succ (plus (succ _t_36) _t_36)) _v_35)))
NOW TESTING (forall ((Nat)) ((tri (tri _qv_11))=_qv_11))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(nat-to-int (plus _v_35 _v_35)))=(nat-to-int (mult (succ (plus (succ _t_36) _t_36)) _v_35)))
NOW TESTING (forall ((Nat)) ((cubes (cubes _qv_12))=_qv_12))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(nat-to-int (plus _v_35 _v_35)))=(nat-to-int (mult (succ (plus (succ _t_36) _t_36)) _v_35)))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(nat-to-int (plus _v_35 _v_35)))=(nat-to-int (mult (succ (plus (succ _t_36) _t_36)) _v_35)))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_14))=(nat-to-int _qv_14)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(nat-to-int (plus _v_35 _v_35)))=(nat-to-int (mult (succ (plus (succ _t_36) _t_36)) _v_35)))
NOW TESTING (forall ((Nat)) ((nat-to-int (tri _qv_15))=(nat-to-int _qv_15)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(nat-to-int (plus _v_35 _v_35)))=(nat-to-int (mult (succ (plus (succ _t_36) _t_36)) _v_35)))
NOW TESTING (forall ((Nat)) ((nat-to-int (cubes _qv_16))=(nat-to-int _qv_16)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(nat-to-int (plus _v_35 _v_35)))=(nat-to-int (mult (succ (plus (succ _t_36) _t_36)) _v_35)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((mult _qv_17 (plus _qv_18 _qv_19))=(plus (mult _qv_17 _qv_18) (mult _qv_17 _qv_19))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(nat-to-int (plus _v_35 _v_35)))=(nat-to-int (mult (succ (plus (succ _t_36) _t_36)) _v_35)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus _qv_20 (mult _qv_21 _qv_22))=(mult (plus _qv_20 _qv_21) (plus _qv_20 _qv_22))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(nat-to-int (plus _v_35 _v_35)))=(nat-to-int (mult (succ (plus (succ _t_36) _t_36)) _v_35)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_23 _qv_24))=(plus (succ _qv_23) (succ _qv_24))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(nat-to-int (plus _v_35 _v_35)))=(nat-to-int (mult (succ (plus (succ _t_36) _t_36)) _v_35)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_23 _qv_24))=(plus (succ _qv_24) (succ _qv_23))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(nat-to-int (plus _v_35 _v_35)))=(nat-to-int (mult (succ (plus (succ _t_36) _t_36)) _v_35)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (mult _qv_25 _qv_26))=(mult (succ _qv_25) (succ _qv_26))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(nat-to-int (plus _v_35 _v_35)))=(nat-to-int (mult (succ (plus (succ _t_36) _t_36)) _v_35)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (mult _qv_25 _qv_26))=(mult (succ _qv_26) (succ _qv_25))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(nat-to-int (plus _v_35 _v_35)))=(nat-to-int (mult (succ (plus (succ _t_36) _t_36)) _v_35)))
NOW TESTING (forall ((Nat) (Nat)) ((tri (plus _qv_27 _qv_28))=(plus (tri _qv_27) (tri _qv_28))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(nat-to-int (plus _v_35 _v_35)))=(nat-to-int (mult (succ (plus (succ _t_36) _t_36)) _v_35)))
NOW TESTING (forall ((Nat) (Nat)) ((tri (plus _qv_27 _qv_28))=(plus (tri _qv_28) (tri _qv_27))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(nat-to-int (plus _v_35 _v_35)))=(nat-to-int (mult (succ (plus (succ _t_36) _t_36)) _v_35)))
NOW TESTING (forall ((Nat) (Nat)) ((tri (mult _qv_29 _qv_30))=(mult (tri _qv_29) (tri _qv_30))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(nat-to-int (plus _v_35 _v_35)))=(nat-to-int (mult (succ (plus (succ _t_36) _t_36)) _v_35)))
NOW TESTING (forall ((Nat) (Nat)) ((tri (mult _qv_29 _qv_30))=(mult (tri _qv_30) (tri _qv_29))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(nat-to-int (plus _v_35 _v_35)))=(nat-to-int (mult (succ (plus (succ _t_36) _t_36)) _v_35)))
NOW TESTING (forall ((Nat) (Nat)) ((cubes (plus _qv_31 _qv_32))=(plus (cubes _qv_31) (cubes _qv_32))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(nat-to-int (plus _v_35 _v_35)))=(nat-to-int (mult (succ (plus (succ _t_36) _t_36)) _v_35)))
NOW TESTING (forall ((Nat) (Nat)) ((cubes (plus _qv_31 _qv_32))=(plus (cubes _qv_32) (cubes _qv_31))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(nat-to-int (plus _v_35 _v_35)))=(nat-to-int (mult (succ (plus (succ _t_36) _t_36)) _v_35)))
NOW TESTING (forall ((Nat) (Nat)) ((cubes (mult _qv_33 _qv_34))=(mult (cubes _qv_33) (cubes _qv_34))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(nat-to-int (plus _v_35 _v_35)))=(nat-to-int (mult (succ (plus (succ _t_36) _t_36)) _v_35)))
NOW TESTING (forall ((Nat) (Nat)) ((cubes (mult _qv_33 _qv_34))=(mult (cubes _qv_34) (cubes _qv_33))))
USE ASSUMPTION FAILED

  backtrack to: (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(nat-to-int (plus _v_35 _v_35)))=(nat-to-int (mult (succ (plus (succ _t_36) _t_36)) _v_35)))
  rewritten [13]: (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(nat-to-int (plus _v_35 _v_35)))=(nat-to-int (mult (succ (plus _t_36 (succ _t_36))) _v_35)))
  Maximum recursion depth reached
CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(nat-to-int (plus _v_35 _v_35)))=(nat-to-int (mult (succ (plus (succ _t_36) _t_36)) _v_35)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(nat-to-int (plus _v_35 _v_35)))=(nat-to-int (mult (succ (plus (succ _t_36) _t_36)) _v_35)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_1 _qv_2)=(plus _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(nat-to-int (plus _v_35 _v_35)))=(nat-to-int (mult (succ (plus (succ _t_36) _t_36)) _v_35)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_3 _qv_4) _qv_5)=(plus _qv_3 (plus _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(nat-to-int (plus _v_35 _v_35)))=(nat-to-int (mult (succ (plus (succ _t_36) _t_36)) _v_35)))
NOW TESTING (forall ((Nat) (Nat)) ((mult _qv_6 _qv_7)=(mult _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(nat-to-int (plus _v_35 _v_35)))=(nat-to-int (mult (succ (plus (succ _t_36) _t_36)) _v_35)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((mult (mult _qv_8 _qv_9) _qv_10)=(mult _qv_8 (mult _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(nat-to-int (plus _v_35 _v_35)))=(nat-to-int (mult (succ (plus (succ _t_36) _t_36)) _v_35)))
NOW TESTING (forall ((Nat)) ((tri (tri _qv_11))=_qv_11))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(nat-to-int (plus _v_35 _v_35)))=(nat-to-int (mult (succ (plus (succ _t_36) _t_36)) _v_35)))
NOW TESTING (forall ((Nat)) ((cubes (cubes _qv_12))=_qv_12))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(nat-to-int (plus _v_35 _v_35)))=(nat-to-int (mult (succ (plus (succ _t_36) _t_36)) _v_35)))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(nat-to-int (plus _v_35 _v_35)))=(nat-to-int (mult (succ (plus (succ _t_36) _t_36)) _v_35)))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_14))=(nat-to-int _qv_14)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(nat-to-int (plus _v_35 _v_35)))=(nat-to-int (mult (succ (plus (succ _t_36) _t_36)) _v_35)))
NOW TESTING (forall ((Nat)) ((nat-to-int (tri _qv_15))=(nat-to-int _qv_15)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(nat-to-int (plus _v_35 _v_35)))=(nat-to-int (mult (succ (plus (succ _t_36) _t_36)) _v_35)))
NOW TESTING (forall ((Nat)) ((nat-to-int (cubes _qv_16))=(nat-to-int _qv_16)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(nat-to-int (plus _v_35 _v_35)))=(nat-to-int (mult (succ (plus (succ _t_36) _t_36)) _v_35)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((mult _qv_17 (plus _qv_18 _qv_19))=(plus (mult _qv_17 _qv_18) (mult _qv_17 _qv_19))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(nat-to-int (plus _v_35 _v_35)))=(nat-to-int (mult (succ (plus (succ _t_36) _t_36)) _v_35)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus _qv_20 (mult _qv_21 _qv_22))=(mult (plus _qv_20 _qv_21) (plus _qv_20 _qv_22))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(nat-to-int (plus _v_35 _v_35)))=(nat-to-int (mult (succ (plus (succ _t_36) _t_36)) _v_35)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_23 _qv_24))=(plus (succ _qv_23) (succ _qv_24))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(nat-to-int (plus _v_35 _v_35)))=(nat-to-int (mult (succ (plus (succ _t_36) _t_36)) _v_35)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_23 _qv_24))=(plus (succ _qv_24) (succ _qv_23))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(nat-to-int (plus _v_35 _v_35)))=(nat-to-int (mult (succ (plus (succ _t_36) _t_36)) _v_35)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (mult _qv_25 _qv_26))=(mult (succ _qv_25) (succ _qv_26))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(nat-to-int (plus _v_35 _v_35)))=(nat-to-int (mult (succ (plus (succ _t_36) _t_36)) _v_35)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (mult _qv_25 _qv_26))=(mult (succ _qv_26) (succ _qv_25))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(nat-to-int (plus _v_35 _v_35)))=(nat-to-int (mult (succ (plus (succ _t_36) _t_36)) _v_35)))
NOW TESTING (forall ((Nat) (Nat)) ((tri (plus _qv_27 _qv_28))=(plus (tri _qv_27) (tri _qv_28))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(nat-to-int (plus _v_35 _v_35)))=(nat-to-int (mult (succ (plus (succ _t_36) _t_36)) _v_35)))
NOW TESTING (forall ((Nat) (Nat)) ((tri (plus _qv_27 _qv_28))=(plus (tri _qv_28) (tri _qv_27))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(nat-to-int (plus _v_35 _v_35)))=(nat-to-int (mult (succ (plus (succ _t_36) _t_36)) _v_35)))
NOW TESTING (forall ((Nat) (Nat)) ((tri (mult _qv_29 _qv_30))=(mult (tri _qv_29) (tri _qv_30))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(nat-to-int (plus _v_35 _v_35)))=(nat-to-int (mult (succ (plus (succ _t_36) _t_36)) _v_35)))
NOW TESTING (forall ((Nat) (Nat)) ((tri (mult _qv_29 _qv_30))=(mult (tri _qv_30) (tri _qv_29))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(nat-to-int (plus _v_35 _v_35)))=(nat-to-int (mult (succ (plus (succ _t_36) _t_36)) _v_35)))
NOW TESTING (forall ((Nat) (Nat)) ((cubes (plus _qv_31 _qv_32))=(plus (cubes _qv_31) (cubes _qv_32))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(nat-to-int (plus _v_35 _v_35)))=(nat-to-int (mult (succ (plus (succ _t_36) _t_36)) _v_35)))
NOW TESTING (forall ((Nat) (Nat)) ((cubes (plus _qv_31 _qv_32))=(plus (cubes _qv_32) (cubes _qv_31))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(nat-to-int (plus _v_35 _v_35)))=(nat-to-int (mult (succ (plus (succ _t_36) _t_36)) _v_35)))
NOW TESTING (forall ((Nat) (Nat)) ((cubes (mult _qv_33 _qv_34))=(mult (cubes _qv_33) (cubes _qv_34))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(nat-to-int (plus _v_35 _v_35)))=(nat-to-int (mult (succ (plus (succ _t_36) _t_36)) _v_35)))
NOW TESTING (forall ((Nat) (Nat)) ((cubes (mult _qv_33 _qv_34))=(mult (cubes _qv_34) (cubes _qv_33))))
USE ASSUMPTION FAILED

  backtrack to: (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(nat-to-int (plus _v_35 _v_35)))=(nat-to-int (mult (succ (plus (succ _t_36) _t_36)) _v_35)))
  rewritten [15]: (((nat-to-int (mult (plus _v_35 _v_35) _t_36))+(nat-to-int (plus _v_35 _v_35)))=(nat-to-int (mult (succ (plus (succ _t_36) _t_36)) _v_35)))
  Maximum recursion depth reached
CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(nat-to-int (plus _v_35 _v_35)))=(nat-to-int (mult (succ (plus (succ _t_36) _t_36)) _v_35)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(nat-to-int (plus _v_35 _v_35)))=(nat-to-int (mult (succ (plus (succ _t_36) _t_36)) _v_35)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_1 _qv_2)=(plus _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(nat-to-int (plus _v_35 _v_35)))=(nat-to-int (mult (succ (plus (succ _t_36) _t_36)) _v_35)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_3 _qv_4) _qv_5)=(plus _qv_3 (plus _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(nat-to-int (plus _v_35 _v_35)))=(nat-to-int (mult (succ (plus (succ _t_36) _t_36)) _v_35)))
NOW TESTING (forall ((Nat) (Nat)) ((mult _qv_6 _qv_7)=(mult _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(nat-to-int (plus _v_35 _v_35)))=(nat-to-int (mult (succ (plus (succ _t_36) _t_36)) _v_35)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((mult (mult _qv_8 _qv_9) _qv_10)=(mult _qv_8 (mult _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(nat-to-int (plus _v_35 _v_35)))=(nat-to-int (mult (succ (plus (succ _t_36) _t_36)) _v_35)))
NOW TESTING (forall ((Nat)) ((tri (tri _qv_11))=_qv_11))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(nat-to-int (plus _v_35 _v_35)))=(nat-to-int (mult (succ (plus (succ _t_36) _t_36)) _v_35)))
NOW TESTING (forall ((Nat)) ((cubes (cubes _qv_12))=_qv_12))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(nat-to-int (plus _v_35 _v_35)))=(nat-to-int (mult (succ (plus (succ _t_36) _t_36)) _v_35)))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(nat-to-int (plus _v_35 _v_35)))=(nat-to-int (mult (succ (plus (succ _t_36) _t_36)) _v_35)))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_14))=(nat-to-int _qv_14)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(nat-to-int (plus _v_35 _v_35)))=(nat-to-int (mult (succ (plus (succ _t_36) _t_36)) _v_35)))
NOW TESTING (forall ((Nat)) ((nat-to-int (tri _qv_15))=(nat-to-int _qv_15)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(nat-to-int (plus _v_35 _v_35)))=(nat-to-int (mult (succ (plus (succ _t_36) _t_36)) _v_35)))
NOW TESTING (forall ((Nat)) ((nat-to-int (cubes _qv_16))=(nat-to-int _qv_16)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(nat-to-int (plus _v_35 _v_35)))=(nat-to-int (mult (succ (plus (succ _t_36) _t_36)) _v_35)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((mult _qv_17 (plus _qv_18 _qv_19))=(plus (mult _qv_17 _qv_18) (mult _qv_17 _qv_19))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(nat-to-int (plus _v_35 _v_35)))=(nat-to-int (mult (succ (plus (succ _t_36) _t_36)) _v_35)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus _qv_20 (mult _qv_21 _qv_22))=(mult (plus _qv_20 _qv_21) (plus _qv_20 _qv_22))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(nat-to-int (plus _v_35 _v_35)))=(nat-to-int (mult (succ (plus (succ _t_36) _t_36)) _v_35)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_23 _qv_24))=(plus (succ _qv_23) (succ _qv_24))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(nat-to-int (plus _v_35 _v_35)))=(nat-to-int (mult (succ (plus (succ _t_36) _t_36)) _v_35)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_23 _qv_24))=(plus (succ _qv_24) (succ _qv_23))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(nat-to-int (plus _v_35 _v_35)))=(nat-to-int (mult (succ (plus (succ _t_36) _t_36)) _v_35)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (mult _qv_25 _qv_26))=(mult (succ _qv_25) (succ _qv_26))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(nat-to-int (plus _v_35 _v_35)))=(nat-to-int (mult (succ (plus (succ _t_36) _t_36)) _v_35)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (mult _qv_25 _qv_26))=(mult (succ _qv_26) (succ _qv_25))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(nat-to-int (plus _v_35 _v_35)))=(nat-to-int (mult (succ (plus (succ _t_36) _t_36)) _v_35)))
NOW TESTING (forall ((Nat) (Nat)) ((tri (plus _qv_27 _qv_28))=(plus (tri _qv_27) (tri _qv_28))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(nat-to-int (plus _v_35 _v_35)))=(nat-to-int (mult (succ (plus (succ _t_36) _t_36)) _v_35)))
NOW TESTING (forall ((Nat) (Nat)) ((tri (plus _qv_27 _qv_28))=(plus (tri _qv_28) (tri _qv_27))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(nat-to-int (plus _v_35 _v_35)))=(nat-to-int (mult (succ (plus (succ _t_36) _t_36)) _v_35)))
NOW TESTING (forall ((Nat) (Nat)) ((tri (mult _qv_29 _qv_30))=(mult (tri _qv_29) (tri _qv_30))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(nat-to-int (plus _v_35 _v_35)))=(nat-to-int (mult (succ (plus (succ _t_36) _t_36)) _v_35)))
NOW TESTING (forall ((Nat) (Nat)) ((tri (mult _qv_29 _qv_30))=(mult (tri _qv_30) (tri _qv_29))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(nat-to-int (plus _v_35 _v_35)))=(nat-to-int (mult (succ (plus (succ _t_36) _t_36)) _v_35)))
NOW TESTING (forall ((Nat) (Nat)) ((cubes (plus _qv_31 _qv_32))=(plus (cubes _qv_31) (cubes _qv_32))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(nat-to-int (plus _v_35 _v_35)))=(nat-to-int (mult (succ (plus (succ _t_36) _t_36)) _v_35)))
NOW TESTING (forall ((Nat) (Nat)) ((cubes (plus _qv_31 _qv_32))=(plus (cubes _qv_32) (cubes _qv_31))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(nat-to-int (plus _v_35 _v_35)))=(nat-to-int (mult (succ (plus (succ _t_36) _t_36)) _v_35)))
NOW TESTING (forall ((Nat) (Nat)) ((cubes (mult _qv_33 _qv_34))=(mult (cubes _qv_33) (cubes _qv_34))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(nat-to-int (plus _v_35 _v_35)))=(nat-to-int (mult (succ (plus (succ _t_36) _t_36)) _v_35)))
NOW TESTING (forall ((Nat) (Nat)) ((cubes (mult _qv_33 _qv_34))=(mult (cubes _qv_34) (cubes _qv_33))))
USE ASSUMPTION FAILED

  backtrack to: (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(nat-to-int (plus _v_35 _v_35)))=(nat-to-int (mult (succ (plus (succ _t_36) _t_36)) _v_35)))
  rewritten [17]: (((nat-to-int (mult _v_35 (plus _t_36 _t_36)))+(nat-to-int (plus _v_35 _v_35)))=(nat-to-int (mult (succ (plus (succ _t_36) _t_36)) _v_35)))
  Maximum recursion depth reached
CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(nat-to-int (plus _v_35 _v_35)))=(nat-to-int (mult (succ (plus (succ _t_36) _t_36)) _v_35)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(nat-to-int (plus _v_35 _v_35)))=(nat-to-int (mult (succ (plus (succ _t_36) _t_36)) _v_35)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_1 _qv_2)=(plus _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(nat-to-int (plus _v_35 _v_35)))=(nat-to-int (mult (succ (plus (succ _t_36) _t_36)) _v_35)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_3 _qv_4) _qv_5)=(plus _qv_3 (plus _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(nat-to-int (plus _v_35 _v_35)))=(nat-to-int (mult (succ (plus (succ _t_36) _t_36)) _v_35)))
NOW TESTING (forall ((Nat) (Nat)) ((mult _qv_6 _qv_7)=(mult _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(nat-to-int (plus _v_35 _v_35)))=(nat-to-int (mult (succ (plus (succ _t_36) _t_36)) _v_35)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((mult (mult _qv_8 _qv_9) _qv_10)=(mult _qv_8 (mult _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(nat-to-int (plus _v_35 _v_35)))=(nat-to-int (mult (succ (plus (succ _t_36) _t_36)) _v_35)))
NOW TESTING (forall ((Nat)) ((tri (tri _qv_11))=_qv_11))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(nat-to-int (plus _v_35 _v_35)))=(nat-to-int (mult (succ (plus (succ _t_36) _t_36)) _v_35)))
NOW TESTING (forall ((Nat)) ((cubes (cubes _qv_12))=_qv_12))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(nat-to-int (plus _v_35 _v_35)))=(nat-to-int (mult (succ (plus (succ _t_36) _t_36)) _v_35)))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(nat-to-int (plus _v_35 _v_35)))=(nat-to-int (mult (succ (plus (succ _t_36) _t_36)) _v_35)))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_14))=(nat-to-int _qv_14)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(nat-to-int (plus _v_35 _v_35)))=(nat-to-int (mult (succ (plus (succ _t_36) _t_36)) _v_35)))
NOW TESTING (forall ((Nat)) ((nat-to-int (tri _qv_15))=(nat-to-int _qv_15)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(nat-to-int (plus _v_35 _v_35)))=(nat-to-int (mult (succ (plus (succ _t_36) _t_36)) _v_35)))
NOW TESTING (forall ((Nat)) ((nat-to-int (cubes _qv_16))=(nat-to-int _qv_16)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(nat-to-int (plus _v_35 _v_35)))=(nat-to-int (mult (succ (plus (succ _t_36) _t_36)) _v_35)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((mult _qv_17 (plus _qv_18 _qv_19))=(plus (mult _qv_17 _qv_18) (mult _qv_17 _qv_19))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(nat-to-int (plus _v_35 _v_35)))=(nat-to-int (mult (succ (plus (succ _t_36) _t_36)) _v_35)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus _qv_20 (mult _qv_21 _qv_22))=(mult (plus _qv_20 _qv_21) (plus _qv_20 _qv_22))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(nat-to-int (plus _v_35 _v_35)))=(nat-to-int (mult (succ (plus (succ _t_36) _t_36)) _v_35)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_23 _qv_24))=(plus (succ _qv_23) (succ _qv_24))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(nat-to-int (plus _v_35 _v_35)))=(nat-to-int (mult (succ (plus (succ _t_36) _t_36)) _v_35)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_23 _qv_24))=(plus (succ _qv_24) (succ _qv_23))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(nat-to-int (plus _v_35 _v_35)))=(nat-to-int (mult (succ (plus (succ _t_36) _t_36)) _v_35)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (mult _qv_25 _qv_26))=(mult (succ _qv_25) (succ _qv_26))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(nat-to-int (plus _v_35 _v_35)))=(nat-to-int (mult (succ (plus (succ _t_36) _t_36)) _v_35)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (mult _qv_25 _qv_26))=(mult (succ _qv_26) (succ _qv_25))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(nat-to-int (plus _v_35 _v_35)))=(nat-to-int (mult (succ (plus (succ _t_36) _t_36)) _v_35)))
NOW TESTING (forall ((Nat) (Nat)) ((tri (plus _qv_27 _qv_28))=(plus (tri _qv_27) (tri _qv_28))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(nat-to-int (plus _v_35 _v_35)))=(nat-to-int (mult (succ (plus (succ _t_36) _t_36)) _v_35)))
NOW TESTING (forall ((Nat) (Nat)) ((tri (plus _qv_27 _qv_28))=(plus (tri _qv_28) (tri _qv_27))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(nat-to-int (plus _v_35 _v_35)))=(nat-to-int (mult (succ (plus (succ _t_36) _t_36)) _v_35)))
NOW TESTING (forall ((Nat) (Nat)) ((tri (mult _qv_29 _qv_30))=(mult (tri _qv_29) (tri _qv_30))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(nat-to-int (plus _v_35 _v_35)))=(nat-to-int (mult (succ (plus (succ _t_36) _t_36)) _v_35)))
NOW TESTING (forall ((Nat) (Nat)) ((tri (mult _qv_29 _qv_30))=(mult (tri _qv_30) (tri _qv_29))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(nat-to-int (plus _v_35 _v_35)))=(nat-to-int (mult (succ (plus (succ _t_36) _t_36)) _v_35)))
NOW TESTING (forall ((Nat) (Nat)) ((cubes (plus _qv_31 _qv_32))=(plus (cubes _qv_31) (cubes _qv_32))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(nat-to-int (plus _v_35 _v_35)))=(nat-to-int (mult (succ (plus (succ _t_36) _t_36)) _v_35)))
NOW TESTING (forall ((Nat) (Nat)) ((cubes (plus _qv_31 _qv_32))=(plus (cubes _qv_32) (cubes _qv_31))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(nat-to-int (plus _v_35 _v_35)))=(nat-to-int (mult (succ (plus (succ _t_36) _t_36)) _v_35)))
NOW TESTING (forall ((Nat) (Nat)) ((cubes (mult _qv_33 _qv_34))=(mult (cubes _qv_33) (cubes _qv_34))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(nat-to-int (plus _v_35 _v_35)))=(nat-to-int (mult (succ (plus (succ _t_36) _t_36)) _v_35)))
NOW TESTING (forall ((Nat) (Nat)) ((cubes (mult _qv_33 _qv_34))=(mult (cubes _qv_34) (cubes _qv_33))))
USE ASSUMPTION FAILED

  backtrack to: (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(nat-to-int (plus _v_35 _v_35)))=(nat-to-int (mult (succ (plus (succ _t_36) _t_36)) _v_35)))
CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(nat-to-int (plus _v_35 _v_35)))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(nat-to-int (plus _v_35 _v_35)))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_1 _qv_2)=(plus _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(nat-to-int (plus _v_35 _v_35)))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_3 _qv_4) _qv_5)=(plus _qv_3 (plus _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(nat-to-int (plus _v_35 _v_35)))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((mult _qv_6 _qv_7)=(mult _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(nat-to-int (plus _v_35 _v_35)))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((mult (mult _qv_8 _qv_9) _qv_10)=(mult _qv_8 (mult _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(nat-to-int (plus _v_35 _v_35)))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat)) ((tri (tri _qv_11))=_qv_11))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(nat-to-int (plus _v_35 _v_35)))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat)) ((cubes (cubes _qv_12))=_qv_12))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(nat-to-int (plus _v_35 _v_35)))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(nat-to-int (plus _v_35 _v_35)))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_14))=(nat-to-int _qv_14)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(nat-to-int (plus _v_35 _v_35)))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat)) ((nat-to-int (tri _qv_15))=(nat-to-int _qv_15)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(nat-to-int (plus _v_35 _v_35)))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat)) ((nat-to-int (cubes _qv_16))=(nat-to-int _qv_16)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(nat-to-int (plus _v_35 _v_35)))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((mult _qv_17 (plus _qv_18 _qv_19))=(plus (mult _qv_17 _qv_18) (mult _qv_17 _qv_19))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(nat-to-int (plus _v_35 _v_35)))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus _qv_20 (mult _qv_21 _qv_22))=(mult (plus _qv_20 _qv_21) (plus _qv_20 _qv_22))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(nat-to-int (plus _v_35 _v_35)))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_23 _qv_24))=(plus (succ _qv_23) (succ _qv_24))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(nat-to-int (plus _v_35 _v_35)))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_23 _qv_24))=(plus (succ _qv_24) (succ _qv_23))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(nat-to-int (plus _v_35 _v_35)))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (mult _qv_25 _qv_26))=(mult (succ _qv_25) (succ _qv_26))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(nat-to-int (plus _v_35 _v_35)))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (mult _qv_25 _qv_26))=(mult (succ _qv_26) (succ _qv_25))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(nat-to-int (plus _v_35 _v_35)))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((tri (plus _qv_27 _qv_28))=(plus (tri _qv_27) (tri _qv_28))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(nat-to-int (plus _v_35 _v_35)))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((tri (plus _qv_27 _qv_28))=(plus (tri _qv_28) (tri _qv_27))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(nat-to-int (plus _v_35 _v_35)))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((tri (mult _qv_29 _qv_30))=(mult (tri _qv_29) (tri _qv_30))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(nat-to-int (plus _v_35 _v_35)))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((tri (mult _qv_29 _qv_30))=(mult (tri _qv_30) (tri _qv_29))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(nat-to-int (plus _v_35 _v_35)))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((cubes (plus _qv_31 _qv_32))=(plus (cubes _qv_31) (cubes _qv_32))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(nat-to-int (plus _v_35 _v_35)))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((cubes (plus _qv_31 _qv_32))=(plus (cubes _qv_32) (cubes _qv_31))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(nat-to-int (plus _v_35 _v_35)))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((cubes (mult _qv_33 _qv_34))=(mult (cubes _qv_33) (cubes _qv_34))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(nat-to-int (plus _v_35 _v_35)))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((cubes (mult _qv_33 _qv_34))=(mult (cubes _qv_34) (cubes _qv_33))))
USE ASSUMPTION FAILED

  backtrack to: (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(nat-to-int (plus _v_35 _v_35)))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
  rewritten [15]: (((nat-to-int (mult (plus _v_35 _v_35) _t_36))+(nat-to-int (plus _v_35 _v_35)))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
  rewritten [2]: (((nat-to-int (plus _v_35 _v_35))+(nat-to-int (mult (plus _v_35 _v_35) _t_36)))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
  Maximum recursion depth reached
CURRENT SUBGOAL (((nat-to-int (plus _v_35 _v_35))+(nat-to-int (mult (plus _v_35 _v_35) _t_36)))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (plus _v_35 _v_35))+(nat-to-int (mult (plus _v_35 _v_35) _t_36)))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_1 _qv_2)=(plus _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (plus _v_35 _v_35))+(nat-to-int (mult (plus _v_35 _v_35) _t_36)))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_3 _qv_4) _qv_5)=(plus _qv_3 (plus _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (plus _v_35 _v_35))+(nat-to-int (mult (plus _v_35 _v_35) _t_36)))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((mult _qv_6 _qv_7)=(mult _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (plus _v_35 _v_35))+(nat-to-int (mult (plus _v_35 _v_35) _t_36)))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((mult (mult _qv_8 _qv_9) _qv_10)=(mult _qv_8 (mult _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (plus _v_35 _v_35))+(nat-to-int (mult (plus _v_35 _v_35) _t_36)))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat)) ((tri (tri _qv_11))=_qv_11))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (plus _v_35 _v_35))+(nat-to-int (mult (plus _v_35 _v_35) _t_36)))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat)) ((cubes (cubes _qv_12))=_qv_12))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (plus _v_35 _v_35))+(nat-to-int (mult (plus _v_35 _v_35) _t_36)))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (plus _v_35 _v_35))+(nat-to-int (mult (plus _v_35 _v_35) _t_36)))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_14))=(nat-to-int _qv_14)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (plus _v_35 _v_35))+(nat-to-int (mult (plus _v_35 _v_35) _t_36)))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat)) ((nat-to-int (tri _qv_15))=(nat-to-int _qv_15)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (plus _v_35 _v_35))+(nat-to-int (mult (plus _v_35 _v_35) _t_36)))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat)) ((nat-to-int (cubes _qv_16))=(nat-to-int _qv_16)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (plus _v_35 _v_35))+(nat-to-int (mult (plus _v_35 _v_35) _t_36)))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((mult _qv_17 (plus _qv_18 _qv_19))=(plus (mult _qv_17 _qv_18) (mult _qv_17 _qv_19))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (plus _v_35 _v_35))+(nat-to-int (mult (plus _v_35 _v_35) _t_36)))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus _qv_20 (mult _qv_21 _qv_22))=(mult (plus _qv_20 _qv_21) (plus _qv_20 _qv_22))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (plus _v_35 _v_35))+(nat-to-int (mult (plus _v_35 _v_35) _t_36)))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_23 _qv_24))=(plus (succ _qv_23) (succ _qv_24))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (plus _v_35 _v_35))+(nat-to-int (mult (plus _v_35 _v_35) _t_36)))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_23 _qv_24))=(plus (succ _qv_24) (succ _qv_23))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (plus _v_35 _v_35))+(nat-to-int (mult (plus _v_35 _v_35) _t_36)))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (mult _qv_25 _qv_26))=(mult (succ _qv_25) (succ _qv_26))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (plus _v_35 _v_35))+(nat-to-int (mult (plus _v_35 _v_35) _t_36)))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (mult _qv_25 _qv_26))=(mult (succ _qv_26) (succ _qv_25))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (plus _v_35 _v_35))+(nat-to-int (mult (plus _v_35 _v_35) _t_36)))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((tri (plus _qv_27 _qv_28))=(plus (tri _qv_27) (tri _qv_28))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (plus _v_35 _v_35))+(nat-to-int (mult (plus _v_35 _v_35) _t_36)))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((tri (plus _qv_27 _qv_28))=(plus (tri _qv_28) (tri _qv_27))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (plus _v_35 _v_35))+(nat-to-int (mult (plus _v_35 _v_35) _t_36)))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((tri (mult _qv_29 _qv_30))=(mult (tri _qv_29) (tri _qv_30))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (plus _v_35 _v_35))+(nat-to-int (mult (plus _v_35 _v_35) _t_36)))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((tri (mult _qv_29 _qv_30))=(mult (tri _qv_30) (tri _qv_29))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (plus _v_35 _v_35))+(nat-to-int (mult (plus _v_35 _v_35) _t_36)))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((cubes (plus _qv_31 _qv_32))=(plus (cubes _qv_31) (cubes _qv_32))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (plus _v_35 _v_35))+(nat-to-int (mult (plus _v_35 _v_35) _t_36)))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((cubes (plus _qv_31 _qv_32))=(plus (cubes _qv_32) (cubes _qv_31))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (plus _v_35 _v_35))+(nat-to-int (mult (plus _v_35 _v_35) _t_36)))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((cubes (mult _qv_33 _qv_34))=(mult (cubes _qv_33) (cubes _qv_34))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (plus _v_35 _v_35))+(nat-to-int (mult (plus _v_35 _v_35) _t_36)))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((cubes (mult _qv_33 _qv_34))=(mult (cubes _qv_34) (cubes _qv_33))))
USE ASSUMPTION FAILED

  backtrack to: (((nat-to-int (plus _v_35 _v_35))+(nat-to-int (mult (plus _v_35 _v_35) _t_36)))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
  rewritten [4]: (((nat-to-int (plus _v_35 _v_35))+(nat-to-int (mult (plus _v_35 _v_35) _t_36)))=(nat-to-int (mult _v_35 (succ (succ (plus _t_36 _t_36))))))
  Maximum recursion depth reached
CURRENT SUBGOAL (((nat-to-int (plus _v_35 _v_35))+(nat-to-int (mult (plus _v_35 _v_35) _t_36)))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (plus _v_35 _v_35))+(nat-to-int (mult (plus _v_35 _v_35) _t_36)))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_1 _qv_2)=(plus _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (plus _v_35 _v_35))+(nat-to-int (mult (plus _v_35 _v_35) _t_36)))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_3 _qv_4) _qv_5)=(plus _qv_3 (plus _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (plus _v_35 _v_35))+(nat-to-int (mult (plus _v_35 _v_35) _t_36)))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((mult _qv_6 _qv_7)=(mult _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (plus _v_35 _v_35))+(nat-to-int (mult (plus _v_35 _v_35) _t_36)))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((mult (mult _qv_8 _qv_9) _qv_10)=(mult _qv_8 (mult _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (plus _v_35 _v_35))+(nat-to-int (mult (plus _v_35 _v_35) _t_36)))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat)) ((tri (tri _qv_11))=_qv_11))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (plus _v_35 _v_35))+(nat-to-int (mult (plus _v_35 _v_35) _t_36)))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat)) ((cubes (cubes _qv_12))=_qv_12))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (plus _v_35 _v_35))+(nat-to-int (mult (plus _v_35 _v_35) _t_36)))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (plus _v_35 _v_35))+(nat-to-int (mult (plus _v_35 _v_35) _t_36)))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_14))=(nat-to-int _qv_14)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (plus _v_35 _v_35))+(nat-to-int (mult (plus _v_35 _v_35) _t_36)))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat)) ((nat-to-int (tri _qv_15))=(nat-to-int _qv_15)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (plus _v_35 _v_35))+(nat-to-int (mult (plus _v_35 _v_35) _t_36)))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat)) ((nat-to-int (cubes _qv_16))=(nat-to-int _qv_16)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (plus _v_35 _v_35))+(nat-to-int (mult (plus _v_35 _v_35) _t_36)))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((mult _qv_17 (plus _qv_18 _qv_19))=(plus (mult _qv_17 _qv_18) (mult _qv_17 _qv_19))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (plus _v_35 _v_35))+(nat-to-int (mult (plus _v_35 _v_35) _t_36)))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus _qv_20 (mult _qv_21 _qv_22))=(mult (plus _qv_20 _qv_21) (plus _qv_20 _qv_22))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (plus _v_35 _v_35))+(nat-to-int (mult (plus _v_35 _v_35) _t_36)))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_23 _qv_24))=(plus (succ _qv_23) (succ _qv_24))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (plus _v_35 _v_35))+(nat-to-int (mult (plus _v_35 _v_35) _t_36)))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_23 _qv_24))=(plus (succ _qv_24) (succ _qv_23))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (plus _v_35 _v_35))+(nat-to-int (mult (plus _v_35 _v_35) _t_36)))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (mult _qv_25 _qv_26))=(mult (succ _qv_25) (succ _qv_26))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (plus _v_35 _v_35))+(nat-to-int (mult (plus _v_35 _v_35) _t_36)))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (mult _qv_25 _qv_26))=(mult (succ _qv_26) (succ _qv_25))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (plus _v_35 _v_35))+(nat-to-int (mult (plus _v_35 _v_35) _t_36)))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((tri (plus _qv_27 _qv_28))=(plus (tri _qv_27) (tri _qv_28))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (plus _v_35 _v_35))+(nat-to-int (mult (plus _v_35 _v_35) _t_36)))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((tri (plus _qv_27 _qv_28))=(plus (tri _qv_28) (tri _qv_27))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (plus _v_35 _v_35))+(nat-to-int (mult (plus _v_35 _v_35) _t_36)))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((tri (mult _qv_29 _qv_30))=(mult (tri _qv_29) (tri _qv_30))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (plus _v_35 _v_35))+(nat-to-int (mult (plus _v_35 _v_35) _t_36)))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((tri (mult _qv_29 _qv_30))=(mult (tri _qv_30) (tri _qv_29))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (plus _v_35 _v_35))+(nat-to-int (mult (plus _v_35 _v_35) _t_36)))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((cubes (plus _qv_31 _qv_32))=(plus (cubes _qv_31) (cubes _qv_32))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (plus _v_35 _v_35))+(nat-to-int (mult (plus _v_35 _v_35) _t_36)))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((cubes (plus _qv_31 _qv_32))=(plus (cubes _qv_32) (cubes _qv_31))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (plus _v_35 _v_35))+(nat-to-int (mult (plus _v_35 _v_35) _t_36)))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((cubes (mult _qv_33 _qv_34))=(mult (cubes _qv_33) (cubes _qv_34))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (plus _v_35 _v_35))+(nat-to-int (mult (plus _v_35 _v_35) _t_36)))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((cubes (mult _qv_33 _qv_34))=(mult (cubes _qv_34) (cubes _qv_33))))
USE ASSUMPTION FAILED

  backtrack to: (((nat-to-int (plus _v_35 _v_35))+(nat-to-int (mult (plus _v_35 _v_35) _t_36)))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
  rewritten [12]: ((((nat-to-int _v_35)+(nat-to-int _v_35))+(nat-to-int (mult (plus _v_35 _v_35) _t_36)))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
  Maximum recursion depth reached
CURRENT SUBGOAL (((nat-to-int (plus _v_35 _v_35))+(nat-to-int (mult (plus _v_35 _v_35) _t_36)))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (plus _v_35 _v_35))+(nat-to-int (mult (plus _v_35 _v_35) _t_36)))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_1 _qv_2)=(plus _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (plus _v_35 _v_35))+(nat-to-int (mult (plus _v_35 _v_35) _t_36)))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_3 _qv_4) _qv_5)=(plus _qv_3 (plus _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (plus _v_35 _v_35))+(nat-to-int (mult (plus _v_35 _v_35) _t_36)))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((mult _qv_6 _qv_7)=(mult _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (plus _v_35 _v_35))+(nat-to-int (mult (plus _v_35 _v_35) _t_36)))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((mult (mult _qv_8 _qv_9) _qv_10)=(mult _qv_8 (mult _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (plus _v_35 _v_35))+(nat-to-int (mult (plus _v_35 _v_35) _t_36)))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat)) ((tri (tri _qv_11))=_qv_11))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (plus _v_35 _v_35))+(nat-to-int (mult (plus _v_35 _v_35) _t_36)))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat)) ((cubes (cubes _qv_12))=_qv_12))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (plus _v_35 _v_35))+(nat-to-int (mult (plus _v_35 _v_35) _t_36)))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (plus _v_35 _v_35))+(nat-to-int (mult (plus _v_35 _v_35) _t_36)))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_14))=(nat-to-int _qv_14)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (plus _v_35 _v_35))+(nat-to-int (mult (plus _v_35 _v_35) _t_36)))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat)) ((nat-to-int (tri _qv_15))=(nat-to-int _qv_15)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (plus _v_35 _v_35))+(nat-to-int (mult (plus _v_35 _v_35) _t_36)))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat)) ((nat-to-int (cubes _qv_16))=(nat-to-int _qv_16)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (plus _v_35 _v_35))+(nat-to-int (mult (plus _v_35 _v_35) _t_36)))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((mult _qv_17 (plus _qv_18 _qv_19))=(plus (mult _qv_17 _qv_18) (mult _qv_17 _qv_19))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (plus _v_35 _v_35))+(nat-to-int (mult (plus _v_35 _v_35) _t_36)))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus _qv_20 (mult _qv_21 _qv_22))=(mult (plus _qv_20 _qv_21) (plus _qv_20 _qv_22))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (plus _v_35 _v_35))+(nat-to-int (mult (plus _v_35 _v_35) _t_36)))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_23 _qv_24))=(plus (succ _qv_23) (succ _qv_24))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (plus _v_35 _v_35))+(nat-to-int (mult (plus _v_35 _v_35) _t_36)))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_23 _qv_24))=(plus (succ _qv_24) (succ _qv_23))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (plus _v_35 _v_35))+(nat-to-int (mult (plus _v_35 _v_35) _t_36)))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (mult _qv_25 _qv_26))=(mult (succ _qv_25) (succ _qv_26))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (plus _v_35 _v_35))+(nat-to-int (mult (plus _v_35 _v_35) _t_36)))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (mult _qv_25 _qv_26))=(mult (succ _qv_26) (succ _qv_25))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (plus _v_35 _v_35))+(nat-to-int (mult (plus _v_35 _v_35) _t_36)))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((tri (plus _qv_27 _qv_28))=(plus (tri _qv_27) (tri _qv_28))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (plus _v_35 _v_35))+(nat-to-int (mult (plus _v_35 _v_35) _t_36)))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((tri (plus _qv_27 _qv_28))=(plus (tri _qv_28) (tri _qv_27))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (plus _v_35 _v_35))+(nat-to-int (mult (plus _v_35 _v_35) _t_36)))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((tri (mult _qv_29 _qv_30))=(mult (tri _qv_29) (tri _qv_30))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (plus _v_35 _v_35))+(nat-to-int (mult (plus _v_35 _v_35) _t_36)))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((tri (mult _qv_29 _qv_30))=(mult (tri _qv_30) (tri _qv_29))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (plus _v_35 _v_35))+(nat-to-int (mult (plus _v_35 _v_35) _t_36)))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((cubes (plus _qv_31 _qv_32))=(plus (cubes _qv_31) (cubes _qv_32))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (plus _v_35 _v_35))+(nat-to-int (mult (plus _v_35 _v_35) _t_36)))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((cubes (plus _qv_31 _qv_32))=(plus (cubes _qv_32) (cubes _qv_31))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (plus _v_35 _v_35))+(nat-to-int (mult (plus _v_35 _v_35) _t_36)))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((cubes (mult _qv_33 _qv_34))=(mult (cubes _qv_33) (cubes _qv_34))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (plus _v_35 _v_35))+(nat-to-int (mult (plus _v_35 _v_35) _t_36)))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((cubes (mult _qv_33 _qv_34))=(mult (cubes _qv_34) (cubes _qv_33))))
USE ASSUMPTION FAILED

  backtrack to: (((nat-to-int (plus _v_35 _v_35))+(nat-to-int (mult (plus _v_35 _v_35) _t_36)))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
  rewritten [13]: (((nat-to-int (plus _v_35 _v_35))+(nat-to-int (mult (plus _v_35 _v_35) _t_36)))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
  Maximum recursion depth reached
CURRENT SUBGOAL (((nat-to-int (plus _v_35 _v_35))+(nat-to-int (mult (plus _v_35 _v_35) _t_36)))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (plus _v_35 _v_35))+(nat-to-int (mult (plus _v_35 _v_35) _t_36)))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_1 _qv_2)=(plus _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (plus _v_35 _v_35))+(nat-to-int (mult (plus _v_35 _v_35) _t_36)))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_3 _qv_4) _qv_5)=(plus _qv_3 (plus _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (plus _v_35 _v_35))+(nat-to-int (mult (plus _v_35 _v_35) _t_36)))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((mult _qv_6 _qv_7)=(mult _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (plus _v_35 _v_35))+(nat-to-int (mult (plus _v_35 _v_35) _t_36)))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((mult (mult _qv_8 _qv_9) _qv_10)=(mult _qv_8 (mult _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (plus _v_35 _v_35))+(nat-to-int (mult (plus _v_35 _v_35) _t_36)))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat)) ((tri (tri _qv_11))=_qv_11))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (plus _v_35 _v_35))+(nat-to-int (mult (plus _v_35 _v_35) _t_36)))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat)) ((cubes (cubes _qv_12))=_qv_12))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (plus _v_35 _v_35))+(nat-to-int (mult (plus _v_35 _v_35) _t_36)))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (plus _v_35 _v_35))+(nat-to-int (mult (plus _v_35 _v_35) _t_36)))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_14))=(nat-to-int _qv_14)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (plus _v_35 _v_35))+(nat-to-int (mult (plus _v_35 _v_35) _t_36)))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat)) ((nat-to-int (tri _qv_15))=(nat-to-int _qv_15)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (plus _v_35 _v_35))+(nat-to-int (mult (plus _v_35 _v_35) _t_36)))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat)) ((nat-to-int (cubes _qv_16))=(nat-to-int _qv_16)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (plus _v_35 _v_35))+(nat-to-int (mult (plus _v_35 _v_35) _t_36)))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((mult _qv_17 (plus _qv_18 _qv_19))=(plus (mult _qv_17 _qv_18) (mult _qv_17 _qv_19))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (plus _v_35 _v_35))+(nat-to-int (mult (plus _v_35 _v_35) _t_36)))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus _qv_20 (mult _qv_21 _qv_22))=(mult (plus _qv_20 _qv_21) (plus _qv_20 _qv_22))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (plus _v_35 _v_35))+(nat-to-int (mult (plus _v_35 _v_35) _t_36)))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_23 _qv_24))=(plus (succ _qv_23) (succ _qv_24))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (plus _v_35 _v_35))+(nat-to-int (mult (plus _v_35 _v_35) _t_36)))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_23 _qv_24))=(plus (succ _qv_24) (succ _qv_23))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (plus _v_35 _v_35))+(nat-to-int (mult (plus _v_35 _v_35) _t_36)))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (mult _qv_25 _qv_26))=(mult (succ _qv_25) (succ _qv_26))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (plus _v_35 _v_35))+(nat-to-int (mult (plus _v_35 _v_35) _t_36)))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (mult _qv_25 _qv_26))=(mult (succ _qv_26) (succ _qv_25))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (plus _v_35 _v_35))+(nat-to-int (mult (plus _v_35 _v_35) _t_36)))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((tri (plus _qv_27 _qv_28))=(plus (tri _qv_27) (tri _qv_28))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (plus _v_35 _v_35))+(nat-to-int (mult (plus _v_35 _v_35) _t_36)))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((tri (plus _qv_27 _qv_28))=(plus (tri _qv_28) (tri _qv_27))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (plus _v_35 _v_35))+(nat-to-int (mult (plus _v_35 _v_35) _t_36)))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((tri (mult _qv_29 _qv_30))=(mult (tri _qv_29) (tri _qv_30))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (plus _v_35 _v_35))+(nat-to-int (mult (plus _v_35 _v_35) _t_36)))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((tri (mult _qv_29 _qv_30))=(mult (tri _qv_30) (tri _qv_29))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (plus _v_35 _v_35))+(nat-to-int (mult (plus _v_35 _v_35) _t_36)))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((cubes (plus _qv_31 _qv_32))=(plus (cubes _qv_31) (cubes _qv_32))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (plus _v_35 _v_35))+(nat-to-int (mult (plus _v_35 _v_35) _t_36)))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((cubes (plus _qv_31 _qv_32))=(plus (cubes _qv_32) (cubes _qv_31))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (plus _v_35 _v_35))+(nat-to-int (mult (plus _v_35 _v_35) _t_36)))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((cubes (mult _qv_33 _qv_34))=(mult (cubes _qv_33) (cubes _qv_34))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (plus _v_35 _v_35))+(nat-to-int (mult (plus _v_35 _v_35) _t_36)))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((cubes (mult _qv_33 _qv_34))=(mult (cubes _qv_34) (cubes _qv_33))))
USE ASSUMPTION FAILED

  backtrack to: (((nat-to-int (plus _v_35 _v_35))+(nat-to-int (mult (plus _v_35 _v_35) _t_36)))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
  rewritten [13]: (((nat-to-int (plus _v_35 _v_35))+(nat-to-int (mult (plus _v_35 _v_35) _t_36)))=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
  Maximum recursion depth reached
CURRENT SUBGOAL (((nat-to-int (plus _v_35 _v_35))+(nat-to-int (mult (plus _v_35 _v_35) _t_36)))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (plus _v_35 _v_35))+(nat-to-int (mult (plus _v_35 _v_35) _t_36)))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_1 _qv_2)=(plus _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (plus _v_35 _v_35))+(nat-to-int (mult (plus _v_35 _v_35) _t_36)))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_3 _qv_4) _qv_5)=(plus _qv_3 (plus _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (plus _v_35 _v_35))+(nat-to-int (mult (plus _v_35 _v_35) _t_36)))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((mult _qv_6 _qv_7)=(mult _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (plus _v_35 _v_35))+(nat-to-int (mult (plus _v_35 _v_35) _t_36)))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((mult (mult _qv_8 _qv_9) _qv_10)=(mult _qv_8 (mult _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (plus _v_35 _v_35))+(nat-to-int (mult (plus _v_35 _v_35) _t_36)))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat)) ((tri (tri _qv_11))=_qv_11))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (plus _v_35 _v_35))+(nat-to-int (mult (plus _v_35 _v_35) _t_36)))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat)) ((cubes (cubes _qv_12))=_qv_12))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (plus _v_35 _v_35))+(nat-to-int (mult (plus _v_35 _v_35) _t_36)))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (plus _v_35 _v_35))+(nat-to-int (mult (plus _v_35 _v_35) _t_36)))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_14))=(nat-to-int _qv_14)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (plus _v_35 _v_35))+(nat-to-int (mult (plus _v_35 _v_35) _t_36)))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat)) ((nat-to-int (tri _qv_15))=(nat-to-int _qv_15)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (plus _v_35 _v_35))+(nat-to-int (mult (plus _v_35 _v_35) _t_36)))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat)) ((nat-to-int (cubes _qv_16))=(nat-to-int _qv_16)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (plus _v_35 _v_35))+(nat-to-int (mult (plus _v_35 _v_35) _t_36)))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((mult _qv_17 (plus _qv_18 _qv_19))=(plus (mult _qv_17 _qv_18) (mult _qv_17 _qv_19))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (plus _v_35 _v_35))+(nat-to-int (mult (plus _v_35 _v_35) _t_36)))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus _qv_20 (mult _qv_21 _qv_22))=(mult (plus _qv_20 _qv_21) (plus _qv_20 _qv_22))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (plus _v_35 _v_35))+(nat-to-int (mult (plus _v_35 _v_35) _t_36)))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_23 _qv_24))=(plus (succ _qv_23) (succ _qv_24))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (plus _v_35 _v_35))+(nat-to-int (mult (plus _v_35 _v_35) _t_36)))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_23 _qv_24))=(plus (succ _qv_24) (succ _qv_23))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (plus _v_35 _v_35))+(nat-to-int (mult (plus _v_35 _v_35) _t_36)))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (mult _qv_25 _qv_26))=(mult (succ _qv_25) (succ _qv_26))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (plus _v_35 _v_35))+(nat-to-int (mult (plus _v_35 _v_35) _t_36)))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (mult _qv_25 _qv_26))=(mult (succ _qv_26) (succ _qv_25))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (plus _v_35 _v_35))+(nat-to-int (mult (plus _v_35 _v_35) _t_36)))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((tri (plus _qv_27 _qv_28))=(plus (tri _qv_27) (tri _qv_28))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (plus _v_35 _v_35))+(nat-to-int (mult (plus _v_35 _v_35) _t_36)))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((tri (plus _qv_27 _qv_28))=(plus (tri _qv_28) (tri _qv_27))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (plus _v_35 _v_35))+(nat-to-int (mult (plus _v_35 _v_35) _t_36)))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((tri (mult _qv_29 _qv_30))=(mult (tri _qv_29) (tri _qv_30))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (plus _v_35 _v_35))+(nat-to-int (mult (plus _v_35 _v_35) _t_36)))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((tri (mult _qv_29 _qv_30))=(mult (tri _qv_30) (tri _qv_29))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (plus _v_35 _v_35))+(nat-to-int (mult (plus _v_35 _v_35) _t_36)))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((cubes (plus _qv_31 _qv_32))=(plus (cubes _qv_31) (cubes _qv_32))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (plus _v_35 _v_35))+(nat-to-int (mult (plus _v_35 _v_35) _t_36)))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((cubes (plus _qv_31 _qv_32))=(plus (cubes _qv_32) (cubes _qv_31))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (plus _v_35 _v_35))+(nat-to-int (mult (plus _v_35 _v_35) _t_36)))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((cubes (mult _qv_33 _qv_34))=(mult (cubes _qv_33) (cubes _qv_34))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (plus _v_35 _v_35))+(nat-to-int (mult (plus _v_35 _v_35) _t_36)))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((cubes (mult _qv_33 _qv_34))=(mult (cubes _qv_34) (cubes _qv_33))))
USE ASSUMPTION FAILED

  backtrack to: (((nat-to-int (plus _v_35 _v_35))+(nat-to-int (mult (plus _v_35 _v_35) _t_36)))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
  rewritten [15]: (((nat-to-int (plus _v_35 _v_35))+(nat-to-int (mult (plus _v_35 _v_35) _t_36)))=(nat-to-int (mult (succ (plus (succ _t_36) _t_36)) _v_35)))
  Maximum recursion depth reached
CURRENT SUBGOAL (((nat-to-int (plus _v_35 _v_35))+(nat-to-int (mult (plus _v_35 _v_35) _t_36)))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (plus _v_35 _v_35))+(nat-to-int (mult (plus _v_35 _v_35) _t_36)))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_1 _qv_2)=(plus _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (plus _v_35 _v_35))+(nat-to-int (mult (plus _v_35 _v_35) _t_36)))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_3 _qv_4) _qv_5)=(plus _qv_3 (plus _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (plus _v_35 _v_35))+(nat-to-int (mult (plus _v_35 _v_35) _t_36)))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((mult _qv_6 _qv_7)=(mult _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (plus _v_35 _v_35))+(nat-to-int (mult (plus _v_35 _v_35) _t_36)))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((mult (mult _qv_8 _qv_9) _qv_10)=(mult _qv_8 (mult _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (plus _v_35 _v_35))+(nat-to-int (mult (plus _v_35 _v_35) _t_36)))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat)) ((tri (tri _qv_11))=_qv_11))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (plus _v_35 _v_35))+(nat-to-int (mult (plus _v_35 _v_35) _t_36)))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat)) ((cubes (cubes _qv_12))=_qv_12))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (plus _v_35 _v_35))+(nat-to-int (mult (plus _v_35 _v_35) _t_36)))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (plus _v_35 _v_35))+(nat-to-int (mult (plus _v_35 _v_35) _t_36)))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_14))=(nat-to-int _qv_14)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (plus _v_35 _v_35))+(nat-to-int (mult (plus _v_35 _v_35) _t_36)))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat)) ((nat-to-int (tri _qv_15))=(nat-to-int _qv_15)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (plus _v_35 _v_35))+(nat-to-int (mult (plus _v_35 _v_35) _t_36)))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat)) ((nat-to-int (cubes _qv_16))=(nat-to-int _qv_16)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (plus _v_35 _v_35))+(nat-to-int (mult (plus _v_35 _v_35) _t_36)))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((mult _qv_17 (plus _qv_18 _qv_19))=(plus (mult _qv_17 _qv_18) (mult _qv_17 _qv_19))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (plus _v_35 _v_35))+(nat-to-int (mult (plus _v_35 _v_35) _t_36)))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus _qv_20 (mult _qv_21 _qv_22))=(mult (plus _qv_20 _qv_21) (plus _qv_20 _qv_22))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (plus _v_35 _v_35))+(nat-to-int (mult (plus _v_35 _v_35) _t_36)))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_23 _qv_24))=(plus (succ _qv_23) (succ _qv_24))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (plus _v_35 _v_35))+(nat-to-int (mult (plus _v_35 _v_35) _t_36)))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_23 _qv_24))=(plus (succ _qv_24) (succ _qv_23))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (plus _v_35 _v_35))+(nat-to-int (mult (plus _v_35 _v_35) _t_36)))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (mult _qv_25 _qv_26))=(mult (succ _qv_25) (succ _qv_26))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (plus _v_35 _v_35))+(nat-to-int (mult (plus _v_35 _v_35) _t_36)))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (mult _qv_25 _qv_26))=(mult (succ _qv_26) (succ _qv_25))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (plus _v_35 _v_35))+(nat-to-int (mult (plus _v_35 _v_35) _t_36)))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((tri (plus _qv_27 _qv_28))=(plus (tri _qv_27) (tri _qv_28))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (plus _v_35 _v_35))+(nat-to-int (mult (plus _v_35 _v_35) _t_36)))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((tri (plus _qv_27 _qv_28))=(plus (tri _qv_28) (tri _qv_27))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (plus _v_35 _v_35))+(nat-to-int (mult (plus _v_35 _v_35) _t_36)))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((tri (mult _qv_29 _qv_30))=(mult (tri _qv_29) (tri _qv_30))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (plus _v_35 _v_35))+(nat-to-int (mult (plus _v_35 _v_35) _t_36)))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((tri (mult _qv_29 _qv_30))=(mult (tri _qv_30) (tri _qv_29))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (plus _v_35 _v_35))+(nat-to-int (mult (plus _v_35 _v_35) _t_36)))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((cubes (plus _qv_31 _qv_32))=(plus (cubes _qv_31) (cubes _qv_32))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (plus _v_35 _v_35))+(nat-to-int (mult (plus _v_35 _v_35) _t_36)))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((cubes (plus _qv_31 _qv_32))=(plus (cubes _qv_32) (cubes _qv_31))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (plus _v_35 _v_35))+(nat-to-int (mult (plus _v_35 _v_35) _t_36)))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((cubes (mult _qv_33 _qv_34))=(mult (cubes _qv_33) (cubes _qv_34))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (plus _v_35 _v_35))+(nat-to-int (mult (plus _v_35 _v_35) _t_36)))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((cubes (mult _qv_33 _qv_34))=(mult (cubes _qv_34) (cubes _qv_33))))
USE ASSUMPTION FAILED

  backtrack to: (((nat-to-int (plus _v_35 _v_35))+(nat-to-int (mult (plus _v_35 _v_35) _t_36)))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
  rewritten [15]: (((nat-to-int (plus _v_35 _v_35))+(nat-to-int (mult _t_36 (plus _v_35 _v_35))))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
  Maximum recursion depth reached
CURRENT SUBGOAL (((nat-to-int (plus _v_35 _v_35))+(nat-to-int (mult (plus _v_35 _v_35) _t_36)))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (plus _v_35 _v_35))+(nat-to-int (mult (plus _v_35 _v_35) _t_36)))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_1 _qv_2)=(plus _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (plus _v_35 _v_35))+(nat-to-int (mult (plus _v_35 _v_35) _t_36)))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_3 _qv_4) _qv_5)=(plus _qv_3 (plus _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (plus _v_35 _v_35))+(nat-to-int (mult (plus _v_35 _v_35) _t_36)))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((mult _qv_6 _qv_7)=(mult _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (plus _v_35 _v_35))+(nat-to-int (mult (plus _v_35 _v_35) _t_36)))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((mult (mult _qv_8 _qv_9) _qv_10)=(mult _qv_8 (mult _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (plus _v_35 _v_35))+(nat-to-int (mult (plus _v_35 _v_35) _t_36)))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat)) ((tri (tri _qv_11))=_qv_11))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (plus _v_35 _v_35))+(nat-to-int (mult (plus _v_35 _v_35) _t_36)))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat)) ((cubes (cubes _qv_12))=_qv_12))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (plus _v_35 _v_35))+(nat-to-int (mult (plus _v_35 _v_35) _t_36)))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (plus _v_35 _v_35))+(nat-to-int (mult (plus _v_35 _v_35) _t_36)))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_14))=(nat-to-int _qv_14)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (plus _v_35 _v_35))+(nat-to-int (mult (plus _v_35 _v_35) _t_36)))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat)) ((nat-to-int (tri _qv_15))=(nat-to-int _qv_15)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (plus _v_35 _v_35))+(nat-to-int (mult (plus _v_35 _v_35) _t_36)))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat)) ((nat-to-int (cubes _qv_16))=(nat-to-int _qv_16)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (plus _v_35 _v_35))+(nat-to-int (mult (plus _v_35 _v_35) _t_36)))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((mult _qv_17 (plus _qv_18 _qv_19))=(plus (mult _qv_17 _qv_18) (mult _qv_17 _qv_19))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (plus _v_35 _v_35))+(nat-to-int (mult (plus _v_35 _v_35) _t_36)))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus _qv_20 (mult _qv_21 _qv_22))=(mult (plus _qv_20 _qv_21) (plus _qv_20 _qv_22))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (plus _v_35 _v_35))+(nat-to-int (mult (plus _v_35 _v_35) _t_36)))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_23 _qv_24))=(plus (succ _qv_23) (succ _qv_24))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (plus _v_35 _v_35))+(nat-to-int (mult (plus _v_35 _v_35) _t_36)))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_23 _qv_24))=(plus (succ _qv_24) (succ _qv_23))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (plus _v_35 _v_35))+(nat-to-int (mult (plus _v_35 _v_35) _t_36)))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (mult _qv_25 _qv_26))=(mult (succ _qv_25) (succ _qv_26))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (plus _v_35 _v_35))+(nat-to-int (mult (plus _v_35 _v_35) _t_36)))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (mult _qv_25 _qv_26))=(mult (succ _qv_26) (succ _qv_25))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (plus _v_35 _v_35))+(nat-to-int (mult (plus _v_35 _v_35) _t_36)))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((tri (plus _qv_27 _qv_28))=(plus (tri _qv_27) (tri _qv_28))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (plus _v_35 _v_35))+(nat-to-int (mult (plus _v_35 _v_35) _t_36)))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((tri (plus _qv_27 _qv_28))=(plus (tri _qv_28) (tri _qv_27))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (plus _v_35 _v_35))+(nat-to-int (mult (plus _v_35 _v_35) _t_36)))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((tri (mult _qv_29 _qv_30))=(mult (tri _qv_29) (tri _qv_30))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (plus _v_35 _v_35))+(nat-to-int (mult (plus _v_35 _v_35) _t_36)))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((tri (mult _qv_29 _qv_30))=(mult (tri _qv_30) (tri _qv_29))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (plus _v_35 _v_35))+(nat-to-int (mult (plus _v_35 _v_35) _t_36)))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((cubes (plus _qv_31 _qv_32))=(plus (cubes _qv_31) (cubes _qv_32))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (plus _v_35 _v_35))+(nat-to-int (mult (plus _v_35 _v_35) _t_36)))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((cubes (plus _qv_31 _qv_32))=(plus (cubes _qv_32) (cubes _qv_31))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (plus _v_35 _v_35))+(nat-to-int (mult (plus _v_35 _v_35) _t_36)))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((cubes (mult _qv_33 _qv_34))=(mult (cubes _qv_33) (cubes _qv_34))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (plus _v_35 _v_35))+(nat-to-int (mult (plus _v_35 _v_35) _t_36)))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((cubes (mult _qv_33 _qv_34))=(mult (cubes _qv_34) (cubes _qv_33))))
USE ASSUMPTION FAILED

  backtrack to: (((nat-to-int (plus _v_35 _v_35))+(nat-to-int (mult (plus _v_35 _v_35) _t_36)))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
  rewritten [2]: (((nat-to-int (plus _v_35 _v_35))+(nat-to-int (mult (plus _v_35 _v_35) _t_36)))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
  Maximum recursion depth reached
CURRENT SUBGOAL (((nat-to-int (plus _v_35 _v_35))+(nat-to-int (mult (plus _v_35 _v_35) _t_36)))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (plus _v_35 _v_35))+(nat-to-int (mult (plus _v_35 _v_35) _t_36)))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_1 _qv_2)=(plus _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (plus _v_35 _v_35))+(nat-to-int (mult (plus _v_35 _v_35) _t_36)))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_3 _qv_4) _qv_5)=(plus _qv_3 (plus _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (plus _v_35 _v_35))+(nat-to-int (mult (plus _v_35 _v_35) _t_36)))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((mult _qv_6 _qv_7)=(mult _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (plus _v_35 _v_35))+(nat-to-int (mult (plus _v_35 _v_35) _t_36)))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((mult (mult _qv_8 _qv_9) _qv_10)=(mult _qv_8 (mult _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (plus _v_35 _v_35))+(nat-to-int (mult (plus _v_35 _v_35) _t_36)))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat)) ((tri (tri _qv_11))=_qv_11))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (plus _v_35 _v_35))+(nat-to-int (mult (plus _v_35 _v_35) _t_36)))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat)) ((cubes (cubes _qv_12))=_qv_12))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (plus _v_35 _v_35))+(nat-to-int (mult (plus _v_35 _v_35) _t_36)))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (plus _v_35 _v_35))+(nat-to-int (mult (plus _v_35 _v_35) _t_36)))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_14))=(nat-to-int _qv_14)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (plus _v_35 _v_35))+(nat-to-int (mult (plus _v_35 _v_35) _t_36)))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat)) ((nat-to-int (tri _qv_15))=(nat-to-int _qv_15)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (plus _v_35 _v_35))+(nat-to-int (mult (plus _v_35 _v_35) _t_36)))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat)) ((nat-to-int (cubes _qv_16))=(nat-to-int _qv_16)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (plus _v_35 _v_35))+(nat-to-int (mult (plus _v_35 _v_35) _t_36)))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((mult _qv_17 (plus _qv_18 _qv_19))=(plus (mult _qv_17 _qv_18) (mult _qv_17 _qv_19))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (plus _v_35 _v_35))+(nat-to-int (mult (plus _v_35 _v_35) _t_36)))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus _qv_20 (mult _qv_21 _qv_22))=(mult (plus _qv_20 _qv_21) (plus _qv_20 _qv_22))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (plus _v_35 _v_35))+(nat-to-int (mult (plus _v_35 _v_35) _t_36)))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_23 _qv_24))=(plus (succ _qv_23) (succ _qv_24))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (plus _v_35 _v_35))+(nat-to-int (mult (plus _v_35 _v_35) _t_36)))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_23 _qv_24))=(plus (succ _qv_24) (succ _qv_23))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (plus _v_35 _v_35))+(nat-to-int (mult (plus _v_35 _v_35) _t_36)))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (mult _qv_25 _qv_26))=(mult (succ _qv_25) (succ _qv_26))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (plus _v_35 _v_35))+(nat-to-int (mult (plus _v_35 _v_35) _t_36)))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (mult _qv_25 _qv_26))=(mult (succ _qv_26) (succ _qv_25))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (plus _v_35 _v_35))+(nat-to-int (mult (plus _v_35 _v_35) _t_36)))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((tri (plus _qv_27 _qv_28))=(plus (tri _qv_27) (tri _qv_28))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (plus _v_35 _v_35))+(nat-to-int (mult (plus _v_35 _v_35) _t_36)))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((tri (plus _qv_27 _qv_28))=(plus (tri _qv_28) (tri _qv_27))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (plus _v_35 _v_35))+(nat-to-int (mult (plus _v_35 _v_35) _t_36)))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((tri (mult _qv_29 _qv_30))=(mult (tri _qv_29) (tri _qv_30))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (plus _v_35 _v_35))+(nat-to-int (mult (plus _v_35 _v_35) _t_36)))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((tri (mult _qv_29 _qv_30))=(mult (tri _qv_30) (tri _qv_29))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (plus _v_35 _v_35))+(nat-to-int (mult (plus _v_35 _v_35) _t_36)))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((cubes (plus _qv_31 _qv_32))=(plus (cubes _qv_31) (cubes _qv_32))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (plus _v_35 _v_35))+(nat-to-int (mult (plus _v_35 _v_35) _t_36)))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((cubes (plus _qv_31 _qv_32))=(plus (cubes _qv_32) (cubes _qv_31))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (plus _v_35 _v_35))+(nat-to-int (mult (plus _v_35 _v_35) _t_36)))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((cubes (mult _qv_33 _qv_34))=(mult (cubes _qv_33) (cubes _qv_34))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (plus _v_35 _v_35))+(nat-to-int (mult (plus _v_35 _v_35) _t_36)))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((cubes (mult _qv_33 _qv_34))=(mult (cubes _qv_34) (cubes _qv_33))))
USE ASSUMPTION FAILED

  backtrack to: (((nat-to-int (plus _v_35 _v_35))+(nat-to-int (mult (plus _v_35 _v_35) _t_36)))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
  rewritten [4]: (((nat-to-int (plus _v_35 _v_35))+(nat-to-int (mult (plus _v_35 _v_35) _t_36)))=(nat-to-int (mult _v_35 (succ (succ (plus _t_36 _t_36))))))
  Maximum recursion depth reached
CURRENT SUBGOAL (((nat-to-int (plus _v_35 _v_35))+(nat-to-int (mult (plus _v_35 _v_35) _t_36)))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (plus _v_35 _v_35))+(nat-to-int (mult (plus _v_35 _v_35) _t_36)))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_1 _qv_2)=(plus _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (plus _v_35 _v_35))+(nat-to-int (mult (plus _v_35 _v_35) _t_36)))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_3 _qv_4) _qv_5)=(plus _qv_3 (plus _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (plus _v_35 _v_35))+(nat-to-int (mult (plus _v_35 _v_35) _t_36)))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((mult _qv_6 _qv_7)=(mult _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (plus _v_35 _v_35))+(nat-to-int (mult (plus _v_35 _v_35) _t_36)))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((mult (mult _qv_8 _qv_9) _qv_10)=(mult _qv_8 (mult _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (plus _v_35 _v_35))+(nat-to-int (mult (plus _v_35 _v_35) _t_36)))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat)) ((tri (tri _qv_11))=_qv_11))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (plus _v_35 _v_35))+(nat-to-int (mult (plus _v_35 _v_35) _t_36)))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat)) ((cubes (cubes _qv_12))=_qv_12))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (plus _v_35 _v_35))+(nat-to-int (mult (plus _v_35 _v_35) _t_36)))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (plus _v_35 _v_35))+(nat-to-int (mult (plus _v_35 _v_35) _t_36)))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_14))=(nat-to-int _qv_14)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (plus _v_35 _v_35))+(nat-to-int (mult (plus _v_35 _v_35) _t_36)))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat)) ((nat-to-int (tri _qv_15))=(nat-to-int _qv_15)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (plus _v_35 _v_35))+(nat-to-int (mult (plus _v_35 _v_35) _t_36)))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat)) ((nat-to-int (cubes _qv_16))=(nat-to-int _qv_16)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (plus _v_35 _v_35))+(nat-to-int (mult (plus _v_35 _v_35) _t_36)))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((mult _qv_17 (plus _qv_18 _qv_19))=(plus (mult _qv_17 _qv_18) (mult _qv_17 _qv_19))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (plus _v_35 _v_35))+(nat-to-int (mult (plus _v_35 _v_35) _t_36)))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus _qv_20 (mult _qv_21 _qv_22))=(mult (plus _qv_20 _qv_21) (plus _qv_20 _qv_22))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (plus _v_35 _v_35))+(nat-to-int (mult (plus _v_35 _v_35) _t_36)))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_23 _qv_24))=(plus (succ _qv_23) (succ _qv_24))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (plus _v_35 _v_35))+(nat-to-int (mult (plus _v_35 _v_35) _t_36)))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_23 _qv_24))=(plus (succ _qv_24) (succ _qv_23))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (plus _v_35 _v_35))+(nat-to-int (mult (plus _v_35 _v_35) _t_36)))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (mult _qv_25 _qv_26))=(mult (succ _qv_25) (succ _qv_26))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (plus _v_35 _v_35))+(nat-to-int (mult (plus _v_35 _v_35) _t_36)))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (mult _qv_25 _qv_26))=(mult (succ _qv_26) (succ _qv_25))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (plus _v_35 _v_35))+(nat-to-int (mult (plus _v_35 _v_35) _t_36)))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((tri (plus _qv_27 _qv_28))=(plus (tri _qv_27) (tri _qv_28))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (plus _v_35 _v_35))+(nat-to-int (mult (plus _v_35 _v_35) _t_36)))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((tri (plus _qv_27 _qv_28))=(plus (tri _qv_28) (tri _qv_27))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (plus _v_35 _v_35))+(nat-to-int (mult (plus _v_35 _v_35) _t_36)))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((tri (mult _qv_29 _qv_30))=(mult (tri _qv_29) (tri _qv_30))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (plus _v_35 _v_35))+(nat-to-int (mult (plus _v_35 _v_35) _t_36)))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((tri (mult _qv_29 _qv_30))=(mult (tri _qv_30) (tri _qv_29))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (plus _v_35 _v_35))+(nat-to-int (mult (plus _v_35 _v_35) _t_36)))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((cubes (plus _qv_31 _qv_32))=(plus (cubes _qv_31) (cubes _qv_32))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (plus _v_35 _v_35))+(nat-to-int (mult (plus _v_35 _v_35) _t_36)))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((cubes (plus _qv_31 _qv_32))=(plus (cubes _qv_32) (cubes _qv_31))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (plus _v_35 _v_35))+(nat-to-int (mult (plus _v_35 _v_35) _t_36)))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((cubes (mult _qv_33 _qv_34))=(mult (cubes _qv_33) (cubes _qv_34))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (plus _v_35 _v_35))+(nat-to-int (mult (plus _v_35 _v_35) _t_36)))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((cubes (mult _qv_33 _qv_34))=(mult (cubes _qv_34) (cubes _qv_33))))
USE ASSUMPTION FAILED

  backtrack to: (((nat-to-int (plus _v_35 _v_35))+(nat-to-int (mult (plus _v_35 _v_35) _t_36)))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
  rewritten [12]: ((((nat-to-int _v_35)+(nat-to-int _v_35))+(nat-to-int (mult (plus _v_35 _v_35) _t_36)))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
  Maximum recursion depth reached
CURRENT SUBGOAL (((nat-to-int (plus _v_35 _v_35))+(nat-to-int (mult (plus _v_35 _v_35) _t_36)))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (plus _v_35 _v_35))+(nat-to-int (mult (plus _v_35 _v_35) _t_36)))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_1 _qv_2)=(plus _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (plus _v_35 _v_35))+(nat-to-int (mult (plus _v_35 _v_35) _t_36)))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_3 _qv_4) _qv_5)=(plus _qv_3 (plus _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (plus _v_35 _v_35))+(nat-to-int (mult (plus _v_35 _v_35) _t_36)))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((mult _qv_6 _qv_7)=(mult _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (plus _v_35 _v_35))+(nat-to-int (mult (plus _v_35 _v_35) _t_36)))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((mult (mult _qv_8 _qv_9) _qv_10)=(mult _qv_8 (mult _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (plus _v_35 _v_35))+(nat-to-int (mult (plus _v_35 _v_35) _t_36)))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat)) ((tri (tri _qv_11))=_qv_11))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (plus _v_35 _v_35))+(nat-to-int (mult (plus _v_35 _v_35) _t_36)))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat)) ((cubes (cubes _qv_12))=_qv_12))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (plus _v_35 _v_35))+(nat-to-int (mult (plus _v_35 _v_35) _t_36)))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (plus _v_35 _v_35))+(nat-to-int (mult (plus _v_35 _v_35) _t_36)))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_14))=(nat-to-int _qv_14)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (plus _v_35 _v_35))+(nat-to-int (mult (plus _v_35 _v_35) _t_36)))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat)) ((nat-to-int (tri _qv_15))=(nat-to-int _qv_15)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (plus _v_35 _v_35))+(nat-to-int (mult (plus _v_35 _v_35) _t_36)))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat)) ((nat-to-int (cubes _qv_16))=(nat-to-int _qv_16)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (plus _v_35 _v_35))+(nat-to-int (mult (plus _v_35 _v_35) _t_36)))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((mult _qv_17 (plus _qv_18 _qv_19))=(plus (mult _qv_17 _qv_18) (mult _qv_17 _qv_19))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (plus _v_35 _v_35))+(nat-to-int (mult (plus _v_35 _v_35) _t_36)))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus _qv_20 (mult _qv_21 _qv_22))=(mult (plus _qv_20 _qv_21) (plus _qv_20 _qv_22))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (plus _v_35 _v_35))+(nat-to-int (mult (plus _v_35 _v_35) _t_36)))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_23 _qv_24))=(plus (succ _qv_23) (succ _qv_24))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (plus _v_35 _v_35))+(nat-to-int (mult (plus _v_35 _v_35) _t_36)))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_23 _qv_24))=(plus (succ _qv_24) (succ _qv_23))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (plus _v_35 _v_35))+(nat-to-int (mult (plus _v_35 _v_35) _t_36)))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (mult _qv_25 _qv_26))=(mult (succ _qv_25) (succ _qv_26))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (plus _v_35 _v_35))+(nat-to-int (mult (plus _v_35 _v_35) _t_36)))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (mult _qv_25 _qv_26))=(mult (succ _qv_26) (succ _qv_25))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (plus _v_35 _v_35))+(nat-to-int (mult (plus _v_35 _v_35) _t_36)))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((tri (plus _qv_27 _qv_28))=(plus (tri _qv_27) (tri _qv_28))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (plus _v_35 _v_35))+(nat-to-int (mult (plus _v_35 _v_35) _t_36)))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((tri (plus _qv_27 _qv_28))=(plus (tri _qv_28) (tri _qv_27))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (plus _v_35 _v_35))+(nat-to-int (mult (plus _v_35 _v_35) _t_36)))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((tri (mult _qv_29 _qv_30))=(mult (tri _qv_29) (tri _qv_30))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (plus _v_35 _v_35))+(nat-to-int (mult (plus _v_35 _v_35) _t_36)))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((tri (mult _qv_29 _qv_30))=(mult (tri _qv_30) (tri _qv_29))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (plus _v_35 _v_35))+(nat-to-int (mult (plus _v_35 _v_35) _t_36)))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((cubes (plus _qv_31 _qv_32))=(plus (cubes _qv_31) (cubes _qv_32))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (plus _v_35 _v_35))+(nat-to-int (mult (plus _v_35 _v_35) _t_36)))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((cubes (plus _qv_31 _qv_32))=(plus (cubes _qv_32) (cubes _qv_31))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (plus _v_35 _v_35))+(nat-to-int (mult (plus _v_35 _v_35) _t_36)))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((cubes (mult _qv_33 _qv_34))=(mult (cubes _qv_33) (cubes _qv_34))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (plus _v_35 _v_35))+(nat-to-int (mult (plus _v_35 _v_35) _t_36)))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((cubes (mult _qv_33 _qv_34))=(mult (cubes _qv_34) (cubes _qv_33))))
USE ASSUMPTION FAILED

  backtrack to: (((nat-to-int (plus _v_35 _v_35))+(nat-to-int (mult (plus _v_35 _v_35) _t_36)))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
  rewritten [13]: (((nat-to-int (plus _v_35 _v_35))+(nat-to-int (mult (plus _v_35 _v_35) _t_36)))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
  Maximum recursion depth reached
CURRENT SUBGOAL (((nat-to-int (plus _v_35 _v_35))+(nat-to-int (mult (plus _v_35 _v_35) _t_36)))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (plus _v_35 _v_35))+(nat-to-int (mult (plus _v_35 _v_35) _t_36)))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_1 _qv_2)=(plus _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (plus _v_35 _v_35))+(nat-to-int (mult (plus _v_35 _v_35) _t_36)))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_3 _qv_4) _qv_5)=(plus _qv_3 (plus _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (plus _v_35 _v_35))+(nat-to-int (mult (plus _v_35 _v_35) _t_36)))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((mult _qv_6 _qv_7)=(mult _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (plus _v_35 _v_35))+(nat-to-int (mult (plus _v_35 _v_35) _t_36)))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((mult (mult _qv_8 _qv_9) _qv_10)=(mult _qv_8 (mult _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (plus _v_35 _v_35))+(nat-to-int (mult (plus _v_35 _v_35) _t_36)))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat)) ((tri (tri _qv_11))=_qv_11))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (plus _v_35 _v_35))+(nat-to-int (mult (plus _v_35 _v_35) _t_36)))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat)) ((cubes (cubes _qv_12))=_qv_12))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (plus _v_35 _v_35))+(nat-to-int (mult (plus _v_35 _v_35) _t_36)))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (plus _v_35 _v_35))+(nat-to-int (mult (plus _v_35 _v_35) _t_36)))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_14))=(nat-to-int _qv_14)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (plus _v_35 _v_35))+(nat-to-int (mult (plus _v_35 _v_35) _t_36)))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat)) ((nat-to-int (tri _qv_15))=(nat-to-int _qv_15)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (plus _v_35 _v_35))+(nat-to-int (mult (plus _v_35 _v_35) _t_36)))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat)) ((nat-to-int (cubes _qv_16))=(nat-to-int _qv_16)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (plus _v_35 _v_35))+(nat-to-int (mult (plus _v_35 _v_35) _t_36)))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((mult _qv_17 (plus _qv_18 _qv_19))=(plus (mult _qv_17 _qv_18) (mult _qv_17 _qv_19))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (plus _v_35 _v_35))+(nat-to-int (mult (plus _v_35 _v_35) _t_36)))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus _qv_20 (mult _qv_21 _qv_22))=(mult (plus _qv_20 _qv_21) (plus _qv_20 _qv_22))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (plus _v_35 _v_35))+(nat-to-int (mult (plus _v_35 _v_35) _t_36)))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_23 _qv_24))=(plus (succ _qv_23) (succ _qv_24))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (plus _v_35 _v_35))+(nat-to-int (mult (plus _v_35 _v_35) _t_36)))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_23 _qv_24))=(plus (succ _qv_24) (succ _qv_23))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (plus _v_35 _v_35))+(nat-to-int (mult (plus _v_35 _v_35) _t_36)))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (mult _qv_25 _qv_26))=(mult (succ _qv_25) (succ _qv_26))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (plus _v_35 _v_35))+(nat-to-int (mult (plus _v_35 _v_35) _t_36)))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (mult _qv_25 _qv_26))=(mult (succ _qv_26) (succ _qv_25))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (plus _v_35 _v_35))+(nat-to-int (mult (plus _v_35 _v_35) _t_36)))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((tri (plus _qv_27 _qv_28))=(plus (tri _qv_27) (tri _qv_28))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (plus _v_35 _v_35))+(nat-to-int (mult (plus _v_35 _v_35) _t_36)))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((tri (plus _qv_27 _qv_28))=(plus (tri _qv_28) (tri _qv_27))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (plus _v_35 _v_35))+(nat-to-int (mult (plus _v_35 _v_35) _t_36)))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((tri (mult _qv_29 _qv_30))=(mult (tri _qv_29) (tri _qv_30))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (plus _v_35 _v_35))+(nat-to-int (mult (plus _v_35 _v_35) _t_36)))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((tri (mult _qv_29 _qv_30))=(mult (tri _qv_30) (tri _qv_29))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (plus _v_35 _v_35))+(nat-to-int (mult (plus _v_35 _v_35) _t_36)))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((cubes (plus _qv_31 _qv_32))=(plus (cubes _qv_31) (cubes _qv_32))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (plus _v_35 _v_35))+(nat-to-int (mult (plus _v_35 _v_35) _t_36)))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((cubes (plus _qv_31 _qv_32))=(plus (cubes _qv_32) (cubes _qv_31))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (plus _v_35 _v_35))+(nat-to-int (mult (plus _v_35 _v_35) _t_36)))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((cubes (mult _qv_33 _qv_34))=(mult (cubes _qv_33) (cubes _qv_34))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (plus _v_35 _v_35))+(nat-to-int (mult (plus _v_35 _v_35) _t_36)))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((cubes (mult _qv_33 _qv_34))=(mult (cubes _qv_34) (cubes _qv_33))))
USE ASSUMPTION FAILED

  backtrack to: (((nat-to-int (plus _v_35 _v_35))+(nat-to-int (mult (plus _v_35 _v_35) _t_36)))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
  rewritten [13]: (((nat-to-int (plus _v_35 _v_35))+(nat-to-int (mult (plus _v_35 _v_35) _t_36)))=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
  Maximum recursion depth reached
CURRENT SUBGOAL (((nat-to-int (plus _v_35 _v_35))+(nat-to-int (mult (plus _v_35 _v_35) _t_36)))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (plus _v_35 _v_35))+(nat-to-int (mult (plus _v_35 _v_35) _t_36)))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_1 _qv_2)=(plus _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (plus _v_35 _v_35))+(nat-to-int (mult (plus _v_35 _v_35) _t_36)))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_3 _qv_4) _qv_5)=(plus _qv_3 (plus _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (plus _v_35 _v_35))+(nat-to-int (mult (plus _v_35 _v_35) _t_36)))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((mult _qv_6 _qv_7)=(mult _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (plus _v_35 _v_35))+(nat-to-int (mult (plus _v_35 _v_35) _t_36)))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((mult (mult _qv_8 _qv_9) _qv_10)=(mult _qv_8 (mult _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (plus _v_35 _v_35))+(nat-to-int (mult (plus _v_35 _v_35) _t_36)))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat)) ((tri (tri _qv_11))=_qv_11))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (plus _v_35 _v_35))+(nat-to-int (mult (plus _v_35 _v_35) _t_36)))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat)) ((cubes (cubes _qv_12))=_qv_12))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (plus _v_35 _v_35))+(nat-to-int (mult (plus _v_35 _v_35) _t_36)))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (plus _v_35 _v_35))+(nat-to-int (mult (plus _v_35 _v_35) _t_36)))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_14))=(nat-to-int _qv_14)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (plus _v_35 _v_35))+(nat-to-int (mult (plus _v_35 _v_35) _t_36)))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat)) ((nat-to-int (tri _qv_15))=(nat-to-int _qv_15)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (plus _v_35 _v_35))+(nat-to-int (mult (plus _v_35 _v_35) _t_36)))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat)) ((nat-to-int (cubes _qv_16))=(nat-to-int _qv_16)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (plus _v_35 _v_35))+(nat-to-int (mult (plus _v_35 _v_35) _t_36)))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((mult _qv_17 (plus _qv_18 _qv_19))=(plus (mult _qv_17 _qv_18) (mult _qv_17 _qv_19))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (plus _v_35 _v_35))+(nat-to-int (mult (plus _v_35 _v_35) _t_36)))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus _qv_20 (mult _qv_21 _qv_22))=(mult (plus _qv_20 _qv_21) (plus _qv_20 _qv_22))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (plus _v_35 _v_35))+(nat-to-int (mult (plus _v_35 _v_35) _t_36)))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_23 _qv_24))=(plus (succ _qv_23) (succ _qv_24))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (plus _v_35 _v_35))+(nat-to-int (mult (plus _v_35 _v_35) _t_36)))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_23 _qv_24))=(plus (succ _qv_24) (succ _qv_23))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (plus _v_35 _v_35))+(nat-to-int (mult (plus _v_35 _v_35) _t_36)))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (mult _qv_25 _qv_26))=(mult (succ _qv_25) (succ _qv_26))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (plus _v_35 _v_35))+(nat-to-int (mult (plus _v_35 _v_35) _t_36)))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (mult _qv_25 _qv_26))=(mult (succ _qv_26) (succ _qv_25))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (plus _v_35 _v_35))+(nat-to-int (mult (plus _v_35 _v_35) _t_36)))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((tri (plus _qv_27 _qv_28))=(plus (tri _qv_27) (tri _qv_28))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (plus _v_35 _v_35))+(nat-to-int (mult (plus _v_35 _v_35) _t_36)))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((tri (plus _qv_27 _qv_28))=(plus (tri _qv_28) (tri _qv_27))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (plus _v_35 _v_35))+(nat-to-int (mult (plus _v_35 _v_35) _t_36)))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((tri (mult _qv_29 _qv_30))=(mult (tri _qv_29) (tri _qv_30))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (plus _v_35 _v_35))+(nat-to-int (mult (plus _v_35 _v_35) _t_36)))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((tri (mult _qv_29 _qv_30))=(mult (tri _qv_30) (tri _qv_29))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (plus _v_35 _v_35))+(nat-to-int (mult (plus _v_35 _v_35) _t_36)))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((cubes (plus _qv_31 _qv_32))=(plus (cubes _qv_31) (cubes _qv_32))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (plus _v_35 _v_35))+(nat-to-int (mult (plus _v_35 _v_35) _t_36)))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((cubes (plus _qv_31 _qv_32))=(plus (cubes _qv_32) (cubes _qv_31))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (plus _v_35 _v_35))+(nat-to-int (mult (plus _v_35 _v_35) _t_36)))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((cubes (mult _qv_33 _qv_34))=(mult (cubes _qv_33) (cubes _qv_34))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (plus _v_35 _v_35))+(nat-to-int (mult (plus _v_35 _v_35) _t_36)))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((cubes (mult _qv_33 _qv_34))=(mult (cubes _qv_34) (cubes _qv_33))))
USE ASSUMPTION FAILED

  backtrack to: (((nat-to-int (plus _v_35 _v_35))+(nat-to-int (mult (plus _v_35 _v_35) _t_36)))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
  rewritten [15]: (((nat-to-int (plus _v_35 _v_35))+(nat-to-int (mult (plus _v_35 _v_35) _t_36)))=(nat-to-int (mult (succ (plus (succ _t_36) _t_36)) _v_35)))
  Maximum recursion depth reached
CURRENT SUBGOAL (((nat-to-int (plus _v_35 _v_35))+(nat-to-int (mult (plus _v_35 _v_35) _t_36)))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (plus _v_35 _v_35))+(nat-to-int (mult (plus _v_35 _v_35) _t_36)))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_1 _qv_2)=(plus _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (plus _v_35 _v_35))+(nat-to-int (mult (plus _v_35 _v_35) _t_36)))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_3 _qv_4) _qv_5)=(plus _qv_3 (plus _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (plus _v_35 _v_35))+(nat-to-int (mult (plus _v_35 _v_35) _t_36)))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((mult _qv_6 _qv_7)=(mult _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (plus _v_35 _v_35))+(nat-to-int (mult (plus _v_35 _v_35) _t_36)))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((mult (mult _qv_8 _qv_9) _qv_10)=(mult _qv_8 (mult _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (plus _v_35 _v_35))+(nat-to-int (mult (plus _v_35 _v_35) _t_36)))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat)) ((tri (tri _qv_11))=_qv_11))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (plus _v_35 _v_35))+(nat-to-int (mult (plus _v_35 _v_35) _t_36)))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat)) ((cubes (cubes _qv_12))=_qv_12))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (plus _v_35 _v_35))+(nat-to-int (mult (plus _v_35 _v_35) _t_36)))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (plus _v_35 _v_35))+(nat-to-int (mult (plus _v_35 _v_35) _t_36)))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_14))=(nat-to-int _qv_14)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (plus _v_35 _v_35))+(nat-to-int (mult (plus _v_35 _v_35) _t_36)))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat)) ((nat-to-int (tri _qv_15))=(nat-to-int _qv_15)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (plus _v_35 _v_35))+(nat-to-int (mult (plus _v_35 _v_35) _t_36)))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat)) ((nat-to-int (cubes _qv_16))=(nat-to-int _qv_16)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (plus _v_35 _v_35))+(nat-to-int (mult (plus _v_35 _v_35) _t_36)))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((mult _qv_17 (plus _qv_18 _qv_19))=(plus (mult _qv_17 _qv_18) (mult _qv_17 _qv_19))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (plus _v_35 _v_35))+(nat-to-int (mult (plus _v_35 _v_35) _t_36)))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus _qv_20 (mult _qv_21 _qv_22))=(mult (plus _qv_20 _qv_21) (plus _qv_20 _qv_22))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (plus _v_35 _v_35))+(nat-to-int (mult (plus _v_35 _v_35) _t_36)))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_23 _qv_24))=(plus (succ _qv_23) (succ _qv_24))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (plus _v_35 _v_35))+(nat-to-int (mult (plus _v_35 _v_35) _t_36)))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_23 _qv_24))=(plus (succ _qv_24) (succ _qv_23))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (plus _v_35 _v_35))+(nat-to-int (mult (plus _v_35 _v_35) _t_36)))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (mult _qv_25 _qv_26))=(mult (succ _qv_25) (succ _qv_26))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (plus _v_35 _v_35))+(nat-to-int (mult (plus _v_35 _v_35) _t_36)))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (mult _qv_25 _qv_26))=(mult (succ _qv_26) (succ _qv_25))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (plus _v_35 _v_35))+(nat-to-int (mult (plus _v_35 _v_35) _t_36)))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((tri (plus _qv_27 _qv_28))=(plus (tri _qv_27) (tri _qv_28))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (plus _v_35 _v_35))+(nat-to-int (mult (plus _v_35 _v_35) _t_36)))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((tri (plus _qv_27 _qv_28))=(plus (tri _qv_28) (tri _qv_27))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (plus _v_35 _v_35))+(nat-to-int (mult (plus _v_35 _v_35) _t_36)))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((tri (mult _qv_29 _qv_30))=(mult (tri _qv_29) (tri _qv_30))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (plus _v_35 _v_35))+(nat-to-int (mult (plus _v_35 _v_35) _t_36)))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((tri (mult _qv_29 _qv_30))=(mult (tri _qv_30) (tri _qv_29))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (plus _v_35 _v_35))+(nat-to-int (mult (plus _v_35 _v_35) _t_36)))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((cubes (plus _qv_31 _qv_32))=(plus (cubes _qv_31) (cubes _qv_32))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (plus _v_35 _v_35))+(nat-to-int (mult (plus _v_35 _v_35) _t_36)))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((cubes (plus _qv_31 _qv_32))=(plus (cubes _qv_32) (cubes _qv_31))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (plus _v_35 _v_35))+(nat-to-int (mult (plus _v_35 _v_35) _t_36)))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((cubes (mult _qv_33 _qv_34))=(mult (cubes _qv_33) (cubes _qv_34))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (plus _v_35 _v_35))+(nat-to-int (mult (plus _v_35 _v_35) _t_36)))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((cubes (mult _qv_33 _qv_34))=(mult (cubes _qv_34) (cubes _qv_33))))
USE ASSUMPTION FAILED

  backtrack to: (((nat-to-int (plus _v_35 _v_35))+(nat-to-int (mult (plus _v_35 _v_35) _t_36)))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
  rewritten [15]: (((nat-to-int (plus _v_35 _v_35))+(nat-to-int (mult _t_36 (plus _v_35 _v_35))))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
  Maximum recursion depth reached
CURRENT SUBGOAL (((nat-to-int (plus _v_35 _v_35))+(nat-to-int (mult (plus _v_35 _v_35) _t_36)))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (plus _v_35 _v_35))+(nat-to-int (mult (plus _v_35 _v_35) _t_36)))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_1 _qv_2)=(plus _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (plus _v_35 _v_35))+(nat-to-int (mult (plus _v_35 _v_35) _t_36)))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_3 _qv_4) _qv_5)=(plus _qv_3 (plus _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (plus _v_35 _v_35))+(nat-to-int (mult (plus _v_35 _v_35) _t_36)))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((mult _qv_6 _qv_7)=(mult _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (plus _v_35 _v_35))+(nat-to-int (mult (plus _v_35 _v_35) _t_36)))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((mult (mult _qv_8 _qv_9) _qv_10)=(mult _qv_8 (mult _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (plus _v_35 _v_35))+(nat-to-int (mult (plus _v_35 _v_35) _t_36)))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat)) ((tri (tri _qv_11))=_qv_11))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (plus _v_35 _v_35))+(nat-to-int (mult (plus _v_35 _v_35) _t_36)))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat)) ((cubes (cubes _qv_12))=_qv_12))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (plus _v_35 _v_35))+(nat-to-int (mult (plus _v_35 _v_35) _t_36)))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (plus _v_35 _v_35))+(nat-to-int (mult (plus _v_35 _v_35) _t_36)))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_14))=(nat-to-int _qv_14)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (plus _v_35 _v_35))+(nat-to-int (mult (plus _v_35 _v_35) _t_36)))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat)) ((nat-to-int (tri _qv_15))=(nat-to-int _qv_15)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (plus _v_35 _v_35))+(nat-to-int (mult (plus _v_35 _v_35) _t_36)))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat)) ((nat-to-int (cubes _qv_16))=(nat-to-int _qv_16)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (plus _v_35 _v_35))+(nat-to-int (mult (plus _v_35 _v_35) _t_36)))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((mult _qv_17 (plus _qv_18 _qv_19))=(plus (mult _qv_17 _qv_18) (mult _qv_17 _qv_19))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (plus _v_35 _v_35))+(nat-to-int (mult (plus _v_35 _v_35) _t_36)))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus _qv_20 (mult _qv_21 _qv_22))=(mult (plus _qv_20 _qv_21) (plus _qv_20 _qv_22))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (plus _v_35 _v_35))+(nat-to-int (mult (plus _v_35 _v_35) _t_36)))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_23 _qv_24))=(plus (succ _qv_23) (succ _qv_24))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (plus _v_35 _v_35))+(nat-to-int (mult (plus _v_35 _v_35) _t_36)))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_23 _qv_24))=(plus (succ _qv_24) (succ _qv_23))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (plus _v_35 _v_35))+(nat-to-int (mult (plus _v_35 _v_35) _t_36)))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (mult _qv_25 _qv_26))=(mult (succ _qv_25) (succ _qv_26))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (plus _v_35 _v_35))+(nat-to-int (mult (plus _v_35 _v_35) _t_36)))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (mult _qv_25 _qv_26))=(mult (succ _qv_26) (succ _qv_25))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (plus _v_35 _v_35))+(nat-to-int (mult (plus _v_35 _v_35) _t_36)))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((tri (plus _qv_27 _qv_28))=(plus (tri _qv_27) (tri _qv_28))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (plus _v_35 _v_35))+(nat-to-int (mult (plus _v_35 _v_35) _t_36)))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((tri (plus _qv_27 _qv_28))=(plus (tri _qv_28) (tri _qv_27))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (plus _v_35 _v_35))+(nat-to-int (mult (plus _v_35 _v_35) _t_36)))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((tri (mult _qv_29 _qv_30))=(mult (tri _qv_29) (tri _qv_30))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (plus _v_35 _v_35))+(nat-to-int (mult (plus _v_35 _v_35) _t_36)))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((tri (mult _qv_29 _qv_30))=(mult (tri _qv_30) (tri _qv_29))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (plus _v_35 _v_35))+(nat-to-int (mult (plus _v_35 _v_35) _t_36)))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((cubes (plus _qv_31 _qv_32))=(plus (cubes _qv_31) (cubes _qv_32))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (plus _v_35 _v_35))+(nat-to-int (mult (plus _v_35 _v_35) _t_36)))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((cubes (plus _qv_31 _qv_32))=(plus (cubes _qv_32) (cubes _qv_31))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (plus _v_35 _v_35))+(nat-to-int (mult (plus _v_35 _v_35) _t_36)))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((cubes (mult _qv_33 _qv_34))=(mult (cubes _qv_33) (cubes _qv_34))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (plus _v_35 _v_35))+(nat-to-int (mult (plus _v_35 _v_35) _t_36)))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((cubes (mult _qv_33 _qv_34))=(mult (cubes _qv_34) (cubes _qv_33))))
USE ASSUMPTION FAILED

  backtrack to: (((nat-to-int (plus _v_35 _v_35))+(nat-to-int (mult (plus _v_35 _v_35) _t_36)))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(nat-to-int (plus _v_35 _v_35)))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(nat-to-int (plus _v_35 _v_35)))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_1 _qv_2)=(plus _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(nat-to-int (plus _v_35 _v_35)))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_3 _qv_4) _qv_5)=(plus _qv_3 (plus _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(nat-to-int (plus _v_35 _v_35)))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((mult _qv_6 _qv_7)=(mult _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(nat-to-int (plus _v_35 _v_35)))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((mult (mult _qv_8 _qv_9) _qv_10)=(mult _qv_8 (mult _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(nat-to-int (plus _v_35 _v_35)))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat)) ((tri (tri _qv_11))=_qv_11))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(nat-to-int (plus _v_35 _v_35)))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat)) ((cubes (cubes _qv_12))=_qv_12))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(nat-to-int (plus _v_35 _v_35)))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(nat-to-int (plus _v_35 _v_35)))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_14))=(nat-to-int _qv_14)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(nat-to-int (plus _v_35 _v_35)))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat)) ((nat-to-int (tri _qv_15))=(nat-to-int _qv_15)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(nat-to-int (plus _v_35 _v_35)))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat)) ((nat-to-int (cubes _qv_16))=(nat-to-int _qv_16)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(nat-to-int (plus _v_35 _v_35)))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((mult _qv_17 (plus _qv_18 _qv_19))=(plus (mult _qv_17 _qv_18) (mult _qv_17 _qv_19))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(nat-to-int (plus _v_35 _v_35)))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus _qv_20 (mult _qv_21 _qv_22))=(mult (plus _qv_20 _qv_21) (plus _qv_20 _qv_22))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(nat-to-int (plus _v_35 _v_35)))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_23 _qv_24))=(plus (succ _qv_23) (succ _qv_24))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(nat-to-int (plus _v_35 _v_35)))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_23 _qv_24))=(plus (succ _qv_24) (succ _qv_23))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(nat-to-int (plus _v_35 _v_35)))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (mult _qv_25 _qv_26))=(mult (succ _qv_25) (succ _qv_26))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(nat-to-int (plus _v_35 _v_35)))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (mult _qv_25 _qv_26))=(mult (succ _qv_26) (succ _qv_25))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(nat-to-int (plus _v_35 _v_35)))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((tri (plus _qv_27 _qv_28))=(plus (tri _qv_27) (tri _qv_28))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(nat-to-int (plus _v_35 _v_35)))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((tri (plus _qv_27 _qv_28))=(plus (tri _qv_28) (tri _qv_27))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(nat-to-int (plus _v_35 _v_35)))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((tri (mult _qv_29 _qv_30))=(mult (tri _qv_29) (tri _qv_30))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(nat-to-int (plus _v_35 _v_35)))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((tri (mult _qv_29 _qv_30))=(mult (tri _qv_30) (tri _qv_29))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(nat-to-int (plus _v_35 _v_35)))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((cubes (plus _qv_31 _qv_32))=(plus (cubes _qv_31) (cubes _qv_32))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(nat-to-int (plus _v_35 _v_35)))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((cubes (plus _qv_31 _qv_32))=(plus (cubes _qv_32) (cubes _qv_31))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(nat-to-int (plus _v_35 _v_35)))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((cubes (mult _qv_33 _qv_34))=(mult (cubes _qv_33) (cubes _qv_34))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(nat-to-int (plus _v_35 _v_35)))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((cubes (mult _qv_33 _qv_34))=(mult (cubes _qv_34) (cubes _qv_33))))
USE ASSUMPTION FAILED

  backtrack to: (((nat-to-int (mult _t_36 (plus _v_35 _v_35)))+(nat-to-int (plus _v_35 _v_35)))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
  rewritten [17]: (((nat-to-int (mult _v_35 (plus _t_36 _t_36)))+(nat-to-int (plus _v_35 _v_35)))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
  rewritten [2]: (((nat-to-int (plus _v_35 _v_35))+(nat-to-int (mult _v_35 (plus _t_36 _t_36))))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
  Maximum recursion depth reached
CURRENT SUBGOAL (((nat-to-int (plus _v_35 _v_35))+(nat-to-int (mult _v_35 (plus _t_36 _t_36))))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (plus _v_35 _v_35))+(nat-to-int (mult _v_35 (plus _t_36 _t_36))))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_1 _qv_2)=(plus _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (plus _v_35 _v_35))+(nat-to-int (mult _v_35 (plus _t_36 _t_36))))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_3 _qv_4) _qv_5)=(plus _qv_3 (plus _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (plus _v_35 _v_35))+(nat-to-int (mult _v_35 (plus _t_36 _t_36))))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((mult _qv_6 _qv_7)=(mult _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (plus _v_35 _v_35))+(nat-to-int (mult _v_35 (plus _t_36 _t_36))))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((mult (mult _qv_8 _qv_9) _qv_10)=(mult _qv_8 (mult _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (plus _v_35 _v_35))+(nat-to-int (mult _v_35 (plus _t_36 _t_36))))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat)) ((tri (tri _qv_11))=_qv_11))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (plus _v_35 _v_35))+(nat-to-int (mult _v_35 (plus _t_36 _t_36))))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat)) ((cubes (cubes _qv_12))=_qv_12))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (plus _v_35 _v_35))+(nat-to-int (mult _v_35 (plus _t_36 _t_36))))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (plus _v_35 _v_35))+(nat-to-int (mult _v_35 (plus _t_36 _t_36))))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_14))=(nat-to-int _qv_14)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (plus _v_35 _v_35))+(nat-to-int (mult _v_35 (plus _t_36 _t_36))))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat)) ((nat-to-int (tri _qv_15))=(nat-to-int _qv_15)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (plus _v_35 _v_35))+(nat-to-int (mult _v_35 (plus _t_36 _t_36))))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat)) ((nat-to-int (cubes _qv_16))=(nat-to-int _qv_16)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (plus _v_35 _v_35))+(nat-to-int (mult _v_35 (plus _t_36 _t_36))))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((mult _qv_17 (plus _qv_18 _qv_19))=(plus (mult _qv_17 _qv_18) (mult _qv_17 _qv_19))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (plus _v_35 _v_35))+(nat-to-int (mult _v_35 (plus _t_36 _t_36))))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus _qv_20 (mult _qv_21 _qv_22))=(mult (plus _qv_20 _qv_21) (plus _qv_20 _qv_22))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (plus _v_35 _v_35))+(nat-to-int (mult _v_35 (plus _t_36 _t_36))))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_23 _qv_24))=(plus (succ _qv_23) (succ _qv_24))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (plus _v_35 _v_35))+(nat-to-int (mult _v_35 (plus _t_36 _t_36))))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_23 _qv_24))=(plus (succ _qv_24) (succ _qv_23))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (plus _v_35 _v_35))+(nat-to-int (mult _v_35 (plus _t_36 _t_36))))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (mult _qv_25 _qv_26))=(mult (succ _qv_25) (succ _qv_26))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (plus _v_35 _v_35))+(nat-to-int (mult _v_35 (plus _t_36 _t_36))))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (mult _qv_25 _qv_26))=(mult (succ _qv_26) (succ _qv_25))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (plus _v_35 _v_35))+(nat-to-int (mult _v_35 (plus _t_36 _t_36))))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((tri (plus _qv_27 _qv_28))=(plus (tri _qv_27) (tri _qv_28))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (plus _v_35 _v_35))+(nat-to-int (mult _v_35 (plus _t_36 _t_36))))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((tri (plus _qv_27 _qv_28))=(plus (tri _qv_28) (tri _qv_27))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (plus _v_35 _v_35))+(nat-to-int (mult _v_35 (plus _t_36 _t_36))))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((tri (mult _qv_29 _qv_30))=(mult (tri _qv_29) (tri _qv_30))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (plus _v_35 _v_35))+(nat-to-int (mult _v_35 (plus _t_36 _t_36))))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((tri (mult _qv_29 _qv_30))=(mult (tri _qv_30) (tri _qv_29))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (plus _v_35 _v_35))+(nat-to-int (mult _v_35 (plus _t_36 _t_36))))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((cubes (plus _qv_31 _qv_32))=(plus (cubes _qv_31) (cubes _qv_32))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (plus _v_35 _v_35))+(nat-to-int (mult _v_35 (plus _t_36 _t_36))))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((cubes (plus _qv_31 _qv_32))=(plus (cubes _qv_32) (cubes _qv_31))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (plus _v_35 _v_35))+(nat-to-int (mult _v_35 (plus _t_36 _t_36))))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((cubes (mult _qv_33 _qv_34))=(mult (cubes _qv_33) (cubes _qv_34))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (plus _v_35 _v_35))+(nat-to-int (mult _v_35 (plus _t_36 _t_36))))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((cubes (mult _qv_33 _qv_34))=(mult (cubes _qv_34) (cubes _qv_33))))
USE ASSUMPTION FAILED

  backtrack to: (((nat-to-int (plus _v_35 _v_35))+(nat-to-int (mult _v_35 (plus _t_36 _t_36))))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
  rewritten [4]: (((nat-to-int (plus _v_35 _v_35))+(nat-to-int (mult _v_35 (plus _t_36 _t_36))))=(nat-to-int (mult _v_35 (succ (succ (plus _t_36 _t_36))))))
  Maximum recursion depth reached
CURRENT SUBGOAL (((nat-to-int (plus _v_35 _v_35))+(nat-to-int (mult _v_35 (plus _t_36 _t_36))))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (plus _v_35 _v_35))+(nat-to-int (mult _v_35 (plus _t_36 _t_36))))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_1 _qv_2)=(plus _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (plus _v_35 _v_35))+(nat-to-int (mult _v_35 (plus _t_36 _t_36))))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_3 _qv_4) _qv_5)=(plus _qv_3 (plus _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (plus _v_35 _v_35))+(nat-to-int (mult _v_35 (plus _t_36 _t_36))))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((mult _qv_6 _qv_7)=(mult _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (plus _v_35 _v_35))+(nat-to-int (mult _v_35 (plus _t_36 _t_36))))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((mult (mult _qv_8 _qv_9) _qv_10)=(mult _qv_8 (mult _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (plus _v_35 _v_35))+(nat-to-int (mult _v_35 (plus _t_36 _t_36))))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat)) ((tri (tri _qv_11))=_qv_11))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (plus _v_35 _v_35))+(nat-to-int (mult _v_35 (plus _t_36 _t_36))))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat)) ((cubes (cubes _qv_12))=_qv_12))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (plus _v_35 _v_35))+(nat-to-int (mult _v_35 (plus _t_36 _t_36))))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (plus _v_35 _v_35))+(nat-to-int (mult _v_35 (plus _t_36 _t_36))))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_14))=(nat-to-int _qv_14)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (plus _v_35 _v_35))+(nat-to-int (mult _v_35 (plus _t_36 _t_36))))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat)) ((nat-to-int (tri _qv_15))=(nat-to-int _qv_15)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (plus _v_35 _v_35))+(nat-to-int (mult _v_35 (plus _t_36 _t_36))))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat)) ((nat-to-int (cubes _qv_16))=(nat-to-int _qv_16)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (plus _v_35 _v_35))+(nat-to-int (mult _v_35 (plus _t_36 _t_36))))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((mult _qv_17 (plus _qv_18 _qv_19))=(plus (mult _qv_17 _qv_18) (mult _qv_17 _qv_19))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (plus _v_35 _v_35))+(nat-to-int (mult _v_35 (plus _t_36 _t_36))))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus _qv_20 (mult _qv_21 _qv_22))=(mult (plus _qv_20 _qv_21) (plus _qv_20 _qv_22))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (plus _v_35 _v_35))+(nat-to-int (mult _v_35 (plus _t_36 _t_36))))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_23 _qv_24))=(plus (succ _qv_23) (succ _qv_24))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (plus _v_35 _v_35))+(nat-to-int (mult _v_35 (plus _t_36 _t_36))))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_23 _qv_24))=(plus (succ _qv_24) (succ _qv_23))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (plus _v_35 _v_35))+(nat-to-int (mult _v_35 (plus _t_36 _t_36))))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (mult _qv_25 _qv_26))=(mult (succ _qv_25) (succ _qv_26))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (plus _v_35 _v_35))+(nat-to-int (mult _v_35 (plus _t_36 _t_36))))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (mult _qv_25 _qv_26))=(mult (succ _qv_26) (succ _qv_25))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (plus _v_35 _v_35))+(nat-to-int (mult _v_35 (plus _t_36 _t_36))))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((tri (plus _qv_27 _qv_28))=(plus (tri _qv_27) (tri _qv_28))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (plus _v_35 _v_35))+(nat-to-int (mult _v_35 (plus _t_36 _t_36))))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((tri (plus _qv_27 _qv_28))=(plus (tri _qv_28) (tri _qv_27))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (plus _v_35 _v_35))+(nat-to-int (mult _v_35 (plus _t_36 _t_36))))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((tri (mult _qv_29 _qv_30))=(mult (tri _qv_29) (tri _qv_30))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (plus _v_35 _v_35))+(nat-to-int (mult _v_35 (plus _t_36 _t_36))))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((tri (mult _qv_29 _qv_30))=(mult (tri _qv_30) (tri _qv_29))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (plus _v_35 _v_35))+(nat-to-int (mult _v_35 (plus _t_36 _t_36))))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((cubes (plus _qv_31 _qv_32))=(plus (cubes _qv_31) (cubes _qv_32))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (plus _v_35 _v_35))+(nat-to-int (mult _v_35 (plus _t_36 _t_36))))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((cubes (plus _qv_31 _qv_32))=(plus (cubes _qv_32) (cubes _qv_31))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (plus _v_35 _v_35))+(nat-to-int (mult _v_35 (plus _t_36 _t_36))))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((cubes (mult _qv_33 _qv_34))=(mult (cubes _qv_33) (cubes _qv_34))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (plus _v_35 _v_35))+(nat-to-int (mult _v_35 (plus _t_36 _t_36))))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((cubes (mult _qv_33 _qv_34))=(mult (cubes _qv_34) (cubes _qv_33))))
USE ASSUMPTION FAILED

  backtrack to: (((nat-to-int (plus _v_35 _v_35))+(nat-to-int (mult _v_35 (plus _t_36 _t_36))))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
  rewritten [12]: ((((nat-to-int _v_35)+(nat-to-int _v_35))+(nat-to-int (mult _v_35 (plus _t_36 _t_36))))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
  Maximum recursion depth reached
CURRENT SUBGOAL (((nat-to-int (plus _v_35 _v_35))+(nat-to-int (mult _v_35 (plus _t_36 _t_36))))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (plus _v_35 _v_35))+(nat-to-int (mult _v_35 (plus _t_36 _t_36))))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_1 _qv_2)=(plus _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (plus _v_35 _v_35))+(nat-to-int (mult _v_35 (plus _t_36 _t_36))))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_3 _qv_4) _qv_5)=(plus _qv_3 (plus _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (plus _v_35 _v_35))+(nat-to-int (mult _v_35 (plus _t_36 _t_36))))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((mult _qv_6 _qv_7)=(mult _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (plus _v_35 _v_35))+(nat-to-int (mult _v_35 (plus _t_36 _t_36))))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((mult (mult _qv_8 _qv_9) _qv_10)=(mult _qv_8 (mult _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (plus _v_35 _v_35))+(nat-to-int (mult _v_35 (plus _t_36 _t_36))))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat)) ((tri (tri _qv_11))=_qv_11))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (plus _v_35 _v_35))+(nat-to-int (mult _v_35 (plus _t_36 _t_36))))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat)) ((cubes (cubes _qv_12))=_qv_12))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (plus _v_35 _v_35))+(nat-to-int (mult _v_35 (plus _t_36 _t_36))))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (plus _v_35 _v_35))+(nat-to-int (mult _v_35 (plus _t_36 _t_36))))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_14))=(nat-to-int _qv_14)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (plus _v_35 _v_35))+(nat-to-int (mult _v_35 (plus _t_36 _t_36))))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat)) ((nat-to-int (tri _qv_15))=(nat-to-int _qv_15)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (plus _v_35 _v_35))+(nat-to-int (mult _v_35 (plus _t_36 _t_36))))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat)) ((nat-to-int (cubes _qv_16))=(nat-to-int _qv_16)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (plus _v_35 _v_35))+(nat-to-int (mult _v_35 (plus _t_36 _t_36))))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((mult _qv_17 (plus _qv_18 _qv_19))=(plus (mult _qv_17 _qv_18) (mult _qv_17 _qv_19))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (plus _v_35 _v_35))+(nat-to-int (mult _v_35 (plus _t_36 _t_36))))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus _qv_20 (mult _qv_21 _qv_22))=(mult (plus _qv_20 _qv_21) (plus _qv_20 _qv_22))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (plus _v_35 _v_35))+(nat-to-int (mult _v_35 (plus _t_36 _t_36))))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_23 _qv_24))=(plus (succ _qv_23) (succ _qv_24))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (plus _v_35 _v_35))+(nat-to-int (mult _v_35 (plus _t_36 _t_36))))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_23 _qv_24))=(plus (succ _qv_24) (succ _qv_23))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (plus _v_35 _v_35))+(nat-to-int (mult _v_35 (plus _t_36 _t_36))))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (mult _qv_25 _qv_26))=(mult (succ _qv_25) (succ _qv_26))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (plus _v_35 _v_35))+(nat-to-int (mult _v_35 (plus _t_36 _t_36))))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (mult _qv_25 _qv_26))=(mult (succ _qv_26) (succ _qv_25))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (plus _v_35 _v_35))+(nat-to-int (mult _v_35 (plus _t_36 _t_36))))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((tri (plus _qv_27 _qv_28))=(plus (tri _qv_27) (tri _qv_28))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (plus _v_35 _v_35))+(nat-to-int (mult _v_35 (plus _t_36 _t_36))))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((tri (plus _qv_27 _qv_28))=(plus (tri _qv_28) (tri _qv_27))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (plus _v_35 _v_35))+(nat-to-int (mult _v_35 (plus _t_36 _t_36))))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((tri (mult _qv_29 _qv_30))=(mult (tri _qv_29) (tri _qv_30))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (plus _v_35 _v_35))+(nat-to-int (mult _v_35 (plus _t_36 _t_36))))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((tri (mult _qv_29 _qv_30))=(mult (tri _qv_30) (tri _qv_29))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (plus _v_35 _v_35))+(nat-to-int (mult _v_35 (plus _t_36 _t_36))))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((cubes (plus _qv_31 _qv_32))=(plus (cubes _qv_31) (cubes _qv_32))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (plus _v_35 _v_35))+(nat-to-int (mult _v_35 (plus _t_36 _t_36))))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((cubes (plus _qv_31 _qv_32))=(plus (cubes _qv_32) (cubes _qv_31))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (plus _v_35 _v_35))+(nat-to-int (mult _v_35 (plus _t_36 _t_36))))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((cubes (mult _qv_33 _qv_34))=(mult (cubes _qv_33) (cubes _qv_34))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (plus _v_35 _v_35))+(nat-to-int (mult _v_35 (plus _t_36 _t_36))))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((cubes (mult _qv_33 _qv_34))=(mult (cubes _qv_34) (cubes _qv_33))))
USE ASSUMPTION FAILED

  backtrack to: (((nat-to-int (plus _v_35 _v_35))+(nat-to-int (mult _v_35 (plus _t_36 _t_36))))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
  rewritten [13]: (((nat-to-int (plus _v_35 _v_35))+(nat-to-int (mult _v_35 (plus _t_36 _t_36))))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
  Maximum recursion depth reached
CURRENT SUBGOAL (((nat-to-int (plus _v_35 _v_35))+(nat-to-int (mult _v_35 (plus _t_36 _t_36))))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (plus _v_35 _v_35))+(nat-to-int (mult _v_35 (plus _t_36 _t_36))))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_1 _qv_2)=(plus _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (plus _v_35 _v_35))+(nat-to-int (mult _v_35 (plus _t_36 _t_36))))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_3 _qv_4) _qv_5)=(plus _qv_3 (plus _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (plus _v_35 _v_35))+(nat-to-int (mult _v_35 (plus _t_36 _t_36))))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((mult _qv_6 _qv_7)=(mult _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (plus _v_35 _v_35))+(nat-to-int (mult _v_35 (plus _t_36 _t_36))))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((mult (mult _qv_8 _qv_9) _qv_10)=(mult _qv_8 (mult _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (plus _v_35 _v_35))+(nat-to-int (mult _v_35 (plus _t_36 _t_36))))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat)) ((tri (tri _qv_11))=_qv_11))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (plus _v_35 _v_35))+(nat-to-int (mult _v_35 (plus _t_36 _t_36))))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat)) ((cubes (cubes _qv_12))=_qv_12))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (plus _v_35 _v_35))+(nat-to-int (mult _v_35 (plus _t_36 _t_36))))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (plus _v_35 _v_35))+(nat-to-int (mult _v_35 (plus _t_36 _t_36))))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_14))=(nat-to-int _qv_14)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (plus _v_35 _v_35))+(nat-to-int (mult _v_35 (plus _t_36 _t_36))))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat)) ((nat-to-int (tri _qv_15))=(nat-to-int _qv_15)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (plus _v_35 _v_35))+(nat-to-int (mult _v_35 (plus _t_36 _t_36))))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat)) ((nat-to-int (cubes _qv_16))=(nat-to-int _qv_16)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (plus _v_35 _v_35))+(nat-to-int (mult _v_35 (plus _t_36 _t_36))))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((mult _qv_17 (plus _qv_18 _qv_19))=(plus (mult _qv_17 _qv_18) (mult _qv_17 _qv_19))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (plus _v_35 _v_35))+(nat-to-int (mult _v_35 (plus _t_36 _t_36))))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus _qv_20 (mult _qv_21 _qv_22))=(mult (plus _qv_20 _qv_21) (plus _qv_20 _qv_22))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (plus _v_35 _v_35))+(nat-to-int (mult _v_35 (plus _t_36 _t_36))))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_23 _qv_24))=(plus (succ _qv_23) (succ _qv_24))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (plus _v_35 _v_35))+(nat-to-int (mult _v_35 (plus _t_36 _t_36))))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_23 _qv_24))=(plus (succ _qv_24) (succ _qv_23))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (plus _v_35 _v_35))+(nat-to-int (mult _v_35 (plus _t_36 _t_36))))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (mult _qv_25 _qv_26))=(mult (succ _qv_25) (succ _qv_26))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (plus _v_35 _v_35))+(nat-to-int (mult _v_35 (plus _t_36 _t_36))))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (mult _qv_25 _qv_26))=(mult (succ _qv_26) (succ _qv_25))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (plus _v_35 _v_35))+(nat-to-int (mult _v_35 (plus _t_36 _t_36))))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((tri (plus _qv_27 _qv_28))=(plus (tri _qv_27) (tri _qv_28))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (plus _v_35 _v_35))+(nat-to-int (mult _v_35 (plus _t_36 _t_36))))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((tri (plus _qv_27 _qv_28))=(plus (tri _qv_28) (tri _qv_27))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (plus _v_35 _v_35))+(nat-to-int (mult _v_35 (plus _t_36 _t_36))))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((tri (mult _qv_29 _qv_30))=(mult (tri _qv_29) (tri _qv_30))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (plus _v_35 _v_35))+(nat-to-int (mult _v_35 (plus _t_36 _t_36))))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((tri (mult _qv_29 _qv_30))=(mult (tri _qv_30) (tri _qv_29))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (plus _v_35 _v_35))+(nat-to-int (mult _v_35 (plus _t_36 _t_36))))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((cubes (plus _qv_31 _qv_32))=(plus (cubes _qv_31) (cubes _qv_32))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (plus _v_35 _v_35))+(nat-to-int (mult _v_35 (plus _t_36 _t_36))))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((cubes (plus _qv_31 _qv_32))=(plus (cubes _qv_32) (cubes _qv_31))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (plus _v_35 _v_35))+(nat-to-int (mult _v_35 (plus _t_36 _t_36))))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((cubes (mult _qv_33 _qv_34))=(mult (cubes _qv_33) (cubes _qv_34))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (plus _v_35 _v_35))+(nat-to-int (mult _v_35 (plus _t_36 _t_36))))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((cubes (mult _qv_33 _qv_34))=(mult (cubes _qv_34) (cubes _qv_33))))
USE ASSUMPTION FAILED

  backtrack to: (((nat-to-int (plus _v_35 _v_35))+(nat-to-int (mult _v_35 (plus _t_36 _t_36))))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
  rewritten [13]: (((nat-to-int (plus _v_35 _v_35))+(nat-to-int (mult _v_35 (plus _t_36 _t_36))))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
  Maximum recursion depth reached
CURRENT SUBGOAL (((nat-to-int (plus _v_35 _v_35))+(nat-to-int (mult _v_35 (plus _t_36 _t_36))))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (plus _v_35 _v_35))+(nat-to-int (mult _v_35 (plus _t_36 _t_36))))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_1 _qv_2)=(plus _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (plus _v_35 _v_35))+(nat-to-int (mult _v_35 (plus _t_36 _t_36))))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_3 _qv_4) _qv_5)=(plus _qv_3 (plus _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (plus _v_35 _v_35))+(nat-to-int (mult _v_35 (plus _t_36 _t_36))))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((mult _qv_6 _qv_7)=(mult _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (plus _v_35 _v_35))+(nat-to-int (mult _v_35 (plus _t_36 _t_36))))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((mult (mult _qv_8 _qv_9) _qv_10)=(mult _qv_8 (mult _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (plus _v_35 _v_35))+(nat-to-int (mult _v_35 (plus _t_36 _t_36))))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat)) ((tri (tri _qv_11))=_qv_11))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (plus _v_35 _v_35))+(nat-to-int (mult _v_35 (plus _t_36 _t_36))))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat)) ((cubes (cubes _qv_12))=_qv_12))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (plus _v_35 _v_35))+(nat-to-int (mult _v_35 (plus _t_36 _t_36))))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (plus _v_35 _v_35))+(nat-to-int (mult _v_35 (plus _t_36 _t_36))))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_14))=(nat-to-int _qv_14)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (plus _v_35 _v_35))+(nat-to-int (mult _v_35 (plus _t_36 _t_36))))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat)) ((nat-to-int (tri _qv_15))=(nat-to-int _qv_15)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (plus _v_35 _v_35))+(nat-to-int (mult _v_35 (plus _t_36 _t_36))))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat)) ((nat-to-int (cubes _qv_16))=(nat-to-int _qv_16)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (plus _v_35 _v_35))+(nat-to-int (mult _v_35 (plus _t_36 _t_36))))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((mult _qv_17 (plus _qv_18 _qv_19))=(plus (mult _qv_17 _qv_18) (mult _qv_17 _qv_19))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (plus _v_35 _v_35))+(nat-to-int (mult _v_35 (plus _t_36 _t_36))))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus _qv_20 (mult _qv_21 _qv_22))=(mult (plus _qv_20 _qv_21) (plus _qv_20 _qv_22))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (plus _v_35 _v_35))+(nat-to-int (mult _v_35 (plus _t_36 _t_36))))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_23 _qv_24))=(plus (succ _qv_23) (succ _qv_24))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (plus _v_35 _v_35))+(nat-to-int (mult _v_35 (plus _t_36 _t_36))))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_23 _qv_24))=(plus (succ _qv_24) (succ _qv_23))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (plus _v_35 _v_35))+(nat-to-int (mult _v_35 (plus _t_36 _t_36))))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (mult _qv_25 _qv_26))=(mult (succ _qv_25) (succ _qv_26))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (plus _v_35 _v_35))+(nat-to-int (mult _v_35 (plus _t_36 _t_36))))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (mult _qv_25 _qv_26))=(mult (succ _qv_26) (succ _qv_25))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (plus _v_35 _v_35))+(nat-to-int (mult _v_35 (plus _t_36 _t_36))))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((tri (plus _qv_27 _qv_28))=(plus (tri _qv_27) (tri _qv_28))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (plus _v_35 _v_35))+(nat-to-int (mult _v_35 (plus _t_36 _t_36))))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((tri (plus _qv_27 _qv_28))=(plus (tri _qv_28) (tri _qv_27))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (plus _v_35 _v_35))+(nat-to-int (mult _v_35 (plus _t_36 _t_36))))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((tri (mult _qv_29 _qv_30))=(mult (tri _qv_29) (tri _qv_30))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (plus _v_35 _v_35))+(nat-to-int (mult _v_35 (plus _t_36 _t_36))))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((tri (mult _qv_29 _qv_30))=(mult (tri _qv_30) (tri _qv_29))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (plus _v_35 _v_35))+(nat-to-int (mult _v_35 (plus _t_36 _t_36))))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((cubes (plus _qv_31 _qv_32))=(plus (cubes _qv_31) (cubes _qv_32))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (plus _v_35 _v_35))+(nat-to-int (mult _v_35 (plus _t_36 _t_36))))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((cubes (plus _qv_31 _qv_32))=(plus (cubes _qv_32) (cubes _qv_31))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (plus _v_35 _v_35))+(nat-to-int (mult _v_35 (plus _t_36 _t_36))))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((cubes (mult _qv_33 _qv_34))=(mult (cubes _qv_33) (cubes _qv_34))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (plus _v_35 _v_35))+(nat-to-int (mult _v_35 (plus _t_36 _t_36))))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((cubes (mult _qv_33 _qv_34))=(mult (cubes _qv_34) (cubes _qv_33))))
USE ASSUMPTION FAILED

  backtrack to: (((nat-to-int (plus _v_35 _v_35))+(nat-to-int (mult _v_35 (plus _t_36 _t_36))))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
  rewritten [13]: (((nat-to-int (plus _v_35 _v_35))+(nat-to-int (mult _v_35 (plus _t_36 _t_36))))=(nat-to-int (mult _v_35 (succ (plus _t_36 (succ _t_36))))))
  Maximum recursion depth reached
CURRENT SUBGOAL (((nat-to-int (plus _v_35 _v_35))+(nat-to-int (mult _v_35 (plus _t_36 _t_36))))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (plus _v_35 _v_35))+(nat-to-int (mult _v_35 (plus _t_36 _t_36))))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_1 _qv_2)=(plus _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (plus _v_35 _v_35))+(nat-to-int (mult _v_35 (plus _t_36 _t_36))))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_3 _qv_4) _qv_5)=(plus _qv_3 (plus _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (plus _v_35 _v_35))+(nat-to-int (mult _v_35 (plus _t_36 _t_36))))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((mult _qv_6 _qv_7)=(mult _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (plus _v_35 _v_35))+(nat-to-int (mult _v_35 (plus _t_36 _t_36))))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((mult (mult _qv_8 _qv_9) _qv_10)=(mult _qv_8 (mult _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (plus _v_35 _v_35))+(nat-to-int (mult _v_35 (plus _t_36 _t_36))))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat)) ((tri (tri _qv_11))=_qv_11))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (plus _v_35 _v_35))+(nat-to-int (mult _v_35 (plus _t_36 _t_36))))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat)) ((cubes (cubes _qv_12))=_qv_12))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (plus _v_35 _v_35))+(nat-to-int (mult _v_35 (plus _t_36 _t_36))))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (plus _v_35 _v_35))+(nat-to-int (mult _v_35 (plus _t_36 _t_36))))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_14))=(nat-to-int _qv_14)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (plus _v_35 _v_35))+(nat-to-int (mult _v_35 (plus _t_36 _t_36))))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat)) ((nat-to-int (tri _qv_15))=(nat-to-int _qv_15)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (plus _v_35 _v_35))+(nat-to-int (mult _v_35 (plus _t_36 _t_36))))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat)) ((nat-to-int (cubes _qv_16))=(nat-to-int _qv_16)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (plus _v_35 _v_35))+(nat-to-int (mult _v_35 (plus _t_36 _t_36))))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((mult _qv_17 (plus _qv_18 _qv_19))=(plus (mult _qv_17 _qv_18) (mult _qv_17 _qv_19))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (plus _v_35 _v_35))+(nat-to-int (mult _v_35 (plus _t_36 _t_36))))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus _qv_20 (mult _qv_21 _qv_22))=(mult (plus _qv_20 _qv_21) (plus _qv_20 _qv_22))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (plus _v_35 _v_35))+(nat-to-int (mult _v_35 (plus _t_36 _t_36))))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_23 _qv_24))=(plus (succ _qv_23) (succ _qv_24))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (plus _v_35 _v_35))+(nat-to-int (mult _v_35 (plus _t_36 _t_36))))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_23 _qv_24))=(plus (succ _qv_24) (succ _qv_23))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (plus _v_35 _v_35))+(nat-to-int (mult _v_35 (plus _t_36 _t_36))))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (mult _qv_25 _qv_26))=(mult (succ _qv_25) (succ _qv_26))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (plus _v_35 _v_35))+(nat-to-int (mult _v_35 (plus _t_36 _t_36))))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (mult _qv_25 _qv_26))=(mult (succ _qv_26) (succ _qv_25))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (plus _v_35 _v_35))+(nat-to-int (mult _v_35 (plus _t_36 _t_36))))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((tri (plus _qv_27 _qv_28))=(plus (tri _qv_27) (tri _qv_28))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (plus _v_35 _v_35))+(nat-to-int (mult _v_35 (plus _t_36 _t_36))))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((tri (plus _qv_27 _qv_28))=(plus (tri _qv_28) (tri _qv_27))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (plus _v_35 _v_35))+(nat-to-int (mult _v_35 (plus _t_36 _t_36))))=(nat-to-int (mult _v_35 (succ (plus (succ _t_36) _t_36)))))
NOW TESTING (forall ((Nat) (Nat)) ((tri (mult _qv_29 _qv_30))=(mult (tri _qv_29) (tri _qv_30))))
USE ASSUMPTION FAILED

CURREN