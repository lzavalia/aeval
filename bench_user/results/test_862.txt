
The Knowledge Scheme currently contains the following lemmas:
	(forall (INT) (0<=(double _qv_0)))
	(forall (INT) ((double (double _qv_1))=_qv_1))
	(forall ((Lst) (Lst)) ((append _qv_2 _qv_3)=(append _qv_3 _qv_2)))
	(forall ((Lst) (Lst) (Lst)) ((append (append _qv_4 _qv_5) _qv_6)=(append _qv_4 (append _qv_5 _qv_6))))
	(forall ((Lst)) (0<=(len _qv_7)))
	(forall (INT) ((double (double _qv_8))=(double _qv_8)))
	(forall ((Lst)) ((double (len _qv_9))=(double _qv_9)))

Simplified goal: (forall ((Lst)) ((len (append x x))=(double (len x))))


Base case:       ((len (append nil nil))=(double (len nil)))
{
  proven trivially
}
Inductive step:  ((len (append (cons _t_10 _t_11) (cons _t_10 _t_11)))=(double (len (cons _t_10 _t_11))))
{
  proven trivially
}

Proved
unsat
