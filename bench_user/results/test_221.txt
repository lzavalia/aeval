
The Knowledge Scheme currently contains the following lemmas:
	(forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
	(forall ((Nat)) (0<=(nat-to-int _qv_1)))
	(forall ((Lst) (Lst)) ((append _qv_2 _qv_3)=(append _qv_3 _qv_2)))
	(forall ((Lst) (Lst) (Lst)) ((append (append _qv_4 _qv_5) _qv_6)=(append _qv_4 (append _qv_5 _qv_6))))
	(forall ((Lst)) ((rev (rev _qv_7))=_qv_7))
	(forall ((Nat)) ((nat-to-int (succ _qv_8))=(nat-to-int _qv_8)))
	(forall ((Lst) (Lst)) ((rev (append _qv_9 _qv_10))=(append (rev _qv_9) (rev _qv_10))))
	(forall ((Lst) (Lst)) ((rev (append _qv_9 _qv_10))=(append (rev _qv_10) (rev _qv_9))))

Simplified goal: (forall ((Lst) (Lst)) ((rev (append (rev x) y))=(append (rev y) x)))


Base case:       ((rev (append (rev nil) _v_11))=(append (rev _v_11) nil))
{
  {
    ====================
    | Assumptions [0]: ((nat-to-int zero)=0)
    | Assumptions [1]: ((rev nil)=nil)
    | Assumptions [2]: (forall ((Nat)) ((nat-to-int _qv_1)>=0))
    | Assumptions [3]: (forall ((Nat) (Nat)) (((nat-to-int _qv_2)=(nat-to-int _qv_3))->(_qv_2=_qv_3)))
    | Assumptions [4]: (forall ((Nat)) ((nat-to-int (succ _qv_4))=(1+(nat-to-int _qv_4))))
    | Assumptions [5]: (forall ((Lst)) ((append nil _qv_5)=_qv_5))
    | Assumptions [6]: (forall ((Nat) (Lst) (Lst)) ((append (cons _qv_6 _qv_7) _qv_8)=(cons _qv_6 (append _qv_7 _qv_8))))
    | Assumptions [7]: (forall ((Nat) (Lst)) ((rev (cons _qv_9 _qv_10))=(append (rev _qv_10) (cons _qv_9 nil))))
    ====================
  }
  rewritten [1]: ((rev (append nil _v_11))=(append (rev _v_11) nil))
  rewritten [5]: ((rev _v_11)=(append (rev _v_11) nil))

The Knowledge Scheme currently contains the following lemmas:
	(forall ((Nat)) ((succ (succ _qv_13))=_qv_13))
	(forall ((Nat)) (0<=(nat-to-int _qv_14)))
	(forall ((Lst) (Lst)) ((append _qv_15 _qv_16)=(append _qv_16 _qv_15)))
	(forall ((Lst) (Lst) (Lst)) ((append (append _qv_17 _qv_18) _qv_19)=(append _qv_17 (append _qv_18 _qv_19))))
	(forall ((Lst)) ((rev (rev _qv_20))=_qv_20))
	(forall ((Nat)) ((nat-to-int (succ _qv_21))=(nat-to-int _qv_21)))
	(forall ((Lst) (Lst)) ((rev (append _qv_22 _qv_23))=(append (rev _qv_22) (rev _qv_23))))
	(forall ((Lst) (Lst)) ((rev (append _qv_22 _qv_23))=(append (rev _qv_23) (rev _qv_22))))

  proven by induction: (_w_12=(append _w_12 nil))
  rewriting done
}
Inductive step:  ((rev (append (rev (cons _t_13 _t_14)) _v_11))=(append (rev _v_11) (cons _t_13 _t_14)))
{
  {
    ====================
    | Assumptions [0]: ((nat-to-int zero)=0)
    | Assumptions [1]: ((rev nil)=nil)
    | Assumptions [2]: (forall ((Nat)) ((nat-to-int _qv_1)>=0))
    | Assumptions [3]: (forall ((Nat) (Nat)) (((nat-to-int _qv_2)=(nat-to-int _qv_3))->(_qv_2=_qv_3)))
    | Assumptions [4]: (forall ((Nat)) ((nat-to-int (succ _qv_4))=(1+(nat-to-int _qv_4))))
    | Assumptions [5]: (forall ((Lst)) ((append nil _qv_5)=_qv_5))
    | Assumptions [6]: (forall ((Nat) (Lst) (Lst)) ((append (cons _qv_6 _qv_7) _qv_8)=(cons _qv_6 (append _qv_7 _qv_8))))
    | Assumptions [7]: (forall ((Nat) (Lst)) ((rev (cons _qv_9 _qv_10))=(append (rev _qv_10) (cons _qv_9 nil))))
    | Assumptions [8]: (forall ((Lst)) ((rev (append (rev _t_14) y))=(append (rev y) _t_14)))
    | Assumptions [9]: (forall ((Lst)) ((append (rev y) _t_14)=(rev (append (rev _t_14) y))))
    ====================
  }
  rewritten [7]: ((rev (append (append (rev _t_14) (cons _t_13 nil)) _v_11))=(append (rev _v_11) (cons _t_13 _t_14)))

The Knowledge Scheme currently contains the following lemmas:
	(forall ((Nat)) ((succ (succ _qv_15))=_qv_15))
	(forall ((Nat)) (0<=(nat-to-int _qv_16)))
	(forall ((Lst) (Lst)) ((append _qv_17 _qv_18)=(append _qv_18 _qv_17)))
	(forall ((Lst) (Lst) (Lst)) ((append (append _qv_19 _qv_20) _qv_21)=(append _qv_19 (append _qv_20 _qv_21))))
	(forall ((Lst)) ((rev (rev _qv_22))=_qv_22))
	(forall ((Nat)) ((nat-to-int (succ _qv_23))=(nat-to-int _qv_23)))
	(forall ((Lst) (Lst)) ((rev (append _qv_24 _qv_25))=(append (rev _qv_24) (rev _qv_25))))
	(forall ((Lst) (Lst)) ((rev (append _qv_24 _qv_25))=(append (rev _qv_25) (rev _qv_24))))

CURRENT SUBGOAL ((rev (append (append (rev (cons _t_28 _t_29)) (cons _v_26 nil)) _v_27))=(append (rev _v_27) (cons _v_26 (cons _t_28 _t_29))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_15))=_qv_15))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rev (append (append (rev (cons _t_28 _t_29)) (cons _v_26 nil)) _v_27))=(append (rev _v_27) (cons _v_26 (cons _t_28 _t_29))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_16)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rev (append (append (rev (cons _t_28 _t_29)) (cons _v_26 nil)) _v_27))=(append (rev _v_27) (cons _v_26 (cons _t_28 _t_29))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_17 _qv_18)=(append _qv_18 _qv_17)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rev (append (append (rev (cons _t_28 _t_29)) (cons _v_26 nil)) _v_27))=(append (rev _v_27) (cons _v_26 (cons _t_28 _t_29))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_19 _qv_20) _qv_21)=(append _qv_19 (append _qv_20 _qv_21))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rev (append (append (rev (cons _t_28 _t_29)) (cons _v_26 nil)) _v_27))=(append (rev _v_27) (cons _v_26 (cons _t_28 _t_29))))
NOW TESTING (forall ((Lst)) ((rev (rev _qv_22))=_qv_22))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rev (append (append (rev (cons _t_28 _t_29)) (cons _v_26 nil)) _v_27))=(append (rev _v_27) (cons _v_26 (cons _t_28 _t_29))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_23))=(nat-to-int _qv_23)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rev (append (append (rev (cons _t_28 _t_29)) (cons _v_26 nil)) _v_27))=(append (rev _v_27) (cons _v_26 (cons _t_28 _t_29))))
NOW TESTING (forall ((Lst) (Lst)) ((rev (append _qv_24 _qv_25))=(append (rev _qv_24) (rev _qv_25))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rev (append (append (rev (cons _t_28 _t_29)) (cons _v_26 nil)) _v_27))=(append (rev _v_27) (cons _v_26 (cons _t_28 _t_29))))
NOW TESTING (forall ((Lst) (Lst)) ((rev (append _qv_24 _qv_25))=(append (rev _qv_25) (rev _qv_24))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rev (append (append (rev (cons _t_28 _t_29)) (cons _v_26 nil)) _v_27))=(append (rev _v_27) (cons _v_26 (cons _t_28 _t_29))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_15))=_qv_15))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rev (append (append (rev (cons _t_28 _t_29)) (cons _v_26 nil)) _v_27))=(append (rev _v_27) (cons _v_26 (cons _t_28 _t_29))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_16)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rev (append (append (rev (cons _t_28 _t_29)) (cons _v_26 nil)) _v_27))=(append (rev _v_27) (cons _v_26 (cons _t_28 _t_29))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_17 _qv_18)=(append _qv_18 _qv_17)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rev (append (append (rev (cons _t_28 _t_29)) (cons _v_26 nil)) _v_27))=(append (rev _v_27) (cons _v_26 (cons _t_28 _t_29))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_19 _qv_20) _qv_21)=(append _qv_19 (append _qv_20 _qv_21))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rev (append (append (rev (cons _t_28 _t_29)) (cons _v_26 nil)) _v_27))=(append (rev _v_27) (cons _v_26 (cons _t_28 _t_29))))
NOW TESTING (forall ((Lst)) ((rev (rev _qv_22))=_qv_22))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rev (append (append (rev (cons _t_28 _t_29)) (cons _v_26 nil)) _v_27))=(append (rev _v_27) (cons _v_26 (cons _t_28 _t_29))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_23))=(nat-to-int _qv_23)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rev (append (append (rev (cons _t_28 _t_29)) (cons _v_26 nil)) _v_27))=(append (rev _v_27) (cons _v_26 (cons _t_28 _t_29))))
NOW TESTING (forall ((Lst) (Lst)) ((rev (append _qv_24 _qv_25))=(append (rev _qv_24) (rev _qv_25))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rev (append (append (rev (cons _t_28 _t_29)) (cons _v_26 nil)) _v_27))=(append (rev _v_27) (cons _v_26 (cons _t_28 _t_29))))
NOW TESTING (forall ((Lst) (Lst)) ((rev (append _qv_24 _qv_25))=(append (rev _qv_25) (rev _qv_24))))
USE ASSUMPTION FAILED


The Knowledge Scheme currently contains the following lemmas:
	(forall ((Nat)) ((succ (succ _qv_34))=_qv_34))
	(forall ((Nat)) (0<=(nat-to-int _qv_35)))
	(forall ((Lst) (Lst)) ((append _qv_36 _qv_37)=(append _qv_37 _qv_36)))
	(forall ((Lst) (Lst) (Lst)) ((append (append _qv_38 _qv_39) _qv_40)=(append _qv_38 (append _qv_39 _qv_40))))
	(forall ((Lst)) ((rev (rev _qv_41))=_qv_41))
	(forall ((Nat)) ((nat-to-int (succ _qv_42))=(nat-to-int _qv_42)))
	(forall ((Lst) (Lst)) ((rev (append _qv_43 _qv_44))=(append (rev _qv_43) (rev _qv_44))))
	(forall ((Lst) (Lst)) ((rev (append _qv_43 _qv_44))=(append (rev _qv_44) (rev _qv_43))))

CURRENT SUBGOAL ((rev (append (append (rev (cons _t_46 _t_47)) (cons _v_45 nil)) nil))=(cons _v_45 (cons _t_46 _t_47)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_34))=_qv_34))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rev (append (append (rev (cons _t_46 _t_47)) (cons _v_45 nil)) nil))=(cons _v_45 (cons _t_46 _t_47)))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_35)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rev (append (append (rev (cons _t_46 _t_47)) (cons _v_45 nil)) nil))=(cons _v_45 (cons _t_46 _t_47)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_36 _qv_37)=(append _qv_37 _qv_36)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rev (append (append (rev (cons _t_46 _t_47)) (cons _v_45 nil)) nil))=(cons _v_45 (cons _t_46 _t_47)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_38 _qv_39) _qv_40)=(append _qv_38 (append _qv_39 _qv_40))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rev (append (append (rev (cons _t_46 _t_47)) (cons _v_45 nil)) nil))=(cons _v_45 (cons _t_46 _t_47)))
NOW TESTING (forall ((Lst)) ((rev (rev _qv_41))=_qv_41))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rev (append (append (rev (cons _t_46 _t_47)) (cons _v_45 nil)) nil))=(cons _v_45 (cons _t_46 _t_47)))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_42))=(nat-to-int _qv_42)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rev (append (append (rev (cons _t_46 _t_47)) (cons _v_45 nil)) nil))=(cons _v_45 (cons _t_46 _t_47)))
NOW TESTING (forall ((Lst) (Lst)) ((rev (append _qv_43 _qv_44))=(append (rev _qv_43) (rev _qv_44))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rev (append (append (rev (cons _t_46 _t_47)) (cons _v_45 nil)) nil))=(cons _v_45 (cons _t_46 _t_47)))
NOW TESTING (forall ((Lst) (Lst)) ((rev (append _qv_43 _qv_44))=(append (rev _qv_44) (rev _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rev (append (append (rev (cons _t_46 _t_47)) (cons _v_45 nil)) nil))=(cons _v_45 (cons _t_46 _t_47)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_34))=_qv_34))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rev (append (append (rev (cons _t_46 _t_47)) (cons _v_45 nil)) nil))=(cons _v_45 (cons _t_46 _t_47)))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_35)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rev (append (append (rev (cons _t_46 _t_47)) (cons _v_45 nil)) nil))=(cons _v_45 (cons _t_46 _t_47)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_36 _qv_37)=(append _qv_37 _qv_36)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rev (append (append (rev (cons _t_46 _t_47)) (cons _v_45 nil)) nil))=(cons _v_45 (cons _t_46 _t_47)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_38 _qv_39) _qv_40)=(append _qv_38 (append _qv_39 _qv_40))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rev (append (append (rev (cons _t_46 _t_47)) (cons _v_45 nil)) nil))=(cons _v_45 (cons _t_46 _t_47)))
NOW TESTING (forall ((Lst)) ((rev (rev _qv_41))=_qv_41))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rev (append (append (rev (cons _t_46 _t_47)) (cons _v_45 nil)) nil))=(cons _v_45 (cons _t_46 _t_47)))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_42))=(nat-to-int _qv_42)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rev (append (append (rev (cons _t_46 _t_47)) (cons _v_45 nil)) nil))=(cons _v_45 (cons _t_46 _t_47)))
NOW TESTING (forall ((Lst) (Lst)) ((rev (append _qv_43 _qv_44))=(append (rev _qv_43) (rev _qv_44))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rev (append (append (rev (cons _t_46 _t_47)) (cons _v_45 nil)) nil))=(cons _v_45 (cons _t_46 _t_47)))
NOW TESTING (forall ((Lst) (Lst)) ((rev (append _qv_43 _qv_44))=(append (rev _qv_44) (rev _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rev (append (append (rev _v_32) (cons _v_33 nil)) nil))=(append nil (cons _v_33 _v_32)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_15))=_qv_15))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rev (append (append (rev _v_32) (cons _v_33 nil)) nil))=(append nil (cons _v_33 _v_32)))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_16)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rev (append (append (rev _v_32) (cons _v_33 nil)) nil))=(append nil (cons _v_33 _v_32)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_17 _qv_18)=(append _qv_18 _qv_17)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rev (append (append (rev _v_32) (cons _v_33 nil)) nil))=(append nil (cons _v_33 _v_32)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_19 _qv_20) _qv_21)=(append _qv_19 (append _qv_20 _qv_21))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rev (append (append (rev _v_32) (cons _v_33 nil)) nil))=(append nil (cons _v_33 _v_32)))
NOW TESTING (forall ((Lst)) ((rev (rev _qv_22))=_qv_22))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rev (append (append (rev _v_32) (cons _v_33 nil)) nil))=(append nil (cons _v_33 _v_32)))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_23))=(nat-to-int _qv_23)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rev (append (append (rev _v_32) (cons _v_33 nil)) nil))=(append nil (cons _v_33 _v_32)))
NOW TESTING (forall ((Lst) (Lst)) ((rev (append _qv_24 _qv_25))=(append (rev _qv_24) (rev _qv_25))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rev (append (append (rev _v_32) (cons _v_33 nil)) nil))=(append nil (cons _v_33 _v_32)))
NOW TESTING (forall ((Lst) (Lst)) ((rev (append _qv_24 _qv_25))=(append (rev _qv_25) (rev _qv_24))))
USE ASSUMPTION FAILED


The Knowledge Scheme currently contains the following lemmas:
	(forall ((Nat)) ((succ (succ _qv_34))=_qv_34))
	(forall ((Nat)) (0<=(nat-to-int _qv_35)))
	(forall ((Lst) (Lst)) ((append _qv_36 _qv_37)=(append _qv_37 _qv_36)))
	(forall ((Lst) (Lst) (Lst)) ((append (append _qv_38 _qv_39) _qv_40)=(append _qv_38 (append _qv_39 _qv_40))))
	(forall ((Lst)) ((rev (rev _qv_41))=_qv_41))
	(forall ((Nat)) ((nat-to-int (succ _qv_42))=(nat-to-int _qv_42)))
	(forall ((Lst) (Lst)) ((rev (append _qv_43 _qv_44))=(append (rev _qv_43) (rev _qv_44))))
	(forall ((Lst) (Lst)) ((rev (append _qv_43 _qv_44))=(append (rev _qv_44) (rev _qv_43))))

CURRENT SUBGOAL ((rev (append (append (rev (cons _t_46 _t_47)) (cons _v_45 nil)) nil))=(cons _v_45 (cons _t_46 _t_47)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_34))=_qv_34))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rev (append (append (rev (cons _t_46 _t_47)) (cons _v_45 nil)) nil))=(cons _v_45 (cons _t_46 _t_47)))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_35)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rev (append (append (rev (cons _t_46 _t_47)) (cons _v_45 nil)) nil))=(cons _v_45 (cons _t_46 _t_47)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_36 _qv_37)=(append _qv_37 _qv_36)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rev (append (append (rev (cons _t_46 _t_47)) (cons _v_45 nil)) nil))=(cons _v_45 (cons _t_46 _t_47)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_38 _qv_39) _qv_40)=(append _qv_38 (append _qv_39 _qv_40))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rev (append (append (rev (cons _t_46 _t_47)) (cons _v_45 nil)) nil))=(cons _v_45 (cons _t_46 _t_47)))
NOW TESTING (forall ((Lst)) ((rev (rev _qv_41))=_qv_41))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rev (append (append (rev (cons _t_46 _t_47)) (cons _v_45 nil)) nil))=(cons _v_45 (cons _t_46 _t_47)))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_42))=(nat-to-int _qv_42)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rev (append (append (rev (cons _t_46 _t_47)) (cons _v_45 nil)) nil))=(cons _v_45 (cons _t_46 _t_47)))
NOW TESTING (forall ((Lst) (Lst)) ((rev (append _qv_43 _qv_44))=(append (rev _qv_43) (rev _qv_44))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rev (append (append (rev (cons _t_46 _t_47)) (cons _v_45 nil)) nil))=(cons _v_45 (cons _t_46 _t_47)))
NOW TESTING (forall ((Lst) (Lst)) ((rev (append _qv_43 _qv_44))=(append (rev _qv_44) (rev _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rev (append (append (rev (cons _t_46 _t_47)) (cons _v_45 nil)) nil))=(cons _v_45 (cons _t_46 _t_47)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_34))=_qv_34))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rev (append (append (rev (cons _t_46 _t_47)) (cons _v_45 nil)) nil))=(cons _v_45 (cons _t_46 _t_47)))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_35)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rev (append (append (rev (cons _t_46 _t_47)) (cons _v_45 nil)) nil))=(cons _v_45 (cons _t_46 _t_47)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_36 _qv_37)=(append _qv_37 _qv_36)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rev (append (append (rev (cons _t_46 _t_47)) (cons _v_45 nil)) nil))=(cons _v_45 (cons _t_46 _t_47)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_38 _qv_39) _qv_40)=(append _qv_38 (append _qv_39 _qv_40))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rev (append (append (rev (cons _t_46 _t_47)) (cons _v_45 nil)) nil))=(cons _v_45 (cons _t_46 _t_47)))
NOW TESTING (forall ((Lst)) ((rev (rev _qv_41))=_qv_41))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rev (append (append (rev (cons _t_46 _t_47)) (cons _v_45 nil)) nil))=(cons _v_45 (cons _t_46 _t_47)))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_42))=(nat-to-int _qv_42)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rev (append (append (rev (cons _t_46 _t_47)) (cons _v_45 nil)) nil))=(cons _v_45 (cons _t_46 _t_47)))
NOW TESTING (forall ((Lst) (Lst)) ((rev (append _qv_43 _qv_44))=(append (rev _qv_43) (rev _qv_44))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rev (append (append (rev (cons _t_46 _t_47)) (cons _v_45 nil)) nil))=(cons _v_45 (cons _t_46 _t_47)))
NOW TESTING (forall ((Lst) (Lst)) ((rev (append _qv_43 _qv_44))=(append (rev _qv_44) (rev _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rev (append (append (rev _v_32) (cons _v_33 nil)) nil))=(append nil (cons _v_33 _v_32)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_15))=_qv_15))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rev (append (append (rev _v_32) (cons _v_33 nil)) nil))=(append nil (cons _v_33 _v_32)))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_16)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rev (append (append (rev _v_32) (cons _v_33 nil)) nil))=(append nil (cons _v_33 _v_32)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_17 _qv_18)=(append _qv_18 _qv_17)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rev (append (append (rev _v_32) (cons _v_33 nil)) nil))=(append nil (cons _v_33 _v_32)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_19 _qv_20) _qv_21)=(append _qv_19 (append _qv_20 _qv_21))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rev (append (append (rev _v_32) (cons _v_33 nil)) nil))=(append nil (cons _v_33 _v_32)))
NOW TESTING (forall ((Lst)) ((rev (rev _qv_22))=_qv_22))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rev (append (append (rev _v_32) (cons _v_33 nil)) nil))=(append nil (cons _v_33 _v_32)))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_23))=(nat-to-int _qv_23)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rev (append (append (rev _v_32) (cons _v_33 nil)) nil))=(append nil (cons _v_33 _v_32)))
NOW TESTING (forall ((Lst) (Lst)) ((rev (append _qv_24 _qv_25))=(append (rev _qv_24) (rev _qv_25))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rev (append (append (rev _v_32) (cons _v_33 nil)) nil))=(append nil (cons _v_33 _v_32)))
NOW TESTING (forall ((Lst) (Lst)) ((rev (append _qv_24 _qv_25))=(append (rev _qv_25) (rev _qv_24))))
USE ASSUMPTION FAILED


The Knowledge Scheme currently contains the following lemmas:
	(forall ((Nat)) ((succ (succ _qv_34))=_qv_34))
	(forall ((Nat)) (0<=(nat-to-int _qv_35)))
	(forall ((Lst) (Lst)) ((append _qv_36 _qv_37)=(append _qv_37 _qv_36)))
	(forall ((Lst) (Lst) (Lst)) ((append (append _qv_38 _qv_39) _qv_40)=(append _qv_38 (append _qv_39 _qv_40))))
	(forall ((Lst)) ((rev (rev _qv_41))=_qv_41))
	(forall ((Nat)) ((nat-to-int (succ _qv_42))=(nat-to-int _qv_42)))
	(forall ((Lst) (Lst)) ((rev (append _qv_43 _qv_44))=(append (rev _qv_43) (rev _qv_44))))
	(forall ((Lst) (Lst)) ((rev (append _qv_43 _qv_44))=(append (rev _qv_44) (rev _qv_43))))

CURRENT SUBGOAL ((rev (append (append (rev (cons _t_46 _t_47)) (cons _v_45 nil)) nil))=(cons _v_45 (cons _t_46 _t_47)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_34))=_qv_34))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rev (append (append (rev (cons _t_46 _t_47)) (cons _v_45 nil)) nil))=(cons _v_45 (cons _t_46 _t_47)))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_35)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rev (append (append (rev (cons _t_46 _t_47)) (cons _v_45 nil)) nil))=(cons _v_45 (cons _t_46 _t_47)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_36 _qv_37)=(append _qv_37 _qv_36)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rev (append (append (rev (cons _t_46 _t_47)) (cons _v_45 nil)) nil))=(cons _v_45 (cons _t_46 _t_47)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_38 _qv_39) _qv_40)=(append _qv_38 (append _qv_39 _qv_40))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rev (append (append (rev (cons _t_46 _t_47)) (cons _v_45 nil)) nil))=(cons _v_45 (cons _t_46 _t_47)))
NOW TESTING (forall ((Lst)) ((rev (rev _qv_41))=_qv_41))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rev (append (append (rev (cons _t_46 _t_47)) (cons _v_45 nil)) nil))=(cons _v_45 (cons _t_46 _t_47)))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_42))=(nat-to-int _qv_42)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rev (append (append (rev (cons _t_46 _t_47)) (cons _v_45 nil)) nil))=(cons _v_45 (cons _t_46 _t_47)))
NOW TESTING (forall ((Lst) (Lst)) ((rev (append _qv_43 _qv_44))=(append (rev _qv_43) (rev _qv_44))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rev (append (append (rev (cons _t_46 _t_47)) (cons _v_45 nil)) nil))=(cons _v_45 (cons _t_46 _t_47)))
NOW TESTING (forall ((Lst) (Lst)) ((rev (append _qv_43 _qv_44))=(append (rev _qv_44) (rev _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rev (append (append (rev (cons _t_46 _t_47)) (cons _v_45 nil)) nil))=(cons _v_45 (cons _t_46 _t_47)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_34))=_qv_34))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rev (append (append (rev (cons _t_46 _t_47)) (cons _v_45 nil)) nil))=(cons _v_45 (cons _t_46 _t_47)))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_35)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rev (append (append (rev (cons _t_46 _t_47)) (cons _v_45 nil)) nil))=(cons _v_45 (cons _t_46 _t_47)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_36 _qv_37)=(append _qv_37 _qv_36)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rev (append (append (rev (cons _t_46 _t_47)) (cons _v_45 nil)) nil))=(cons _v_45 (cons _t_46 _t_47)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_38 _qv_39) _qv_40)=(append _qv_38 (append _qv_39 _qv_40))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rev (append (append (rev (cons _t_46 _t_47)) (cons _v_45 nil)) nil))=(cons _v_45 (cons _t_46 _t_47)))
NOW TESTING (forall ((Lst)) ((rev (rev _qv_41))=_qv_41))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rev (append (append (rev (cons _t_46 _t_47)) (cons _v_45 nil)) nil))=(cons _v_45 (cons _t_46 _t_47)))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_42))=(nat-to-int _qv_42)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rev (append (append (rev (cons _t_46 _t_47)) (cons _v_45 nil)) nil))=(cons _v_45 (cons _t_46 _t_47)))
NOW TESTING (forall ((Lst) (Lst)) ((rev (append _qv_43 _qv_44))=(append (rev _qv_43) (rev _qv_44))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rev (append (append (rev (cons _t_46 _t_47)) (cons _v_45 nil)) nil))=(cons _v_45 (cons _t_46 _t_47)))
NOW TESTING (forall ((Lst) (Lst)) ((rev (append _qv_43 _qv_44))=(append (rev _qv_44) (rev _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rev (append (append (rev (cons _t_46 _t_47)) (cons _v_45 nil)) nil))=(append nil (cons _v_45 (cons _t_46 _t_47))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_34))=_qv_34))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rev (append (append (rev (cons _t_46 _t_47)) (cons _v_45 nil)) nil))=(append nil (cons _v_45 (cons _t_46 _t_47))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_35)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rev (append (append (rev (cons _t_46 _t_47)) (cons _v_45 nil)) nil))=(append nil (cons _v_45 (cons _t_46 _t_47))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_36 _qv_37)=(append _qv_37 _qv_36)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rev (append (append (rev (cons _t_46 _t_47)) (cons _v_45 nil)) nil))=(append nil (cons _v_45 (cons _t_46 _t_47))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_38 _qv_39) _qv_40)=(append _qv_38 (append _qv_39 _qv_40))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rev (append (append (rev (cons _t_46 _t_47)) (cons _v_45 nil)) nil))=(append nil (cons _v_45 (cons _t_46 _t_47))))
NOW TESTING (forall ((Lst)) ((rev (rev _qv_41))=_qv_41))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rev (append (append (rev (cons _t_46 _t_47)) (cons _v_45 nil)) nil))=(append nil (cons _v_45 (cons _t_46 _t_47))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_42))=(nat-to-int _qv_42)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rev (append (append (rev (cons _t_46 _t_47)) (cons _v_45 nil)) nil))=(append nil (cons _v_45 (cons _t_46 _t_47))))
NOW TESTING (forall ((Lst) (Lst)) ((rev (append _qv_43 _qv_44))=(append (rev _qv_43) (rev _qv_44))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rev (append (append (rev (cons _t_46 _t_47)) (cons _v_45 nil)) nil))=(append nil (cons _v_45 (cons _t_46 _t_47))))
NOW TESTING (forall ((Lst) (Lst)) ((rev (append _qv_43 _qv_44))=(append (rev _qv_44) (rev _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rev (append (append (append (rev _t_47) (cons _t_46 nil)) (cons _v_45 nil)) nil))=(append nil (cons _v_45 (cons _t_46 _t_47))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_34))=_qv_34))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rev (append (append (append (rev _t_47) (cons _t_46 nil)) (cons _v_45 nil)) nil))=(append nil (cons _v_45 (cons _t_46 _t_47))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_35)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rev (append (append (append (rev _t_47) (cons _t_46 nil)) (cons _v_45 nil)) nil))=(append nil (cons _v_45 (cons _t_46 _t_47))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_36 _qv_37)=(append _qv_37 _qv_36)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rev (append (append (append (rev _t_47) (cons _t_46 nil)) (cons _v_45 nil)) nil))=(append nil (cons _v_45 (cons _t_46 _t_47))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_38 _qv_39) _qv_40)=(append _qv_38 (append _qv_39 _qv_40))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rev (append (append (append (rev _t_47) (cons _t_46 nil)) (cons _v_45 nil)) nil))=(append nil (cons _v_45 (cons _t_46 _t_47))))
NOW TESTING (forall ((Lst)) ((rev (rev _qv_41))=_qv_41))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rev (append (append (append (rev _t_47) (cons _t_46 nil)) (cons _v_45 nil)) nil))=(append nil (cons _v_45 (cons _t_46 _t_47))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_42))=(nat-to-int _qv_42)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rev (append (append (append (rev _t_47) (cons _t_46 nil)) (cons _v_45 nil)) nil))=(append nil (cons _v_45 (cons _t_46 _t_47))))
NOW TESTING (forall ((Lst) (Lst)) ((rev (append _qv_43 _qv_44))=(append (rev _qv_43) (rev _qv_44))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rev (append (append (append (rev _t_47) (cons _t_46 nil)) (cons _v_45 nil)) nil))=(append nil (cons _v_45 (cons _t_46 _t_47))))
NOW TESTING (forall ((Lst) (Lst)) ((rev (append _qv_43 _qv_44))=(append (rev _qv_44) (rev _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rev (append (append (append (rev _t_47) (cons _t_46 nil)) (cons _v_45 nil)) nil))=(append nil (cons _v_45 (cons _t_46 _t_47))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_34))=_qv_34))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rev (append (append (append (rev _t_47) (cons _t_46 nil)) (cons _v_45 nil)) nil))=(append nil (cons _v_45 (cons _t_46 _t_47))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_35)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rev (append (append (append (rev _t_47) (cons _t_46 nil)) (cons _v_45 nil)) nil))=(append nil (cons _v_45 (cons _t_46 _t_47))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_36 _qv_37)=(append _qv_37 _qv_36)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rev (append (append (append (rev _t_47) (cons _t_46 nil)) (cons _v_45 nil)) nil))=(append nil (cons _v_45 (cons _t_46 _t_47))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_38 _qv_39) _qv_40)=(append _qv_38 (append _qv_39 _qv_40))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rev (append (append (append (rev _t_47) (cons _t_46 nil)) (cons _v_45 nil)) nil))=(append nil (cons _v_45 (cons _t_46 _t_47))))
NOW TESTING (forall ((Lst)) ((rev (rev _qv_41))=_qv_41))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rev (append (append (append (rev _t_47) (cons _t_46 nil)) (cons _v_45 nil)) nil))=(append nil (cons _v_45 (cons _t_46 _t_47))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_42))=(nat-to-int _qv_42)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rev (append (append (append (rev _t_47) (cons _t_46 nil)) (cons _v_45 nil)) nil))=(append nil (cons _v_45 (cons _t_46 _t_47))))
NOW TESTING (forall ((Lst) (Lst)) ((rev (append _qv_43 _qv_44))=(append (rev _qv_43) (rev _qv_44))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rev (append (append (append (rev _t_47) (cons _t_46 nil)) (cons _v_45 nil)) nil))=(append nil (cons _v_45 (cons _t_46 _t_47))))
NOW TESTING (forall ((Lst) (Lst)) ((rev (append _qv_43 _qv_44))=(append (rev _qv_44) (rev _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rev (append (append (rev (cons _t_46 _t_47)) (cons _v_45 nil)) nil))=(append nil (cons _v_45 (cons _t_46 _t_47))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_34))=_qv_34))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rev (append (append (rev (cons _t_46 _t_47)) (cons _v_45 nil)) nil))=(append nil (cons _v_45 (cons _t_46 _t_47))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_35)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rev (append (append (rev (cons _t_46 _t_47)) (cons _v_45 nil)) nil))=(append nil (cons _v_45 (cons _t_46 _t_47))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_36 _qv_37)=(append _qv_37 _qv_36)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rev (append (append (rev (cons _t_46 _t_47)) (cons _v_45 nil)) nil))=(append nil (cons _v_45 (cons _t_46 _t_47))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_38 _qv_39) _qv_40)=(append _qv_38 (append _qv_39 _qv_40))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rev (append (append (rev (cons _t_46 _t_47)) (cons _v_45 nil)) nil))=(append nil (cons _v_45 (cons _t_46 _t_47))))
NOW TESTING (forall ((Lst)) ((rev (rev _qv_41))=_qv_41))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rev (append (append (rev (cons _t_46 _t_47)) (cons _v_45 nil)) nil))=(append nil (cons _v_45 (cons _t_46 _t_47))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_42))=(nat-to-int _qv_42)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rev (append (append (rev (cons _t_46 _t_47)) (cons _v_45 nil)) nil))=(append nil (cons _v_45 (cons _t_46 _t_47))))
NOW TESTING (forall ((Lst) (Lst)) ((rev (append _qv_43 _qv_44))=(append (rev _qv_43) (rev _qv_44))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rev (append (append (rev (cons _t_46 _t_47)) (cons _v_45 nil)) nil))=(append nil (cons _v_45 (cons _t_46 _t_47))))
NOW TESTING (forall ((Lst) (Lst)) ((rev (append _qv_43 _qv_44))=(append (rev _qv_44) (rev _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rev (append (append (rev (cons _t_46 _t_47)) (cons _v_45 nil)) nil))=(cons _v_45 (cons _t_46 _t_47)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_34))=_qv_34))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rev (append (append (rev (cons _t_46 _t_47)) (cons _v_45 nil)) nil))=(cons _v_45 (cons _t_46 _t_47)))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_35)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rev (append (append (rev (cons _t_46 _t_47)) (cons _v_45 nil)) nil))=(cons _v_45 (cons _t_46 _t_47)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_36 _qv_37)=(append _qv_37 _qv_36)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rev (append (append (rev (cons _t_46 _t_47)) (cons _v_45 nil)) nil))=(cons _v_45 (cons _t_46 _t_47)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_38 _qv_39) _qv_40)=(append _qv_38 (append _qv_39 _qv_40))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rev (append (append (rev (cons _t_46 _t_47)) (cons _v_45 nil)) nil))=(cons _v_45 (cons _t_46 _t_47)))
NOW TESTING (forall ((Lst)) ((rev (rev _qv_41))=_qv_41))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rev (append (append (rev (cons _t_46 _t_47)) (cons _v_45 nil)) nil))=(cons _v_45 (cons _t_46 _t_47)))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_42))=(nat-to-int _qv_42)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rev (append (append (rev (cons _t_46 _t_47)) (cons _v_45 nil)) nil))=(cons _v_45 (cons _t_46 _t_47)))
NOW TESTING (forall ((Lst) (Lst)) ((rev (append _qv_43 _qv_44))=(append (rev _qv_43) (rev _qv_44))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rev (append (append (rev (cons _t_46 _t_47)) (cons _v_45 nil)) nil))=(cons _v_45 (cons _t_46 _t_47)))
NOW TESTING (forall ((Lst) (Lst)) ((rev (append _qv_43 _qv_44))=(append (rev _qv_44) (rev _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rev (append (append (rev (cons _t_46 _t_47)) (cons _v_45 nil)) nil))=(cons _v_45 (cons _t_46 _t_47)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_34))=_qv_34))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rev (append (append (rev (cons _t_46 _t_47)) (cons _v_45 nil)) nil))=(cons _v_45 (cons _t_46 _t_47)))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_35)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rev (append (append (rev (cons _t_46 _t_47)) (cons _v_45 nil)) nil))=(cons _v_45 (cons _t_46 _t_47)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_36 _qv_37)=(append _qv_37 _qv_36)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rev (append (append (rev (cons _t_46 _t_47)) (cons _v_45 nil)) nil))=(cons _v_45 (cons _t_46 _t_47)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_38 _qv_39) _qv_40)=(append _qv_38 (append _qv_39 _qv_40))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rev (append (append (rev (cons _t_46 _t_47)) (cons _v_45 nil)) nil))=(cons _v_45 (cons _t_46 _t_47)))
NOW TESTING (forall ((Lst)) ((rev (rev _qv_41))=_qv_41))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rev (append (append (rev (cons _t_46 _t_47)) (cons _v_45 nil)) nil))=(cons _v_45 (cons _t_46 _t_47)))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_42))=(nat-to-int _qv_42)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rev (append (append (rev (cons _t_46 _t_47)) (cons _v_45 nil)) nil))=(cons _v_45 (cons _t_46 _t_47)))
NOW TESTING (forall ((Lst) (Lst)) ((rev (append _qv_43 _qv_44))=(append (rev _qv_43) (rev _qv_44))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rev (append (append (rev (cons _t_46 _t_47)) (cons _v_45 nil)) nil))=(cons _v_45 (cons _t_46 _t_47)))
NOW TESTING (forall ((Lst) (Lst)) ((rev (append _qv_43 _qv_44))=(append (rev _qv_44) (rev _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rev (append (append (rev (cons _t_46 _t_47)) (cons _v_45 nil)) nil))=(append nil (cons _v_45 (cons _t_46 _t_47))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_34))=_qv_34))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rev (append (append (rev (cons _t_46 _t_47)) (cons _v_45 nil)) nil))=(append nil (cons _v_45 (cons _t_46 _t_47))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_35)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rev (append (append (rev (cons _t_46 _t_47)) (cons _v_45 nil)) nil))=(append nil (cons _v_45 (cons _t_46 _t_47))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_36 _qv_37)=(append _qv_37 _qv_36)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rev (append (append (rev (cons _t_46 _t_47)) (cons _v_45 nil)) nil))=(append nil (cons _v_45 (cons _t_46 _t_47))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_38 _qv_39) _qv_40)=(append _qv_38 (append _qv_39 _qv_40))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rev (append (append (rev (cons _t_46 _t_47)) (cons _v_45 nil)) nil))=(append nil (cons _v_45 (cons _t_46 _t_47))))
NOW TESTING (forall ((Lst)) ((rev (rev _qv_41))=_qv_41))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rev (append (append (rev (cons _t_46 _t_47)) (cons _v_45 nil)) nil))=(append nil (cons _v_45 (cons _t_46 _t_47))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_42))=(nat-to-int _qv_42)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rev (append (append (rev (cons _t_46 _t_47)) (cons _v_45 nil)) nil))=(append nil (cons _v_45 (cons _t_46 _t_47))))
NOW TESTING (forall ((Lst) (Lst)) ((rev (append _qv_43 _qv_44))=(append (rev _qv_43) (rev _qv_44))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rev (append (append (rev (cons _t_46 _t_47)) (cons _v_45 nil)) nil))=(append nil (cons _v_45 (cons _t_46 _t_47))))
NOW TESTING (forall ((Lst) (Lst)) ((rev (append _qv_43 _qv_44))=(append (rev _qv_44) (rev _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rev (append (append (append (rev _t_47) (cons _t_46 nil)) (cons _v_45 nil)) nil))=(append nil (cons _v_45 (cons _t_46 _t_47))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_34))=_qv_34))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rev (append (append (append (rev _t_47) (cons _t_46 nil)) (cons _v_45 nil)) nil))=(append nil (cons _v_45 (cons _t_46 _t_47))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_35)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rev (append (append (append (rev _t_47) (cons _t_46 nil)) (cons _v_45 nil)) nil))=(append nil (cons _v_45 (cons _t_46 _t_47))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_36 _qv_37)=(append _qv_37 _qv_36)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rev (append (append (append (rev _t_47) (cons _t_46 nil)) (cons _v_45 nil)) nil))=(append nil (cons _v_45 (cons _t_46 _t_47))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_38 _qv_39) _qv_40)=(append _qv_38 (append _qv_39 _qv_40))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rev (append (append (append (rev _t_47) (cons _t_46 nil)) (cons _v_45 nil)) nil))=(append nil (cons _v_45 (cons _t_46 _t_47))))
NOW TESTING (forall ((Lst)) ((rev (rev _qv_41))=_qv_41))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rev (append (append (append (rev _t_47) (cons _t_46 nil)) (cons _v_45 nil)) nil))=(append nil (cons _v_45 (cons _t_46 _t_47))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_42))=(nat-to-int _qv_42)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rev (append (append (append (rev _t_47) (cons _t_46 nil)) (cons _v_45 nil)) nil))=(append nil (cons _v_45 (cons _t_46 _t_47))))
NOW TESTING (forall ((Lst) (Lst)) ((rev (append _qv_43 _qv_44))=(append (rev _qv_43) (rev _qv_44))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rev (append (append (append (rev _t_47) (cons _t_46 nil)) (cons _v_45 nil)) nil))=(append nil (cons _v_45 (cons _t_46 _t_47))))
NOW TESTING (forall ((Lst) (Lst)) ((rev (append _qv_43 _qv_44))=(append (rev _qv_44) (rev _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rev (append (append (append (rev _t_47) (cons _t_46 nil)) (cons _v_45 nil)) nil))=(append nil (cons _v_45 (cons _t_46 _t_47))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_34))=_qv_34))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rev (append (append (append (rev _t_47) (cons _t_46 nil)) (cons _v_45 nil)) nil))=(append nil (cons _v_45 (cons _t_46 _t_47))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_35)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rev (append (append (append (rev _t_47) (cons _t_46 nil)) (cons _v_45 nil)) nil))=(append nil (cons _v_45 (cons _t_46 _t_47))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_36 _qv_37)=(append _qv_37 _qv_36)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rev (append (append (append (rev _t_47) (cons _t_46 nil)) (cons _v_45 nil)) nil))=(append nil (cons _v_45 (cons _t_46 _t_47))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_38 _qv_39) _qv_40)=(append _qv_38 (append _qv_39 _qv_40))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rev (append (append (append (rev _t_47) (cons _t_46 nil)) (cons _v_45 nil)) nil))=(append nil (cons _v_45 (cons _t_46 _t_47))))
NOW TESTING (forall ((Lst)) ((rev (rev _qv_41))=_qv_41))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rev (append (append (append (rev _t_47) (cons _t_46 nil)) (cons _v_45 nil)) nil))=(append nil (cons _v_45 (cons _t_46 _t_47))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_42))=(nat-to-int _qv_42)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rev (append (append (append (rev _t_47) (cons _t_46 nil)) (cons _v_45 nil)) nil))=(append nil (cons _v_45 (cons _t_46 _t_47))))
NOW TESTING (forall ((Lst) (Lst)) ((rev (append _qv_43 _qv_44))=(append (rev _qv_43) (rev _qv_44))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rev (append (append (append (rev _t_47) (cons _t_46 nil)) (cons _v_45 nil)) nil))=(append nil (cons _v_45 (cons _t_46 _t_47))))
NOW TESTING (forall ((Lst) (Lst)) ((rev (append _qv_43 _qv_44))=(append (rev _qv_44) (rev _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rev (append (append (rev (cons _t_46 _t_47)) (cons _v_45 nil)) nil))=(append nil (cons _v_45 (cons _t_46 _t_47))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_34))=_qv_34))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rev (append (append (rev (cons _t_46 _t_47)) (cons _v_45 nil)) nil))=(append nil (cons _v_45 (cons _t_46 _t_47))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_35)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rev (append (append (rev (cons _t_46 _t_47)) (cons _v_45 nil)) nil))=(append nil (cons _v_45 (cons _t_46 _t_47))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_36 _qv_37)=(append _qv_37 _qv_36)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rev (append (append (rev (cons _t_46 _t_47)) (cons _v_45 nil)) nil))=(append nil (cons _v_45 (cons _t_46 _t_47))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_38 _qv_39) _qv_40)=(append _qv_38 (append _qv_39 _qv_40))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rev (append (append (rev (cons _t_46 _t_47)) (cons _v_45 nil)) nil))=(append nil (cons _v_45 (cons _t_46 _t_47))))
NOW TESTING (forall ((Lst)) ((rev (rev _qv_41))=_qv_41))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rev (append (append (rev (cons _t_46 _t_47)) (cons _v_45 nil)) nil))=(append nil (cons _v_45 (cons _t_46 _t_47))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_42))=(nat-to-int _qv_42)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rev (append (append (rev (cons _t_46 _t_47)) (cons _v_45 nil)) nil))=(append nil (cons _v_45 (cons _t_46 _t_47))))
NOW TESTING (forall ((Lst) (Lst)) ((rev (append _qv_43 _qv_44))=(append (rev _qv_43) (rev _qv_44))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rev (append (append (rev (cons _t_46 _t_47)) (cons _v_45 nil)) nil))=(append nil (cons _v_45 (cons _t_46 _t_47))))
NOW TESTING (forall ((Lst) (Lst)) ((rev (append _qv_43 _qv_44))=(append (rev _qv_44) (rev _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rev (append (append (rev _v_48) (cons zero nil)) nil))=(append nil (cons zero _v_48)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_34))=_qv_34))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rev (append (append (rev _v_48) (cons zero nil)) nil))=(append nil (cons zero _v_48)))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_35)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rev (append (append (rev _v_48) (cons zero nil)) nil))=(append nil (cons zero _v_48)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_36 _qv_37)=(append _qv_37 _qv_36)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rev (append (append (rev _v_48) (cons zero nil)) nil))=(append nil (cons zero _v_48)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_38 _qv_39) _qv_40)=(append _qv_38 (append _qv_39 _qv_40))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rev (append (append (rev _v_48) (cons zero nil)) nil))=(append nil (cons zero _v_48)))
NOW TESTING (forall ((Lst)) ((rev (rev _qv_41))=_qv_41))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rev (append (append (rev _v_48) (cons zero nil)) nil))=(append nil (cons zero _v_48)))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_42))=(nat-to-int _qv_42)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rev (append (append (rev _v_48) (cons zero nil)) nil))=(append nil (cons zero _v_48)))
NOW TESTING (forall ((Lst) (Lst)) ((rev (append _qv_43 _qv_44))=(append (rev _qv_43) (rev _qv_44))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rev (append (append (rev _v_48) (cons zero nil)) nil))=(append nil (cons zero _v_48)))
NOW TESTING (forall ((Lst) (Lst)) ((rev (append _qv_43 _qv_44))=(append (rev _qv_44) (rev _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rev (append (append (rev _v_48) (cons zero nil)) nil))=(append nil (cons zero _v_48)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_34))=_qv_34))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rev (append (append (rev _v_48) (cons zero nil)) nil))=(append nil (cons zero _v_48)))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_35)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rev (append (append (rev _v_48) (cons zero nil)) nil))=(append nil (cons zero _v_48)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_36 _qv_37)=(append _qv_37 _qv_36)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rev (append (append (rev _v_48) (cons zero nil)) nil))=(append nil (cons zero _v_48)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_38 _qv_39) _qv_40)=(append _qv_38 (append _qv_39 _qv_40))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rev (append (append (rev _v_48) (cons zero nil)) nil))=(append nil (cons zero _v_48)))
NOW TESTING (forall ((Lst)) ((rev (rev _qv_41))=_qv_41))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rev (append (append (rev _v_48) (cons zero nil)) nil))=(append nil (cons zero _v_48)))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_42))=(nat-to-int _qv_42)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rev (append (append (rev _v_48) (cons zero nil)) nil))=(append nil (cons zero _v_48)))
NOW TESTING (forall ((Lst) (Lst)) ((rev (append _qv_43 _qv_44))=(append (rev _qv_43) (rev _qv_44))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rev (append (append (rev _v_48) (cons zero nil)) nil))=(append nil (cons zero _v_48)))
NOW TESTING (forall ((Lst) (Lst)) ((rev (append _qv_43 _qv_44))=(append (rev _qv_44) (rev _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rev (append (append (rev _v_32) (cons _v_33 nil)) nil))=(append (rev nil) (cons _v_33 _v_32)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_15))=_qv_15))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rev (append (append (rev _v_32) (cons _v_33 nil)) nil))=(append (rev nil) (cons _v_33 _v_32)))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_16)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rev (append (append (rev _v_32) (cons _v_33 nil)) nil))=(append (rev nil) (cons _v_33 _v_32)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_17 _qv_18)=(append _qv_18 _qv_17)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rev (append (append (rev _v_32) (cons _v_33 nil)) nil))=(append (rev nil) (cons _v_33 _v_32)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_19 _qv_20) _qv_21)=(append _qv_19 (append _qv_20 _qv_21))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rev (append (append (rev _v_32) (cons _v_33 nil)) nil))=(append (rev nil) (cons _v_33 _v_32)))
NOW TESTING (forall ((Lst)) ((rev (rev _qv_22))=_qv_22))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rev (append (append (rev _v_32) (cons _v_33 nil)) nil))=(append (rev nil) (cons _v_33 _v_32)))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_23))=(nat-to-int _qv_23)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rev (append (append (rev _v_32) (cons _v_33 nil)) nil))=(append (rev nil) (cons _v_33 _v_32)))
NOW TESTING (forall ((Lst) (Lst)) ((rev (append _qv_24 _qv_25))=(append (rev _qv_24) (rev _qv_25))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rev (append (append (rev _v_32) (cons _v_33 nil)) nil))=(append (rev nil) (cons _v_33 _v_32)))
NOW TESTING (forall ((Lst) (Lst)) ((rev (append _qv_24 _qv_25))=(append (rev _qv_25) (rev _qv_24))))
USE ASSUMPTION FAILED


The Knowledge Scheme currently contains the following lemmas:
	(forall ((Nat)) ((succ (succ _qv_34))=_qv_34))
	(forall ((Nat)) (0<=(nat-to-int _qv_35)))
	(forall ((Lst) (Lst)) ((append _qv_36 _qv_37)=(append _qv_37 _qv_36)))
	(forall ((Lst) (Lst) (Lst)) ((append (append _qv_38 _qv_39) _qv_40)=(append _qv_38 (append _qv_39 _qv_40))))
	(forall ((Lst)) ((rev (rev _qv_41))=_qv_41))
	(forall ((Nat)) ((nat-to-int (succ _qv_42))=(nat-to-int _qv_42)))
	(forall ((Lst) (Lst)) ((rev (append _qv_43 _qv_44))=(append (rev _qv_43) (rev _qv_44))))
	(forall ((Lst) (Lst)) ((rev (append _qv_43 _qv_44))=(append (rev _qv_44) (rev _qv_43))))

CURRENT SUBGOAL ((rev (append (append (rev (cons _t_46 _t_47)) (cons _v_45 nil)) nil))=(cons _v_45 (cons _t_46 _t_47)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_34))=_qv_34))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rev (append (append (rev (cons _t_46 _t_47)) (cons _v_45 nil)) nil))=(cons _v_45 (cons _t_46 _t_47)))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_35)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rev (append (append (rev (cons _t_46 _t_47)) (cons _v_45 nil)) nil))=(cons _v_45 (cons _t_46 _t_47)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_36 _qv_37)=(append _qv_37 _qv_36)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rev (append (append (rev (cons _t_46 _t_47)) (cons _v_45 nil)) nil))=(cons _v_45 (cons _t_46 _t_47)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_38 _qv_39) _qv_40)=(append _qv_38 (append _qv_39 _qv_40))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rev (append (append (rev (cons _t_46 _t_47)) (cons _v_45 nil)) nil))=(cons _v_45 (cons _t_46 _t_47)))
NOW TESTING (forall ((Lst)) ((rev (rev _qv_41))=_qv_41))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rev (append (append (rev (cons _t_46 _t_47)) (cons _v_45 nil)) nil))=(cons _v_45 (cons _t_46 _t_47)))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_42))=(nat-to-int _qv_42)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rev (append (append (rev (cons _t_46 _t_47)) (cons _v_45 nil)) nil))=(cons _v_45 (cons _t_46 _t_47)))
NOW TESTING (forall ((Lst) (Lst)) ((rev (append _qv_43 _qv_44))=(append (rev _qv_43) (rev _qv_44))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rev (append (append (rev (cons _t_46 _t_47)) (cons _v_45 nil)) nil))=(cons _v_45 (cons _t_46 _t_47)))
NOW TESTING (forall ((Lst) (Lst)) ((rev (append _qv_43 _qv_44))=(append (rev _qv_44) (rev _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rev (append (append (rev (cons _t_46 _t_47)) (cons _v_45 nil)) nil))=(cons _v_45 (cons _t_46 _t_47)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_34))=_qv_34))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rev (append (append (rev (cons _t_46 _t_47)) (cons _v_45 nil)) nil))=(cons _v_45 (cons _t_46 _t_47)))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_35)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rev (append (append (rev (cons _t_46 _t_47)) (cons _v_45 nil)) nil))=(cons _v_45 (cons _t_46 _t_47)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_36 _qv_37)=(append _qv_37 _qv_36)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rev (append (append (rev (cons _t_46 _t_47)) (cons _v_45 nil)) nil))=(cons _v_45 (cons _t_46 _t_47)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_38 _qv_39) _qv_40)=(append _qv_38 (append _qv_39 _qv_40))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rev (append (append (rev (cons _t_46 _t_47)) (cons _v_45 nil)) nil))=(cons _v_45 (cons _t_46 _t_47)))
NOW TESTING (forall ((Lst)) ((rev (rev _qv_41))=_qv_41))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rev (append (append (rev (cons _t_46 _t_47)) (cons _v_45 nil)) nil))=(cons _v_45 (cons _t_46 _t_47)))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_42))=(nat-to-int _qv_42)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rev (append (append (rev (cons _t_46 _t_47)) (cons _v_45 nil)) nil))=(cons _v_45 (cons _t_46 _t_47)))
NOW TESTING (forall ((Lst) (Lst)) ((rev (append _qv_43 _qv_44))=(append (rev _qv_43) (rev _qv_44))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rev (append (append (rev (cons _t_46 _t_47)) (cons _v_45 nil)) nil))=(cons _v_45 (cons _t_46 _t_47)))
NOW TESTING (forall ((Lst) (Lst)) ((rev (append _qv_43 _qv_44))=(append (rev _qv_44) (rev _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rev (append (append (rev _v_32) (cons _v_33 nil)) nil))=(append nil (cons _v_33 _v_32)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_15))=_qv_15))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rev (append (append (rev _v_32) (cons _v_33 nil)) nil))=(append nil (cons _v_33 _v_32)))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_16)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rev (append (append (rev _v_32) (cons _v_33 nil)) nil))=(append nil (cons _v_33 _v_32)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_17 _qv_18)=(append _qv_18 _qv_17)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rev (append (append (rev _v_32) (cons _v_33 nil)) nil))=(append nil (cons _v_33 _v_32)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_19 _qv_20) _qv_21)=(append _qv_19 (append _qv_20 _qv_21))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rev (append (append (rev _v_32) (cons _v_33 nil)) nil))=(append nil (cons _v_33 _v_32)))
NOW TESTING (forall ((Lst)) ((rev (rev _qv_22))=_qv_22))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rev (append (append (rev _v_32) (cons _v_33 nil)) nil))=(append nil (cons _v_33 _v_32)))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_23))=(nat-to-int _qv_23)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rev (append (append (rev _v_32) (cons _v_33 nil)) nil))=(append nil (cons _v_33 _v_32)))
NOW TESTING (forall ((Lst) (Lst)) ((rev (append _qv_24 _qv_25))=(append (rev _qv_24) (rev _qv_25))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rev (append (append (rev _v_32) (cons _v_33 nil)) nil))=(append nil (cons _v_33 _v_32)))
NOW TESTING (forall ((Lst) (Lst)) ((rev (append _qv_24 _qv_25))=(append (rev _qv_25) (rev _qv_24))))
USE ASSUMPTION FAILED


The Knowledge Scheme currently contains the following lemmas:
	(forall ((Nat)) ((succ (succ _qv_34))=_qv_34))
	(forall ((Nat)) (0<=(nat-to-int _qv_35)))
	(forall ((Lst) (Lst)) ((append _qv_36 _qv_37)=(append _qv_37 _qv_36)))
	(forall ((Lst) (Lst) (Lst)) ((append (append _qv_38 _qv_39) _qv_40)=(append _qv_38 (append _qv_39 _qv_40))))
	(forall ((Lst)) ((rev (rev _qv_41))=_qv_41))
	(forall ((Nat)) ((nat-to-int (succ _qv_42))=(nat-to-int _qv_42)))
	(forall ((Lst) (Lst)) ((rev (append _qv_43 _qv_44))=(append (rev _qv_43) (rev _qv_44))))
	(forall ((Lst) (Lst)) ((rev (append _qv_43 _qv_44))=(append (rev _qv_44) (rev _qv_43))))

CURRENT SUBGOAL ((rev (append (append (rev (cons _t_46 _t_47)) (cons _v_45 nil)) nil))=(cons _v_45 (cons _t_46 _t_47)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_34))=_qv_34))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rev (append (append (rev (cons _t_46 _t_47)) (cons _v_45 nil)) nil))=(cons _v_45 (cons _t_46 _t_47)))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_35)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rev (append (append (rev (cons _t_46 _t_47)) (cons _v_45 nil)) nil))=(cons _v_45 (cons _t_46 _t_47)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_36 _qv_37)=(append _qv_37 _qv_36)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rev (append (append (rev (cons _t_46 _t_47)) (cons _v_45 nil)) nil))=(cons _v_45 (cons _t_46 _t_47)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_38 _qv_39) _qv_40)=(append _qv_38 (append _qv_39 _qv_40))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rev (append (append (rev (cons _t_46 _t_47)) (cons _v_45 nil)) nil))=(cons _v_45 (cons _t_46 _t_47)))
NOW TESTING (forall ((Lst)) ((rev (rev _qv_41))=_qv_41))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rev (append (append (rev (cons _t_46 _t_47)) (cons _v_45 nil)) nil))=(cons _v_45 (cons _t_46 _t_47)))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_42))=(nat-to-int _qv_42)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rev (append (append (rev (cons _t_46 _t_47)) (cons _v_45 nil)) nil))=(cons _v_45 (cons _t_46 _t_47)))
NOW TESTING (forall ((Lst) (Lst)) ((rev (append _qv_43 _qv_44))=(append (rev _qv_43) (rev _qv_44))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rev (append (append (rev (cons _t_46 _t_47)) (cons _v_45 nil)) nil))=(cons _v_45 (cons _t_46 _t_47)))
NOW TESTING (forall ((Lst) (Lst)) ((rev (append _qv_43 _qv_44))=(append (rev _qv_44) (rev _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rev (append (append (rev (cons _t_46 _t_47)) (cons _v_45 nil)) nil))=(cons _v_45 (cons _t_46 _t_47)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_34))=_qv_34))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rev (append (append (rev (cons _t_46 _t_47)) (cons _v_45 nil)) nil))=(cons _v_45 (cons _t_46 _t_47)))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_35)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rev (append (append (rev (cons _t_46 _t_47)) (cons _v_45 nil)) nil))=(cons _v_45 (cons _t_46 _t_47)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_36 _qv_37)=(append _qv_37 _qv_36)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rev (append (append (rev (cons _t_46 _t_47)) (cons _v_45 nil)) nil))=(cons _v_45 (cons _t_46 _t_47)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_38 _qv_39) _qv_40)=(append _qv_38 (append _qv_39 _qv_40))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rev (append (append (rev (cons _t_46 _t_47)) (cons _v_45 nil)) nil))=(cons _v_45 (cons _t_46 _t_47)))
NOW TESTING (forall ((Lst)) ((rev (rev _qv_41))=_qv_41))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rev (append (append (rev (cons _t_46 _t_47)) (cons _v_45 nil)) nil))=(cons _v_45 (cons _t_46 _t_47)))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_42))=(nat-to-int _qv_42)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rev (append (append (rev (cons _t_46 _t_47)) (cons _v_45 nil)) nil))=(cons _v_45 (cons _t_46 _t_47)))
NOW TESTING (forall ((Lst) (Lst)) ((rev (append _qv_43 _qv_44))=(append (rev _qv_43) (rev _qv_44))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rev (append (append (rev (cons _t_46 _t_47)) (cons _v_45 nil)) nil))=(cons _v_45 (cons _t_46 _t_47)))
NOW TESTING (forall ((Lst) (Lst)) ((rev (append _qv_43 _qv_44))=(append (rev _qv_44) (rev _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rev (append (append (rev _v_32) (cons _v_33 nil)) nil))=(append nil (cons _v_33 _v_32)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_15))=_qv_15))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rev (append (append (rev _v_32) (cons _v_33 nil)) nil))=(append nil (cons _v_33 _v_32)))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_16)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rev (append (append (rev _v_32) (cons _v_33 nil)) nil))=(append nil (cons _v_33 _v_32)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_17 _qv_18)=(append _qv_18 _qv_17)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rev (append (append (rev _v_32) (cons _v_33 nil)) nil))=(append nil (cons _v_33 _v_32)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_19 _qv_20) _qv_21)=(append _qv_19 (append _qv_20 _qv_21))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rev (append (append (rev _v_32) (cons _v_33 nil)) nil))=(append nil (cons _v_33 _v_32)))
NOW TESTING (forall ((Lst)) ((rev (rev _qv_22))=_qv_22))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rev (append (append (rev _v_32) (cons _v_33 nil)) nil))=(append nil (cons _v_33 _v_32)))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_23))=(nat-to-int _qv_23)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rev (append (append (rev _v_32) (cons _v_33 nil)) nil))=(append nil (cons _v_33 _v_32)))
NOW TESTING (forall ((Lst) (Lst)) ((rev (append _qv_24 _qv_25))=(append (rev _qv_24) (rev _qv_25))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rev (append (append (rev _v_32) (cons _v_33 nil)) nil))=(append nil (cons _v_33 _v_32)))
NOW TESTING (forall ((Lst) (Lst)) ((rev (append _qv_24 _qv_25))=(append (rev _qv_25) (rev _qv_24))))
USE ASSUMPTION FAILED


The Knowledge Scheme currently contains the following lemmas:
	(forall ((Nat)) ((succ (succ _qv_34))=_qv_34))
	(forall ((Nat)) (0<=(nat-to-int _qv_35)))
	(forall ((Lst) (Lst)) ((append _qv_36 _qv_37)=(append _qv_37 _qv_36)))
	(forall ((Lst) (Lst) (Lst)) ((append (append _qv_38 _qv_39) _qv_40)=(append _qv_38 (append _qv_39 _qv_40))))
	(forall ((Lst)) ((rev (rev _qv_41))=_qv_41))
	(forall ((Nat)) ((nat-to-int (succ _qv_42))=(nat-to-int _qv_42)))
	(forall ((Lst) (Lst)) ((rev (append _qv_43 _qv_44))=(append (rev _qv_43) (rev _qv_44))))
	(forall ((Lst) (Lst)) ((rev (append _qv_43 _qv_44))=(append (rev _qv_44) (rev _qv_43))))

CURRENT SUBGOAL ((rev (append (append (rev (cons _t_46 _t_47)) (cons _v_45 nil)) nil))=(cons _v_45 (cons _t_46 _t_47)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_34))=_qv_34))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rev (append (append (rev (cons _t_46 _t_47)) (cons _v_45 nil)) nil))=(cons _v_45 (cons _t_46 _t_47)))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_35)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rev (append (append (rev (cons _t_46 _t_47)) (cons _v_45 nil)) nil))=(cons _v_45 (cons _t_46 _t_47)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_36 _qv_37)=(append _qv_37 _qv_36)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rev (append (append (rev (cons _t_46 _t_47)) (cons _v_45 nil)) nil))=(cons _v_45 (cons _t_46 _t_47)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_38 _qv_39) _qv_40)=(append _qv_38 (append _qv_39 _qv_40))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rev (append (append (rev (cons _t_46 _t_47)) (cons _v_45 nil)) nil))=(cons _v_45 (cons _t_46 _t_47)))
NOW TESTING (forall ((Lst)) ((rev (rev _qv_41))=_qv_41))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rev (append (append (rev (cons _t_46 _t_47)) (cons _v_45 nil)) nil))=(cons _v_45 (cons _t_46 _t_47)))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_42))=(nat-to-int _qv_42)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rev (append (append (rev (cons _t_46 _t_47)) (cons _v_45 nil)) nil))=(cons _v_45 (cons _t_46 _t_47)))
NOW TESTING (forall ((Lst) (Lst)) ((rev (append _qv_43 _qv_44))=(append (rev _qv_43) (rev _qv_44))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rev (append (append (rev (cons _t_46 _t_47)) (cons _v_45 nil)) nil))=(cons _v_45 (cons _t_46 _t_47)))
NOW TESTING (forall ((Lst) (Lst)) ((rev (append _qv_43 _qv_44))=(append (rev _qv_44) (rev _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rev (append (append (rev (cons _t_46 _t_47)) (cons _v_45 nil)) nil))=(cons _v_45 (cons _t_46 _t_47)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_34))=_qv_34))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rev (append (append (rev (cons _t_46 _t_47)) (cons _v_45 nil)) nil))=(cons _v_45 (cons _t_46 _t_47)))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_35)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rev (append (append (rev (cons _t_46 _t_47)) (cons _v_45 nil)) nil))=(cons _v_45 (cons _t_46 _t_47)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_36 _qv_37)=(append _qv_37 _qv_36)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rev (append (append (rev (cons _t_46 _t_47)) (cons _v_45 nil)) nil))=(cons _v_45 (cons _t_46 _t_47)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_38 _qv_39) _qv_40)=(append _qv_38 (append _qv_39 _qv_40))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rev (append (append (rev (cons _t_46 _t_47)) (cons _v_45 nil)) nil))=(cons _v_45 (cons _t_46 _t_47)))
NOW TESTING (forall ((Lst)) ((rev (rev _qv_41))=_qv_41))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rev (append (append (rev (cons _t_46 _t_47)) (cons _v_45 nil)) nil))=(cons _v_45 (cons _t_46 _t_47)))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_42))=(nat-to-int _qv_42)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rev (append (append (rev (cons _t_46 _t_47)) (cons _v_45 nil)) nil))=(cons _v_45 (cons _t_46 _t_47)))
NOW TESTING (forall ((Lst) (Lst)) ((rev (append _qv_43 _qv_44))=(append (rev _qv_43) (rev _qv_44))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rev (append (append (rev (cons _t_46 _t_47)) (cons _v_45 nil)) nil))=(cons _v_45 (cons _t_46 _t_47)))
NOW TESTING (forall ((Lst) (Lst)) ((rev (append _qv_43 _qv_44))=(append (rev _qv_44) (rev _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rev (append (append (rev (cons _t_46 _t_47)) (cons _v_45 nil)) nil))=(append nil (cons _v_45 (cons _t_46 _t_47))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_34))=_qv_34))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rev (append (append (rev (cons _t_46 _t_47)) (cons _v_45 nil)) nil))=(append nil (cons _v_45 (cons _t_46 _t_47))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_35)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rev (append (append (rev (cons _t_46 _t_47)) (cons _v_45 nil)) nil))=(append nil (cons _v_45 (cons _t_46 _t_47))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_36 _qv_37)=(append _qv_37 _qv_36)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rev (append (append (rev (cons _t_46 _t_47)) (cons _v_45 nil)) nil))=(append nil (cons _v_45 (cons _t_46 _t_47))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_38 _qv_39) _qv_40)=(append _qv_38 (append _qv_39 _qv_40))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rev (append (append (rev (cons _t_46 _t_47)) (cons _v_45 nil)) nil))=(append nil (cons _v_45 (cons _t_46 _t_47))))
NOW TESTING (forall ((Lst)) ((rev (rev _qv_41))=_qv_41))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rev (append (append (rev (cons _t_46 _t_47)) (cons _v_45 nil)) nil))=(append nil (cons _v_45 (cons _t_46 _t_47))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_42))=(nat-to-int _qv_42)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rev (append (append (rev (cons _t_46 _t_47)) (cons _v_45 nil)) nil))=(append nil (cons _v_45 (cons _t_46 _t_47))))
NOW TESTING (forall ((Lst) (Lst)) ((rev (append _qv_43 _qv_44))=(append (rev _qv_43) (rev _qv_44))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rev (append (append (rev (cons _t_46 _t_47)) (cons _v_45 nil)) nil))=(append nil (cons _v_45 (cons _t_46 _t_47))))
NOW TESTING (forall ((Lst) (Lst)) ((rev (append _qv_43 _qv_44))=(append (rev _qv_44) (rev _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rev (append (append (append (rev _t_47) (cons _t_46 nil)) (cons _v_45 nil)) nil))=(append nil (cons _v_45 (cons _t_46 _t_47))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_34))=_qv_34))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rev (append (append (append (rev _t_47) (cons _t_46 nil)) (cons _v_45 nil)) nil))=(append nil (cons _v_45 (cons _t_46 _t_47))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_35)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rev (append (append (append (rev _t_47) (cons _t_46 nil)) (cons _v_45 nil)) nil))=(append nil (cons _v_45 (cons _t_46 _t_47))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_36 _qv_37)=(append _qv_37 _qv_36)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rev (append (append (append (rev _t_47) (cons _t_46 nil)) (cons _v_45 nil)) nil))=(append nil (cons _v_45 (cons _t_46 _t_47))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_38 _qv_39) _qv_40)=(append _qv_38 (append _qv_39 _qv_40))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rev (append (append (append (rev _t_47) (cons _t_46 nil)) (cons _v_45 nil)) nil))=(append nil (cons _v_45 (cons _t_46 _t_47))))
NOW TESTING (forall ((Lst)) ((rev (rev _qv_41))=_qv_41))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rev (append (append (append (rev _t_47) (cons _t_46 nil)) (cons _v_45 nil)) nil))=(append nil (cons _v_45 (cons _t_46 _t_47))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_42))=(nat-to-int _qv_42)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rev (append (append (append (rev _t_47) (cons _t_46 nil)) (cons _v_45 nil)) nil))=(append nil (cons _v_45 (cons _t_46 _t_47))))
NOW TESTING (forall ((Lst) (Lst)) ((rev (append _qv_43 _qv_44))=(append (rev _qv_43) (rev _qv_44))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rev (append (append (append (rev _t_47) (cons _t_46 nil)) (cons _v_45 nil)) nil))=(append nil (cons _v_45 (cons _t_46 _t_47))))
NOW TESTING (forall ((Lst) (Lst)) ((rev (append _qv_43 _qv_44))=(append (rev _qv_44) (rev _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rev (append (append (append (rev _t_47) (cons _t_46 nil)) (cons _v_45 nil)) nil))=(append nil (cons _v_45 (cons _t_46 _t_47))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_34))=_qv_34))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rev (append (append (append (rev _t_47) (cons _t_46 nil)) (cons _v_45 nil)) nil))=(append nil (cons _v_45 (cons _t_46 _t_47))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_35)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rev (append (append (append (rev _t_47) (cons _t_46 nil)) (cons _v_45 nil)) nil))=(append nil (cons _v_45 (cons _t_46 _t_47))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_36 _qv_37)=(append _qv_37 _qv_36)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rev (append (append (append (rev _t_47) (cons _t_46 nil)) (cons _v_45 nil)) nil))=(append nil (cons _v_45 (cons _t_46 _t_47))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_38 _qv_39) _qv_40)=(append _qv_38 (append _qv_39 _qv_40))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rev (append (append (append (rev _t_47) (cons _t_46 nil)) (cons _v_45 nil)) nil))=(append nil (cons _v_45 (cons _t_46 _t_47))))
NOW TESTING (forall ((Lst)) ((rev (rev _qv_41))=_qv_41))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rev (append (append (append (rev _t_47) (cons _t_46 nil)) (cons _v_45 nil)) nil))=(append nil (cons _v_45 (cons _t_46 _t_47))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_42))=(nat-to-int _qv_42)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rev (append (append (append (rev _t_47) (cons _t_46 nil)) (cons _v_45 nil)) nil))=(append nil (cons _v_45 (cons _t_46 _t_47))))
NOW TESTING (forall ((Lst) (Lst)) ((rev (append _qv_43 _qv_44))=(append (rev _qv_43) (rev _qv_44))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rev (append (append (append (rev _t_47) (cons _t_46 nil)) (cons _v_45 nil)) nil))=(append nil (cons _v_45 (cons _t_46 _t_47))))
NOW TESTING (forall ((Lst) (Lst)) ((rev (append _qv_43 _qv_44))=(append (rev _qv_44) (rev _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rev (append (append (rev (cons _t_46 _t_47)) (cons _v_45 nil)) nil))=(append nil (cons _v_45 (cons _t_46 _t_47))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_34))=_qv_34))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rev (append (append (rev (cons _t_46 _t_47)) (cons _v_45 nil)) nil))=(append nil (cons _v_45 (cons _t_46 _t_47))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_35)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rev (append (append (rev (cons _t_46 _t_47)) (cons _v_45 nil)) nil))=(append nil (cons _v_45 (cons _t_46 _t_47))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_36 _qv_37)=(append _qv_37 _qv_36)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rev (append (append (rev (cons _t_46 _t_47)) (cons _v_45 nil)) nil))=(append nil (cons _v_45 (cons _t_46 _t_47))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_38 _qv_39) _qv_40)=(append _qv_38 (append _qv_39 _qv_40))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rev (append (append (rev (cons _t_46 _t_47)) (cons _v_45 nil)) nil))=(append nil (cons _v_45 (cons _t_46 _t_47))))
NOW TESTING (forall ((Lst)) ((rev (rev _qv_41))=_qv_41))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rev (append (append (rev (cons _t_46 _t_47)) (cons _v_45 nil)) nil))=(append nil (cons _v_45 (cons _t_46 _t_47))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_42))=(nat-to-int _qv_42)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rev (append (append (rev (cons _t_46 _t_47)) (cons _v_45 nil)) nil))=(append nil (cons _v_45 (cons _t_46 _t_47))))
NOW TESTING (forall ((Lst) (Lst)) ((rev (append _qv_43 _qv_44))=(append (rev _qv_43) (rev _qv_44))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rev (append (append (rev (cons _t_46 _t_47)) (cons _v_45 nil)) nil))=(append nil (cons _v_45 (cons _t_46 _t_47))))
NOW TESTING (forall ((Lst) (Lst)) ((rev (append _qv_43 _qv_44))=(append (rev _qv_44) (rev _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rev (append (append (rev (cons _t_46 _t_47)) (cons _v_45 nil)) nil))=(cons _v_45 (cons _t_46 _t_47)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_34))=_qv_34))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rev (append (append (rev (cons _t_46 _t_47)) (cons _v_45 nil)) nil))=(cons _v_45 (cons _t_46 _t_47)))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_35)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rev (append (append (rev (cons _t_46 _t_47)) (cons _v_45 nil)) nil))=(cons _v_45 (cons _t_46 _t_47)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_36 _qv_37)=(append _qv_37 _qv_36)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rev (append (append (rev (cons _t_46 _t_47)) (cons _v_45 nil)) nil))=(cons _v_45 (cons _t_46 _t_47)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_38 _qv_39) _qv_40)=(append _qv_38 (append _qv_39 _qv_40))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rev (append (append (rev (cons _t_46 _t_47)) (cons _v_45 nil)) nil))=(cons _v_45 (cons _t_46 _t_47)))
NOW TESTING (forall ((Lst)) ((rev (rev _qv_41))=_qv_41))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rev (append (append (rev (cons _t_46 _t_47)) (cons _v_45 nil)) nil))=(cons _v_45 (cons _t_46 _t_47)))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_42))=(nat-to-int _qv_42)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rev (append (append (rev (cons _t_46 _t_47)) (cons _v_45 nil)) nil))=(cons _v_45 (cons _t_46 _t_47)))
NOW TESTING (forall ((Lst) (Lst)) ((rev (append _qv_43 _qv_44))=(append (rev _qv_43) (rev _qv_44))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rev (append (append (rev (cons _t_46 _t_47)) (cons _v_45 nil)) nil))=(cons _v_45 (cons _t_46 _t_47)))
NOW TESTING (forall ((Lst) (Lst)) ((rev (append _qv_43 _qv_44))=(append (rev _qv_44) (rev _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rev (append (append (rev (cons _t_46 _t_47)) (cons _v_45 nil)) nil))=(cons _v_45 (cons _t_46 _t_47)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_34))=_qv_34))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rev (append (append (rev (cons _t_46 _t_47)) (cons _v_45 nil)) nil))=(cons _v_45 (cons _t_46 _t_47)))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_35)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rev (append (append (rev (cons _t_46 _t_47)) (cons _v_45 nil)) nil))=(cons _v_45 (cons _t_46 _t_47)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_36 _qv_37)=(append _qv_37 _qv_36)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rev (append (append (rev (cons _t_46 _t_47)) (cons _v_45 nil)) nil))=(cons _v_45 (cons _t_46 _t_47)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_38 _qv_39) _qv_40)=(append _qv_38 (append _qv_39 _qv_40))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rev (append (append (rev (cons _t_46 _t_47)) (cons _v_45 nil)) nil))=(cons _v_45 (cons _t_46 _t_47)))
NOW TESTING (forall ((Lst)) ((rev (rev _qv_41))=_qv_41))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rev (append (append (rev (cons _t_46 _t_47)) (cons _v_45 nil)) nil))=(cons _v_45 (cons _t_46 _t_47)))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_42))=(nat-to-int _qv_42)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rev (append (append (rev (cons _t_46 _t_47)) (cons _v_45 nil)) nil))=(cons _v_45 (cons _t_46 _t_47)))
NOW TESTING (forall ((Lst) (Lst)) ((rev (append _qv_43 _qv_44))=(append (rev _qv_43) (rev _qv_44))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rev (append (append (rev (cons _t_46 _t_47)) (cons _v_45 nil)) nil))=(cons _v_45 (cons _t_46 _t_47)))
NOW TESTING (forall ((Lst) (Lst)) ((rev (append _qv_43 _qv_44))=(append (rev _qv_44) (rev _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rev (append (append (rev (cons _t_46 _t_47)) (cons _v_45 nil)) nil))=(append nil (cons _v_45 (cons _t_46 _t_47))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_34))=_qv_34))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rev (append (append (rev (cons _t_46 _t_47)) (cons _v_45 nil)) nil))=(append nil (cons _v_45 (cons _t_46 _t_47))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_35)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rev (append (append (rev (cons _t_46 _t_47)) (cons _v_45 nil)) nil))=(append nil (cons _v_45 (cons _t_46 _t_47))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_36 _qv_37)=(append _qv_37 _qv_36)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rev (append (append (rev (cons _t_46 _t_47)) (cons _v_45 nil)) nil))=(append nil (cons _v_45 (cons _t_46 _t_47))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_38 _qv_39) _qv_40)=(append _qv_38 (append _qv_39 _qv_40))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rev (append (append (rev (cons _t_46 _t_47)) (cons _v_45 nil)) nil))=(append nil (cons _v_45 (cons _t_46 _t_47))))
NOW TESTING (forall ((Lst)) ((rev (rev _qv_41))=_qv_41))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rev (append (append (rev (cons _t_46 _t_47)) (cons _v_45 nil)) nil))=(append nil (cons _v_45 (cons _t_46 _t_47))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_42))=(nat-to-int _qv_42)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rev (append (append (rev (cons _t_46 _t_47)) (cons _v_45 nil)) nil))=(append nil (cons _v_45 (cons _t_46 _t_47))))
NOW TESTING (forall ((Lst) (Lst)) ((rev (append _qv_43 _qv_44))=(append (rev _qv_43) (rev _qv_44))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rev (append (append (rev (cons _t_46 _t_47)) (cons _v_45 nil)) nil))=(append nil (cons _v_45 (cons _t_46 _t_47))))
NOW TESTING (forall ((Lst) (Lst)) ((rev (append _qv_43 _qv_44))=(append (rev _qv_44) (rev _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rev (append (append (append (rev _t_47) (cons _t_46 nil)) (cons _v_45 nil)) nil))=(append nil (cons _v_45 (cons _t_46 _t_47))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_34))=_qv_34))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rev (append (append (append (rev _t_47) (cons _t_46 nil)) (cons _v_45 nil)) nil))=(append nil (cons _v_45 (cons _t_46 _t_47))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_35)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rev (append (append (append (rev _t_47) (cons _t_46 nil)) (cons _v_45 nil)) nil))=(append nil (cons _v_45 (cons _t_46 _t_47))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_36 _qv_37)=(append _qv_37 _qv_36)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rev (append (append (append (rev _t_47) (cons _t_46 nil)) (cons _v_45 nil)) nil))=(append nil (cons _v_45 (cons _t_46 _t_47))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_38 _qv_39) _qv_40)=(append _qv_38 (append _qv_39 _qv_40))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rev (append (append (append (rev _t_47) (cons _t_46 nil)) (cons _v_45 nil)) nil))=(append nil (cons _v_45 (cons _t_46 _t_47))))
NOW TESTING (forall ((Lst)) ((rev (rev _qv_41))=_qv_41))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rev (append (append (append (rev _t_47) (cons _t_46 nil)) (cons _v_45 nil)) nil))=(append nil (cons _v_45 (cons _t_46 _t_47))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_42))=(nat-to-int _qv_42)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rev (append (append (append (rev _t_47) (cons _t_46 nil)) (cons _v_45 nil)) nil))=(append nil (cons _v_45 (cons _t_46 _t_47))))
NOW TESTING (forall ((Lst) (Lst)) ((rev (append _qv_43 _qv_44))=(append (rev _qv_43) (rev _qv_44))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rev (append (append (append (rev _t_47) (cons _t_46 nil)) (cons _v_45 nil)) nil))=(append nil (cons _v_45 (cons _t_46 _t_47))))
NOW TESTING (forall ((Lst) (Lst)) ((rev (append _qv_43 _qv_44))=(append (rev _qv_44) (rev _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rev (append (append (append (rev _t_47) (cons _t_46 nil)) (cons _v_45 nil)) nil))=(append nil (cons _v_45 (cons _t_46 _t_47))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_34))=_qv_34))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rev (append (append (append (rev _t_47) (cons _t_46 nil)) (cons _v_45 nil)) nil))=(append nil (cons _v_45 (cons _t_46 _t_47))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_35)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rev (append (append (append (rev _t_47) (cons _t_46 nil)) (cons _v_45 nil)) nil))=(append nil (cons _v_45 (cons _t_46 _t_47))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_36 _qv_37)=(append _qv_37 _qv_36)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rev (append (append (append (rev _t_47) (cons _t_46 nil)) (cons _v_45 nil)) nil))=(append nil (cons _v_45 (cons _t_46 _t_47))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_38 _qv_39) _qv_40)=(append _qv_38 (append _qv_39 _qv_40))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rev (append (append (append (rev _t_47) (cons _t_46 nil)) (cons _v_45 nil)) nil))=(append nil (cons _v_45 (cons _t_46 _t_47))))
NOW TESTING (forall ((Lst)) ((rev (rev _qv_41))=_qv_41))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rev (append (append (append (rev _t_47) (cons _t_46 nil)) (cons _v_45 nil)) nil))=(append nil (cons _v_45 (cons _t_46 _t_47))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_42))=(nat-to-int _qv_42)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rev (append (append (append (rev _t_47) (cons _t_46 nil)) (cons _v_45 nil)) nil))=(append nil (cons _v_45 (cons _t_46 _t_47))))
NOW TESTING (forall ((Lst) (Lst)) ((rev (append _qv_43 _qv_44))=(append (rev _qv_43) (rev _qv_44))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rev (append (append (append (rev _t_47) (cons _t_46 nil)) (cons _v_45 nil)) nil))=(append nil (cons _v_45 (cons _t_46 _t_47))))
NOW TESTING (forall ((Lst) (Lst)) ((rev (append _qv_43 _qv_44))=(append (rev _qv_44) (rev _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rev (append (append (rev (cons _t_46 _t_47)) (cons _v_45 nil)) nil))=(append nil (cons _v_45 (cons _t_46 _t_47))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_34))=_qv_34))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rev (append (append (rev (cons _t_46 _t_47)) (cons _v_45 nil)) nil))=(append nil (cons _v_45 (cons _t_46 _t_47))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_35)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rev (append (append (rev (cons _t_46 _t_47)) (cons _v_45 nil)) nil))=(append nil (cons _v_45 (cons _t_46 _t_47))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_36 _qv_37)=(append _qv_37 _qv_36)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rev (append (append (rev (cons _t_46 _t_47)) (cons _v_45 nil)) nil))=(append nil (cons _v_45 (cons _t_46 _t_47))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_38 _qv_39) _qv_40)=(append _qv_38 (append _qv_39 _qv_40))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rev (append (append (rev (cons _t_46 _t_47)) (cons _v_45 nil)) nil))=(append nil (cons _v_45 (cons _t_46 _t_47))))
NOW TESTING (forall ((Lst)) ((rev (rev _qv_41))=_qv_41))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rev (append (append (rev (cons _t_46 _t_47)) (cons _v_45 nil)) nil))=(append nil (cons _v_45 (cons _t_46 _t_47))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_42))=(nat-to-int _qv_42)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rev (append (append (rev (cons _t_46 _t_47)) (cons _v_45 nil)) nil))=(append nil (cons _v_45 (cons _t_46 _t_47))))
NOW TESTING (forall ((Lst) (Lst)) ((rev (append _qv_43 _qv_44))=(append (rev _qv_43) (rev _qv_44))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rev (append (append (rev (cons _t_46 _t_47)) (cons _v_45 nil)) nil))=(append nil (cons _v_45 (cons _t_46 _t_47))))
NOW TESTING (forall ((Lst) (Lst)) ((rev (append _qv_43 _qv_44))=(append (rev _qv_44) (rev _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rev (append (append (rev _v_48) (cons zero nil)) nil))=(append nil (cons zero _v_48)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_34))=_qv_34))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rev (append (append (rev _v_48) (cons zero nil)) nil))=(append nil (cons zero _v_48)))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_35)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rev (append (append (rev _v_48) (cons zero nil)) nil))=(append nil (cons zero _v_48)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_36 _qv_37)=(append _qv_37 _qv_36)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rev (append (append (rev _v_48) (cons zero nil)) nil))=(append nil (cons zero _v_48)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_38 _qv_39) _qv_40)=(append _qv_38 (append _qv_39 _qv_40))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rev (append (append (rev _v_48) (cons zero nil)) nil))=(append nil (cons zero _v_48)))
NOW TESTING (forall ((Lst)) ((rev (rev _qv_41))=_qv_41))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rev (append (append (rev _v_48) (cons zero nil)) nil))=(append nil (cons zero _v_48)))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_42))=(nat-to-int _qv_42)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rev (append (append (rev _v_48) (cons zero nil)) nil))=(append nil (cons zero _v_48)))
NOW TESTING (forall ((Lst) (Lst)) ((rev (append _qv_43 _qv_44))=(append (rev _qv_43) (rev _qv_44))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rev (append (append (rev _v_48) (cons zero nil)) nil))=(append nil (cons zero _v_48)))
NOW TESTING (forall ((Lst) (Lst)) ((rev (append _qv_43 _qv_44))=(append (rev _qv_44) (rev _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rev (append (append (rev _v_48) (cons zero nil)) nil))=(append nil (cons zero _v_48)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_34))=_qv_34))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rev (append (append (rev _v_48) (cons zero nil)) nil))=(append nil (cons zero _v_48)))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_35)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rev (append (append (rev _v_48) (cons zero nil)) nil))=(append nil (cons zero _v_48)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_36 _qv_37)=(append _qv_37 _qv_36)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rev (append (append (rev _v_48) (cons zero nil)) nil))=(append nil (cons zero _v_48)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_38 _qv_39) _qv_40)=(append _qv_38 (append _qv_39 _qv_40))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rev (append (append (rev _v_48) (cons zero nil)) nil))=(append nil (cons zero _v_48)))
NOW TESTING (forall ((Lst)) ((rev (rev _qv_41))=_qv_41))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rev (append (append (rev _v_48) (cons zero nil)) nil))=(append nil (cons zero _v_48)))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_42))=(nat-to-int _qv_42)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rev (append (append (rev _v_48) (cons zero nil)) nil))=(append nil (cons zero _v_48)))
NOW TESTING (forall ((Lst) (Lst)) ((rev (append _qv_43 _qv_44))=(append (rev _qv_43) (rev _qv_44))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rev (append (append (rev _v_48) (cons zero nil)) nil))=(append nil (cons zero _v_48)))
NOW TESTING (forall ((Lst) (Lst)) ((rev (append _qv_43 _qv_44))=(append (rev _qv_44) (rev _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rev (append (append (rev _v_32) (cons _v_33 nil)) nil))=(append (rev nil) (cons _v_33 _v_32)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_15))=_qv_15))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rev (append (append (rev _v_32) (cons _v_33 nil)) nil))=(append (rev nil) (cons _v_33 _v_32)))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_16)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rev (append (append (rev _v_32) (cons _v_33 nil)) nil))=(append (rev nil) (cons _v_33 _v_32)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_17 _qv_18)=(append _qv_18 _qv_17)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rev (append (append (rev _v_32) (cons _v_33 nil)) nil))=(append (rev nil) (cons _v_33 _v_32)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_19 _qv_20) _qv_21)=(append _qv_19 (append _qv_20 _qv_21))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rev (append (append (rev _v_32) (cons _v_33 nil)) nil))=(append (rev nil) (cons _v_33 _v_32)))
NOW TESTING (forall ((Lst)) ((rev (rev _qv_22))=_qv_22))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rev (append (append (rev _v_32) (cons _v_33 nil)) nil))=(append (rev nil) (cons _v_33 _v_32)))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_23))=(nat-to-int _qv_23)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rev (append (append (rev _v_32) (cons _v_33 nil)) nil))=(append (rev nil) (cons _v_33 _v_32)))
NOW TESTING (forall ((Lst) (Lst)) ((rev (append _qv_24 _qv_25))=(append (rev _qv_24) (rev _qv_25))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rev (append (append (rev _v_32) (cons _v_33 nil)) nil))=(append (rev nil) (cons _v_33 _v_32)))
NOW TESTING (forall ((Lst) (Lst)) ((rev (append _qv_24 _qv_25))=(append (rev _qv_25) (rev _qv_24))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rev (append (rev (cons _t_13 _t_14)) _v_11))=(append (rev _v_11) (cons _t_13 _t_14)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rev (append (rev (cons _t_13 _t_14)) _v_11))=(append (rev _v_11) (cons _t_13 _t_14)))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rev (append (rev (cons _t_13 _t_14)) _v_11))=(append (rev _v_11) (cons _t_13 _t_14)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_2 _qv_3)=(append _qv_3 _qv_2)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rev (append (rev (cons _t_13 _t_14)) _v_11))=(append (rev _v_11) (cons _t_13 _t_14)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_4 _qv_5) _qv_6)=(append _qv_4 (append _qv_5 _qv_6))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rev (append (rev (cons _t_13 _t_14)) _v_11))=(append (rev _v_11) (cons _t_13 _t_14)))
NOW TESTING (forall ((Lst)) ((rev (rev _qv_7))=_qv_7))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rev (append (rev (cons _t_13 _t_14)) _v_11))=(append (rev _v_11) (cons _t_13 _t_14)))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_8))=(nat-to-int _qv_8)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rev (append (rev (cons _t_13 _t_14)) _v_11))=(append (rev _v_11) (cons _t_13 _t_14)))
NOW TESTING (forall ((Lst) (Lst)) ((rev (append _qv_9 _qv_10))=(append (rev _qv_9) (rev _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rev (append (rev (cons _t_13 _t_14)) _v_11))=(append (rev _v_11) (cons _t_13 _t_14)))
NOW TESTING (forall ((Lst) (Lst)) ((rev (append _qv_9 _qv_10))=(append (rev _qv_10) (rev _qv_9))))
USE ASSUMPTION FAILED

  backtrack to: ((rev (append (rev (cons _t_13 _t_14)) _v_11))=(append (rev _v_11) (cons _t_13 _t_14)))
  rewritten [7]: ((rev (append (append (rev _t_14) (cons _t_13 nil)) _v_11))=(append (rev _v_11) (cons _t_13 _t_14)))

The Knowledge Scheme currently contains the following lemmas:
	(forall ((Nat)) ((succ (succ _qv_15))=_qv_15))
	(forall ((Nat)) (0<=(nat-to-int _qv_16)))
	(forall ((Lst) (Lst)) ((append _qv_17 _qv_18)=(append _qv_18 _qv_17)))
	(forall ((Lst) (Lst) (Lst)) ((append (append _qv_19 _qv_20) _qv_21)=(append _qv_19 (append _qv_20 _qv_21))))
	(forall ((Lst)) ((rev (rev _qv_22))=_qv_22))
	(forall ((Nat)) ((nat-to-int (succ _qv_23))=(nat-to-int _qv_23)))
	(forall ((Lst) (Lst)) ((rev (append _qv_24 _qv_25))=(append (rev _qv_24) (rev _qv_25))))
	(forall ((Lst) (Lst)) ((rev (append _qv_24 _qv_25))=(append (rev _qv_25) (rev _qv_24))))

CURRENT SUBGOAL ((rev (append (append (rev (cons _t_28 _t_29)) (cons _v_26 nil)) _v_27))=(append (rev _v_27) (cons _v_26 (cons _t_28 _t_29))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_15))=_qv_15))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rev (append (append (rev (cons _t_28 _t_29)) (cons _v_26 nil)) _v_27))=(append (rev _v_27) (cons _v_26 (cons _t_28 _t_29))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_16)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rev (append (append (rev (cons _t_28 _t_29)) (cons _v_26 nil)) _v_27))=(append (rev _v_27) (cons _v_26 (cons _t_28 _t_29))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_17 _qv_18)=(append _qv_18 _qv_17)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rev (append (append (rev (cons _t_28 _t_29)) (cons _v_26 nil)) _v_27))=(append (rev _v_27) (cons _v_26 (cons _t_28 _t_29))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_19 _qv_20) _qv_21)=(append _qv_19 (append _qv_20 _qv_21))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rev (append (append (rev (cons _t_28 _t_29)) (cons _v_26 nil)) _v_27))=(append (rev _v_27) (cons _v_26 (cons _t_28 _t_29))))
NOW TESTING (forall ((Lst)) ((rev (rev _qv_22))=_qv_22))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rev (append (append (rev (cons _t_28 _t_29)) (cons _v_26 nil)) _v_27))=(append (rev _v_27) (cons _v_26 (cons _t_28 _t_29))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_23))=(nat-to-int _qv_23)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rev (append (append (rev (cons _t_28 _t_29)) (cons _v_26 nil)) _v_27))=(append (rev _v_27) (cons _v_26 (cons _t_28 _t_29))))
NOW TESTING (forall ((Lst) (Lst)) ((rev (append _qv_24 _qv_25))=(append (rev _qv_24) (rev _qv_25))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rev (append (append (rev (cons _t_28 _t_29)) (cons _v_26 nil)) _v_27))=(append (rev _v_27) (cons _v_26 (cons _t_28 _t_29))))
NOW TESTING (forall ((Lst) (Lst)) ((rev (append _qv_24 _qv_25))=(append (rev _qv_25) (rev _qv_24))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rev (append (append (rev (cons _t_28 _t_29)) (cons _v_26 nil)) _v_27))=(append (rev _v_27) (cons _v_26 (cons _t_28 _t_29))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_15))=_qv_15))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rev (append (append (rev (cons _t_28 _t_29)) (cons _v_26 nil)) _v_27))=(append (rev _v_27) (cons _v_26 (cons _t_28 _t_29))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_16)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rev (append (append (rev (cons _t_28 _t_29)) (cons _v_26 nil)) _v_27))=(append (rev _v_27) (cons _v_26 (cons _t_28 _t_29))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_17 _qv_18)=(append _qv_18 _qv_17)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rev (append (append (rev (cons _t_28 _t_29)) (cons _v_26 nil)) _v_27))=(append (rev _v_27) (cons _v_26 (cons _t_28 _t_29))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_19 _qv_20) _qv_21)=(append _qv_19 (append _qv_20 _qv_21))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rev (append (append (rev (cons _t_28 _t_29)) (cons _v_26 nil)) _v_27))=(append (rev _v_27) (cons _v_26 (cons _t_28 _t_29))))
NOW TESTING (forall ((Lst)) ((rev (rev _qv_22))=_qv_22))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rev (append (append (rev (cons _t_28 _t_29)) (cons _v_26 nil)) _v_27))=(append (rev _v_27) (cons _v_26 (cons _t_28 _t_29))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_23))=(nat-to-int _qv_23)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rev (append (append (rev (cons _t_28 _t_29)) (cons _v_26 nil)) _v_27))=(append (rev _v_27) (cons _v_26 (cons _t_28 _t_29))))
NOW TESTING (forall ((Lst) (Lst)) ((rev (append _qv_24 _qv_25))=(append (rev _qv_24) (rev _qv_25))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rev (append (append (rev (cons _t_28 _t_29)) (cons _v_26 nil)) _v_27))=(append (rev _v_27) (cons _v_26 (cons _t_28 _t_29))))
NOW TESTING (forall ((Lst) (Lst)) ((rev (append _qv_24 _qv_25))=(append (rev _qv_25) (rev _qv_24))))
USE ASSUMPTION FAILED


The Knowledge Scheme currently contains the following lemmas:
	(forall ((Nat)) ((succ (succ _qv_34))=_qv_34))
	(forall ((Nat)) (0<=(nat-to-int _qv_35)))
	(forall ((Lst) (Lst)) ((append _qv_36 _qv_37)=(append _qv_37 _qv_36)))
	(forall ((Lst) (Lst) (Lst)) ((append (append _qv_38 _qv_39) _qv_40)=(append _qv_38 (append _qv_39 _qv_40))))
	(forall ((Lst)) ((rev (rev _qv_41))=_qv_41))
	(forall ((Nat)) ((nat-to-int (succ _qv_42))=(nat-to-int _qv_42)))
	(forall ((Lst) (Lst)) ((rev (append _qv_43 _qv_44))=(append (rev _qv_43) (rev _qv_44))))
	(forall ((Lst) (Lst)) ((rev (append _qv_43 _qv_44))=(append (rev _qv_44) (rev _qv_43))))

CURRENT SUBGOAL ((rev (append (append (rev (cons _t_46 _t_47)) (cons _v_45 nil)) nil))=(cons _v_45 (cons _t_46 _t_47)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_34))=_qv_34))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rev (append (append (rev (cons _t_46 _t_47)) (cons _v_45 nil)) nil))=(cons _v_45 (cons _t_46 _t_47)))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_35)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rev (append (append (rev (cons _t_46 _t_47)) (cons _v_45 nil)) nil))=(cons _v_45 (cons _t_46 _t_47)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_36 _qv_37)=(append _qv_37 _qv_36)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rev (append (append (rev (cons _t_46 _t_47)) (cons _v_45 nil)) nil))=(cons _v_45 (cons _t_46 _t_47)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_38 _qv_39) _qv_40)=(append _qv_38 (append _qv_39 _qv_40))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rev (append (append (rev (cons _t_46 _t_47)) (cons _v_45 nil)) nil))=(cons _v_45 (cons _t_46 _t_47)))
NOW TESTING (forall ((Lst)) ((rev (rev _qv_41))=_qv_41))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rev (append (append (rev (cons _t_46 _t_47)) (cons _v_45 nil)) nil))=(cons _v_45 (cons _t_46 _t_47)))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_42))=(nat-to-int _qv_42)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rev (append (append (rev (cons _t_46 _t_47)) (cons _v_45 nil)) nil))=(cons _v_45 (cons _t_46 _t_47)))
NOW TESTING (forall ((Lst) (Lst)) ((rev (append _qv_43 _qv_44))=(append (rev _qv_43) (rev _qv_44))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rev (append (append (rev (cons _t_46 _t_47)) (cons _v_45 nil)) nil))=(cons _v_45 (cons _t_46 _t_47)))
NOW TESTING (forall ((Lst) (Lst)) ((rev (append _qv_43 _qv_44))=(append (rev _qv_44) (rev _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rev (append (append (rev (cons _t_46 _t_47)) (cons _v_45 nil)) nil))=(cons _v_45 (cons _t_46 _t_47)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_34))=_qv_34))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rev (append (append (rev (cons _t_46 _t_47)) (cons _v_45 nil)) nil))=(cons _v_45 (cons _t_46 _t_47)))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_35)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rev (append (append (rev (cons _t_46 _t_47)) (cons _v_45 nil)) nil))=(cons _v_45 (cons _t_46 _t_47)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_36 _qv_37)=(append _qv_37 _qv_36)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rev (append (append (rev (cons _t_46 _t_47)) (cons _v_45 nil)) nil))=(cons _v_45 (cons _t_46 _t_47)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_38 _qv_39) _qv_40)=(append _qv_38 (append _qv_39 _qv_40))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rev (append (append (rev (cons _t_46 _t_47)) (cons _v_45 nil)) nil))=(cons _v_45 (cons _t_46 _t_47)))
NOW TESTING (forall ((Lst)) ((rev (rev _qv_41))=_qv_41))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rev (append (append (rev (cons _t_46 _t_47)) (cons _v_45 nil)) nil))=(cons _v_45 (cons _t_46 _t_47)))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_42))=(nat-to-int _qv_42)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rev (append (append (rev (cons _t_46 _t_47)) (cons _v_45 nil)) nil))=(cons _v_45 (cons _t_46 _t_47)))
NOW TESTING (forall ((Lst) (Lst)) ((rev (append _qv_43 _qv_44))=(append (rev _qv_43) (rev _qv_44))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rev (append (append (rev (cons _t_46 _t_47)) (cons _v_45 nil)) nil))=(cons _v_45 (cons _t_46 _t_47)))
NOW TESTING (forall ((Lst) (Lst)) ((rev (append _qv_43 _qv_44))=(append (rev _qv_44) (rev _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rev (append (append (rev _v_32) (cons _v_33 nil)) nil))=(append nil (cons _v_33 _v_32)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_15))=_qv_15))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rev (append (append (rev _v_32) (cons _v_33 nil)) nil))=(append nil (cons _v_33 _v_32)))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_16)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rev (append (append (rev _v_32) (cons _v_33 nil)) nil))=(append nil (cons _v_33 _v_32)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_17 _qv_18)=(append _qv_18 _qv_17)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rev (append (append (rev _v_32) (cons _v_33 nil)) nil))=(append nil (cons _v_33 _v_32)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_19 _qv_20) _qv_21)=(append _qv_19 (append _qv_20 _qv_21))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rev (append (append (rev _v_32) (cons _v_33 nil)) nil))=(append nil (cons _v_33 _v_32)))
NOW TESTING (forall ((Lst)) ((rev (rev _qv_22))=_qv_22))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rev (append (append (rev _v_32) (cons _v_33 nil)) nil))=(append nil (cons _v_33 _v_32)))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_23))=(nat-to-int _qv_23)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rev (append (append (rev _v_32) (cons _v_33 nil)) nil))=(append nil (cons _v_33 _v_32)))
NOW TESTING (forall ((Lst) (Lst)) ((rev (append _qv_24 _qv_25))=(append (rev _qv_24) (rev _qv_25))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rev (append (append (rev _v_32) (cons _v_33 nil)) nil))=(append nil (cons _v_33 _v_32)))
NOW TESTING (forall ((Lst) (Lst)) ((rev (append _qv_24 _qv_25))=(append (rev _qv_25) (rev _qv_24))))
USE ASSUMPTION FAILED


The Knowledge Scheme currently contains the following lemmas:
	(forall ((Nat)) ((succ (succ _qv_34))=_qv_34))
	(forall ((Nat)) (0<=(nat-to-int _qv_35)))
	(forall ((Lst) (Lst)) ((append _qv_36 _qv_37)=(append _qv_37 _qv_36)))
	(forall ((Lst) (Lst) (Lst)) ((append (append _qv_38 _qv_39) _qv_40)=(append _qv_38 (append _qv_39 _qv_40))))
	(forall ((Lst)) ((rev (rev _qv_41))=_qv_41))
	(forall ((Nat)) ((nat-to-int (succ _qv_42))=(nat-to-int _qv_42)))
	(forall ((Lst) (Lst)) ((rev (append _qv_43 _qv_44))=(append (rev _qv_43) (rev _qv_44))))
	(forall ((Lst) (Lst)) ((rev (append _qv_43 _qv_44))=(append (rev _qv_44) (rev _qv_43))))

CURRENT SUBGOAL ((rev (append (append (rev (cons _t_46 _t_47)) (cons _v_45 nil)) nil))=(cons _v_45 (cons _t_46 _t_47)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_34))=_qv_34))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rev (append (append (rev (cons _t_46 _t_47)) (cons _v_45 nil)) nil))=(cons _v_45 (cons _t_46 _t_47)))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_35)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rev (append (append (rev (cons _t_46 _t_47)) (cons _v_45 nil)) nil))=(cons _v_45 (cons _t_46 _t_47)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_36 _qv_37)=(append _qv_37 _qv_36)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rev (append (append (rev (cons _t_46 _t_47)) (cons _v_45 nil)) nil))=(cons _v_45 (cons _t_46 _t_47)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_38 _qv_39) _qv_40)=(append _qv_38 (append _qv_39 _qv_40))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rev (append (append (rev (cons _t_46 _t_47)) (cons _v_45 nil)) nil))=(cons _v_45 (cons _t_46 _t_47)))
NOW TESTING (forall ((Lst)) ((rev (rev _qv_41))=_qv_41))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rev (append (append (rev (cons _t_46 _t_47)) (cons _v_45 nil)) nil))=(cons _v_45 (cons _t_46 _t_47)))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_42))=(nat-to-int _qv_42)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rev (append (append (rev (cons _t_46 _t_47)) (cons _v_45 nil)) nil))=(cons _v_45 (cons _t_46 _t_47)))
NOW TESTING (forall ((Lst) (Lst)) ((rev (append _qv_43 _qv_44))=(append (rev _qv_43) (rev _qv_44))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rev (append (append (rev (cons _t_46 _t_47)) (cons _v_45 nil)) nil))=(cons _v_45 (cons _t_46 _t_47)))
NOW TESTING (forall ((Lst) (Lst)) ((rev (append _qv_43 _qv_44))=(append (rev _qv_44) (rev _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rev (append (append (rev (cons _t_46 _t_47)) (cons _v_45 nil)) nil))=(cons _v_45 (cons _t_46 _t_47)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_34))=_qv_34))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rev (append (append (rev (cons _t_46 _t_47)) (cons _v_45 nil)) nil))=(cons _v_45 (cons _t_46 _t_47)))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_35)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rev (append (append (rev (cons _t_46 _t_47)) (cons _v_45 nil)) nil))=(cons _v_45 (cons _t_46 _t_47)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_36 _qv_37)=(append _qv_37 _qv_36)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rev (append (append (rev (cons _t_46 _t_47)) (cons _v_45 nil)) nil))=(cons _v_45 (cons _t_46 _t_47)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_38 _qv_39) _qv_40)=(append _qv_38 (append _qv_39 _qv_40))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rev (append (append (rev (cons _t_46 _t_47)) (cons _v_45 nil)) nil))=(cons _v_45 (cons _t_46 _t_47)))
NOW TESTING (forall ((Lst)) ((rev (rev _qv_41))=_qv_41))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rev (append (append (rev (cons _t_46 _t_47)) (cons _v_45 nil)) nil))=(cons _v_45 (cons _t_46 _t_47)))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_42))=(nat-to-int _qv_42)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rev (append (append (rev (cons _t_46 _t_47)) (cons _v_45 nil)) nil))=(cons _v_45 (cons _t_46 _t_47)))
NOW TESTING (forall ((Lst) (Lst)) ((rev (append _qv_43 _qv_44))=(append (rev _qv_43) (rev _qv_44))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rev (append (append (rev (cons _t_46 _t_47)) (cons _v_45 nil)) nil))=(cons _v_45 (cons _t_46 _t_47)))
NOW TESTING (forall ((Lst) (Lst)) ((rev (append _qv_43 _qv_44))=(append (rev _qv_44) (rev _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rev (append (append (rev _v_32) (cons _v_33 nil)) nil))=(append nil (cons _v_33 _v_32)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_15))=_qv_15))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rev (append (append (rev _v_32) (cons _v_33 nil)) nil))=(append nil (cons _v_33 _v_32)))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_16)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rev (append (append (rev _v_32) (cons _v_33 nil)) nil))=(append nil (cons _v_33 _v_32)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_17 _qv_18)=(append _qv_18 _qv_17)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rev (append (append (rev _v_32) (cons _v_33 nil)) nil))=(append nil (cons _v_33 _v_32)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_19 _qv_20) _qv_21)=(append _qv_19 (append _qv_20 _qv_21))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rev (append (append (rev _v_32) (cons _v_33 nil)) nil))=(append nil (cons _v_33 _v_32)))
NOW TESTING (forall ((Lst)) ((rev (rev _qv_22))=_qv_22))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rev (append (append (rev _v_32) (cons _v_33 nil)) nil))=(append nil (cons _v_33 _v_32)))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_23))=(nat-to-int _qv_23)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rev (append (append (rev _v_32) (cons _v_33 nil)) nil))=(append nil (cons _v_33 _v_32)))
NOW TESTING (forall ((Lst) (Lst)) ((rev (append _qv_24 _qv_25))=(append (rev _qv_24) (rev _qv_25))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rev (append (append (rev _v_32) (cons _v_33 nil)) nil))=(append nil (cons _v_33 _v_32)))
NOW TESTING (forall ((Lst) (Lst)) ((rev (append _qv_24 _qv_25))=(append (rev _qv_25) (rev _qv_24))))
USE ASSUMPTION FAILED


The Knowledge Scheme currently contains the following lemmas:
	(forall ((Nat)) ((succ (succ _qv_34))=_qv_34))
	(forall ((Nat)) (0<=(nat-to-int _qv_35)))
	(forall ((Lst) (Lst)) ((append _qv_36 _qv_37)=(append _qv_37 _qv_36)))
	(forall ((Lst) (Lst) (Lst)) ((append (append _qv_38 _qv_39) _qv_40)=(append _qv_38 (append _qv_39 _qv_40))))
	(forall ((Lst)) ((rev (rev _qv_41))=_qv_41))
	(forall ((Nat)) ((nat-to-int (succ _qv_42))=(nat-to-int _qv_42)))
	(forall ((Lst) (Lst)) ((rev (append _qv_43 _qv_44))=(append (rev _qv_43) (rev _qv_44))))
	(forall ((Lst) (Lst)) ((rev (append _qv_43 _qv_44))=(append (rev _qv_44) (rev _qv_43))))

