
The Knowledge Scheme currently contains the following lemmas:
	(forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
	(forall ((Nat)) (0<=(nat-to-int _qv_1)))
	(forall ((Nat) (Nat)) ((less _qv_2 _qv_3)=(less _qv_3 _qv_2)))
	(forall ((Lst)) ((sort (sort _qv_4))=_qv_4))
	(forall ((Nat)) ((nat-to-int (succ _qv_5))=(nat-to-int _qv_5)))
	(forall ((Lst)) ((nat-to-int (len _qv_6))=(nat-to-int _qv_6)))
	(forall ((Nat) (Lst) (Lst)) ((insort _qv_7 (cons _qv_8 _qv_9))=(cons (insort _qv_7 _qv_8) (insort _qv_7 _qv_9))))
	(forall ((Nat) (Lst) (Lst)) ((cons _qv_10 (insort _qv_11 _qv_12))=(insort (cons _qv_10 _qv_11) (cons _qv_10 _qv_12))))

Simplified goal: (forall ((Nat) (Lst)) ((len (insort x y))=(succ (len y))))


Base case:       ((len (insort zero _v_13))=(succ (len _v_13)))
{
  {
    ====================
    | Assumptions [0]: ((sort nil)=nil)
    | Assumptions [1]: (forall ((Nat)) ((nat-to-int _qv_1)>=0))
    | Assumptions [2]: (forall ((Nat) (Nat)) (((nat-to-int _qv_2)=(nat-to-int _qv_3))->(_qv_2=_qv_3)))
    | Assumptions [3]: (forall ((Nat)) ((nat-to-int (succ _qv_4))=(1+(nat-to-int _qv_4))))
    | Assumptions [4]: (forall ((Nat) (Nat)) ((less (succ _qv_7) (succ _qv_8))=(less _qv_7 _qv_8)))
    | Assumptions [5]: (forall ((Nat) (Nat)) ((less _qv_9 _qv_10)=((nat-to-int _qv_9)<(nat-to-int _qv_10))))
    | Assumptions [6]: (forall ((Nat) (Lst)) ((len (cons _qv_11 _qv_12))=(succ (len _qv_12))))
    | Assumptions [7]: (forall ((Nat)) ((insort _qv_13 nil)=(cons _qv_13 nil)))
    | Assumptions [8]: (forall ((Nat) (Nat) (Lst)) ((insort _qv_14 (cons _qv_15 _qv_16))=ite((less _qv_14 _qv_15), (cons _qv_14 (cons _qv_15 _qv_16)), (cons _qv_15 (insort _qv_14 _qv_16)))))
    | Assumptions [9]: (forall ((Nat) (Lst)) ((sort (cons _qv_17 _qv_18))=(insort _qv_17 (sort _qv_18))))
    | Assumptions [10]: ((nat-to-int (len nil))=0)
    | Assumptions [11]: (forall ((Nat)) (!(less _qv_5 (len nil))))
    | Assumptions [12]: (forall ((Nat)) (less (len nil) (succ _qv_6)))
    ====================
  }
  rewritten [2]: ((nat-to-int (len (insort (len nil) _v_13)))=(nat-to-int (succ (len _v_13))))
  rewritten [3]: ((nat-to-int (len (insort (len nil) _v_13)))=(1+(nat-to-int (len _v_13))))

The Knowledge Scheme currently contains the following lemmas:
	(forall ((Nat)) ((succ (succ _qv_14))=_qv_14))
	(forall ((Nat)) (0<=(nat-to-int _qv_15)))
	(forall ((Nat) (Nat)) ((less _qv_16 _qv_17)=(less _qv_17 _qv_16)))
	(forall ((Lst)) ((sort (sort _qv_18))=_qv_18))
	(forall ((Nat)) ((nat-to-int (succ _qv_19))=(nat-to-int _qv_19)))
	(forall ((Lst)) ((nat-to-int (len _qv_20))=(nat-to-int _qv_20)))
	(forall ((Nat) (Lst) (Lst)) ((insort _qv_21 (cons _qv_22 _qv_23))=(cons (insort _qv_21 _qv_22) (insort _qv_21 _qv_23))))
	(forall ((Nat) (Lst) (Lst)) ((cons _qv_24 (insort _qv_25 _qv_26))=(insort (cons _qv_24 _qv_25) (cons _qv_24 _qv_26))))

  proven by induction: ((nat-to-int (len (insort (len nil) _v_13)))=(1+(nat-to-int (len _v_13))))
  rewriting done
}
Inductive step:  ((len (insort (succ _t_14) _v_13))=(succ (len _v_13)))
{
  {
    ====================
    | Assumptions [0]: ((sort nil)=nil)
    | Assumptions [1]: (forall ((Nat)) ((nat-to-int _qv_1)>=0))
    | Assumptions [2]: (forall ((Nat) (Nat)) (((nat-to-int _qv_2)=(nat-to-int _qv_3))->(_qv_2=_qv_3)))
    | Assumptions [3]: (forall ((Nat)) ((nat-to-int (succ _qv_4))=(1+(nat-to-int _qv_4))))
    | Assumptions [4]: (forall ((Nat) (Nat)) ((less (succ _qv_7) (succ _qv_8))=(less _qv_7 _qv_8)))
    | Assumptions [5]: (forall ((Nat) (Nat)) ((less _qv_9 _qv_10)=((nat-to-int _qv_9)<(nat-to-int _qv_10))))
    | Assumptions [6]: (forall ((Nat) (Lst)) ((len (cons _qv_11 _qv_12))=(succ (len _qv_12))))
    | Assumptions [7]: (forall ((Nat)) ((insort _qv_13 nil)=(cons _qv_13 nil)))
    | Assumptions [8]: (forall ((Nat) (Nat) (Lst)) ((insort _qv_14 (cons _qv_15 _qv_16))=ite((less _qv_14 _qv_15), (cons _qv_14 (cons _qv_15 _qv_16)), (cons _qv_15 (insort _qv_14 _qv_16)))))
    | Assumptions [9]: (forall ((Nat) (Lst)) ((sort (cons _qv_17 _qv_18))=(insort _qv_17 (sort _qv_18))))
    | Assumptions [10]: (forall ((Lst)) ((len (insort _t_14 y))=(succ (len y))))
    | Assumptions [11]: (forall ((Lst)) ((succ (len y))=(len (insort _t_14 y))))
    | Assumptions [12]: ((nat-to-int (len nil))=0)
    | Assumptions [13]: (forall ((Nat)) (!(less _qv_5 (len nil))))
    | Assumptions [14]: (forall ((Nat)) (less (len nil) (succ _qv_6)))
    ====================
  }
  rewritten [2]: ((nat-to-int (len (insort (succ _t_14) _v_13)))=(nat-to-int (succ (len _v_13))))
  rewritten [3]: ((nat-to-int (len (insort (succ _t_14) _v_13)))=(1+(nat-to-int (len _v_13))))
CURRENT SUBGOAL ((nat-to-int (len (insort (succ _t_14) _v_13)))=(nat-to-int (succ (len _v_13))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (insort (succ _t_14) _v_13)))=(nat-to-int (succ (len _v_13))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (insort (succ _t_14) _v_13)))=(nat-to-int (succ (len _v_13))))
NOW TESTING (forall ((Nat) (Nat)) ((less _qv_2 _qv_3)=(less _qv_3 _qv_2)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (insort (succ _t_14) _v_13)))=(nat-to-int (succ (len _v_13))))
NOW TESTING (forall ((Lst)) ((sort (sort _qv_4))=_qv_4))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (insort (succ _t_14) _v_13)))=(nat-to-int (succ (len _v_13))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_5))=(nat-to-int _qv_5)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (insort (succ _t_14) _v_13)))=(nat-to-int (succ (len _v_13))))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_6))=(nat-to-int _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (insort (succ _t_14) _v_13)))=(nat-to-int (succ (len _v_13))))
NOW TESTING (forall ((Nat) (Lst) (Lst)) ((insort _qv_7 (cons _qv_8 _qv_9))=(cons (insort _qv_7 _qv_8) (insort _qv_7 _qv_9))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (insort (succ _t_14) _v_13)))=(nat-to-int (succ (len _v_13))))
NOW TESTING (forall ((Nat) (Lst) (Lst)) ((cons _qv_10 (insort _qv_11 _qv_12))=(insort (cons _qv_10 _qv_11) (cons _qv_10 _qv_12))))
USE ASSUMPTION FAILED

  backtrack to: ((nat-to-int (len (insort (succ _t_14) _v_13)))=(nat-to-int (succ (len _v_13))))
  rewritten [11]: ((nat-to-int (len (insort (succ _t_14) _v_13)))=(nat-to-int (len (insort _t_14 _v_13))))
CURRENT SUBGOAL ((nat-to-int (len (insort (succ _t_14) _v_13)))=(nat-to-int (succ (len _v_13))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (insort (succ _t_14) _v_13)))=(nat-to-int (succ (len _v_13))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (insort (succ _t_14) _v_13)))=(nat-to-int (succ (len _v_13))))
NOW TESTING (forall ((Nat) (Nat)) ((less _qv_2 _qv_3)=(less _qv_3 _qv_2)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (insort (succ _t_14) _v_13)))=(nat-to-int (succ (len _v_13))))
NOW TESTING (forall ((Lst)) ((sort (sort _qv_4))=_qv_4))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (insort (succ _t_14) _v_13)))=(nat-to-int (succ (len _v_13))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_5))=(nat-to-int _qv_5)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (insort (succ _t_14) _v_13)))=(nat-to-int (succ (len _v_13))))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_6))=(nat-to-int _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (insort (succ _t_14) _v_13)))=(nat-to-int (succ (len _v_13))))
NOW TESTING (forall ((Nat) (Lst) (Lst)) ((insort _qv_7 (cons _qv_8 _qv_9))=(cons (insort _qv_7 _qv_8) (insort _qv_7 _qv_9))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (insort (succ _t_14) _v_13)))=(nat-to-int (succ (len _v_13))))
NOW TESTING (forall ((Nat) (Lst) (Lst)) ((cons _qv_10 (insort _qv_11 _qv_12))=(insort (cons _qv_10 _qv_11) (cons _qv_10 _qv_12))))
USE ASSUMPTION FAILED

  backtrack to: ((nat-to-int (len (insort (succ _t_14) _v_13)))=(nat-to-int (succ (len _v_13))))
  rewritten [3]: ((nat-to-int (len (insort (succ _t_14) _v_13)))=(1+(nat-to-int (len _v_13))))
CURRENT SUBGOAL ((nat-to-int (len (insort (succ _t_14) _v_13)))=(nat-to-int (succ (len _v_13))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (insort (succ _t_14) _v_13)))=(nat-to-int (succ (len _v_13))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (insort (succ _t_14) _v_13)))=(nat-to-int (succ (len _v_13))))
NOW TESTING (forall ((Nat) (Nat)) ((less _qv_2 _qv_3)=(less _qv_3 _qv_2)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (insort (succ _t_14) _v_13)))=(nat-to-int (succ (len _v_13))))
NOW TESTING (forall ((Lst)) ((sort (sort _qv_4))=_qv_4))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (insort (succ _t_14) _v_13)))=(nat-to-int (succ (len _v_13))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_5))=(nat-to-int _qv_5)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (insort (succ _t_14) _v_13)))=(nat-to-int (succ (len _v_13))))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_6))=(nat-to-int _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (insort (succ _t_14) _v_13)))=(nat-to-int (succ (len _v_13))))
NOW TESTING (forall ((Nat) (Lst) (Lst)) ((insort _qv_7 (cons _qv_8 _qv_9))=(cons (insort _qv_7 _qv_8) (insort _qv_7 _qv_9))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (insort (succ _t_14) _v_13)))=(nat-to-int (succ (len _v_13))))
NOW TESTING (forall ((Nat) (Lst) (Lst)) ((cons _qv_10 (insort _qv_11 _qv_12))=(insort (cons _qv_10 _qv_11) (cons _qv_10 _qv_12))))
USE ASSUMPTION FAILED

  backtrack to: ((nat-to-int (len (insort (succ _t_14) _v_13)))=(nat-to-int (succ (len _v_13))))
  rewritten [11]: ((nat-to-int (len (insort (succ _t_14) _v_13)))=(nat-to-int (len (insort _t_14 _v_13))))
CURRENT SUBGOAL ((nat-to-int (len (insort (succ _t_14) _v_13)))=(nat-to-int (succ (len _v_13))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (insort (succ _t_14) _v_13)))=(nat-to-int (succ (len _v_13))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (insort (succ _t_14) _v_13)))=(nat-to-int (succ (len _v_13))))
NOW TESTING (forall ((Nat) (Nat)) ((less _qv_2 _qv_3)=(less _qv_3 _qv_2)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (insort (succ _t_14) _v_13)))=(nat-to-int (succ (len _v_13))))
NOW TESTING (forall ((Lst)) ((sort (sort _qv_4))=_qv_4))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (insort (succ _t_14) _v_13)))=(nat-to-int (succ (len _v_13))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_5))=(nat-to-int _qv_5)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (insort (succ _t_14) _v_13)))=(nat-to-int (succ (len _v_13))))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_6))=(nat-to-int _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (insort (succ _t_14) _v_13)))=(nat-to-int (succ (len _v_13))))
NOW TESTING (forall ((Nat) (Lst) (Lst)) ((insort _qv_7 (cons _qv_8 _qv_9))=(cons (insort _qv_7 _qv_8) (insort _qv_7 _qv_9))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (insort (succ _t_14) _v_13)))=(nat-to-int (succ (len _v_13))))
NOW TESTING (forall ((Nat) (Lst) (Lst)) ((cons _qv_10 (insort _qv_11 _qv_12))=(insort (cons _qv_10 _qv_11) (cons _qv_10 _qv_12))))
USE ASSUMPTION FAILED

  backtrack to: ((nat-to-int (len (insort (succ _t_14) _v_13)))=(nat-to-int (succ (len _v_13))))
CURRENT SUBGOAL ((len (insort (succ _t_14) _v_13))=(succ (len _v_13)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (insort (succ _t_14) _v_13))=(succ (len _v_13)))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (insort (succ _t_14) _v_13))=(succ (len _v_13)))
NOW TESTING (forall ((Nat) (Nat)) ((less _qv_2 _qv_3)=(less _qv_3 _qv_2)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (insort (succ _t_14) _v_13))=(succ (len _v_13)))
NOW TESTING (forall ((Lst)) ((sort (sort _qv_4))=_qv_4))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (insort (succ _t_14) _v_13))=(succ (len _v_13)))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_5))=(nat-to-int _qv_5)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (insort (succ _t_14) _v_13))=(succ (len _v_13)))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_6))=(nat-to-int _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (insort (succ _t_14) _v_13))=(succ (len _v_13)))
NOW TESTING (forall ((Nat) (Lst) (Lst)) ((insort _qv_7 (cons _qv_8 _qv_9))=(cons (insort _qv_7 _qv_8) (insort _qv_7 _qv_9))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (insort (succ _t_14) _v_13))=(succ (len _v_13)))
NOW TESTING (forall ((Nat) (Lst) (Lst)) ((cons _qv_10 (insort _qv_11 _qv_12))=(insort (cons _qv_10 _qv_11) (cons _qv_10 _qv_12))))
USE ASSUMPTION FAILED

  backtrack to: ((len (insort (succ _t_14) _v_13))=(succ (len _v_13)))
  rewritten [11]: ((len (insort (succ _t_14) _v_13))=(len (insort _t_14 _v_13)))
  rewritten [2]: ((nat-to-int (len (insort (succ _t_14) _v_13)))=(nat-to-int (len (insort _t_14 _v_13))))
  rewritten [10]: ((nat-to-int (len (insort (succ _t_14) _v_13)))=(nat-to-int (succ (len _v_13))))
  rewritten [3]: ((nat-to-int (len (insort (succ _t_14) _v_13)))=(1+(nat-to-int (len _v_13))))
CURRENT SUBGOAL ((nat-to-int (len (insort (succ _t_14) _v_13)))=(nat-to-int (succ (len _v_13))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (insort (succ _t_14) _v_13)))=(nat-to-int (succ (len _v_13))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (insort (succ _t_14) _v_13)))=(nat-to-int (succ (len _v_13))))
NOW TESTING (forall ((Nat) (Nat)) ((less _qv_2 _qv_3)=(less _qv_3 _qv_2)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (insort (succ _t_14) _v_13)))=(nat-to-int (succ (len _v_13))))
NOW TESTING (forall ((Lst)) ((sort (sort _qv_4))=_qv_4))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (insort (succ _t_14) _v_13)))=(nat-to-int (succ (len _v_13))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_5))=(nat-to-int _qv_5)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (insort (succ _t_14) _v_13)))=(nat-to-int (succ (len _v_13))))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_6))=(nat-to-int _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (insort (succ _t_14) _v_13)))=(nat-to-int (succ (len _v_13))))
NOW TESTING (forall ((Nat) (Lst) (Lst)) ((insort _qv_7 (cons _qv_8 _qv_9))=(cons (insort _qv_7 _qv_8) (insort _qv_7 _qv_9))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (insort (succ _t_14) _v_13)))=(nat-to-int (succ (len _v_13))))
NOW TESTING (forall ((Nat) (Lst) (Lst)) ((cons _qv_10 (insort _qv_11 _qv_12))=(insort (cons _qv_10 _qv_11) (cons _qv_10 _qv_12))))
USE ASSUMPTION FAILED

  backtrack to: ((nat-to-int (len (insort (succ _t_14) _v_13)))=(nat-to-int (succ (len _v_13))))
  rewritten [3]: ((nat-to-int (len (insort (succ _t_14) _v_13)))=(1+(nat-to-int (len _v_13))))
CURRENT SUBGOAL ((nat-to-int (len (insort (succ _t_14) _v_13)))=(nat-to-int (succ (len _v_13))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (insort (succ _t_14) _v_13)))=(nat-to-int (succ (len _v_13))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (insort (succ _t_14) _v_13)))=(nat-to-int (succ (len _v_13))))
NOW TESTING (forall ((Nat) (Nat)) ((less _qv_2 _qv_3)=(less _qv_3 _qv_2)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (insort (succ _t_14) _v_13)))=(nat-to-int (succ (len _v_13))))
NOW TESTING (forall ((Lst)) ((sort (sort _qv_4))=_qv_4))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (insort (succ _t_14) _v_13)))=(nat-to-int (succ (len _v_13))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_5))=(nat-to-int _qv_5)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (insort (succ _t_14) _v_13)))=(nat-to-int (succ (len _v_13))))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_6))=(nat-to-int _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (insort (succ _t_14) _v_13)))=(nat-to-int (succ (len _v_13))))
NOW TESTING (forall ((Nat) (Lst) (Lst)) ((insort _qv_7 (cons _qv_8 _qv_9))=(cons (insort _qv_7 _qv_8) (insort _qv_7 _qv_9))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (insort (succ _t_14) _v_13)))=(nat-to-int (succ (len _v_13))))
NOW TESTING (forall ((Nat) (Lst) (Lst)) ((cons _qv_10 (insort _qv_11 _qv_12))=(insort (cons _qv_10 _qv_11) (cons _qv_10 _qv_12))))
USE ASSUMPTION FAILED

  backtrack to: ((nat-to-int (len (insort (succ _t_14) _v_13)))=(nat-to-int (succ (len _v_13))))
CURRENT SUBGOAL ((nat-to-int (len (insort (succ _t_14) _v_13)))=(nat-to-int (len (insort _t_14 _v_13))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (insort (succ _t_14) _v_13)))=(nat-to-int (len (insort _t_14 _v_13))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (insort (succ _t_14) _v_13)))=(nat-to-int (len (insort _t_14 _v_13))))
NOW TESTING (forall ((Nat) (Nat)) ((less _qv_2 _qv_3)=(less _qv_3 _qv_2)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (insort (succ _t_14) _v_13)))=(nat-to-int (len (insort _t_14 _v_13))))
NOW TESTING (forall ((Lst)) ((sort (sort _qv_4))=_qv_4))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (insort (succ _t_14) _v_13)))=(nat-to-int (len (insort _t_14 _v_13))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_5))=(nat-to-int _qv_5)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (insort (succ _t_14) _v_13)))=(nat-to-int (len (insort _t_14 _v_13))))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_6))=(nat-to-int _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (insort (succ _t_14) _v_13)))=(nat-to-int (len (insort _t_14 _v_13))))
NOW TESTING (forall ((Nat) (Lst) (Lst)) ((insort _qv_7 (cons _qv_8 _qv_9))=(cons (insort _qv_7 _qv_8) (insort _qv_7 _qv_9))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (insort (succ _t_14) _v_13)))=(nat-to-int (len (insort _t_14 _v_13))))
NOW TESTING (forall ((Nat) (Lst) (Lst)) ((cons _qv_10 (insort _qv_11 _qv_12))=(insort (cons _qv_10 _qv_11) (cons _qv_10 _qv_12))))
USE ASSUMPTION FAILED

  backtrack to: ((nat-to-int (len (insort (succ _t_14) _v_13)))=(nat-to-int (len (insort _t_14 _v_13))))
  rewritten [10]: ((nat-to-int (len (insort (succ _t_14) _v_13)))=(nat-to-int (succ (len _v_13))))
  rewritten [3]: ((nat-to-int (len (insort (succ _t_14) _v_13)))=(1+(nat-to-int (len _v_13))))
CURRENT SUBGOAL ((nat-to-int (len (insort (succ _t_14) _v_13)))=(nat-to-int (succ (len _v_13))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (insort (succ _t_14) _v_13)))=(nat-to-int (succ (len _v_13))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (insort (succ _t_14) _v_13)))=(nat-to-int (succ (len _v_13))))
NOW TESTING (forall ((Nat) (Nat)) ((less _qv_2 _qv_3)=(less _qv_3 _qv_2)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (insort (succ _t_14) _v_13)))=(nat-to-int (succ (len _v_13))))
NOW TESTING (forall ((Lst)) ((sort (sort _qv_4))=_qv_4))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (insort (succ _t_14) _v_13)))=(nat-to-int (succ (len _v_13))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_5))=(nat-to-int _qv_5)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (insort (succ _t_14) _v_13)))=(nat-to-int (succ (len _v_13))))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_6))=(nat-to-int _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (insort (succ _t_14) _v_13)))=(nat-to-int (succ (len _v_13))))
NOW TESTING (forall ((Nat) (Lst) (Lst)) ((insort _qv_7 (cons _qv_8 _qv_9))=(cons (insort _qv_7 _qv_8) (insort _qv_7 _qv_9))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (insort (succ _t_14) _v_13)))=(nat-to-int (succ (len _v_13))))
NOW TESTING (forall ((Nat) (Lst) (Lst)) ((cons _qv_10 (insort _qv_11 _qv_12))=(insort (cons _qv_10 _qv_11) (cons _qv_10 _qv_12))))
USE ASSUMPTION FAILED

  backtrack to: ((nat-to-int (len (insort (succ _t_14) _v_13)))=(nat-to-int (succ (len _v_13))))
  rewritten [3]: ((nat-to-int (len (insort (succ _t_14) _v_13)))=(1+(nat-to-int (len _v_13))))
CURRENT SUBGOAL ((nat-to-int (len (insort (succ _t_14) _v_13)))=(nat-to-int (succ (len _v_13))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (insort (succ _t_14) _v_13)))=(nat-to-int (succ (len _v_13))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (insort (succ _t_14) _v_13)))=(nat-to-int (succ (len _v_13))))
NOW TESTING (forall ((Nat) (Nat)) ((less _qv_2 _qv_3)=(less _qv_3 _qv_2)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (insort (succ _t_14) _v_13)))=(nat-to-int (succ (len _v_13))))
NOW TESTING (forall ((Lst)) ((sort (sort _qv_4))=_qv_4))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (insort (succ _t_14) _v_13)))=(nat-to-int (succ (len _v_13))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_5))=(nat-to-int _qv_5)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (insort (succ _t_14) _v_13)))=(nat-to-int (succ (len _v_13))))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_6))=(nat-to-int _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (insort (succ _t_14) _v_13)))=(nat-to-int (succ (len _v_13))))
NOW TESTING (forall ((Nat) (Lst) (Lst)) ((insort _qv_7 (cons _qv_8 _qv_9))=(cons (insort _qv_7 _qv_8) (insort _qv_7 _qv_9))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (insort (succ _t_14) _v_13)))=(nat-to-int (succ (len _v_13))))
NOW TESTING (forall ((Nat) (Lst) (Lst)) ((cons _qv_10 (insort _qv_11 _qv_12))=(insort (cons _qv_10 _qv_11) (cons _qv_10 _qv_12))))
USE ASSUMPTION FAILED

  backtrack to: ((nat-to-int (len (insort (succ _t_14) _v_13)))=(nat-to-int (succ (len _v_13))))
CURRENT SUBGOAL ((nat-to-int (len (insort (succ _t_14) _v_13)))=(nat-to-int (len (insort _t_14 _v_13))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (insort (succ _t_14) _v_13)))=(nat-to-int (len (insort _t_14 _v_13))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (insort (succ _t_14) _v_13)))=(nat-to-int (len (insort _t_14 _v_13))))
NOW TESTING (forall ((Nat) (Nat)) ((less _qv_2 _qv_3)=(less _qv_3 _qv_2)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (insort (succ _t_14) _v_13)))=(nat-to-int (len (insort _t_14 _v_13))))
NOW TESTING (forall ((Lst)) ((sort (sort _qv_4))=_qv_4))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (insort (succ _t_14) _v_13)))=(nat-to-int (len (insort _t_14 _v_13))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_5))=(nat-to-int _qv_5)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (insort (succ _t_14) _v_13)))=(nat-to-int (len (insort _t_14 _v_13))))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_6))=(nat-to-int _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (insort (succ _t_14) _v_13)))=(nat-to-int (len (insort _t_14 _v_13))))
NOW TESTING (forall ((Nat) (Lst) (Lst)) ((insort _qv_7 (cons _qv_8 _qv_9))=(cons (insort _qv_7 _qv_8) (insort _qv_7 _qv_9))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (insort (succ _t_14) _v_13)))=(nat-to-int (len (insort _t_14 _v_13))))
NOW TESTING (forall ((Nat) (Lst) (Lst)) ((cons _qv_10 (insort _qv_11 _qv_12))=(insort (cons _qv_10 _qv_11) (cons _qv_10 _qv_12))))
USE ASSUMPTION FAILED

  backtrack to: ((nat-to-int (len (insort (succ _t_14) _v_13)))=(nat-to-int (len (insort _t_14 _v_13))))
CURRENT SUBGOAL ((len (insort (succ _t_14) _v_13))=(len (insort _t_14 _v_13)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (insort (succ _t_14) _v_13))=(len (insort _t_14 _v_13)))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (insort (succ _t_14) _v_13))=(len (insort _t_14 _v_13)))
NOW TESTING (forall ((Nat) (Nat)) ((less _qv_2 _qv_3)=(less _qv_3 _qv_2)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (insort (succ _t_14) _v_13))=(len (insort _t_14 _v_13)))
NOW TESTING (forall ((Lst)) ((sort (sort _qv_4))=_qv_4))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (insort (succ _t_14) _v_13))=(len (insort _t_14 _v_13)))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_5))=(nat-to-int _qv_5)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (insort (succ _t_14) _v_13))=(len (insort _t_14 _v_13)))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_6))=(nat-to-int _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (insort (succ _t_14) _v_13))=(len (insort _t_14 _v_13)))
NOW TESTING (forall ((Nat) (Lst) (Lst)) ((insort _qv_7 (cons _qv_8 _qv_9))=(cons (insort _qv_7 _qv_8) (insort _qv_7 _qv_9))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (insort (succ _t_14) _v_13))=(len (insort _t_14 _v_13)))
NOW TESTING (forall ((Nat) (Lst) (Lst)) ((cons _qv_10 (insort _qv_11 _qv_12))=(insort (cons _qv_10 _qv_11) (cons _qv_10 _qv_12))))
USE ASSUMPTION FAILED

  backtrack to: ((len (insort (succ _t_14) _v_13))=(len (insort _t_14 _v_13)))
  rewritten [10]: ((len (insort (succ _t_14) _v_13))=(succ (len _v_13)))
  rewritten [2]: ((nat-to-int (len (insort (succ _t_14) _v_13)))=(nat-to-int (succ (len _v_13))))
  rewritten [3]: ((nat-to-int (len (insort (succ _t_14) _v_13)))=(1+(nat-to-int (len _v_13))))
CURRENT SUBGOAL ((nat-to-int (len (insort (succ _t_14) _v_13)))=(nat-to-int (succ (len _v_13))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (insort (succ _t_14) _v_13)))=(nat-to-int (succ (len _v_13))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (insort (succ _t_14) _v_13)))=(nat-to-int (succ (len _v_13))))
NOW TESTING (forall ((Nat) (Nat)) ((less _qv_2 _qv_3)=(less _qv_3 _qv_2)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (insort (succ _t_14) _v_13)))=(nat-to-int (succ (len _v_13))))
NOW TESTING (forall ((Lst)) ((sort (sort _qv_4))=_qv_4))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (insort (succ _t_14) _v_13)))=(nat-to-int (succ (len _v_13))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_5))=(nat-to-int _qv_5)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (insort (succ _t_14) _v_13)))=(nat-to-int (succ (len _v_13))))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_6))=(nat-to-int _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (insort (succ _t_14) _v_13)))=(nat-to-int (succ (len _v_13))))
NOW TESTING (forall ((Nat) (Lst) (Lst)) ((insort _qv_7 (cons _qv_8 _qv_9))=(cons (insort _qv_7 _qv_8) (insort _qv_7 _qv_9))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (insort (succ _t_14) _v_13)))=(nat-to-int (succ (len _v_13))))
NOW TESTING (forall ((Nat) (Lst) (Lst)) ((cons _qv_10 (insort _qv_11 _qv_12))=(insort (cons _qv_10 _qv_11) (cons _qv_10 _qv_12))))
USE ASSUMPTION FAILED

  backtrack to: ((nat-to-int (len (insort (succ _t_14) _v_13)))=(nat-to-int (succ (len _v_13))))
  rewritten [11]: ((nat-to-int (len (insort (succ _t_14) _v_13)))=(nat-to-int (len (insort _t_14 _v_13))))
CURRENT SUBGOAL ((nat-to-int (len (insort (succ _t_14) _v_13)))=(nat-to-int (succ (len _v_13))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (insort (succ _t_14) _v_13)))=(nat-to-int (succ (len _v_13))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (insort (succ _t_14) _v_13)))=(nat-to-int (succ (len _v_13))))
NOW TESTING (forall ((Nat) (Nat)) ((less _qv_2 _qv_3)=(less _qv_3 _qv_2)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (insort (succ _t_14) _v_13)))=(nat-to-int (succ (len _v_13))))
NOW TESTING (forall ((Lst)) ((sort (sort _qv_4))=_qv_4))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (insort (succ _t_14) _v_13)))=(nat-to-int (succ (len _v_13))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_5))=(nat-to-int _qv_5)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (insort (succ _t_14) _v_13)))=(nat-to-int (succ (len _v_13))))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_6))=(nat-to-int _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (insort (succ _t_14) _v_13)))=(nat-to-int (succ (len _v_13))))
NOW TESTING (forall ((Nat) (Lst) (Lst)) ((insort _qv_7 (cons _qv_8 _qv_9))=(cons (insort _qv_7 _qv_8) (insort _qv_7 _qv_9))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (insort (succ _t_14) _v_13)))=(nat-to-int (succ (len _v_13))))
NOW TESTING (forall ((Nat) (Lst) (Lst)) ((cons _qv_10 (insort _qv_11 _qv_12))=(insort (cons _qv_10 _qv_11) (cons _qv_10 _qv_12))))
USE ASSUMPTION FAILED

  backtrack to: ((nat-to-int (len (insort (succ _t_14) _v_13)))=(nat-to-int (succ (len _v_13))))
  rewritten [3]: ((nat-to-int (len (insort (succ _t_14) _v_13)))=(1+(nat-to-int (len _v_13))))
CURRENT SUBGOAL ((nat-to-int (len (insort (succ _t_14) _v_13)))=(nat-to-int (succ (len _v_13))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (insort (succ _t_14) _v_13)))=(nat-to-int (succ (len _v_13))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (insort (succ _t_14) _v_13)))=(nat-to-int (succ (len _v_13))))
NOW TESTING (forall ((Nat) (Nat)) ((less _qv_2 _qv_3)=(less _qv_3 _qv_2)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (insort (succ _t_14) _v_13)))=(nat-to-int (succ (len _v_13))))
NOW TESTING (forall ((Lst)) ((sort (sort _qv_4))=_qv_4))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (insort (succ _t_14) _v_13)))=(nat-to-int (succ (len _v_13))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_5))=(nat-to-int _qv_5)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (insort (succ _t_14) _v_13)))=(nat-to-int (succ (len _v_13))))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_6))=(nat-to-int _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (insort (succ _t_14) _v_13)))=(nat-to-int (succ (len _v_13))))
NOW TESTING (forall ((Nat) (Lst) (Lst)) ((insort _qv_7 (cons _qv_8 _qv_9))=(cons (insort _qv_7 _qv_8) (insort _qv_7 _qv_9))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (insort (succ _t_14) _v_13)))=(nat-to-int (succ (len _v_13))))
NOW TESTING (forall ((Nat) (Lst) (Lst)) ((cons _qv_10 (insort _qv_11 _qv_12))=(insort (cons _qv_10 _qv_11) (cons _qv_10 _qv_12))))
USE ASSUMPTION FAILED

  backtrack to: ((nat-to-int (len (insort (succ _t_14) _v_13)))=(nat-to-int (succ (len _v_13))))
  rewritten [11]: ((nat-to-int (len (insort (succ _t_14) _v_13)))=(nat-to-int (len (insort _t_14 _v_13))))
CURRENT SUBGOAL ((nat-to-int (len (insort (succ _t_14) _v_13)))=(nat-to-int (succ (len _v_13))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (insort (succ _t_14) _v_13)))=(nat-to-int (succ (len _v_13))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (insort (succ _t_14) _v_13)))=(nat-to-int (succ (len _v_13))))
NOW TESTING (forall ((Nat) (Nat)) ((less _qv_2 _qv_3)=(less _qv_3 _qv_2)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (insort (succ _t_14) _v_13)))=(nat-to-int (succ (len _v_13))))
NOW TESTING (forall ((Lst)) ((sort (sort _qv_4))=_qv_4))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (insort (succ _t_14) _v_13)))=(nat-to-int (succ (len _v_13))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_5))=(nat-to-int _qv_5)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (insort (succ _t_14) _v_13)))=(nat-to-int (succ (len _v_13))))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_6))=(nat-to-int _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (insort (succ _t_14) _v_13)))=(nat-to-int (succ (len _v_13))))
NOW TESTING (forall ((Nat) (Lst) (Lst)) ((insort _qv_7 (cons _qv_8 _qv_9))=(cons (insort _qv_7 _qv_8) (insort _qv_7 _qv_9))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (insort (succ _t_14) _v_13)))=(nat-to-int (succ (len _v_13))))
NOW TESTING (forall ((Nat) (Lst) (Lst)) ((cons _qv_10 (insort _qv_11 _qv_12))=(insort (cons _qv_10 _qv_11) (cons _qv_10 _qv_12))))
USE ASSUMPTION FAILED

  backtrack to: ((nat-to-int (len (insort (succ _t_14) _v_13)))=(nat-to-int (succ (len _v_13))))
CURRENT SUBGOAL ((len (insort (succ _t_14) _v_13))=(succ (len _v_13)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (insort (succ _t_14) _v_13))=(succ (len _v_13)))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (insort (succ _t_14) _v_13))=(succ (len _v_13)))
NOW TESTING (forall ((Nat) (Nat)) ((less _qv_2 _qv_3)=(less _qv_3 _qv_2)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (insort (succ _t_14) _v_13))=(succ (len _v_13)))
NOW TESTING (forall ((Lst)) ((sort (sort _qv_4))=_qv_4))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (insort (succ _t_14) _v_13))=(succ (len _v_13)))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_5))=(nat-to-int _qv_5)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (insort (succ _t_14) _v_13))=(succ (len _v_13)))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_6))=(nat-to-int _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (insort (succ _t_14) _v_13))=(succ (len _v_13)))
NOW TESTING (forall ((Nat) (Lst) (Lst)) ((insort _qv_7 (cons _qv_8 _qv_9))=(cons (insort _qv_7 _qv_8) (insort _qv_7 _qv_9))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (insort (succ _t_14) _v_13))=(succ (len _v_13)))
NOW TESTING (forall ((Nat) (Lst) (Lst)) ((cons _qv_10 (insort _qv_11 _qv_12))=(insort (cons _qv_10 _qv_11) (cons _qv_10 _qv_12))))
USE ASSUMPTION FAILED

  backtrack to: ((len (insort (succ _t_14) _v_13))=(succ (len _v_13)))
  rewritten [2]: ((nat-to-int (len (insort (succ _t_14) _v_13)))=(nat-to-int (succ (len _v_13))))
  rewritten [3]: ((nat-to-int (len (insort (succ _t_14) _v_13)))=(1+(nat-to-int (len _v_13))))
CURRENT SUBGOAL ((nat-to-int (len (insort (succ _t_14) _v_13)))=(nat-to-int (succ (len _v_13))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (insort (succ _t_14) _v_13)))=(nat-to-int (succ (len _v_13))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (insort (succ _t_14) _v_13)))=(nat-to-int (succ (len _v_13))))
NOW TESTING (forall ((Nat) (Nat)) ((less _qv_2 _qv_3)=(less _qv_3 _qv_2)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (insort (succ _t_14) _v_13)))=(nat-to-int (succ (len _v_13))))
NOW TESTING (forall ((Lst)) ((sort (sort _qv_4))=_qv_4))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (insort (succ _t_14) _v_13)))=(nat-to-int (succ (len _v_13))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_5))=(nat-to-int _qv_5)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (insort (succ _t_14) _v_13)))=(nat-to-int (succ (len _v_13))))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_6))=(nat-to-int _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (insort (succ _t_14) _v_13)))=(nat-to-int (succ (len _v_13))))
NOW TESTING (forall ((Nat) (Lst) (Lst)) ((insort _qv_7 (cons _qv_8 _qv_9))=(cons (insort _qv_7 _qv_8) (insort _qv_7 _qv_9))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (insort (succ _t_14) _v_13)))=(nat-to-int (succ (len _v_13))))
NOW TESTING (forall ((Nat) (Lst) (Lst)) ((cons _qv_10 (insort _qv_11 _qv_12))=(insort (cons _qv_10 _qv_11) (cons _qv_10 _qv_12))))
USE ASSUMPTION FAILED

  backtrack to: ((nat-to-int (len (insort (succ _t_14) _v_13)))=(nat-to-int (succ (len _v_13))))
  rewritten [11]: ((nat-to-int (len (insort (succ _t_14) _v_13)))=(nat-to-int (len (insort _t_14 _v_13))))
CURRENT SUBGOAL ((nat-to-int (len (insort (succ _t_14) _v_13)))=(nat-to-int (succ (len _v_13))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (insort (succ _t_14) _v_13)))=(nat-to-int (succ (len _v_13))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (insort (succ _t_14) _v_13)))=(nat-to-int (succ (len _v_13))))
NOW TESTING (forall ((Nat) (Nat)) ((less _qv_2 _qv_3)=(less _qv_3 _qv_2)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (insort (succ _t_14) _v_13)))=(nat-to-int (succ (len _v_13))))
NOW TESTING (forall ((Lst)) ((sort (sort _qv_4))=_qv_4))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (insort (succ _t_14) _v_13)))=(nat-to-int (succ (len _v_13))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_5))=(nat-to-int _qv_5)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (insort (succ _t_14) _v_13)))=(nat-to-int (succ (len _v_13))))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_6))=(nat-to-int _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (insort (succ _t_14) _v_13)))=(nat-to-int (succ (len _v_13))))
NOW TESTING (forall ((Nat) (Lst) (Lst)) ((insort _qv_7 (cons _qv_8 _qv_9))=(cons (insort _qv_7 _qv_8) (insort _qv_7 _qv_9))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (insort (succ _t_14) _v_13)))=(nat-to-int (succ (len _v_13))))
NOW TESTING (forall ((Nat) (Lst) (Lst)) ((cons _qv_10 (insort _qv_11 _qv_12))=(insort (cons _qv_10 _qv_11) (cons _qv_10 _qv_12))))
USE ASSUMPTION FAILED

  backtrack to: ((nat-to-int (len (insort (succ _t_14) _v_13)))=(nat-to-int (succ (len _v_13))))
  rewritten [3]: ((nat-to-int (len (insort (succ _t_14) _v_13)))=(1+(nat-to-int (len _v_13))))
CURRENT SUBGOAL ((nat-to-int (len (insort (succ _t_14) _v_13)))=(nat-to-int (succ (len _v_13))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (insort (succ _t_14) _v_13)))=(nat-to-int (succ (len _v_13))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (insort (succ _t_14) _v_13)))=(nat-to-int (succ (len _v_13))))
NOW TESTING (forall ((Nat) (Nat)) ((less _qv_2 _qv_3)=(less _qv_3 _qv_2)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (insort (succ _t_14) _v_13)))=(nat-to-int (succ (len _v_13))))
NOW TESTING (forall ((Lst)) ((sort (sort _qv_4))=_qv_4))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (insort (succ _t_14) _v_13)))=(nat-to-int (succ (len _v_13))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_5))=(nat-to-int _qv_5)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (insort (succ _t_14) _v_13)))=(nat-to-int (succ (len _v_13))))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_6))=(nat-to-int _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (insort (succ _t_14) _v_13)))=(nat-to-int (succ (len _v_13))))
NOW TESTING (forall ((Nat) (Lst) (Lst)) ((insort _qv_7 (cons _qv_8 _qv_9))=(cons (insort _qv_7 _qv_8) (insort _qv_7 _qv_9))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (insort (succ _t_14) _v_13)))=(nat-to-int (succ (len _v_13))))
NOW TESTING (forall ((Nat) (Lst) (Lst)) ((cons _qv_10 (insort _qv_11 _qv_12))=(insort (cons _qv_10 _qv_11) (cons _qv_10 _qv_12))))
USE ASSUMPTION FAILED

  backtrack to: ((nat-to-int (len (insort (succ _t_14) _v_13)))=(nat-to-int (succ (len _v_13))))
  rewritten [11]: ((nat-to-int (len (insort (succ _t_14) _v_13)))=(nat-to-int (len (insort _t_14 _v_13))))
CURRENT SUBGOAL ((nat-to-int (len (insort (succ _t_14) _v_13)))=(nat-to-int (succ (len _v_13))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (insort (succ _t_14) _v_13)))=(nat-to-int (succ (len _v_13))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (insort (succ _t_14) _v_13)))=(nat-to-int (succ (len _v_13))))
NOW TESTING (forall ((Nat) (Nat)) ((less _qv_2 _qv_3)=(less _qv_3 _qv_2)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (insort (succ _t_14) _v_13)))=(nat-to-int (succ (len _v_13))))
NOW TESTING (forall ((Lst)) ((sort (sort _qv_4))=_qv_4))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (insort (succ _t_14) _v_13)))=(nat-to-int (succ (len _v_13))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_5))=(nat-to-int _qv_5)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (insort (succ _t_14) _v_13)))=(nat-to-int (succ (len _v_13))))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_6))=(nat-to-int _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (insort (succ _t_14) _v_13)))=(nat-to-int (succ (len _v_13))))
NOW TESTING (forall ((Nat) (Lst) (Lst)) ((insort _qv_7 (cons _qv_8 _qv_9))=(cons (insort _qv_7 _qv_8) (insort _qv_7 _qv_9))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (insort (succ _t_14) _v_13)))=(nat-to-int (succ (len _v_13))))
NOW TESTING (forall ((Nat) (Lst) (Lst)) ((cons _qv_10 (insort _qv_11 _qv_12))=(insort (cons _qv_10 _qv_11) (cons _qv_10 _qv_12))))
USE ASSUMPTION FAILED

  backtrack to: ((nat-to-int (len (insort (succ _t_14) _v_13)))=(nat-to-int (succ (len _v_13))))
CURRENT SUBGOAL ((len (insort (succ _t_14) _v_13))=(succ (len _v_13)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (insort (succ _t_14) _v_13))=(succ (len _v_13)))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (insort (succ _t_14) _v_13))=(succ (len _v_13)))
NOW TESTING (forall ((Nat) (Nat)) ((less _qv_2 _qv_3)=(less _qv_3 _qv_2)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (insort (succ _t_14) _v_13))=(succ (len _v_13)))
NOW TESTING (forall ((Lst)) ((sort (sort _qv_4))=_qv_4))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (insort (succ _t_14) _v_13))=(succ (len _v_13)))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_5))=(nat-to-int _qv_5)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (insort (succ _t_14) _v_13))=(succ (len _v_13)))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_6))=(nat-to-int _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (insort (succ _t_14) _v_13))=(succ (len _v_13)))
NOW TESTING (forall ((Nat) (Lst) (Lst)) ((insort _qv_7 (cons _qv_8 _qv_9))=(cons (insort _qv_7 _qv_8) (insort _qv_7 _qv_9))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (insort (succ _t_14) _v_13))=(succ (len _v_13)))
NOW TESTING (forall ((Nat) (Lst) (Lst)) ((cons _qv_10 (insort _qv_11 _qv_12))=(insort (cons _qv_10 _qv_11) (cons _qv_10 _qv_12))))
USE ASSUMPTION FAILED

  backtrack to: ((len (insort (succ _t_14) _v_13))=(succ (len _v_13)))

The Knowledge Scheme currently contains the following lemmas:
	(forall ((Nat)) ((succ (succ _qv_15))=_qv_15))
	(forall ((Nat)) (0<=(nat-to-int _qv_16)))
	(forall ((Nat) (Nat)) ((less _qv_17 _qv_18)=(less _qv_18 _qv_17)))
	(forall ((Lst)) ((sort (sort _qv_19))=_qv_19))
	(forall ((Nat)) ((nat-to-int (succ _qv_20))=(nat-to-int _qv_20)))
	(forall ((Lst)) ((nat-to-int (len _qv_21))=(nat-to-int _qv_21)))
	(forall ((Nat) (Lst) (Lst)) ((insort _qv_22 (cons _qv_23 _qv_24))=(cons (insort _qv_22 _qv_23) (insort _qv_22 _qv_24))))
	(forall ((Nat) (Lst) (Lst)) ((cons _qv_25 (insort _qv_26 _qv_27))=(insort (cons _qv_25 _qv_26) (cons _qv_25 _qv_27))))

CURRENT SUBGOAL ((nat-to-int (len (insort (succ zero) _v_28)))=(nat-to-int (succ (len _v_28))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_15))=_qv_15))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (insort (succ zero) _v_28)))=(nat-to-int (succ (len _v_28))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_16)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (insort (succ zero) _v_28)))=(nat-to-int (succ (len _v_28))))
NOW TESTING (forall ((Nat) (Nat)) ((less _qv_17 _qv_18)=(less _qv_18 _qv_17)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (insort (succ zero) _v_28)))=(nat-to-int (succ (len _v_28))))
NOW TESTING (forall ((Lst)) ((sort (sort _qv_19))=_qv_19))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (insort (succ zero) _v_28)))=(nat-to-int (succ (len _v_28))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_20))=(nat-to-int _qv_20)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (insort (succ zero) _v_28)))=(nat-to-int (succ (len _v_28))))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_21))=(nat-to-int _qv_21)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (insort (succ zero) _v_28)))=(nat-to-int (succ (len _v_28))))
NOW TESTING (forall ((Nat) (Lst) (Lst)) ((insort _qv_22 (cons _qv_23 _qv_24))=(cons (insort _qv_22 _qv_23) (insort _qv_22 _qv_24))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (insort (succ zero) _v_28)))=(nat-to-int (succ (len _v_28))))
NOW TESTING (forall ((Nat) (Lst) (Lst)) ((cons _qv_25 (insort _qv_26 _qv_27))=(insort (cons _qv_25 _qv_26) (cons _qv_25 _qv_27))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (insort (succ zero) _v_28)))=(nat-to-int (succ (len _v_28))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_15))=_qv_15))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (insort (succ zero) _v_28)))=(nat-to-int (succ (len _v_28))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_16)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (insort (succ zero) _v_28)))=(nat-to-int (succ (len _v_28))))
NOW TESTING (forall ((Nat) (Nat)) ((less _qv_17 _qv_18)=(less _qv_18 _qv_17)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (insort (succ zero) _v_28)))=(nat-to-int (succ (len _v_28))))
NOW TESTING (forall ((Lst)) ((sort (sort _qv_19))=_qv_19))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (insort (succ zero) _v_28)))=(nat-to-int (succ (len _v_28))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_20))=(nat-to-int _qv_20)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (insort (succ zero) _v_28)))=(nat-to-int (succ (len _v_28))))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_21))=(nat-to-int _qv_21)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (insort (succ zero) _v_28)))=(nat-to-int (succ (len _v_28))))
NOW TESTING (forall ((Nat) (Lst) (Lst)) ((insort _qv_22 (cons _qv_23 _qv_24))=(cons (insort _qv_22 _qv_23) (insort _qv_22 _qv_24))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (insort (succ zero) _v_28)))=(nat-to-int (succ (len _v_28))))
NOW TESTING (forall ((Nat) (Lst) (Lst)) ((cons _qv_25 (insort _qv_26 _qv_27))=(insort (cons _qv_25 _qv_26) (cons _qv_25 _qv_27))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (insort (succ zero) _v_28)))=(nat-to-int (succ (len _v_28))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_15))=_qv_15))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (insort (succ zero) _v_28)))=(nat-to-int (succ (len _v_28))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_16)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (insort (succ zero) _v_28)))=(nat-to-int (succ (len _v_28))))
NOW TESTING (forall ((Nat) (Nat)) ((less _qv_17 _qv_18)=(less _qv_18 _qv_17)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (insort (succ zero) _v_28)))=(nat-to-int (succ (len _v_28))))
NOW TESTING (forall ((Lst)) ((sort (sort _qv_19))=_qv_19))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (insort (succ zero) _v_28)))=(nat-to-int (succ (len _v_28))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_20))=(nat-to-int _qv_20)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (insort (succ zero) _v_28)))=(nat-to-int (succ (len _v_28))))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_21))=(nat-to-int _qv_21)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (insort (succ zero) _v_28)))=(nat-to-int (succ (len _v_28))))
NOW TESTING (forall ((Nat) (Lst) (Lst)) ((insort _qv_22 (cons _qv_23 _qv_24))=(cons (insort _qv_22 _qv_23) (insort _qv_22 _qv_24))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (insort (succ zero) _v_28)))=(nat-to-int (succ (len _v_28))))
NOW TESTING (forall ((Nat) (Lst) (Lst)) ((cons _qv_25 (insort _qv_26 _qv_27))=(insort (cons _qv_25 _qv_26) (cons _qv_25 _qv_27))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (insort (succ zero) _v_28)))=(nat-to-int (succ (len _v_28))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_15))=_qv_15))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (insort (succ zero) _v_28)))=(nat-to-int (succ (len _v_28))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_16)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (insort (succ zero) _v_28)))=(nat-to-int (succ (len _v_28))))
NOW TESTING (forall ((Nat) (Nat)) ((less _qv_17 _qv_18)=(less _qv_18 _qv_17)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (insort (succ zero) _v_28)))=(nat-to-int (succ (len _v_28))))
NOW TESTING (forall ((Lst)) ((sort (sort _qv_19))=_qv_19))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (insort (succ zero) _v_28)))=(nat-to-int (succ (len _v_28))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_20))=(nat-to-int _qv_20)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (insort (succ zero) _v_28)))=(nat-to-int (succ (len _v_28))))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_21))=(nat-to-int _qv_21)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (insort (succ zero) _v_28)))=(nat-to-int (succ (len _v_28))))
NOW TESTING (forall ((Nat) (Lst) (Lst)) ((insort _qv_22 (cons _qv_23 _qv_24))=(cons (insort _qv_22 _qv_23) (insort _qv_22 _qv_24))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (insort (succ zero) _v_28)))=(nat-to-int (succ (len _v_28))))
NOW TESTING (forall ((Nat) (Lst) (Lst)) ((cons _qv_25 (insort _qv_26 _qv_27))=(insort (cons _qv_25 _qv_26) (cons _qv_25 _qv_27))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (insort (succ zero) _v_28))=(succ (len _v_28)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_15))=_qv_15))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (insort (succ zero) _v_28))=(succ (len _v_28)))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_16)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (insort (succ zero) _v_28))=(succ (len _v_28)))
NOW TESTING (forall ((Nat) (Nat)) ((less _qv_17 _qv_18)=(less _qv_18 _qv_17)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (insort (succ zero) _v_28))=(succ (len _v_28)))
NOW TESTING (forall ((Lst)) ((sort (sort _qv_19))=_qv_19))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (insort (succ zero) _v_28))=(succ (len _v_28)))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_20))=(nat-to-int _qv_20)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (insort (succ zero) _v_28))=(succ (len _v_28)))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_21))=(nat-to-int _qv_21)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (insort (succ zero) _v_28))=(succ (len _v_28)))
NOW TESTING (forall ((Nat) (Lst) (Lst)) ((insort _qv_22 (cons _qv_23 _qv_24))=(cons (insort _qv_22 _qv_23) (insort _qv_22 _qv_24))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (insort (succ zero) _v_28))=(succ (len _v_28)))
NOW TESTING (forall ((Nat) (Lst) (Lst)) ((cons _qv_25 (insort _qv_26 _qv_27))=(insort (cons _qv_25 _qv_26) (cons _qv_25 _qv_27))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (insort (succ zero) _v_28)))=(nat-to-int (succ (len _v_28))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_15))=_qv_15))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (insort (succ zero) _v_28)))=(nat-to-int (succ (len _v_28))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_16)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (insort (succ zero) _v_28)))=(nat-to-int (succ (len _v_28))))
NOW TESTING (forall ((Nat) (Nat)) ((less _qv_17 _qv_18)=(less _qv_18 _qv_17)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (insort (succ zero) _v_28)))=(nat-to-int (succ (len _v_28))))
NOW TESTING (forall ((Lst)) ((sort (sort _qv_19))=_qv_19))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (insort (succ zero) _v_28)))=(nat-to-int (succ (len _v_28))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_20))=(nat-to-int _qv_20)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (insort (succ zero) _v_28)))=(nat-to-int (succ (len _v_28))))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_21))=(nat-to-int _qv_21)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (insort (succ zero) _v_28)))=(nat-to-int (succ (len _v_28))))
NOW TESTING (forall ((Nat) (Lst) (Lst)) ((insort _qv_22 (cons _qv_23 _qv_24))=(cons (insort _qv_22 _qv_23) (insort _qv_22 _qv_24))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (insort (succ zero) _v_28)))=(nat-to-int (succ (len _v_28))))
NOW TESTING (forall ((Nat) (Lst) (Lst)) ((cons _qv_25 (insort _qv_26 _qv_27))=(insort (cons _qv_25 _qv_26) (cons _qv_25 _qv_27))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (insort (succ zero) _v_28)))=(nat-to-int (succ (len _v_28))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_15))=_qv_15))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (insort (succ zero) _v_28)))=(nat-to-int (succ (len _v_28))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_16)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (insort (succ zero) _v_28)))=(nat-to-int (succ (len _v_28))))
NOW TESTING (forall ((Nat) (Nat)) ((less _qv_17 _qv_18)=(less _qv_18 _qv_17)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (insort (succ zero) _v_28)))=(nat-to-int (succ (len _v_28))))
NOW TESTING (forall ((Lst)) ((sort (sort _qv_19))=_qv_19))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (insort (succ zero) _v_28)))=(nat-to-int (succ (len _v_28))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_20))=(nat-to-int _qv_20)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (insort (succ zero) _v_28)))=(nat-to-int (succ (len _v_28))))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_21))=(nat-to-int _qv_21)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (insort (succ zero) _v_28)))=(nat-to-int (succ (len _v_28))))
NOW TESTING (forall ((Nat) (Lst) (Lst)) ((insort _qv_22 (cons _qv_23 _qv_24))=(cons (insort _qv_22 _qv_23) (insort _qv_22 _qv_24))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (insort (succ zero) _v_28)))=(nat-to-int (succ (len _v_28))))
NOW TESTING (forall ((Nat) (Lst) (Lst)) ((cons _qv_25 (insort _qv_26 _qv_27))=(insort (cons _qv_25 _qv_26) (cons _qv_25 _qv_27))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (insort (succ zero) _v_28)))=(nat-to-int (len (insort _t_14 _v_28))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_15))=_qv_15))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (insort (succ zero) _v_28)))=(nat-to-int (len (insort _t_14 _v_28))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_16)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (insort (succ zero) _v_28)))=(nat-to-int (len (insort _t_14 _v_28))))
NOW TESTING (forall ((Nat) (Nat)) ((less _qv_17 _qv_18)=(less _qv_18 _qv_17)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (insort (succ zero) _v_28)))=(nat-to-int (len (insort _t_14 _v_28))))
NOW TESTING (forall ((Lst)) ((sort (sort _qv_19))=_qv_19))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (insort (succ zero) _v_28)))=(nat-to-int (len (insort _t_14 _v_28))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_20))=(nat-to-int _qv_20)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (insort (succ zero) _v_28)))=(nat-to-int (len (insort _t_14 _v_28))))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_21))=(nat-to-int _qv_21)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (insort (succ zero) _v_28)))=(nat-to-int (len (insort _t_14 _v_28))))
NOW TESTING (forall ((Nat) (Lst) (Lst)) ((insort _qv_22 (cons _qv_23 _qv_24))=(cons (insort _qv_22 _qv_23) (insort _qv_22 _qv_24))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (insort (succ zero) _v_28)))=(nat-to-int (len (insort _t_14 _v_28))))
NOW TESTING (forall ((Nat) (Lst) (Lst)) ((cons _qv_25 (insort _qv_26 _qv_27))=(insort (cons _qv_25 _qv_26) (cons _qv_25 _qv_27))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (insort (succ zero) _v_28)))=(nat-to-int (succ (len _v_28))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_15))=_qv_15))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (insort (succ zero) _v_28)))=(nat-to-int (succ (len _v_28))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_16)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (insort (succ zero) _v_28)))=(nat-to-int (succ (len _v_28))))
NOW TESTING (forall ((Nat) (Nat)) ((less _qv_17 _qv_18)=(less _qv_18 _qv_17)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (insort (succ zero) _v_28)))=(nat-to-int (succ (len _v_28))))
NOW TESTING (forall ((Lst)) ((sort (sort _qv_19))=_qv_19))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (insort (succ zero) _v_28)))=(nat-to-int (succ (len _v_28))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_20))=(nat-to-int _qv_20)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (insort (succ zero) _v_28)))=(nat-to-int (succ (len _v_28))))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_21))=(nat-to-int _qv_21)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (insort (succ zero) _v_28)))=(nat-to-int (succ (len _v_28))))
NOW TESTING (forall ((Nat) (Lst) (Lst)) ((insort _qv_22 (cons _qv_23 _qv_24))=(cons (insort _qv_22 _qv_23) (insort _qv_22 _qv_24))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (insort (succ zero) _v_28)))=(nat-to-int (succ (len _v_28))))
NOW TESTING (forall ((Nat) (Lst) (Lst)) ((cons _qv_25 (insort _qv_26 _qv_27))=(insort (cons _qv_25 _qv_26) (cons _qv_25 _qv_27))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (insort (succ zero) _v_28)))=(nat-to-int (succ (len _v_28))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_15))=_qv_15))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (insort (succ zero) _v_28)))=(nat-to-int (succ (len _v_28))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_16)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (insort (succ zero) _v_28)))=(nat-to-int (succ (len _v_28))))
NOW TESTING (forall ((Nat) (Nat)) ((less _qv_17 _qv_18)=(less _qv_18 _qv_17)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (insort (succ zero) _v_28)))=(nat-to-int (succ (len _v_28))))
NOW TESTING (forall ((Lst)) ((sort (sort _qv_19))=_qv_19))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (insort (succ zero) _v_28)))=(nat-to-int (succ (len _v_28))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_20))=(nat-to-int _qv_20)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (insort (succ zero) _v_28)))=(nat-to-int (succ (len _v_28))))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_21))=(nat-to-int _qv_21)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (insort (succ zero) _v_28)))=(nat-to-int (succ (len _v_28))))
NOW TESTING (forall ((Nat) (Lst) (Lst)) ((insort _qv_22 (cons _qv_23 _qv_24))=(cons (insort _qv_22 _qv_23) (insort _qv_22 _qv_24))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (insort (succ zero) _v_28)))=(nat-to-int (succ (len _v_28))))
NOW TESTING (forall ((Nat) (Lst) (Lst)) ((cons _qv_25 (insort _qv_26 _qv_27))=(insort (cons _qv_25 _qv_26) (cons _qv_25 _qv_27))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (insort (succ zero) _v_28)))=(nat-to-int (len (insort _t_14 _v_28))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_15))=_qv_15))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (insort (succ zero) _v_28)))=(nat-to-int (len (insort _t_14 _v_28))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_16)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (insort (succ zero) _v_28)))=(nat-to-int (len (insort _t_14 _v_28))))
NOW TESTING (forall ((Nat) (Nat)) ((less _qv_17 _qv_18)=(less _qv_18 _qv_17)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (insort (succ zero) _v_28)))=(nat-to-int (len (insort _t_14 _v_28))))
NOW TESTING (forall ((Lst)) ((sort (sort _qv_19))=_qv_19))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (insort (succ zero) _v_28)))=(nat-to-int (len (insort _t_14 _v_28))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_20))=(nat-to-int _qv_20)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (insort (succ zero) _v_28)))=(nat-to-int (len (insort _t_14 _v_28))))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_21))=(nat-to-int _qv_21)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (insort (succ zero) _v_28)))=(nat-to-int (len (insort _t_14 _v_28))))
NOW TESTING (forall ((Nat) (Lst) (Lst)) ((insort _qv_22 (cons _qv_23 _qv_24))=(cons (insort _qv_22 _qv_23) (insort _qv_22 _qv_24))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (insort (succ zero) _v_28)))=(nat-to-int (len (insort _t_14 _v_28))))
NOW TESTING (forall ((Nat) (Lst) (Lst)) ((cons _qv_25 (insort _qv_26 _qv_27))=(insort (cons _qv_25 _qv_26) (cons _qv_25 _qv_27))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (insort (succ zero) _v_28))=(len (insort _t_14 _v_28)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_15))=_qv_15))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (insort (succ zero) _v_28))=(len (insort _t_14 _v_28)))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_16)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (insort (succ zero) _v_28))=(len (insort _t_14 _v_28)))
NOW TESTING (forall ((Nat) (Nat)) ((less _qv_17 _qv_18)=(less _qv_18 _qv_17)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (insort (succ zero) _v_28))=(len (insort _t_14 _v_28)))
NOW TESTING (forall ((Lst)) ((sort (sort _qv_19))=_qv_19))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (insort (succ zero) _v_28))=(len (insort _t_14 _v_28)))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_20))=(nat-to-int _qv_20)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (insort (succ zero) _v_28))=(len (insort _t_14 _v_28)))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_21))=(nat-to-int _qv_21)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (insort (succ zero) _v_28))=(len (insort _t_14 _v_28)))
NOW TESTING (forall ((Nat) (Lst) (Lst)) ((insort _qv_22 (cons _qv_23 _qv_24))=(cons (insort _qv_22 _qv_23) (insort _qv_22 _qv_24))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (insort (succ zero) _v_28))=(len (insort _t_14 _v_28)))
NOW TESTING (forall ((Nat) (Lst) (Lst)) ((cons _qv_25 (insort _qv_26 _qv_27))=(insort (cons _qv_25 _qv_26) (cons _qv_25 _qv_27))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (insort (succ zero) _v_28)))=(nat-to-int (succ (len _v_28))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_15))=_qv_15))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (insort (succ zero) _v_28)))=(nat-to-int (succ (len _v_28))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_16)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (insort (succ zero) _v_28)))=(nat-to-int (succ (len _v_28))))
NOW TESTING (forall ((Nat) (Nat)) ((less _qv_17 _qv_18)=(less _qv_18 _qv_17)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (insort (succ zero) _v_28)))=(nat-to-int (succ (len _v_28))))
NOW TESTING (forall ((Lst)) ((sort (sort _qv_19))=_qv_19))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (insort (succ zero) _v_28)))=(nat-to-int (succ (len _v_28))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_20))=(nat-to-int _qv_20)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (insort (succ zero) _v_28)))=(nat-to-int (succ (len _v_28))))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_21))=(nat-to-int _qv_21)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (insort (succ zero) _v_28)))=(nat-to-int (succ (len _v_28))))
NOW TESTING (forall ((Nat) (Lst) (Lst)) ((insort _qv_22 (cons _qv_23 _qv_24))=(cons (insort _qv_22 _qv_23) (insort _qv_22 _qv_24))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (insort (succ zero) _v_28)))=(nat-to-int (succ (len _v_28))))
NOW TESTING (forall ((Nat) (Lst) (Lst)) ((cons _qv_25 (insort _qv_26 _qv_27))=(insort (cons _qv_25 _qv_26) (cons _qv_25 _qv_27))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (insort (succ zero) _v_28)))=(nat-to-int (succ (len _v_28))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_15))=_qv_15))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (insort (succ zero) _v_28)))=(nat-to-int (succ (len _v_28))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_16)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (insort (succ zero) _v_28)))=(nat-to-int (succ (len _v_28))))
NOW TESTING (forall ((Nat) (Nat)) ((less _qv_17 _qv_18)=(less _qv_18 _qv_17)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (insort (succ zero) _v_28)))=(nat-to-int (succ (len _v_28))))
NOW TESTING (forall ((Lst)) ((sort (sort _qv_19))=_qv_19))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (insort (succ zero) _v_28)))=(nat-to-int (succ (len _v_28))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_20))=(nat-to-int _qv_20)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (insort (succ zero) _v_28)))=(nat-to-int (succ (len _v_28))))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_21))=(nat-to-int _qv_21)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (insort (succ zero) _v_28)))=(nat-to-int (succ (len _v_28))))
NOW TESTING (forall ((Nat) (Lst) (Lst)) ((insort _qv_22 (cons _qv_23 _qv_24))=(cons (insort _qv_22 _qv_23) (insort _qv_22 _qv_24))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (insort (succ zero) _v_28)))=(nat-to-int (succ (len _v_28))))
NOW TESTING (forall ((Nat) (Lst) (Lst)) ((cons _qv_25 (insort _qv_26 _qv_27))=(insort (cons _qv_25 _qv_26) (cons _qv_25 _qv_27))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (insort (succ zero) _v_28)))=(nat-to-int (succ (len _v_28))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_15))=_qv_15))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (insort (succ zero) _v_28)))=(nat-to-int (succ (len _v_28))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_16)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (insort (succ zero) _v_28)))=(nat-to-int (succ (len _v_28))))
NOW TESTING (forall ((Nat) (Nat)) ((less _qv_17 _qv_18)=(less _qv_18 _qv_17)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (insort (succ zero) _v_28)))=(nat-to-int (succ (len _v_28))))
NOW TESTING (forall ((Lst)) ((sort (sort _qv_19))=_qv_19))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (insort (succ zero) _v_28)))=(nat-to-int (succ (len _v_28))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_20))=(nat-to-int _qv_20)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (insort (succ zero) _v_28)))=(nat-to-int (succ (len _v_28))))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_21))=(nat-to-int _qv_21)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (insort (succ zero) _v_28)))=(nat-to-int (succ (len _v_28))))
NOW TESTING (forall ((Nat) (Lst) (Lst)) ((insort _qv_22 (cons _qv_23 _qv_24))=(cons (insort _qv_22 _qv_23) (insort _qv_22 _qv_24))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (insort (succ zero) _v_28)))=(nat-to-int (succ (len _v_28))))
NOW TESTING (forall ((Nat) (Lst) (Lst)) ((cons _qv_25 (insort _qv_26 _qv_27))=(insort (cons _qv_25 _qv_26) (cons _qv_25 _qv_27))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (insort (succ zero) _v_28)))=(nat-to-int (succ (len _v_28))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_15))=_qv_15))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (insort (succ zero) _v_28)))=(nat-to-int (succ (len _v_28))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_16)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (insort (succ zero) _v_28)))=(nat-to-int (succ (len _v_28))))
NOW TESTING (forall ((Nat) (Nat)) ((less _qv_17 _qv_18)=(less _qv_18 _qv_17)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (insort (succ zero) _v_28)))=(nat-to-int (succ (len _v_28))))
NOW TESTING (forall ((Lst)) ((sort (sort _qv_19))=_qv_19))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (insort (succ zero) _v_28)))=(nat-to-int (succ (len _v_28))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_20))=(nat-to-int _qv_20)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (insort (succ zero) _v_28)))=(nat-to-int (succ (len _v_28))))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_21))=(nat-to-int _qv_21)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (insort (succ zero) _v_28)))=(nat-to-int (succ (len _v_28))))
NOW TESTING (forall ((Nat) (Lst) (Lst)) ((insort _qv_22 (cons _qv_23 _qv_24))=(cons (insort _qv_22 _qv_23) (insort _qv_22 _qv_24))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (insort (succ zero) _v_28)))=(nat-to-int (succ (len _v_28))))
NOW TESTING (forall ((Nat) (Lst) (Lst)) ((cons _qv_25 (insort _qv_26 _qv_27))=(insort (cons _qv_25 _qv_26) (cons _qv_25 _qv_27))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (insort (succ zero) _v_28))=(succ (len _v_28)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_15))=_qv_15))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (insort (succ zero) _v_28))=(succ (len _v_28)))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_16)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (insort (succ zero) _v_28))=(succ (len _v_28)))
NOW TESTING (forall ((Nat) (Nat)) ((less _qv_17 _qv_18)=(less _qv_18 _qv_17)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (insort (succ zero) _v_28))=(succ (len _v_28)))
NOW TESTING (forall ((Lst)) ((sort (sort _qv_19))=_qv_19))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (insort (succ zero) _v_28))=(succ (len _v_28)))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_20))=(nat-to-int _qv_20)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (insort (succ zero) _v_28))=(succ (len _v_28)))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_21))=(nat-to-int _qv_21)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (insort (succ zero) _v_28))=(succ (len _v_28)))
NOW TESTING (forall ((Nat) (Lst) (Lst)) ((insort _qv_22 (cons _qv_23 _qv_24))=(cons (insort _qv_22 _qv_23) (insort _qv_22 _qv_24))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (insort (succ zero) _v_28))=(succ (len _v_28)))
NOW TESTING (forall ((Nat) (Lst) (Lst)) ((cons _qv_25 (insort _qv_26 _qv_27))=(insort (cons _qv_25 _qv_26) (cons _qv_25 _qv_27))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (insort (succ zero) _v_28)))=(nat-to-int (succ (len _v_28))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_15))=_qv_15))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (insort (succ zero) _v_28)))=(nat-to-int (succ (len _v_28))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_16)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (insort (succ zero) _v_28)))=(nat-to-int (succ (len _v_28))))
NOW TESTING (forall ((Nat) (Nat)) ((less _qv_17 _qv_18)=(less _qv_18 _qv_17)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (insort (succ zero) _v_28)))=(nat-to-int (succ (len _v_28))))
NOW TESTING (forall ((Lst)) ((sort (sort _qv_19))=_qv_19))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (insort (succ zero) _v_28)))=(nat-to-int (succ (len _v_28))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_20))=(nat-to-int _qv_20)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (insort (succ zero) _v_28)))=(nat-to-int (succ (len _v_28))))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_21))=(nat-to-int _qv_21)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (insort (succ zero) _v_28)))=(nat-to-int (succ (len _v_28))))
NOW TESTING (forall ((Nat) (Lst) (Lst)) ((insort _qv_22 (cons _qv_23 _qv_24))=(cons (insort _qv_22 _qv_23) (insort _qv_22 _qv_24))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (insort (succ zero) _v_28)))=(nat-to-int (succ (len _v_28))))
NOW TESTING (forall ((Nat) (Lst) (Lst)) ((cons _qv_25 (insort _qv_26 _qv_27))=(insort (cons _qv_25 _qv_26) (cons _qv_25 _qv_27))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (insort (succ zero) _v_28)))=(nat-to-int (succ (len _v_28))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_15))=_qv_15))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (insort (succ zero) _v_28)))=(nat-to-int (succ (len _v_28))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_16)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (insort (succ zero) _v_28)))=(nat-to-int (succ (len _v_28))))
NOW TESTING (forall ((Nat) (Nat)) ((less _qv_17 _qv_18)=(less _qv_18 _qv_17)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (insort (succ zero) _v_28)))=(nat-to-int (succ (len _v_28))))
NOW TESTING (forall ((Lst)) ((sort (sort _qv_19))=_qv_19))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (insort (succ zero) _v_28)))=(nat-to-int (succ (len _v_28))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_20))=(nat-to-int _qv_20)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (insort (succ zero) _v_28)))=(nat-to-int (succ (len _v_28))))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_21))=(nat-to-int _qv_21)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (insort (succ zero) _v_28)))=(nat-to-int (succ (len _v_28))))
NOW TESTING (forall ((Nat) (Lst) (Lst)) ((insort _qv_22 (cons _qv_23 _qv_24))=(cons (insort _qv_22 _qv_23) (insort _qv_22 _qv_24))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (insort (succ zero) _v_28)))=(nat-to-int (succ (len _v_28))))
NOW TESTING (forall ((Nat) (Lst) (Lst)) ((cons _qv_25 (insort _qv_26 _qv_27))=(insort (cons _qv_25 _qv_26) (cons _qv_25 _qv_27))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (insort (succ zero) _v_28)))=(nat-to-int (succ (len _v_28))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_15))=_qv_15))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (insort (succ zero) _v_28)))=(nat-to-int (succ (len _v_28))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_16)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (insort (succ zero) _v_28)))=(nat-to-int (succ (len _v_28))))
NOW TESTING (forall ((Nat) (Nat)) ((less _qv_17 _qv_18)=(less _qv_18 _qv_17)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (insort (succ zero) _v_28)))=(nat-to-int (succ (len _v_28))))
NOW TESTING (forall ((Lst)) ((sort (sort _qv_19))=_qv_19))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (insort (succ zero) _v_28)))=(nat-to-int (succ (len _v_28))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_20))=(nat-to-int _qv_20)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (insort (succ zero) _v_28)))=(nat-to-int (succ (len _v_28))))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_21))=(nat-to-int _qv_21)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (insort (succ zero) _v_28)))=(nat-to-int (succ (len _v_28))))
NOW TESTING (forall ((Nat) (Lst) (Lst)) ((insort _qv_22 (cons _qv_23 _qv_24))=(cons (insort _qv_22 _qv_23) (insort _qv_22 _qv_24))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (insort (succ zero) _v_28)))=(nat-to-int (succ (len _v_28))))
NOW TESTING (forall ((Nat) (Lst) (Lst)) ((cons _qv_25 (insort _qv_26 _qv_27))=(insort (cons _qv_25 _qv_26) (cons _qv_25 _qv_27))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (insort (succ zero) _v_28)))=(nat-to-int (succ (len _v_28))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_15))=_qv_15))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (insort (succ zero) _v_28)))=(nat-to-int (succ (len _v_28))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_16)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (insort (succ zero) _v_28)))=(nat-to-int (succ (len _v_28))))
NOW TESTING (forall ((Nat) (Nat)) ((less _qv_17 _qv_18)=(less _qv_18 _qv_17)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (insort (succ zero) _v_28)))=(nat-to-int (succ (len _v_28))))
NOW TESTING (forall ((Lst)) ((sort (sort _qv_19))=_qv_19))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (insort (succ zero) _v_28)))=(nat-to-int (succ (len _v_28))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_20))=(nat-to-int _qv_20)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (insort (succ zero) _v_28)))=(nat-to-int (succ (len _v_28))))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_21))=(nat-to-int _qv_21)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (insort (succ zero) _v_28)))=(nat-to-int (succ (len _v_28))))
NOW TESTING (forall ((Nat) (Lst) (Lst)) ((insort _qv_22 (cons _qv_23 _qv_24))=(cons (insort _qv_22 _qv_23) (insort _qv_22 _qv_24))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (insort (succ zero) _v_28)))=(nat-to-int (succ (len _v_28))))
NOW TESTING (forall ((Nat) (Lst) (Lst)) ((cons _qv_25 (insort _qv_26 _qv_27))=(insort (cons _qv_25 _qv_26) (cons _qv_25 _qv_27))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (insort (succ zero) _v_28))=(succ (len _v_28)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_15))=_qv_15))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (insort (succ zero) _v_28))=(succ (len _v_28)))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_16)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (insort (succ zero) _v_28))=(succ (len _v_28)))
NOW TESTING (forall ((Nat) (Nat)) ((less _qv_17 _qv_18)=(less _qv_18 _qv_17)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (insort (succ zero) _v_28))=(succ (len _v_28)))
NOW TESTING (forall ((Lst)) ((sort (sort _qv_19))=_qv_19))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (insort (succ zero) _v_28))=(succ (len _v_28)))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_20))=(nat-to-int _qv_20)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (insort (succ zero) _v_28))=(succ (len _v_28)))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_21))=(nat-to-int _qv_21)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (insort (succ zero) _v_28))=(succ (len _v_28)))
NOW TESTING (forall ((Nat) (Lst) (Lst)) ((insort _qv_22 (cons _qv_23 _qv_24))=(cons (insort _qv_22 _qv_23) (insort _qv_22 _qv_24))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (insort (succ zero) _v_28))=(succ (len _v_28)))
NOW TESTING (forall ((Nat) (Lst) (Lst)) ((cons _qv_25 (insort _qv_26 _qv_27))=(insort (cons _qv_25 _qv_26) (cons _qv_25 _qv_27))))
USE ASSUMPTION FAILED


The Knowledge Scheme currently contains the following lemmas:
	(forall ((Nat)) ((succ (succ _qv_29))=_qv_29))
	(forall ((Nat)) (0<=(nat-to-int _qv_30)))
	(forall ((Nat) (Nat)) ((less _qv_31 _qv_32)=(less _qv_32 _qv_31)))
	(forall ((Lst)) ((sort (sort _qv_33))=_qv_33))
	(forall ((Nat)) ((nat-to-int (succ _qv_34))=(nat-to-int _qv_34)))
	(forall ((Lst)) ((nat-to-int (len _qv_35))=(nat-to-int _qv_35)))
	(forall ((Nat) (Lst) (Lst)) ((insort _qv_36 (cons _qv_37 _qv_38))=(cons (insort _qv_36 _qv_37) (insort _qv_36 _qv_38))))
	(forall ((Nat) (Lst) (Lst)) ((cons _qv_39 (insort _qv_40 _qv_41))=(insort (cons _qv_39 _qv_40) (cons _qv_39 _qv_41))))

CURRENT SUBGOAL ((nat-to-int (len (insort (succ (succ _t_29)) _v_28)))=(nat-to-int (succ (len _v_28))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_15))=_qv_15))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (insort (succ (succ _t_29)) _v_28)))=(nat-to-int (succ (len _v_28))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_16)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (insort (succ (succ _t_29)) _v_28)))=(nat-to-int (succ (len _v_28))))
NOW TESTING (forall ((Nat) (Nat)) ((less _qv_17 _qv_18)=(less _qv_18 _qv_17)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (insort (succ (succ _t_29)) _v_28)))=(nat-to-int (succ (len _v_28))))
NOW TESTING (forall ((Lst)) ((sort (sort _qv_19))=_qv_19))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (insort (succ (succ _t_29)) _v_28)))=(nat-to-int (succ (len _v_28))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_20))=(nat-to-int _qv_20)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (insort (succ (succ _t_29)) _v_28)))=(nat-to-int (succ (len _v_28))))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_21))=(nat-to-int _qv_21)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (insort (succ (succ _t_29)) _v_28)))=(nat-to-int (succ (len _v_28))))
NOW TESTING (forall ((Nat) (Lst) (Lst)) ((insort _qv_22 (cons _qv_23 _qv_24))=(cons (insort _qv_22 _qv_23) (insort _qv_22 _qv_24))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (insort (succ (succ _t_29)) _v_28)))=(nat-to-int (succ (len _v_28))))
NOW TESTING (forall ((Nat) (Lst) (Lst)) ((cons _qv_25 (insort _qv_26 _qv_27))=(insort (cons _qv_25 _qv_26) (cons _qv_25 _qv_27))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (insort (succ (succ _t_29)) _v_28)))=(nat-to-int (succ (len _v_28))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_15))=_qv_15))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (insort (succ (succ _t_29)) _v_28)))=(nat-to-int (succ (len _v_28))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_16)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (insort (succ (succ _t_29)) _v_28)))=(nat-to-int (succ (len _v_28))))
NOW TESTING (forall ((Nat) (Nat)) ((less _qv_17 _qv_18)=(less _qv_18 _qv_17)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (insort (succ (succ _t_29)) _v_28)))=(nat-to-int (succ (len _v_28))))
NOW TESTING (forall ((Lst)) ((sort (sort _qv_19))=_qv_19))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (insort (succ (succ _t_29)) _v_28)))=(nat-to-int (succ (len _v_28))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_20))=(nat-to-int _qv_20)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (insort (succ (succ _t_29)) _v_28)))=(nat-to-int (succ (len _v_28))))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_21))=(nat-to-int _qv_21)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (insort (succ (succ _t_29)) _v_28)))=(nat-to-int (succ (len _v_28))))
NOW TESTING (forall ((Nat) (Lst) (Lst)) ((insort _qv_22 (cons _qv_23 _qv_24))=(cons (insort _qv_22 _qv_23) (insort _qv_22 _qv_24))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (insort (succ (succ _t_29)) _v_28)))=(nat-to-int (succ (len _v_28))))
NOW TESTING (forall ((Nat) (Lst) (Lst)) ((cons _qv_25 (insort _qv_26 _qv_27))=(insort (cons _qv_25 _qv_26) (cons _qv_25 _qv_27))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (insort (succ (succ _t_29)) _v_28)))=(nat-to-int (succ (len _v_28))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_15))=_qv_15))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (insort (succ (succ _t_29)) _v_28)))=(nat-to-int (succ (len _v_28))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_16)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (insort (succ (succ _t_29)) _v_28)))=(nat-to-int (succ (len _v_28))))
NOW TESTING (forall ((Nat) (Nat)) ((less _qv_17 _qv_18)=(less _qv_18 _qv_17)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (insort (succ (succ _t_29)) _v_28)))=(nat-to-int (succ (len _v_28))))
NOW TESTING (forall ((Lst)) ((sort (sort _qv_19))=_qv_19))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (insort (succ (succ _t_29)) _v_28)))=(nat-to-int (succ (len _v_28))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_20))=(nat-to-int _qv_20)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (insort (succ (succ _t_29)) _v_28)))=(nat-to-int (succ (len _v_28))))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_21))=(nat-to-int _qv_21)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (insort (succ (succ _t_29)) _v_28)))=(nat-to-int (succ (len _v_28))))
NOW TESTING (forall ((Nat) (Lst) (Lst)) ((insort _qv_22 (cons _qv_23 _qv_24))=(cons (insort _qv_22 _qv_23) (insort _qv_22 _qv_24))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (insort (succ (succ _t_29)) _v_28)))=(nat-to-int (succ (len _v_28))))
NOW TESTING (forall ((Nat) (Lst) (Lst)) ((cons _qv_25 (insort _qv_26 _qv_27))=(insort (cons _qv_25 _qv_26) (cons _qv_25 _qv_27))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (insort (succ (succ _t_29)) _v_28)))=(nat-to-int (succ (len _v_28))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_15))=_qv_15))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (insort (succ (succ _t_29)) _v_28)))=(nat-to-int (succ (len _v_28))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_16)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (insort (succ (succ _t_29)) _v_28)))=(nat-to-int (succ (len _v_28))))
NOW TESTING (forall ((Nat) (Nat)) ((less _qv_17 _qv_18)=(less _qv_18 _qv_17)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (insort (succ (succ _t_29)) _v_28)))=(nat-to-int (succ (len _v_28))))
NOW TESTING (forall ((Lst)) ((sort (sort _qv_19))=_qv_19))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (insort (succ (succ _t_29)) _v_28)))=(nat-to-int (succ (len _v_28))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_20))=(nat-to-int _qv_20)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (insort (succ (succ _t_29)) _v_28)))=(nat-to-int (succ (len _v_28))))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_21))=(nat-to-int _qv_21)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (insort (succ (succ _t_29)) _v_28)))=(nat-to-int (succ (len _v_28))))
NOW TESTING (forall ((Nat) (Lst) (Lst)) ((insort _qv_22 (cons _qv_23 _qv_24))=(cons (insort _qv_22 _qv_23) (insort _qv_22 _qv_24))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (insort (succ (succ _t_29)) _v_28)))=(nat-to-int (succ (len _v_28))))
NOW TESTING (forall ((Nat) (Lst) (Lst)) ((cons _qv_25 (insort _qv_26 _qv_27))=(insort (cons _qv_25 _qv_26) (cons _qv_25 _qv_27))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (insort (succ (succ _t_29)) _v_28))=(succ (len _v_28)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_15))=_qv_15))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (insort (succ (succ _t_29)) _v_28))=(succ (len _v_28)))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_16)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (insort (succ (succ _t_29)) _v_28))=(succ (len _v_28)))
NOW TESTING (forall ((Nat) (Nat)) ((less _qv_17 _qv_18)=(less _qv_18 _qv_17)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (insort (succ (succ _t_29)) _v_28))=(succ (len _v_28)))
NOW TESTING (forall ((Lst)) ((sort (sort _qv_19))=_qv_19))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (insort (succ (succ _t_29)) _v_28))=(succ (len _v_28)))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_20))=(nat-to-int _qv_20)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (insort (succ (succ _t_29)) _v_28))=(succ (len _v_28)))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_21))=(nat-to-int _qv_21)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (insort (succ (succ _t_29)) _v_28))=(succ (len _v_28)))
NOW TESTING (forall ((Nat) (Lst) (Lst)) ((insort _qv_22 (cons _qv_23 _qv_24))=(cons (insort _qv_22 _qv_23) (insort _qv_22 _qv_24))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (insort (succ (succ _t_29)) _v_28))=(succ (len _v_28)))
NOW TESTING (forall ((Nat) (Lst) (Lst)) ((cons _qv_25 (insort _qv_26 _qv_27))=(insort (cons _qv_25 _qv_26) (cons _qv_25 _qv_27))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (insort (succ (succ _t_29)) _v_28)))=(nat-to-int (succ (len _v_28))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_15))=_qv_15))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (insort (succ (succ _t_29)) _v_28)))=(nat-to-int (succ (len _v_28))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_16)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (insort (succ (succ _t_29)) _v_28)))=(nat-to-int (succ (len _v_28))))
NOW TESTING (forall ((Nat) (Nat)) ((less _qv_17 _qv_18)=(less _qv_18 _qv_17)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (insort (succ (succ _t_29)) _v_28)))=(nat-to-int (succ (len _v_28))))
NOW TESTING (forall ((Lst)) ((sort (sort _qv_19))=_qv_19))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (insort (succ (succ _t_29)) _v_28)))=(nat-to-int (succ (len _v_28))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_20))=(nat-to-int _qv_20)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (insort (succ (succ _t_29)) _v_28)))=(nat-to-int (succ (len _v_28))))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_21))=(nat-to-int _qv_21)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (insort (succ (succ _t_29)) _v_28)))=(nat-to-int (succ (len _v_28))))
NOW TESTING (forall ((Nat) (Lst) (Lst)) ((insort _qv_22 (cons _qv_23 _qv_24))=(cons (insort _qv_22 _qv_23) (insort _qv_22 _qv_24))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (insort (succ (succ _t_29)) _v_28)))=(nat-to-int (succ (len _v_28))))
NOW TESTING (forall ((Nat) (Lst) (Lst)) ((cons _qv_25 (insort _qv_26 _qv_27))=(insort (cons _qv_25 _qv_26) (cons _qv_25 _qv_27))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (insort (succ (succ _t_29)) _v_28)))=(nat-to-int (succ (len _v_28))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_15))=_qv_15))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (insort (succ (succ _t_29)) _v_28)))=(nat-to-int (succ (len _v_28))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_16)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (insort (succ (succ _t_29)) _v_28)))=(nat-to-int (succ (len _v_28))))
NOW TESTING (forall ((Nat) (Nat)) ((less _qv_17 _qv_18)=(less _qv_18 _qv_17)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (insort (succ (succ _t_29)) _v_28)))=(nat-to-int (succ (len _v_28))))
NOW TESTING (forall ((Lst)) ((sort (sort _qv_19))=_qv_19))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (insort (succ (succ _t_29)) _v_28)))=(nat-to-int (succ (len _v_28))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_20))=(nat-to-int _qv_20)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (insort (succ (succ _t_29)) _v_28)))=(nat-to-int (succ (len _v_28))))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_21))=(nat-to-int _qv_21)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (insort (succ (succ _t_29)) _v_28)))=(nat-to-int (succ (len _v_28))))
NOW TESTING (forall ((Nat) (Lst) (Lst)) ((insort _qv_22 (cons _qv_23 _qv_24))=(cons (insort _qv_22 _qv_23) (insort _qv_22 _qv_24))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (insort (succ (succ _t_29)) _v_28)))=(nat-to-int (succ (len _v_28))))
NOW TESTING (forall ((Nat) (Lst) (Lst)) ((cons _qv_25 (insort _qv_26 _qv_27))=(insort (cons _qv_25 _qv_26) (cons _qv_25 _qv_27))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (insort (succ (succ _t_29)) _v_28)))=(nat-to-int (len (insort _t_14 _v_28))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_15))=_qv_15))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (insort (succ (succ _t_29)) _v_28)))=(nat-to-int (len (insort _t_14 _v_28))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_16)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (insort (succ (succ _t_29)) _v_28)))=(nat-to-int (len (insort _t_14 _v_28))))
NOW TESTING (forall ((Nat) (Nat)) ((less _qv_17 _qv_18)=(less _qv_18 _qv_17)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (insort (succ (succ _t_29)) _v_28)))=(nat-to-int (len (insort _t_14 _v_28))))
NOW TESTING (forall ((Lst)) ((sort (sort _qv_19))=_qv_19))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (insort (succ (succ _t_29)) _v_28)))=(nat-to-int (len (insort _t_14 _v_28))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_20))=(nat-to-int _qv_20)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (insort (succ (succ _t_29)) _v_28)))=(nat-to-int (len (insort _t_14 _v_28))))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_21))=(nat-to-int _qv_21)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (insort (succ (succ _t_29)) _v_28)))=(nat-to-int (len (insort _t_14 _v_28))))
NOW TESTING (forall ((Nat) (Lst) (Lst)) ((insort _qv_22 (cons _qv_23 _qv_24))=(cons (insort _qv_22 _qv_23) (insort _qv_22 _qv_24))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (insort (succ (succ _t_29)) _v_28)))=(nat-to-int (len (insort _t_14 _v_28))))
NOW TESTING (forall ((Nat) (Lst) (Lst)) ((cons _qv_25 (insort _qv_26 _qv_27))=(insort (cons _qv_25 _qv_26) (cons _qv_25 _qv_27))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (insort (succ (succ _t_29)) _v_28)))=(nat-to-int (succ (len _v_28))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_15))=_qv_15))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (insort (succ (succ _t_29)) _v_28)))=(nat-to-int (succ (len _v_28))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_16)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (insort (succ (succ _t_29)) _v_28)))=(nat-to-int (succ (len _v_28))))
NOW TESTING (forall ((Nat) (Nat)) ((less _qv_17 _qv_18)=(less _qv_18 _qv_17)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (insort (succ (succ _t_29)) _v_28)))=(nat-to-int (succ (len _v_28))))
NOW TESTING (forall ((Lst)) ((sort (sort _qv_19))=_qv_19))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (insort (succ (succ _t_29)) _v_28)))=(nat-to-int (succ (len _v_28))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_20))=(nat-to-int _qv_20)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (insort (succ (succ _t_29)) _v_28)))=(nat-to-int (succ (len _v_28))))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_21))=(nat-to-int _qv_21)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (insort (succ (succ _t_29)) _v_28)))=(nat-to-int (succ (len _v_28))))
NOW TESTING (forall ((Nat) (Lst) (Lst)) ((insort _qv_22 (cons _qv_23 _qv_24))=(cons (insort _qv_22 _qv_23) (insort _qv_22 _qv_24))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (insort (succ (succ _t_29)) _v_28)))=(nat-to-int (succ (len _v_28))))
NOW TESTING (forall ((Nat) (Lst) (Lst)) ((cons _qv_25 (insort _qv_26 _qv_27))=(insort (cons _qv_25 _qv_26) (cons _qv_25 _qv_27))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (insort (succ (succ _t_29)) _v_28)))=(nat-to-int (succ (len _v_28))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_15))=_qv_15))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (insort (succ (succ _t_29)) _v_28)))=(nat-to-int (succ (len _v_28))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_16)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (insort (succ (succ _t_29)) _v_28)))=(nat-to-int (succ (len _v_28))))
NOW TESTING (forall ((Nat) (Nat)) ((less _qv_17 _qv_18)=(less _qv_18 _qv_17)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (insort (succ (succ _t_29)) _v_28)))=(nat-to-int (succ (len _v_28))))
NOW TESTING (forall ((Lst)) ((sort (sort _qv_19))=_qv_19))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (insort (succ (succ _t_29)) _v_28)))=(nat-to-int (succ (len _v_28))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_20))=(nat-to-int _qv_20)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (insort (succ (succ _t_29)) _v_28)))=(nat-to-int (succ (len _v_28))))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_21))=(nat-to-int _qv_21)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (insort (succ (succ _t_29)) _v_28)))=(nat-to-int (succ (len _v_28))))
NOW TESTING (forall ((Nat) (Lst) (Lst)) ((insort _qv_22 (cons _qv_23 _qv_24))=(cons (insort _qv_22 _qv_23) (insort _qv_22 _qv_24))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (insort (succ (succ _t_29)) _v_28)))=(nat-to-int (succ (len _v_28))))
NOW TESTING (forall ((Nat) (Lst) (Lst)) ((cons _qv_25 (insort _qv_26 _qv_27))=(insort (cons _qv_25 _qv_26) (cons _qv_25 _qv_27))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (insort (succ (succ _t_29)) _v_28)))=(nat-to-int (len (insort _t_14 _v_28))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_15))=_qv_15))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (insort (succ (succ _t_29)) _v_28)))=(nat-to-int (len (insort _t_14 _v_28))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_16)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (insort (succ (succ _t_29)) _v_28)))=(nat-to-int (len (insort _t_14 _v_28))))
NOW TESTING (forall ((Nat) (Nat)) ((less _qv_17 _qv_18)=(less _qv_18 _qv_17)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (insort (succ (succ _t_29)) _v_28)))=(nat-to-int (len (insort _t_14 _v_28))))
NOW TESTING (forall ((Lst)) ((sort (sort _qv_19))=_qv_19))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (insort (succ (succ _t_29)) _v_28)))=(nat-to-int (len (insort _t_14 _v_28))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_20))=(nat-to-int _qv_20)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (insort (succ (succ _t_29)) _v_28)))=(nat-to-int (len (insort _t_14 _v_28))))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_21))=(nat-to-int _qv_21)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (insort (succ (succ _t_29)) _v_28)))=(nat-to-int (len (insort _t_14 _v_28))))
NOW TESTING (forall ((Nat) (Lst) (Lst)) ((insort _qv_22 (cons _qv_23 _qv_24))=(cons (insort _qv_22 _qv_23) (insort _qv_22 _qv_24))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (insort (succ (succ _t_29)) _v_28)))=(nat-to-int (len (insort _t_14 _v_28))))
NOW TESTING (forall ((Nat) (Lst) (Lst)) ((cons _qv_25 (insort _qv_26 _qv_27))=(insort (cons _qv_25 _qv_26) (cons _qv_25 _qv_27))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (insort (succ (succ _t_29)) _v_28))=(len (insort _t_14 _v_28)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_15))=_qv_15))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (insort (succ (succ _t_29)) _v_28))=(len (insort _t_14 _v_28)))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_16)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (insort (succ (succ _t_29)) _v_28))=(len (insort _t_14 _v_28)))
NOW TESTING (forall ((Nat) (Nat)) ((less _qv_17 _qv_18)=(less _qv_18 _qv_17)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (insort (succ (succ _t_29)) _v_28))=(len (insort _t_14 _v_28)))
NOW TESTING (forall ((Lst)) ((sort (sort _qv_19))=_qv_19))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (insort (succ (succ _t_29)) _v_28))=(len (insort _t_14 _v_28)))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_20))=(nat-to-int _qv_20)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (insort (succ (succ _t_29)) _v_28))=(len (insort _t_14 _v_28)))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_21))=(nat-to-int _qv_21)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (insort (succ (succ _t_29)) _v_28))=(len (insort _t_14 _v_28)))
NOW TESTING (forall ((Nat) (Lst) (Lst)) ((insort _qv_22 (cons _qv_23 _qv_24))=(cons (insort _qv_22 _qv_23) (insort _qv_22 _qv_24))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (insort (succ (succ _t_29)) _v_28))=(len (insort _t_14 _v_28)))
NOW TESTING (forall ((Nat) (Lst) (Lst)) ((cons _qv_25 (insort _qv_26 _qv_27))=(insort (cons _qv_25 _qv_26) (cons _qv_25 _qv_27))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (insort (succ (succ _t_29)) _v_28)))=(nat-to-int (succ (len _v_28))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_15))=_qv_15))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (insort (succ (succ _t_29)) _v_28)))=(nat-to-int (succ (len _v_28))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_16)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (insort (succ (succ _t_29)) _v_28)))=(nat-to-int (succ (len _v_28))))
NOW TESTING (forall ((Nat) (Nat)) ((less _qv_17 _qv_18)=(less _qv_18 _qv_17)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (insort (succ (succ _t_29)) _v_28)))=(nat-to-int (succ (len _v_28))))
NOW TESTING (forall ((Lst)) ((sort (sort _qv_19))=_qv_19))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (insort (succ (succ _t_29)) _v_28)))=(nat-to-int (succ (len _v_28))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_20))=(nat-to-int _qv_20)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (insort (succ (succ _t_29)) _v_28)))=(nat-to-int (succ (len _v_28))))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_21))=(nat-to-int _qv_21)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (insort (succ (succ _t_29)) _v_28)))=(nat-to-int (succ (len _v_28))))
NOW TESTING (forall ((Nat) (Lst) (Lst)) ((insort _qv_22 (cons _qv_23 _qv_24))=(cons (insort _qv_22 _qv_23) (insort _qv_22 _qv_24))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (insort (succ (succ _t_29)) _v_28)))=(nat-to-int (succ (len _v_28))))
NOW TESTING (forall ((Nat) (Lst) (Lst)) ((cons _qv_25 (insort _qv_26 _qv_27))=(insort (cons _qv_25 _qv_26) (cons _qv_25 _qv_27))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (insort (succ (succ _t_29)) _v_28)))=(nat-to-int (succ (len _v_28))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_15))=_qv_15))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (insort (succ (succ _t_29)) _v_28)))=(nat-to-int (succ (len _v_28))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_16)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (insort (succ (succ _t_29)) _v_28)))=(nat-to-int (succ (len _v_28))))
NOW TESTING (forall ((Nat) (Nat)) ((less _qv_17 _qv_18)=(less _qv_18 _qv_17)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (insort (succ (succ _t_29)) _v_28)))=(nat-to-int (succ (len _v_28))))
NOW TESTING (forall ((Lst)) ((sort (sort _qv_19))=_qv_19))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (insort (succ (succ _t_29)) _v_28)))=(nat-to-int (succ (len _v_28))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_20))=(nat-to-int _qv_20)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (insort (succ (succ _t_29)) _v_28)))=(nat-to-int (succ (len _v_28))))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_21))=(nat-to-int _qv_21)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (insort (succ (succ _t_29)) _v_28)))=(nat-to-int (succ (len _v_28))))
NOW TESTING (forall ((Nat) (Lst) (Lst)) ((insort _qv_22 (cons _qv_23 _qv_24))=(cons (insort _qv_22 _qv_23) (insort _qv_22 _qv_24))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (insort (succ (succ _t_29)) _v_28)))=(nat-to-int (succ (len _v_28))))
NOW TESTING (forall ((Nat) (Lst) (Lst)) ((cons _qv_25 (insort _qv_26 _qv_27))=(insort (cons _qv_25 _qv_26) (cons _qv_25 _qv_27))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (insort (succ (succ _t_29)) _v_28)))=(nat-to-int (succ (len _v_28))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_15))=_qv_15))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (insort (succ (succ _t_29)) _v_28)))=(nat-to-int (succ (len _v_28))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_16)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (insort (succ (succ _t_29)) _v_28)))=(nat-to-int (succ (len _v_28))))
NOW TESTING (forall ((Nat) (Nat)) ((less _qv_17 _qv_18)=(less _qv_18 _qv_17)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (insort (succ (succ _t_29)) _v_28)))=(nat-to-int (succ (len _v_28))))
NOW TESTING (forall ((Lst)) ((sort (sort _qv_19))=_qv_19))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (insort (succ (succ _t_29)) _v_28)))=(nat-to-int (succ (len _v_28))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_20))=(nat-to-int _qv_20)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (insort (succ (succ _t_29)) _v_28)))=(nat-to-int (succ (len _v_28))))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_21))=(nat-to-int _qv_21)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (insort (succ (succ _t_29)) _v_28)))=(nat-to-int (succ (len _v_28))))
NOW TESTING (forall ((Nat) (Lst) (Lst)) ((insort _qv_22 (cons _qv_23 _qv_24))=(cons (insort _qv_22 _qv_23) (insort _qv_22 _qv_24))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (insort (succ (succ _t_29)) _v_28)))=(nat-to-int (succ (len _v_28))))
NOW TESTING (forall ((Nat) (Lst) (Lst)) ((cons _qv_25 (insort _qv_26 _qv_27))=(insort (cons _qv_25 _qv_26) (cons _qv_25 _qv_27))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (insort (succ (succ _t_29)) _v_28)))=(nat-to-int (succ (len _v_28))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_15))=_qv_15))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (insort (succ (succ _t_29)) _v_28)))=(nat-to-int (succ (len _v_28))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_16)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (insort (succ (succ _t_29)) _v_28)))=(nat-to-int (succ (len _v_28))))
NOW TESTING (forall ((Nat) (Nat)) ((less _qv_17 _qv_18)=(less _qv_18 _qv_17)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (insort (succ (succ _t_29)) _v_28)))=(nat-to-int (succ (len _v_28))))
NOW TESTING (forall ((Lst)) ((sort (sort _qv_19))=_qv_19))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (insort (succ (succ _t_29)) _v_28)))=(nat-to-int (succ (len _v_28))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_20))=(nat-to-int _qv_20)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (insort (succ (succ _t_29)) _v_28)))=(nat-to-int (succ (len _v_28))))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_21))=(nat-to-int _qv_21)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (insort (succ (succ _t_29)) _v_28)))=(nat-to-int (succ (len _v_28))))
NOW TESTING (forall ((Nat) (Lst) (Lst)) ((insort _qv_22 (cons _qv_23 _qv_24))=(cons (insort _qv_22 _qv_23) (insort _qv_22 _qv_24))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (insort (succ (succ _t_29)) _v_28)))=(nat-to-int (succ (len _v_28))))
NOW TESTING (forall ((Nat) (Lst) (Lst)) ((cons _qv_25 (insort _qv_26 _qv_27))=(insort (cons _qv_25 _qv_26) (cons _qv_25 _qv_27))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (insort (succ (succ _t_29)) _v_28))=(succ (len _v_28)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_15))=_qv_15))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (insort (succ (succ _t_29)) _v_28))=(succ (len _v_28)))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_16)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (insort (succ (succ _t_29)) _v_28))=(succ (len _v_28)))
NOW TESTING (forall ((Nat) (Nat)) ((less _qv_17 _qv_18)=(less _qv_18 _qv_17)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (insort (succ (succ _t_29)) _v_28))=(succ (len _v_28)))
NOW TESTING (forall ((Lst)) ((sort (sort _qv_19))=_qv_19))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (insort (succ (succ _t_29)) _v_28))=(succ (len _v_28)))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_20))=(nat-to-int _qv_20)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (insort (succ (succ _t_29)) _v_28))=(succ (len _v_28)))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_21))=(nat-to-int _qv_21)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (insort (succ (succ _t_29)) _v_28))=(succ (len _v_28)))
NOW TESTING (forall ((Nat) (Lst) (Lst)) ((insort _qv_22 (cons _qv_23 _qv_24))=(cons (insort _qv_22 _qv_23) (insort _qv_22 _qv_24))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (insort (succ (succ _t_29)) _v_28))=(succ (len _v_28)))
NOW TESTING (forall ((Nat) (Lst) (Lst)) ((cons _qv_25 (insort _qv_26 _qv_27))=(insort (cons _qv_25 _qv_26) (cons _qv_25 _qv_27))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (insort (succ (succ _t_29)) _v_28)))=(nat-to-int (succ (len _v_28))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_15))=_qv_15))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (insort (succ (succ _t_29)) _v_28)))=(nat-to-int (succ (len _v_28))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_16)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (insort (succ (succ _t_29)) _v_28)))=(nat-to-int (succ (len _v_28))))
NOW TESTING (forall ((Nat) (Nat)) ((less _qv_17 _qv_18)=(less _qv_18 _qv_17)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (insort (succ (succ _t_29)) _v_28)))=(nat-to-int (succ (len _v_28))))
NOW TESTING (forall ((Lst)) ((sort (sort _qv_19))=_qv_19))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (insort (succ (succ _t_29)) _v_28)))=(nat-to-int (succ (len _v_28))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_20))=(nat-to-int _qv_20)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (insort (succ (succ _t_29)) _v_28)))=(nat-to-int (succ (len _v_28))))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_21))=(nat-to-int _qv_21)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (insort (succ (succ _t_29)) _v_28)))=(nat-to-int (succ (len _v_28))))
NOW TESTING (forall ((Nat) (Lst) (Lst)) ((insort _qv_22 (cons _qv_23 _qv_24))=(cons (insort _qv_22 _qv_23) (insort _qv_22 _qv_24))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (insort (succ (succ _t_29)) _v_28)))=(nat-to-int (succ (len _v_28))))
NOW TESTING (forall ((Nat) (Lst) (Lst)) ((cons _qv_25 (insort _qv_26 _qv_27))=(insort (cons _qv_25 _qv_26) (cons _qv_25 _qv_27))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (insort (succ (succ _t_29)) _v_28)))=(nat-to-int (succ (len _v_28))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_15))=_qv_15))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (insort (succ (succ _t_29)) _v_28)))=(nat-to-int (succ (len _v_28))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_16)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (insort (succ (succ _t_29)) _v_28)))=(nat-to-int (succ (len _v_28))))
NOW TESTING (forall ((Nat) (Nat)) ((less _qv_17 _qv_18)=(less _qv_18 _qv_17)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (insort (succ (succ _t_29)) _v_28)))=(nat-to-int (succ (len _v_28))))
NOW TESTING (forall ((Lst)) ((sort (sort _qv_19))=_qv_19))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (insort (succ (succ _t_29)) _v_28)))=(nat-to-int (succ (len _v_28))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_20))=(nat-to-int _qv_20)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (insort (succ (succ _t_29)) _v_28)))=(nat-to-int (succ (len _v_28))))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_21))=(nat-to-int _qv_21)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (insort (succ (succ _t_29)) _v_28)))=(nat-to-int (succ (len _v_28))))
NOW TESTING (forall ((Nat) (Lst) (Lst)) ((insort _qv_22 (cons _qv_23 _qv_24))=(cons (insort _qv_22 _qv_23) (insort _qv_22 _qv_24))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (insort (succ (succ _t_29)) _v_28)))=(nat-to-int (succ (len _v_28))))
NOW TESTING (forall ((Nat) (Lst) (Lst)) ((cons _qv_25 (insort _qv_26 _qv_27))=(insort (cons _qv_25 _qv_26) (cons _qv_25 _qv_27))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (insort (succ (succ _t_29)) _v_28)))=(nat-to-int (succ (len _v_28))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_15))=_qv_15))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (insort (succ (succ _t_29)) _v_28)))=(nat-to-int (succ (len _v_28))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_16)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (insort (succ (succ _t_29)) _v_28)))=(nat-to-int (succ (len _v_28))))
NOW TESTING (forall ((Nat) (Nat)) ((less _qv_17 _qv_18)=(less _qv_18 _qv_17)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (insort (succ (succ _t_29)) _v_28)))=(nat-to-int (succ (len _v_28))))
NOW TESTING (forall ((Lst)) ((sort (sort _qv_19))=_qv_19))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (insort (succ (succ _t_29)) _v_28)))=(nat-to-int (succ (len _v_28))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_20))=(nat-to-int _qv_20)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (insort (succ (succ _t_29)) _v_28)))=(nat-to-int (succ (len _v_28))))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_21))=(nat-to-int _qv_21)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (insort (succ (succ _t_29)) _v_28)))=(nat-to-int (succ (len _v_28))))
NOW TESTING (forall ((Nat) (Lst) (Lst)) ((insort _qv_22 (cons _qv_23 _qv_24))=(cons (insort _qv_22 _qv_23) (insort _qv_22 _qv_24))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (insort (succ (succ _t_29)) _v_28)))=(nat-to-int (succ (len _v_28))))
NOW TESTING (forall ((Nat) (Lst) (Lst)) ((cons _qv_25 (insort _qv_26 _qv_27))=(insort (cons _qv_25 _qv_26) (cons _qv_25 _qv_27))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (insort (succ (succ _t_29)) _v_28)))=(nat-to-int (succ (len _v_28))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_15))=_qv_15))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (insort (succ (succ _t_29)) _v_28)))=(nat-to-int (succ (len _v_28))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_16)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (insort (succ (succ _t_29)) _v_28)))=(nat-to-int (succ (len _v_28))))
NOW TESTING (forall ((Nat) (Nat)) ((less _qv_17 _qv_18)=(less _qv_18 _qv_17)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (insort (succ (succ _t_29)) _v_28)))=(nat-to-int (succ (len _v_28))))
NOW TESTING (forall ((Lst)) ((sort (sort _qv_19))=_qv_19))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (insort (succ (succ _t_29)) _v_28)))=(nat-to-int (succ (len _v_28))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_20))=(nat-to-int _qv_20)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (insort (succ (succ _t_29)) _v_28)))=(nat-to-int (succ (len _v_28))))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_21))=(nat-to-int _qv_21)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (insort (succ (succ _t_29)) _v_28)))=(nat-to-int (succ (len _v_28))))
NOW TESTING (forall ((Nat) (Lst) (Lst)) ((insort _qv_22 (cons _qv_23 _qv_24))=(cons (insort _qv_22 _qv_23) (insort _qv_22 _qv_24))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (insort (succ (succ _t_29)) _v_28)))=(nat-to-int (succ (len _v_28))))
NOW TESTING (forall ((Nat) (Lst) (Lst)) ((cons _qv_25 (insort _qv_26 _qv_27))=(insort (cons _qv_25 _qv_26) (cons _qv_25 _qv_27))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (insort (succ (succ _t_29)) _v_28))=(succ (len _v_28)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_15))=_qv_15))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (insort (succ (succ _t_29)) _v_28))=(succ (len _v_28)))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_16)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (insort (succ (succ _t_29)) _v_28))=(succ (len _v_28)))
NOW TESTING (forall ((Nat) (Nat)) ((less _qv_17 _qv_18)=(less _qv_18 _qv_17)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (insort (succ (succ _t_29)) _v_28))=(succ (len _v_28)))
NOW TESTING (forall ((Lst)) ((sort (sort _qv_19))=_qv_19))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (insort (succ (succ _t_29)) _v_28))=(succ (len _v_28)))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_20))=(nat-to-int _qv_20)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (insort (succ (succ _t_29)) _v_28))=(succ (len _v_28)))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_21))=(nat-to-int _qv_21)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (insort (succ (succ _t_29)) _v_28))=(succ (len _v_28)))
NOW TESTING (forall ((Nat) (Lst) (Lst)) ((insort _qv_22 (cons _qv_23 _qv_24))=(cons (insort _qv_22 _qv_23) (insort _qv_22 _qv_24))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (insort (succ (succ _t_29)) _v_28))=(succ (len _v_28)))
NOW TESTING (forall ((Nat) (Lst) (Lst)) ((cons _qv_25 (insort _qv_26 _qv_27))=(insort (cons _qv_25 _qv_26) (cons _qv_25 _qv_27))))
USE ASSUMPTION FAILED


The Knowledge Scheme currently contains the following lemmas:
	(forall ((Nat)) ((succ (succ _qv_30))=_qv_30))
	(forall ((Nat)) (0<=(nat-to-int _qv_31)))
	(forall ((Nat) (Nat)) ((less _qv_32 _qv_33)=(less _qv_33 _qv_32)))
	(forall ((Lst)) ((sort (sort _qv_34))=_qv_34))
	(forall ((Nat)) ((nat-to-int (succ _qv_35))=(nat-to-int _qv_35)))
	(forall ((Lst)) ((nat-to-int (len _qv_36))=(nat-to-int _qv_36)))
	(forall ((Nat) (Lst) (Lst)) ((insort _qv_37 (cons _qv_38 _qv_39))=(cons (insort _qv_37 _qv_38) (insort _qv_37 _qv_39))))
	(forall ((Nat) (Lst) (Lst)) ((cons _qv_40 (insort _qv_41 _qv_42))=(insort (cons _qv_40 _qv_41) (cons _qv_40 _qv_42))))

CURRENT SUBGOAL ((nat-to-int (len (insort (succ (succ zero)) _v_43)))=(nat-to-int (succ (len _v_43))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_30))=_qv_30))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (insort (succ (succ zero)) _v_43)))=(nat-to-int (succ (len _v_43))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_31)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (insort (succ (succ zero)) _v_43)))=(nat-to-int (succ (len _v_43))))
NOW TESTING (forall ((Nat) (Nat)) ((less _qv_32 _qv_33)=(less _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (insort (succ (succ zero)) _v_43)))=(nat-to-int (succ (len _v_43))))
NOW TESTING (forall ((Lst)) ((sort (sort _qv_34))=_qv_34))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (insort (succ (succ zero)) _v_43)))=(nat-to-int (succ (len _v_43))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_35))=(nat-to-int _qv_35)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (insort (succ (succ zero)) _v_43)))=(nat-to-int (succ (len _v_43))))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_36))=(nat-to-int _qv_36)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (insort (succ (succ zero)) _v_43)))=(nat-to-int (succ (len _v_43))))
NOW TESTING (forall ((Nat) (Lst) (Lst)) ((insort _qv_37 (cons _qv_38 _qv_39))=(cons (insort _qv_37 _qv_38) (insort _qv_37 _qv_39))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (insort (succ (succ zero)) _v_43)))=(nat-to-int (succ (len _v_43))))
NOW TESTING (forall ((Nat) (Lst) (Lst)) ((cons _qv_40 (insort _qv_41 _qv_42))=(insort (cons _qv_40 _qv_41) (cons _qv_40 _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (insort (succ (succ zero)) _v_43)))=(nat-to-int (succ (len _v_43))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_30))=_qv_30))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (insort (succ (succ zero)) _v_43)))=(nat-to-int (succ (len _v_43))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_31)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (insort (succ (succ zero)) _v_43)))=(nat-to-int (succ (len _v_43))))
NOW TESTING (forall ((Nat) (Nat)) ((less _qv_32 _qv_33)=(less _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (insort (succ (succ zero)) _v_43)))=(nat-to-int (succ (len _v_43))))
NOW TESTING (forall ((Lst)) ((sort (sort _qv_34))=_qv_34))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (insort (succ (succ zero)) _v_43)))=(nat-to-int (succ (len _v_43))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_35))=(nat-to-int _qv_35)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (insort (succ (succ zero)) _v_43)))=(nat-to-int (succ (len _v_43))))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_36))=(nat-to-int _qv_36)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (insort (succ (succ zero)) _v_43)))=(nat-to-int (succ (len _v_43))))
NOW TESTING (forall ((Nat) (Lst) (Lst)) ((insort _qv_37 (cons _qv_38 _qv_39))=(cons (insort _qv_37 _qv_38) (insort _qv_37 _qv_39))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (insort (succ (succ zero)) _v_43)))=(nat-to-int (succ (len _v_43))))
NOW TESTING (forall ((Nat) (Lst) (Lst)) ((cons _qv_40 (insort _qv_41 _qv_42))=(insort (cons _qv_40 _qv_41) (cons _qv_40 _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (insort (succ (succ zero)) _v_43)))=(nat-to-int (succ (len _v_43))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_30))=_qv_30))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (insort (succ (succ zero)) _v_43)))=(nat-to-int (succ (len _v_43))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_31)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (insort (succ (succ zero)) _v_43)))=(nat-to-int (succ (len _v_43))))
NOW TESTING (forall ((Nat) (Nat)) ((less _qv_32 _qv_33)=(less _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (insort (succ (succ zero)) _v_43)))=(nat-to-int (succ (len _v_43))))
NOW TESTING (forall ((Lst)) ((sort (sort _qv_34))=_qv_34))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (insort (succ (succ zero)) _v_43)))=(nat-to-int (succ (len _v_43))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_35))=(nat-to-int _qv_35)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (insort (succ (succ zero)) _v_43)))=(nat-to-int (succ (len _v_43))))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_36))=(nat-to-int _qv_36)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (insort (succ (succ zero)) _v_43)))=(nat-to-int (succ (len _v_43))))
NOW TESTING (forall ((Nat) (Lst) (Lst)) ((insort _qv_37 (cons _qv_38 _qv_39))=(cons (insort _qv_37 _qv_38) (insort _qv_37 _qv_39))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (insort (succ (succ zero)) _v_43)))=(nat-to-int (succ (len _v_43))))
NOW TESTING (forall ((Nat) (Lst) (Lst)) ((cons _qv_40 (insort _qv_41 _qv_42))=(insort (cons _qv_40 _qv_41) (cons _qv_40 _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (insort (succ (succ zero)) _v_43)))=(nat-to-int (succ (len _v_43))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_30))=_qv_30))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (insort (succ (succ zero)) _v_43)))=(nat-to-int (succ (len _v_43))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_31)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (insort (succ (succ zero)) _v_43)))=(nat-to-int (succ (len _v_43))))
NOW TESTING (forall ((Nat) (Nat)) ((less _qv_32 _qv_33)=(less _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (insort (succ (succ zero)) _v_43)))=(nat-to-int (succ (len _v_43))))
NOW TESTING (forall ((Lst)) ((sort (sort _qv_34))=_qv_34))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (insort (succ (succ zero)) _v_43)))=(nat-to-int (succ (len _v_43))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_35))=(nat-to-int _qv_35)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (insort (succ (succ zero)) _v_43)))=(nat-to-int (succ (len _v_43))))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_36))=(nat-to-int _qv_36)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (insort (succ (succ zero)) _v_43)))=(nat-to-int (succ (len _v_43))))
NOW TESTING (forall ((Nat) (Lst) (Lst)) ((insort _qv_37 (cons _qv_38 _qv_39))=(cons (insort _qv_37 _qv_38) (insort _qv_37 _qv_39))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (insort (succ (succ zero)) _v_43)))=(nat-to-int (succ (len _v_43))))
NOW TESTING (forall ((Nat) (Lst) (Lst)) ((cons _qv_40 (insort _qv_41 _qv_42))=(insort (cons _qv_40 _qv_41) (cons _qv_40 _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (insort (succ (succ zero)) _v_43))=(succ (len _v_43)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_30))=_qv_30))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (insort (succ (succ zero)) _v_43))=(succ (len _v_43)))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_31)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (insort (succ (succ zero)) _v_43))=(succ (len _v_43)))
NOW TESTING (forall ((Nat) (Nat)) ((less _qv_32 _qv_33)=(less _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (insort (succ (succ zero)) _v_43))=(succ (len _v_43)))
NOW TESTING (forall ((Lst)) ((sort (sort _qv_34))=_qv_34))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (insort (succ (succ zero)) _v_43))=(succ (len _v_43)))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_35))=(nat-to-int _qv_35)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (insort (succ (succ zero)) _v_43))=(succ (len _v_43)))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_36))=(nat-to-int _qv_36)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (insort (succ (succ zero)) _v_43))=(succ (len _v_43)))
NOW TESTING (forall ((Nat) (Lst) (Lst)) ((insort _qv_37 (cons _qv_38 _qv_39))=(cons (insort _qv_37 _qv_38) (insort _qv_37 _qv_39))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (insort (succ (succ zero)) _v_43))=(succ (len _v_43)))
NOW TESTING (forall ((Nat) (Lst) (Lst)) ((cons _qv_40 (insort _qv_41 _qv_42))=(insort (cons _qv_40 _qv_41) (cons _qv_40 _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (insort (succ (succ zero)) _v_43)))=(nat-to-int (succ (len _v_43))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_30))=_qv_30))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (insort (succ (succ zero)) _v_43)))=(nat-to-int (succ (len _v_43))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_31)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (insort (succ (succ zero)) _v_43)))=(nat-to-int (succ (len _v_43))))
NOW TESTING (forall ((Nat) (Nat)) ((less _qv_32 _qv_33)=(less _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (insort (succ (succ zero)) _v_43)))=(nat-to-int (succ (len _v_43))))
NOW TESTING (forall ((Lst)) ((sort (sort _qv_34))=_qv_34))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (insort (succ (succ zero)) _v_43)))=(nat-to-int (succ (len _v_43))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_35))=(nat-to-int _qv_35)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (insort (succ (succ zero)) _v_43)))=(nat-to-int (succ (len _v_43))))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_36))=(nat-to-int _qv_36)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (insort (succ (succ zero)) _v_43)))=(nat-to-int (succ (len _v_43))))
NOW TESTING (forall ((Nat) (Lst) (Lst)) ((insort _qv_37 (cons _qv_38 _qv_39))=(cons (insort _qv_37 _qv_38) (insort _qv_37 _qv_39))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (insort (succ (succ zero)) _v_43)))=(nat-to-int (succ (len _v_43))))
NOW TESTING (forall ((Nat) (Lst) (Lst)) ((cons _qv_40 (insort _qv_41 _qv_42))=(insort (cons _qv_40 _qv_41) (cons _qv_40 _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (insort (succ (succ zero)) _v_43)))=(nat-to-int (succ (len _v_43))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_30))=_qv_30))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (insort (succ (succ zero)) _v_43)))=(nat-to-int (succ (len _v_43))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_31)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (insort (succ (succ zero)) _v_43)))=(nat-to-int (succ (len _v_43))))
NOW TESTING (forall ((Nat) (Nat)) ((less _qv_32 _qv_33)=(less _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (insort (succ (succ zero)) _v_43)))=(nat-to-int (succ (len _v_43))))
NOW TESTING (forall ((Lst)) ((sort (sort _qv_34))=_qv_34))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (insort (succ (succ zero)) _v_43)))=(nat-to-int (succ (len _v_43))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_35))=(nat-to-int _qv_35)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (insort (succ (succ zero)) _v_43)))=(nat-to-int (succ (len _v_43))))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_36))=(nat-to-int _qv_36)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (insort (succ (succ zero)) _v_43)))=(nat-to-int (succ (len _v_43))))
NOW TESTING (forall ((Nat) (Lst) (Lst)) ((insort _qv_37 (cons _qv_38 _qv_39))=(cons (insort _qv_37 _qv_38) (insort _qv_37 _qv_39))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (insort (succ (succ zero)) _v_43)))=(nat-to-int (succ (len _v_43))))
NOW TESTING (forall ((Nat) (Lst) (Lst)) ((cons _qv_40 (insort _qv_41 _qv_42))=(insort (cons _qv_40 _qv_41) (cons _qv_40 _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (insort (succ (succ zero)) _v_43)))=(nat-to-int (len (insort _t_14 _v_43))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_30))=_qv_30))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (insort (succ (succ zero)) _v_43)))=(nat-to-int (len (insort _t_14 _v_43))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_31)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (insort (succ (succ zero)) _v_43)))=(nat-to-int (len (insort _t_14 _v_43))))
NOW TESTING (forall ((Nat) (Nat)) ((less _qv_32 _qv_33)=(less _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (insort (succ (succ zero)) _v_43)))=(nat-to-int (len (insort _t_14 _v_43))))
NOW TESTING (forall ((Lst)) ((sort (sort _qv_34))=_qv_34))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (insort (succ (succ zero)) _v_43)))=(nat-to-int (len (insort _t_14 _v_43))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_35))=(nat-to-int _qv_35)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (insort (succ (succ zero)) _v_43)))=(nat-to-int (len (insort _t_14 _v_43))))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_36))=(nat-to-int _qv_36)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (insort (succ (succ zero)) _v_43)))=(nat-to-int (len (insort _t_14 _v_43))))
NOW TESTING (forall ((Nat) (Lst) (Lst)) ((insort _qv_37 (cons _qv_38 _qv_39))=(cons (insort _qv_37 _qv_38) (insort _qv_37 _qv_39))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (insort (succ (succ zero)) _v_43)))=(nat-to-int (len (insort _t_14 _v_43))))
NOW TESTING (forall ((Nat) (Lst) (Lst)) ((cons _qv_40 (insort _qv_41 _qv_42))=(insort (cons _qv_40 _qv_41) (cons _qv_40 _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (insort (succ (succ zero)) _v_43)))=(nat-to-int (succ (len _v_43))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_30))=_qv_30))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (insort (succ (succ zero)) _v_43)))=(nat-to-int (succ (len _v_43))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_31)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (insort (succ (succ zero)) _v_43)))=(nat-to-int (succ (len _v_43))))
NOW TESTING (forall ((Nat) (Nat)) ((less _qv_32 _qv_33)=(less _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (insort (succ (succ zero)) _v_43)))=(nat-to-int (succ (len _v_43))))
NOW TESTING (forall ((Lst)) ((sort (sort _qv_34))=_qv_34))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (insort (succ (succ zero)) _v_43)))=(nat-to-int (succ (len _v_43))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_35))=(nat-to-int _qv_35)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (insort (succ (succ zero)) _v_43)))=(nat-to-int (succ (len _v_43))))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_36))=(nat-to-int _qv_36)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (insort (succ (succ zero)) _v_43)))=(nat-to-int (succ (len _v_43))))
NOW TESTING (forall ((Nat) (Lst) (Lst)) ((insort _qv_37 (cons _qv_38 _qv_39))=(cons (insort _qv_37 _qv_38) (insort _qv_37 _qv_39))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (insort (succ (succ zero)) _v_43)))=(nat-to-int (succ (len _v_43))))
NOW TESTING (forall ((Nat) (Lst) (Lst)) ((cons _qv_40 (insort _qv_41 _qv_42))=(insort (cons _qv_40 _qv_41) (cons _qv_40 _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (insort (succ (succ zero)) _v_43)))=(nat-to-int (succ (len _v_43))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_30))=_qv_30))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (insort (succ (succ zero)) _v_43)))=(nat-to-int (succ (len _v_43))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_31)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (insort (succ (succ zero)) _v_43)))=(nat-to-int (succ (len _v_43))))
NOW TESTING (forall ((Nat) (Nat)) ((less _qv_32 _qv_33)=(less _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (insort (succ (succ zero)) _v_43)))=(nat-to-int (succ (len _v_43))))
NOW TESTING (forall ((Lst)) ((sort (sort _qv_34))=_qv_34))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (insort (succ (succ zero)) _v_43)))=(nat-to-int (succ (len _v_43))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_35))=(nat-to-int _qv_35)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (insort (succ (succ zero)) _v_43)))=(nat-to-int (succ (len _v_43))))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_36))=(nat-to-int _qv_36)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (insort (succ (succ zero)) _v_43)))=(nat-to-int (succ (len _v_43))))
NOW TESTING (forall ((Nat) (Lst) (Lst)) ((insort _qv_37 (cons _qv_38 _qv_39))=(cons (insort _qv_37 _qv_38) (insort _qv_37 _qv_39))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (insort (succ (succ zero)) _v_43)))=(nat-to-int (succ (len _v_43))))
NOW TESTING (forall ((Nat) (Lst) (Lst)) ((cons _qv_40 (insort _qv_41 _qv_42))=(insort (cons _qv_40 _qv_41) (cons _qv_40 _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (insort (succ (succ zero)) _v_43)))=(nat-to-int (len (insort _t_14 _v_43))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_30))=_qv_30))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (insort (succ (succ zero)) _v_43)))=(nat-to-int (len (insort _t_14 _v_43))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_31)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (insort (succ (succ zero)) _v_43)))=(nat-to-int (len (insort _t_14 _v_43))))
NOW TESTING (forall ((Nat) (Nat)) ((less _qv_32 _qv_33)=(less _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (insort (succ (succ zero)) _v_43)))=(nat-to-int (len (insort _t_14 _v_43))))
NOW TESTING (forall ((Lst)) ((sort (sort _qv_34))=_qv_34))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (insort (succ (succ zero)) _v_43)))=(nat-to-int (len (insort _t_14 _v_43))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_35))=(nat-to-int _qv_35)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (insort (succ (succ zero)) _v_43)))=(nat-to-int (len (insort _t_14 _v_43))))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_36))=(nat-to-int _qv_36)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (insort (succ (succ zero)) _v_43)))=(nat-to-int (len (insort _t_14 _v_43))))
NOW TESTING (forall ((Nat) (Lst) (Lst)) ((insort _qv_37 (cons _qv_38 _qv_39))=(cons (insort _qv_37 _qv_38) (insort _qv_37 _qv_39))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (insort (succ (succ zero)) _v_43)))=(nat-to-int (len (insort _t_14 _v_43))))
NOW TESTING (forall ((Nat) (Lst) (Lst)) ((cons _qv_40 (insort _qv_41 _qv_42))=(insort (cons _qv_40 _qv_41) (cons _qv_40 _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (insort (succ (succ zero)) _v_43))=(len (insort _t_14 _v_43)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_30))=_qv_30))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (insort (succ (succ zero)) _v_43))=(len (insort _t_14 _v_43)))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_31)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (insort (succ (succ zero)) _v_43))=(len (insort _t_14 _v_43)))
NOW TESTING (forall ((Nat) (Nat)) ((less _qv_32 _qv_33)=(less _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (insort (succ (succ zero)) _v_43))=(len (insort _t_14 _v_43)))
NOW TESTING (forall ((Lst)) ((sort (sort _qv_34))=_qv_34))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (insort (succ (succ zero)) _v_43))=(len (insort _t_14 _v_43)))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_35))=(nat-to-int _qv_35)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (insort (succ (succ zero)) _v_43))=(len (insort _t_14 _v_43)))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_36))=(nat-to-int _qv_36)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (insort (succ (succ zero)) _v_43))=(len (insort _t_14 _v_43)))
NOW TESTING (forall ((Nat) (Lst) (Lst)) ((insort _qv_37 (cons _qv_38 _qv_39))=(cons (insort _qv_37 _qv_38) (insort _qv_37 _qv_39))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (insort (succ (succ zero)) _v_43))=(len (insort _t_14 _v_43)))
NOW TESTING (forall ((Nat) (Lst) (Lst)) ((cons _qv_40 (insort _qv_41 _qv_42))=(insort (cons _qv_40 _qv_41) (cons _qv_40 _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (insort (succ (succ zero)) _v_43)))=(nat-to-int (succ (len _v_43))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_30))=_qv_30))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (insort (succ (succ zero)) _v_43)))=(nat-to-int (succ (len _v_43))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_31)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (insort (succ (succ zero)) _v_43)))=(nat-to-int (succ (len _v_43))))
NOW TESTING (forall ((Nat) (Nat)) ((less _qv_32 _qv_33)=(less _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (insort (succ (succ zero)) _v_43)))=(nat-to-int (succ (len _v_43))))
NOW TESTING (forall ((Lst)) ((sort (sort _qv_34))=_qv_34))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (insort (succ (succ zero)) _v_43)))=(nat-to-int (succ (len _v_43))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_35))=(nat-to-int _qv_35)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (insort (succ (succ zero)) _v_43)))=(nat-to-int (succ (len _v_43))))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_36))=(nat-to-int _qv_36)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (insort (succ (succ zero)) _v_43)))=(nat-to-int (succ (len _v_43))))
NOW TESTING (forall ((Nat) (Lst) (Lst)) ((insort _qv_37 (cons _qv_38 _qv_39))=(cons (insort _qv_37 _qv_38) (insort _qv_37 _qv_39))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (insort (succ (succ zero)) _v_43)))=(nat-to-int (succ (len _v_43))))
NOW TESTING (forall ((Nat) (Lst) (Lst)) ((cons _qv_40 (insort _qv_41 _qv_42))=(insort (cons _qv_40 _qv_41) (cons _qv_40 _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (insort (succ (succ zero)) _v_43)))=(nat-to-int (succ (len _v_43))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_30))=_qv_30))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (insort (succ (succ zero)) _v_43)))=(nat-to-int (succ (len _v_43))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_31)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (insort (succ (succ zero)) _v_43)))=(nat-to-int (succ (len _v_43))))
NOW TESTING (forall ((Nat) (Nat)) ((less _qv_32 _qv_33)=(less _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (insort (succ (succ zero)) _v_43)))=(nat-to-int (succ (len _v_43))))
NOW TESTING (forall ((Lst)) ((sort (sort _qv_34))=_qv_34))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (insort (succ (succ zero)) _v_43)))=(nat-to-int (succ (len _v_43))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_35))=(nat-to-int _qv_35)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (insort (succ (succ zero)) _v_43)))=(nat-to-int (succ (len _v_43))))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_36))=(nat-to-int _qv_36)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (insort (succ (succ zero)) _v_43)))=(nat-to-int (succ (len _v_43))))
NOW TESTING (forall ((Nat) (Lst) (Lst)) ((insort _qv_37 (cons _qv_38 _qv_39))=(cons (insort _qv_37 _qv_38) (insort _qv_37 _qv_39))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (insort (succ (succ zero)) _v_43)))=(nat-to-int (succ (len _v_43))))
NOW TESTING (forall ((Nat) (Lst) (Lst)) ((cons _qv_40 (insort _qv_41 _qv_42))=(insort (cons _qv_40 _qv_41) (cons _qv_40 _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (insort (succ (succ zero)) _v_43)))=(nat-to-int (succ (len _v_43))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_30))=_qv_30))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (insort (succ (succ zero)) _v_43)))=(nat-to-int (succ (len _v_43))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_31)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (insort (succ (succ zero)) _v_43)))=(nat-to-int (succ (len _v_43))))
NOW TESTING (forall ((Nat) (Nat)) ((less _qv_32 _qv_33)=(less _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (insort (succ (succ zero)) _v_43)))=(nat-to-int (succ (len _v_43))))
NOW TESTING (forall ((Lst)) ((sort (sort _qv_34))=_qv_34))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (insort (succ (succ zero)) _v_43)))=(nat-to-int (succ (len _v_43))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_35))=(nat-to-int _qv_35)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (insort (succ (succ zero)) _v_43)))=(nat-to-int (succ (len _v_43))))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_36))=(nat-to-int _qv_36)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (insort (succ (succ zero)) _v_43)))=(nat-to-int (succ (len _v_43))))
NOW TESTING (forall ((Nat) (Lst) (Lst)) ((insort _qv_37 (cons _qv_38 _qv_39))=(cons (insort _qv_37 _qv_38) (insort _qv_37 _qv_39))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (insort (succ (succ zero)) _v_43)))=(nat-to-int (succ (len _v_43))))
NOW TESTING (forall ((Nat) (Lst) (Lst)) ((cons _qv_40 (insort _qv_41 _qv_42))=(insort (cons _qv_40 _qv_41) (cons _qv_40 _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (insort (succ (succ zero)) _v_43)))=(nat-to-int (succ (len _v_43))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_30))=_qv_30))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (insort (succ (succ zero)) _v_43)))=(nat-to-int (succ (len _v_43))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_31)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (insort (succ (succ zero)) _v_43)))=(nat-to-int (succ (len _v_43))))
NOW TESTING (forall ((Nat) (Nat)) ((less _qv_32 _qv_33)=(less _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (insort (succ (succ zero)) _v_43)))=(nat-to-int (succ (len _v_43))))
NOW TESTING (forall ((Lst)) ((sort (sort _qv_34))=_qv_34))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (insort (succ (succ zero)) _v_43)))=(nat-to-int (succ (len _v_43))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_35))=(nat-to-int _qv_35)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (insort (succ (succ zero)) _v_43)))=(nat-to-int (succ (len _v_43))))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_36))=(nat-to-int _qv_36)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (insort (succ (succ zero)) _v_43)))=(nat-to-int (succ (len _v_43))))
NOW TESTING (forall ((Nat) (Lst) (Lst)) ((insort _qv_37 (cons _qv_38 _qv_39))=(cons (insort _qv_37 _qv_38) (insort _qv_37 _qv_39))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (insort (succ (succ zero)) _v_43)))=(nat-to-int (succ (len _v_43))))
NOW TESTING (forall ((Nat) (Lst) (Lst)) ((cons _qv_40 (insort _qv_41 _qv_42))=(insort (cons _qv_40 _qv_41) (cons _qv_40 _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (insort (succ (succ zero)) _v_43))=(succ (len _v_43)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_30))=_qv_30))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (insort (succ (succ zero)) _v_43))=(succ (len _v_43)))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_31)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (insort (succ (succ zero)) _v_43))=(succ (len _v_43)))
NOW TESTING (forall ((Nat) (Nat)) ((less _qv_32 _qv_33)=(less _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (insort (succ (succ zero)) _v_43))=(succ (len _v_43)))
NOW TESTING (forall ((Lst)) ((sort (sort _qv_34))=_qv_34))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (insort (succ (succ zero)) _v_43))=(succ (len _v_43)))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_35))=(nat-to-int _qv_35)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (insort (succ (succ zero)) _v_43))=(succ (len _v_43)))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_36))=(nat-to-int _qv_36)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (insort (succ (succ zero)) _v_43))=(succ (len _v_43)))
NOW TESTING (forall ((Nat) (Lst) (Lst)) ((insort _qv_37 (cons _qv_38 _qv_39))=(cons (insort _qv_37 _qv_38) (insort _qv_37 _qv_39))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (insort (succ (succ zero)) _v_43))=(succ (len _v_43)))
NOW TESTING (forall ((Nat) (Lst) (Lst)) ((cons _qv_40 (insort _qv_41 _qv_42))=(insort (cons _qv_40 _qv_41) (cons _qv_40 _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (insort (succ (succ zero)) _v_43)))=(nat-to-int (succ (len _v_43))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_30))=_qv_30))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (insort (succ (succ zero)) _v_43)))=(nat-to-int (succ (len _v_43))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_31)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (insort (succ (succ zero)) _v_43)))=(nat-to-int (succ (len _v_43))))
NOW TESTING (forall ((Nat) (Nat)) ((less _qv_32 _qv_33)=(less _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (insort (succ (succ zero)) _v_43)))=(nat-to-int (succ (len _v_43))))
NOW TESTING (forall ((Lst)) ((sort (sort _qv_34))=_qv_34))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (insort (succ (succ zero)) _v_43)))=(nat-to-int (succ (len _v_43))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_35))=(nat-to-int _qv_35)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (insort (succ (succ zero)) _v_43)))=(nat-to-int (succ (len _v_43))))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_36))=(nat-to-int _qv_36)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (insort (succ (succ zero)) _v_43)))=(nat-to-int (succ (len _v_43))))
NOW TESTING (forall ((Nat) (Lst) (Lst)) ((insort _qv_37 (cons _qv_38 _qv_39))=(cons (insort _qv_37 _qv_38) (insort _qv_37 _qv_39))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (insort (succ (succ zero)) _v_43)))=(nat-to-int (succ (len _v_43))))
NOW TESTING (forall ((Nat) (Lst) (Lst)) ((cons _qv_40 (insort _qv_41 _qv_42))=(insort (cons _qv_40 _qv_41) (cons _qv_40 _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (insort (succ (succ zero)) _v_43)))=(nat-to-int (succ (len _v_43))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_30))=_qv_30))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (insort (succ (succ zero)) _v_43)))=(nat-to-int (succ (len _v_43))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_31)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (insort (succ (succ zero)) _v_43)))=(nat-to-int (succ (len _v_43))))
NOW TESTING (forall ((Nat) (Nat)) ((less _qv_32 _qv_33)=(less _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (insort (succ (succ zero)) _v_43)))=(nat-to-int (succ (len _v_43))))
NOW TESTING (forall ((Lst)) ((sort (sort _qv_34))=_qv_34))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (insort (succ (succ zero)) _v_43)))=(nat-to-int (succ (len _v_43))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_35))=(nat-to-int _qv_35)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (insort (succ (succ zero)) _v_43)))=(nat-to-int (succ (len _v_43))))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_36))=(nat-to-int _qv_36)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (insort (succ (succ zero)) _v_43)))=(nat-to-int (succ (len _v_43))))
NOW TESTING (forall ((Nat) (Lst) (Lst)) ((insort _qv_37 (cons _qv_38 _qv_39))=(cons (insort _qv_37 _qv_38) (insort _qv_37 _qv_39))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (insort (succ (succ zero)) _v_43)))=(nat-to-int (succ (len _v_43))))
NOW TESTING (forall ((Nat) (Lst) (Lst)) ((cons _qv_40 (insort _qv_41 _qv_42))=(insort (cons _qv_40 _qv_41) (cons _qv_40 _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (insort (succ (succ zero)) _v_43)))=(nat-to-int (succ (len _v_43))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_30))=_qv_30))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (insort (succ (succ zero)) _v_43)))=(nat-to-int (succ (len _v_43))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_31)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (insort (succ (succ zero)) _v_43)))=(nat-to-int (succ (len _v_43))))
NOW TESTING (forall ((Nat) (Nat)) ((less _qv_32 _qv_33)=(less _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (insort (succ (succ zero)) _v_43)))=(nat-to-int (succ (len _v_43))))
NOW TESTING (forall ((Lst)) ((sort (sort _qv_34))=_qv_34))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (insort (succ (succ zero)) _v_43)))=(nat-to-int (succ (len _v_43))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_35))=(nat-to-int _qv_35)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (insort (succ (succ zero)) _v_43)))=(nat-to-int (succ (len _v_43))))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_36))=(nat-to-int _qv_36)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (insort (succ (succ zero)) _v_43)))=(nat-to-int (succ (len _v_43))))
NOW TESTING (forall ((Nat) (Lst) (Lst)) ((insort _qv_37 (cons _qv_38 _qv_39))=(cons (insort _qv_37 _qv_38) (insort _qv_37 _qv_39))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (insort (succ (succ zero)) _v_43)))=(nat-to-int (succ (len _v_43))))
NOW TESTING (forall ((Nat) (Lst) (Lst)) ((cons _qv_40 (insort _qv_41 _qv_42))=(insort (cons _qv_40 _qv_41) (cons _qv_40 _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (insort (succ (succ zero)) _v_43)))=(nat-to-int (succ (len _v_43))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_30))=_qv_30))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (insort (succ (succ zero)) _v_43)))=(nat-to-int (succ (len _v_43))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_31)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (insort (succ (succ zero)) _v_43)))=(nat-to-int (succ (len _v_43))))
NOW TESTING (forall ((Nat) (Nat)) ((less _qv_32 _qv_33)=(less _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (insort (succ (succ zero)) _v_43)))=(nat-to-int (succ (len _v_43))))
NOW TESTING (forall ((Lst)) ((sort (sort _qv_34))=_qv_34))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (insort (succ (succ zero)) _v_43)))=(nat-to-int (succ (len _v_43))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_35))=(nat-to-int _qv_35)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (insort (succ (succ zero)) _v_43)))=(nat-to-int (succ (len _v_43))))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_36))=(nat-to-int _qv_36)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (insort (succ (succ zero)) _v_43)))=(nat-to-int (succ (len _v_43))))
NOW TESTING (forall ((Nat) (Lst) (Lst)) ((insort _qv_37 (cons _qv_38 _qv_39))=(cons (insort _qv_37 _qv_38) (insort _qv_37 _qv_39))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (insort (succ (succ zero)) _v_43)))=(nat-to-int (succ (len _v_43))))
NOW TESTING (forall ((Nat) (Lst) (Lst)) ((cons _qv_40 (insort _qv_41 _qv_42))=(insort (cons _qv_40 _qv_41) (cons _qv_40 _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (insort (succ (succ zero)) _v_43))=(succ (len _v_43)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_30))=_qv_30))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (insort (succ (succ zero)) _v_43))=(succ (len _v_43)))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_31)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (insort (succ (succ zero)) _v_43))=(succ (len _v_43)))
NOW TESTING (forall ((Nat) (Nat)) ((less _qv_32 _qv_33)=(less _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (insort (succ (succ zero)) _v_43))=(succ (len _v_43)))
NOW TESTING (forall ((Lst)) ((sort (sort _qv_34))=_qv_34))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (insort (succ (succ zero)) _v_43))=(succ (len _v_43)))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_35))=(nat-to-int _qv_35)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (insort (succ (succ zero)) _v_43))=(succ (len _v_43)))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_36))=(nat-to-int _qv_36)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (insort (succ (succ zero)) _v_43))=(succ (len _v_43)))
NOW TESTING (forall ((Nat) (Lst) (Lst)) ((insort _qv_37 (cons _qv_38 _qv_39))=(cons (insort _qv_37 _qv_38) (insort _qv_37 _qv_39))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (insort (succ (succ zero)) _v_43))=(succ (len _v_43)))
NOW TESTING (forall ((Nat) (Lst) (Lst)) ((cons _qv_40 (insort _qv_41 _qv_42))=(insort (cons _qv_40 _qv_41) (cons _qv_40 _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (insort (succ (succ zero)) _v_43))=(len (insort _t_14 _v_43)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_30))=_qv_30))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (insort (succ (succ zero)) _v_43))=(len (insort _t_14 _v_43)))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_31)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (insort (succ (succ zero)) _v_43))=(len (insort _t_14 _v_43)))
NOW TESTING (forall ((Nat) (Nat)) ((less _qv_32 _qv_33)=(less _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (insort (succ (succ zero)) _v_43))=(len (insort _t_14 _v_43)))
NOW TESTING (forall ((Lst)) ((sort (sort _qv_34))=_qv_34))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (insort (succ (succ zero)) _v_43))=(len (insort _t_14 _v_43)))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_35))=(nat-to-int _qv_35)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (insort (succ (succ zero)) _v_43))=(len (insort _t_14 _v_43)))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_36))=(nat-to-int _qv_36)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (insort (succ (succ zero)) _v_43))=(len (insort _t_14 _v_43)))
NOW TESTING (forall ((Nat) (Lst) (Lst)) ((insort _qv_37 (cons _qv_38 _qv_39))=(cons (insort _qv_37 _qv_38) (insort _qv_37 _qv_39))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (insort (succ (succ zero)) _v_43))=(len (insort _t_14 _v_43)))
NOW TESTING (forall ((Nat) (Lst) (Lst)) ((cons _qv_40 (insort _qv_41 _qv_42))=(insort (cons _qv_40 _qv_41) (cons _qv_40 _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (insort (succ (succ zero)) _v_43)))=(nat-to-int (succ (len _v_43))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_30))=_qv_30))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (insort (succ (succ zero)) _v_43)))=(nat-to-int (succ (len _v_43))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_31)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (insort (succ (succ zero)) _v_43)))=(nat-to-int (succ (len _v_43))))
NOW TESTING (forall ((Nat) (Nat)) ((less _qv_32 _qv_33)=(less _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (insort (succ (succ zero)) _v_43)))=(nat-to-int (succ (len _v_43))))
NOW TESTING (forall ((Lst)) ((sort (sort _qv_34))=_qv_34))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (insort (succ (succ zero)) _v_43)))=(nat-to-int (succ (len _v_43))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_35))=(nat-to-int _qv_35)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (insort (succ (succ zero)) _v_43)))=(nat-to-int (succ (len _v_43))))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_36))=(nat-to-int _qv_36)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (insort (succ (succ zero)) _v_43)))=(nat-to-int (succ (len _v_43))))
NOW TESTING (forall ((Nat) (Lst) (Lst)) ((insort _qv_37 (cons _qv_38 _qv_39))=(cons (insort _qv_37 _qv_38) (insort _qv_37 _qv_39))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (insort (succ (succ zero)) _v_43)))=(nat-to-int (succ (len _v_43))))
NOW TESTING (forall ((Nat) (Lst) (Lst)) ((cons _qv_40 (insort _qv_41 _qv_42))=(insort (cons _qv_40 _qv_41) (cons _qv_40 _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (insort (succ (succ zero)) _v_43)))=(nat-to-int (succ (len _v_43))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_30))=_qv_30))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (insort (succ (succ zero)) _v_43)))=(nat-to-int (succ (len _v_43))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_31)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (insort (succ (succ zero)) _v_43)))=(nat-to-int (succ (len _v_43))))
NOW TESTING (forall ((Nat) (Nat)) ((less _qv_32 _qv_33)=(less _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (insort (succ (succ zero)) _v_43)))=(nat-to-int (succ (len _v_43))))
NOW TESTING (forall ((Lst)) ((sort (sort _qv_34))=_qv_34))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (insort (succ (succ zero)) _v_43)))=(nat-to-int (succ (len _v_43))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_35))=(nat-to-int _qv_35)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (insort (succ (succ zero)) _v_43)))=(nat-to-int (succ (len _v_43))))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_36))=(nat-to-int _qv_36)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (insort (succ (succ zero)) _v_43)))=(nat-to-int (succ (len _v_43))))
NOW TESTING (forall ((Nat) (Lst) (Lst)) ((insort _qv_37 (cons _qv_38 _qv_39))=(cons (insort _qv_37 _qv_38) (insort _qv_37 _qv_39))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (insort (succ (succ zero)) _v_43)))=(nat-to-int (succ (len _v_43))))
NOW TESTING (forall ((Nat) (Lst) (Lst)) ((cons _qv_40 (insort _qv_41 _qv_42))=(insort (cons _qv_40 _qv_41) (cons _qv_40 _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (insort (succ (succ zero)) _v_43)))=(nat-to-int (len (insort _t_14 _v_43))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_30))=_qv_30))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (insort (succ (succ zero)) _v_43)))=(nat-to-int (len (insort _t_14 _v_43))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_31)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (insort (succ (succ zero)) _v_43)))=(nat-to-int (len (insort _t_14 _v_43))))
NOW TESTING (forall ((Nat) (Nat)) ((less _qv_32 _qv_33)=(less _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (insort (succ (succ zero)) _v_43)))=(nat-to-int (len (insort _t_14 _v_43))))
NOW TESTING (forall ((Lst)) ((sort (sort _qv_34))=_qv_34))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (insort (succ (succ zero)) _v_43)))=(nat-to-int (len (insort _t_14 _v_43))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_35))=(nat-to-int _qv_35)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (insort (succ (succ zero)) _v_43)))=(nat-to-int (len (insort _t_14 _v_43))))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_36))=(nat-to-int _qv_36)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (insort (succ (succ zero)) _v_43)))=(nat-to-int (len (insort _t_14 _v_43))))
NOW TESTING (forall ((Nat) (Lst) (Lst)) ((insort _qv_37 (cons _qv_38 _qv_39))=(cons (insort _qv_37 _qv_38) (insort _qv_37 _qv_39))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (insort (succ (succ zero)) _v_43)))=(nat-to-int (len (insort _t_14 _v_43))))
NOW TESTING (forall ((Nat) (Lst) (Lst)) ((cons _qv_40 (insort _qv_41 _qv_42))=(insort (cons _qv_40 _qv_41) (cons _qv_40 _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (insort (succ (succ zero)) _v_43)))=(nat-to-int (succ (len _v_43))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_30))=_qv_30))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (insort (succ (succ zero)) _v_43)))=(nat-to-int (succ (len _v_43))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_31)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (insort (succ (succ zero)) _v_43)))=(nat-to-int (succ (len _v_43))))
NOW TESTING (forall ((Nat) (Nat)) ((less _qv_32 _qv_33)=(less _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (insort (succ (succ zero)) _v_43)))=(nat-to-int (succ (len _v_43))))
NOW TESTING (forall ((Lst)) ((sort (sort _qv_34))=_qv_34))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (insort (succ (succ zero)) _v_43)))=(nat-to-int (succ (len _v_43))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_35))=(nat-to-int _qv_35)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (insort (succ (succ zero)) _v_43)))=(nat-to-int (succ (len _v_43))))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_36))=(nat-to-int _qv_36)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (insort (succ (succ zero)) _v_43)))=(nat-to-int (succ (len _v_43))))
NOW TESTING (forall ((Nat) (Lst) (Lst)) ((insort _qv_37 (cons _qv_38 _qv_39))=(cons (insort _qv_37 _qv_38) (insort _qv_37 _qv_39))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (insort (succ (succ zero)) _v_43)))=(nat-to-int (succ (len _v_43))))
NOW TESTING (forall ((Nat) (Lst) (Lst)) ((cons _qv_40 (insort _qv_41 _qv_42))=(insort (cons _qv_40 _qv_41) (cons _qv_40 _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (insort (succ (succ zero)) _v_43)))=(nat-to-int (succ (len _v_43))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_30))=_qv_30))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (insort (succ (succ zero)) _v_43)))=(nat-to-int (succ (len _v_43))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_31)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (insort (succ (succ zero)) _v_43)))=(nat-to-int (succ (len _v_43))))
NOW TESTING (forall ((Nat) (Nat)) ((less _qv_32 _qv_33)=(less _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (insort (succ (succ zero)) _v_43)))=(nat-to-int (succ (len _v_43))))
NOW TESTING (forall ((Lst)) ((sort (sort _qv_34))=_qv_34))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (insort (succ (succ zero)) _v_43)))=(nat-to-int (succ (len _v_43))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_35))=(nat-to-int _qv_35)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (insort (succ (succ zero)) _v_43)))=(nat-to-int (succ (len _v_43))))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_36))=(nat-to-int _qv_36)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (insort (succ (succ zero)) _v_43)))=(nat-to-int (succ (len _v_43))))
NOW TESTING (forall ((Nat) (Lst) (Lst)) ((insort _qv_37 (cons _qv_38 _qv_39))=(cons (insort _qv_37 _qv_38) (insort _qv_37 _qv_39))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (insort (succ (succ zero)) _v_43)))=(nat-to-int (succ (len _v_43))))
NOW TESTING (forall ((Nat) (Lst) (Lst)) ((cons _qv_40 (insort _qv_41 _qv_42))=(insort (cons _qv_40 _qv_41) (cons _qv_40 _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (insort (succ (succ zero)) _v_43)))=(nat-to-int (len (insort _t_14 _v_43))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_30))=_qv_30))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (insort (succ (succ zero)) _v_43)))=(nat-to-int (len (insort _t_14 _v_43))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_31)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (insort (succ (succ zero)) _v_43)))=(nat-to-int (len (insort _t_14 _v_43))))
NOW TESTING (forall ((Nat) (Nat)) ((less _qv_32 _qv_33)=(less _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (insort (succ (succ zero)) _v_43)))=(nat-to-int (len (insort _t_14 _v_43))))
NOW TESTING (forall ((Lst)) ((sort (sort _qv_34))=_qv_34))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (insort (succ (succ zero)) _v_43)))=(nat-to-int (len (insort _t_14 _v_43))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_35))=(nat-to-int _qv_35)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (insort (succ (succ zero)) _v_43)))=(nat-to-int (len (insort _t_14 _v_43))))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_36))=(nat-to-int _qv_36)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (insort (succ (succ zero)) _v_43)))=(nat-to-int (len (insort _t_14 _v_43))))
NOW TESTING (forall ((Nat) (Lst) (Lst)) ((insort _qv_37 (cons _qv_38 _qv_39))=(cons (insort _qv_37 _qv_38) (insort _qv_37 _qv_39))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (insort (succ (succ zero)) _v_43)))=(nat-to-int (len (insort _t_14 _v_43))))
NOW TESTING (forall ((Nat) (Lst) (Lst)) ((cons _qv_40 (insort _qv_41 _qv_42))=(insort (cons _qv_40 _qv_41) (cons _qv_40 _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (insort (succ (succ zero)) _v_43))=(len (insort _t_14 _v_43)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_30))=_qv_30))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (insort (succ (succ zero)) _v_43))=(len (insort _t_14 _v_43)))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_31)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (insort (succ (succ zero)) _v_43))=(len (insort _t_14 _v_43)))
NOW TESTING (forall ((Nat) (Nat)) ((less _qv_32 _qv_33)=(less _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (insort (succ (succ zero)) _v_43))=(len (insort _t_14 _v_43)))
NOW TESTING (forall ((Lst)) ((sort (sort _qv_34))=_qv_34))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (insort (succ (succ zero)) _v_43))=(len (insort _t_14 _v_43)))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_35))=(nat-to-int _qv_35)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (insort (succ (succ zero)) _v_43))=(len (insort _t_14 _v_43)))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_36))=(nat-to-int _qv_36)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (insort (succ (succ zero)) _v_43))=(len (insort _t_14 _v_43)))
NOW TESTING (forall ((Nat) (Lst) (Lst)) ((insort _qv_37 (cons _qv_38 _qv_39))=(cons (insort _qv_37 _qv_38) (insort _qv_37 _qv_39))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (insort (succ (succ zero)) _v_43))=(len (insort _t_14 _v_43)))
NOW TESTING (forall ((Nat) (Lst) (Lst)) ((cons _qv_40 (insort _qv_41 _qv_42))=(insort (cons _qv_40 _qv_41) (cons _qv_40 _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (insort (succ (succ zero)) _v_43)))=(nat-to-int (succ (len _v_43))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_30))=_qv_30))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (insort (succ (succ zero)) _v_43)))=(nat-to-int (succ (len _v_43))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_31)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (insort (succ (succ zero)) _v_43)))=(nat-to-int (succ (len _v_43))))
NOW TESTING (forall ((Nat) (Nat)) ((less _qv_32 _qv_33)=(less _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (insort (succ (succ zero)) _v_43)))=(nat-to-int (succ (len _v_43))))
NOW TESTING (forall ((Lst)) ((sort (sort _qv_34))=_qv_34))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (insort (succ (succ zero)) _v_43)))=(nat-to-int (succ (len _v_43))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_35))=(nat-to-int _qv_35)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (insort (succ (succ zero)) _v_43)))=(nat-to-int (succ (len _v_43))))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_36))=(nat-to-int _qv_36)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (insort (succ (succ zero)) _v_43)))=(nat-to-int (succ (len _v_43))))
NOW TESTING (forall ((Nat) (Lst) (Lst)) ((insort _qv_37 (cons _qv_38 _qv_39))=(cons (insort _qv_37 _qv_38) (insort _qv_37 _qv_39))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (insort (succ (succ zero)) _v_43)))=(nat-to-int (succ (len _v_43))))
NOW TESTING (forall ((Nat) (Lst) (Lst)) ((cons _qv_40 (insort _qv_41 _qv_42))=(insort (cons _qv_40 _qv_41) (cons _qv_40 _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (insort (succ (succ zero)) _v_43)))=(nat-to-int (succ (len _v_43))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_30))=_qv_30))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (insort (succ (succ zero)) _v_43)))=(nat-to-int (succ (len _v_43))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_31)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (insort (succ (succ zero)) _v_43)))=(nat-to-int (succ (len _v_43))))
NOW TESTING (forall ((Nat) (Nat)) ((less _qv_32 _qv_33)=(less _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (insort (succ (succ zero)) _v_43)))=(nat-to-int (succ (len _v_43))))
NOW TESTING (forall ((Lst)) ((sort (sort _qv_34))=_qv_34))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (insort (succ (succ zero)) _v_43)))=(nat-to-int (succ (len _v_43))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_35))=(nat-to-int _qv_35)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (insort (succ (succ zero)) _v_43)))=(nat-to-int (succ (len _v_43))))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_36))=(nat-to-int _qv_36)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (insort (succ (succ zero)) _v_43)))=(nat-to-int (succ (len _v_43))))
NOW TESTING (forall ((Nat) (Lst) (Lst)) ((insort _qv_37 (cons _qv_38 _qv_39))=(cons (insort _qv_37 _qv_38) (insort _qv_37 _qv_39))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (insort (succ (succ zero)) _v_43)))=(nat-to-int (succ (len _v_43))))
NOW TESTING (forall ((Nat) (Lst) (Lst)) ((cons _qv_40 (insort _qv_41 _qv_42))=(insort (cons _qv_40 _qv_41) (cons _qv_40 _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (insort (succ (succ zero)) _v_43)))=(nat-to-int (succ (len _v_43))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_30))=_qv_30))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (insort (succ (succ zero)) _v_43)))=(nat-to-int (succ (len _v_43))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_31)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (insort (succ (succ zero)) _v_43)))=(nat-to-int (succ (len _v_43))))
NOW TESTING (forall ((Nat) (Nat)) ((less _qv_32 _qv_33)=(less _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (insort (succ (succ zero)) _v_43)))=(nat-to-int (succ (len _v_43))))
NOW TESTING (forall ((Lst)) ((sort (sort _qv_34))=_qv_34))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (insort (succ (succ zero)) _v_43)))=(nat-to-int (succ (len _v_43))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_35))=(nat-to-int _qv_35)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (insort (succ (succ zero)) _v_43)))=(nat-to-int (succ (len _v_43))))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_36))=(nat-to-int _qv_36)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (insort (succ (succ zero)) _v_43)))=(nat-to-int (succ (len _v_43))))
NOW TESTING (forall ((Nat) (Lst) (Lst)) ((insort _qv_37 (cons _qv_38 _qv_39))=(cons (insort _qv_37 _qv_38) (insort _qv_37 _qv_39))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (insort (succ (succ zero)) _v_43)))=(nat-to-int (succ (len _v_43))))
NOW TESTING (forall ((Nat) (Lst) (Lst)) ((cons _qv_40 (insort _qv_41 _qv_42))=(insort (cons _qv_40 _qv_41) (cons _qv_40 _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (insort (succ (succ zero)) _v_43)))=(nat-to-int (succ (len _v_43))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_30))=_qv_30))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (insort (succ (succ zero)) _v_43)))=(nat-to-int (succ (len _v_43))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_31)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (insort (succ (succ zero)) _v_43)))=(nat-to-int (succ (len _v_43))))
NOW TESTING (forall ((Nat) (Nat)) ((less _qv_32 _qv_33)=(less _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (insort (succ (succ zero)) _v_43)))=(nat-to-int (succ (len _v_43))))
NOW TESTING (forall ((Lst)) ((sort (sort _qv_34))=_qv_34))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (insort (succ (succ zero)) _v_43)))=(nat-to-int (succ (len _v_43))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_35))=(nat-to-int _qv_35)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (insort (succ (succ zero)) _v_43)))=(nat-to-int (succ (len _v_43))))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_36))=(nat-to-int _qv_36)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (insort (succ (succ zero)) _v_43)))=(nat-to-int (succ (len _v_43))))
NOW TESTING (forall ((Nat) (Lst) (Lst)) ((insort _qv_37 (cons _qv_38 _qv_39))=(cons (insort _qv_37 _qv_38) (insort _qv_37 _qv_39))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (insort (succ (succ zero)) _v_43)))=(nat-to-int (succ (len _v_43))))
NOW TESTING (forall ((Nat) (Lst) (Lst)) ((cons _qv_40 (insort _qv_41 _qv_42))=(insort (cons _qv_40 _qv_41) (cons _qv_40 _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (insort (succ (succ zero)) _v_43))=(succ (len _v_43)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_30))=_qv_30))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (insort (succ (succ zero)) _v_43))=(succ (len _v_43)))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_31)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (insort (succ (succ zero)) _v_43))=(succ (len _v_43)))
NOW TESTING (forall ((Nat) (Nat)) ((less _qv_32 _qv_33)=(less _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (insort (succ (succ zero)) _v_43))=(succ (len _v_43)))
NOW TESTING (forall ((Lst)) ((sort (sort _qv_34))=_qv_34))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (insort (succ (succ zero)) _v_43))=(succ (len _v_43)))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_35))=(nat-to-int _qv_35)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (insort (succ (succ zero)) _v_43))=(succ (len _v_43)))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_36))=(nat-to-int _qv_36)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (insort (succ (succ zero)) _v_43))=(succ (len _v_43)))
NOW TESTING (forall ((Nat) (Lst) (Lst)) ((insort _qv_37 (cons _qv_38 _qv_39))=(cons (insort _qv_37 _qv_38) (insort _qv_37 _qv_39))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (insort (succ (succ zero)) _v_43))=(succ (len _v_43)))
NOW TESTING (forall ((Nat) (Lst) (Lst)) ((cons _qv_40 (insort _qv_41 _qv_42))=(insort (cons _qv_40 _qv_41) (cons _qv_40 _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (insort (succ (succ zero)) _v_43)))=(nat-to-int (succ (len _v_43))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_30))=_qv_30))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (insort (succ (succ zero)) _v_43)))=(nat-to-int (succ (len _v_43))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_31)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (insort (succ (succ zero)) _v_43)))=(nat-to-int (succ (len _v_43))))
NOW TESTING (forall ((Nat) (Nat)) ((less _qv_32 _qv_33)=(less _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (insort (succ (succ zero)) _v_43)))=(nat-to-int (succ (len _v_43))))
NOW TESTING (forall ((Lst)) ((sort (sort _qv_34))=_qv_34))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (insort (succ (succ zero)) _v_43)))=(nat-to-int (succ (len _v_43))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_35))=(nat-to-int _qv_35)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (insort (succ (succ zero)) _v_43)))=(nat-to-int (succ (len _v_43))))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_36))=(nat-to-int _qv_36)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (insort (succ (succ zero)) _v_43)))=(nat-to-int (succ (len _v_43))))
NOW TESTING (forall ((Nat) (Lst) (Lst)) ((insort _qv_37 (cons _qv_38 _qv_39))=(cons (insort _qv_37 _qv_38) (insort _qv_37 _qv_39))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (insort (succ (succ zero)) _v_43)))=(nat-to-int (succ (len _v_43))))
NOW TESTING (forall ((Nat) (Lst) (Lst)) ((cons _qv_40 (insort _qv_41 _qv_42))=(insort (cons _qv_40 _qv_41) (cons _qv_40 _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (insort (succ (succ zero)) _v_43)))=(nat-to-int (succ (len _v_43))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_30))=_qv_30))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (insort (succ (succ zero)) _v_43)))=(nat-to-int (succ (len _v_43))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_31)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (insort (succ (succ zero)) _v_43)))=(nat-to-int (succ (len _v_43))))
NOW TESTING (forall ((Nat) (Nat)) ((less _qv_32 _qv_33)=(less _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (insort (succ (succ zero)) _v_43)))=(nat-to-int (succ (len _v_43))))
NOW TESTING (forall ((Lst)) ((sort (sort _qv_34))=_qv_34))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (insort (succ (succ zero)) _v_43)))=(nat-to-int (succ (len _v_43))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_35))=(nat-to-int _qv_35)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (insort (succ (succ zero)) _v_43)))=(nat-to-int (succ (len _v_43))))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_36))=(nat-to-int _qv_36)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (insort (succ (succ zero)) _v_43)))=(nat-to-int (succ (len _v_43))))
NOW TESTING (forall ((Nat) (Lst) (Lst)) ((insort _qv_37 (cons _qv_38 _qv_39))=(cons (insort _qv_37 _qv_38) (insort _qv_37 _qv_39))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (insort (succ (succ zero)) _v_43)))=(nat-to-int (succ (len _v_43))))
NOW TESTING (forall ((Nat) (Lst) (Lst)) ((cons _qv_40 (insort _qv_41 _qv_42))=(insort (cons _qv_40 _qv_41) (cons _qv_40 _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (insort (succ (succ zero)) _v_43)))=(nat-to-int (succ (len _v_43))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_30))=_qv_30))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (insort (succ (succ zero)) _v_43)))=(nat-to-int (succ (len _v_43))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_31)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (insort (succ (succ zero)) _v_43)))=(nat-to-int (succ (len _v_43))))
NOW TESTING (forall ((Nat) (Nat)) ((less _qv_32 _qv_33)=(less _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (insort (succ (succ zero)) _v_43)))=(nat-to-int (succ (len _v_43))))
NOW TESTING (forall ((Lst)) ((sort (sort _qv_34))=_qv_34))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (insort (succ (succ zero)) _v_43)))=(nat-to-int (succ (len _v_43))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_35))=(nat-to-int _qv_35)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (insort (succ (succ zero)) _v_43)))=(nat-to-int (succ (len _v_43))))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_36))=(nat-to-int _qv_36)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (insort (succ (succ zero)) _v_43)))=(nat-to-int (succ (len _v_43))))
NOW TESTING (forall ((Nat) (Lst) (Lst)) ((insort _qv_37 (cons _qv_38 _qv_39))=(cons (insort _qv_37 _qv_38) (insort _qv_37 _qv_39))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (insort (succ (succ zero)) _v_43)))=(nat-to-int (succ (len _v_43))))
NOW TESTING (forall ((Nat) (Lst) (Lst)) ((cons _qv_40 (insort _qv_41 _qv_42))=(insort (cons _qv_40 _qv_41) (cons _qv_40 _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (insort (succ (succ zero)) _v_43)))=(nat-to-int (succ (len _v_43))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_30))=_qv_30))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (insort (succ (succ zero)) _v_43)))=(nat-to-int (succ (len _v_43))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_31)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (insort (succ (succ zero)) _v_43)))=(nat-to-int (succ (len _v_43))))
NOW TESTING (forall ((Nat) (Nat)) ((less _qv_32 _qv_33)=(less _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (insort (succ (succ zero)) _v_43)))=(nat-to-int (succ (len _v_43))))
NOW TESTING (forall ((Lst)) ((sort (sort _qv_34))=_qv_34))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (insort (succ (succ zero)) _v_43)))=(nat-to-int (succ (len _v_43))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_35))=(nat-to-int _qv_35)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (insort (succ (succ zero)) _v_43)))=(nat-to-int (succ (len _v_43))))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_36))=(nat-to-int _qv_36)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (insort (succ (succ zero)) _v_43)))=(nat-to-int (succ (len _v_43))))
NOW TESTING (forall ((Nat) (Lst) (Lst)) ((insort _qv_37 (cons _qv_38 _qv_39))=(cons (insort _qv_37 _qv_38) (insort _qv_37 _qv_39))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (insort (succ (succ zero)) _v_43)))=(nat-to-int (succ (len _v_43))))
NOW TESTING (forall ((Nat) (Lst) (Lst)) ((cons _qv_40 (insort _qv_41 _qv_42))=(insort (cons _qv_40 _qv_41) (cons _qv_40 _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (insort (succ (succ zero)) _v_43))=(succ (len _v_43)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_30))=_qv_30))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (insort (succ (succ zero)) _v_43))=(succ (len _v_43)))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_31)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (insort (succ (succ zero)) _v_43))=(succ (len _v_43)))
NOW TESTING (forall ((Nat) (Nat)) ((less _qv_32 _qv_33)=(less _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (insort (succ (succ zero)) _v_43))=(succ (len _v_43)))
NOW TESTING (forall ((Lst)) ((sort (sort _qv_34))=_qv_34))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (insort (succ (succ zero)) _v_43))=(succ (len _v_43)))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_35))=(nat-to-int _qv_35)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (insort (succ (succ zero)) _v_43))=(succ (len _v_43)))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_36))=(nat-to-int _qv_36)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (insort (succ (succ zero)) _v_43))=(succ (len _v_43)))
NOW TESTING (forall ((Nat) (Lst) (Lst)) ((insort _qv_37 (cons _qv_38 _qv_39))=(cons (insort _qv_37 _qv_38) (insort _qv_37 _qv_39))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (insort (succ (succ zero)) _v_43))=(succ (len _v_43)))
NOW TESTING (forall ((Nat) (Lst) (Lst)) ((cons _qv_40 (insort _qv_41 _qv_42))=(insort (cons _qv_40 _qv_41) (cons _qv_40 _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (insort (succ (succ zero)) _v_43))=(len (insort _t_14 _v_43)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_30))=_qv_30))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (insort (succ (succ zero)) _v_43))=(len (insort _t_14 _v_43)))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_31)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (insort (succ (succ zero)) _v_43))=(len (insort _t_14 _v_43)))
NOW TESTING (forall ((Nat) (Nat)) ((less _qv_32 _qv_33)=(less _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (insort (succ (succ zero)) _v_43))=(len (insort _t_14 _v_43)))
NOW TESTING (forall ((Lst)) ((sort (sort _qv_34))=_qv_34))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (insort (succ (succ zero)) _v_43))=(len (insort _t_14 _v_43)))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_35))=(nat-to-int _qv_35)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (insort (succ (succ zero)) _v_43))=(len (insort _t_14 _v_43)))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_36))=(nat-to-int _qv_36)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (insort (succ (succ zero)) _v_43))=(len (insort _t_14 _v_43)))
NOW TESTING (forall ((Nat) (Lst) (Lst)) ((insort _qv_37 (cons _qv_38 _qv_39))=(cons (insort _qv_37 _qv_38) (insort _qv_37 _qv_39))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (insort (succ (succ zero)) _v_43))=(len (insort _t_14 _v_43)))
NOW TESTING (forall ((Nat) (Lst) (Lst)) ((cons _qv_40 (insort _qv_41 _qv_42))=(insort (cons _qv_40 _qv_41) (cons _qv_40 _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (insort (succ (succ zero)) _v_43))=(succ (len _v_43)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_30))=_qv_30))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (insort (succ (succ zero)) _v_43))=(succ (len _v_43)))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_31)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (insort (succ (succ zero)) _v_43))=(succ (len _v_43)))
NOW TESTING (forall ((Nat) (Nat)) ((less _qv_32 _qv_33)=(less _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (insort (succ (succ zero)) _v_43))=(succ (len _v_43)))
NOW TESTING (forall ((Lst)) ((sort (sort _qv_34))=_qv_34))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (insort (succ (succ zero)) _v_43))=(succ (len _v_43)))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_35))=(nat-to-int _qv_35)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (insort (succ (succ zero)) _v_43))=(succ (len _v_43)))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_36))=(nat-to-int _qv_36)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (insort (succ (succ zero)) _v_43))=(succ (len _v_43)))
NOW TESTING (forall ((Nat) (Lst) (Lst)) ((insort _qv_37 (cons _qv_38 _qv_39))=(cons (insort _qv_37 _qv_38) (insort _qv_37 _qv_39))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (insort (succ (succ zero)) _v_43))=(succ (len _v_43)))
NOW TESTING (forall ((Nat) (Lst) (Lst)) ((cons _qv_40 (insort _qv_41 _qv_42))=(insort (cons _qv_40 _qv_41) (cons _qv_40 _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (insort (succ (succ zero)) _v_43)))=(nat-to-int (succ (len _v_43))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_30))=_qv_30))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (insort (succ (succ zero)) _v_43)))=(nat-to-int (succ (len _v_43))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_31)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (insort (succ (succ zero)) _v_43)))=(nat-to-int (succ (len _v_43))))
NOW TESTING (forall ((Nat) (Nat)) ((less _qv_32 _qv_33)=(less _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (insort (succ (succ zero)) _v_43)))=(nat-to-int (succ (len _v_43))))
NOW TESTING (forall ((Lst)) ((sort (sort _qv_34))=_qv_34))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (insort (succ (succ zero)) _v_43)))=(nat-to-int (succ (len _v_43))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_35))=(nat-to-int _qv_35)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (insort (succ (succ zero)) _v_43)))=(nat-to-int (succ (len _v_43))))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_36))=(nat-to-int _qv_36)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (insort (succ (succ zero)) _v_43)))=(nat-to-int (succ (len _v_43))))
NOW TESTING (forall ((Nat) (Lst) (Lst)) ((insort _qv_37 (cons _qv_38 _qv_39))=(cons (insort _qv_37 _qv_38) (insort _qv_37 _qv_39))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (insort (succ (succ zero)) _v_43)))=(nat-to-int (succ (len _v_43))))
NOW TESTING (forall ((Nat) (Lst) (Lst)) ((cons _qv_40 (insort _qv_41 _qv_42))=(insort (cons _qv_40 _qv_41) (cons _qv_40 _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (insort (succ (succ zero)) _v_43)))=(nat-to-int (succ (len _v_43))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_30))=_qv_30))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (insort (succ (succ zero)) _v_43)))=(nat-to-int (succ (len _v_43))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_31)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (insort (succ (succ zero)) _v_43)))=(nat-to-int (succ (len _v_43))))
NOW TESTING (forall ((Nat) (Nat)) ((less _qv_32 _qv_33)=(less _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (insort (succ (succ zero)) _v_43)))=(nat-to-int (succ (len _v_43))))
NOW TESTING (forall ((Lst)) ((sort (sort _qv_34))=_qv_34))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (insort (succ (succ zero)) _v_43)))=(nat-to-int (succ (len _v_43))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_35))=(nat-to-int _qv_35)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (insort (succ (succ zero)) _v_43)))=(nat-to-int (succ (len _v_43))))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_36))=(nat-to-int _qv_36)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (insort (succ (succ zero)) _v_43)))=(nat-to-int (succ (len _v_43))))
NOW TESTING (forall ((Nat) (Lst) (Lst)) ((insort _qv_37 (cons _qv_38 _qv_39))=(cons (insort _qv_37 _qv_38) (insort _qv_37 _qv_39))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (insort (succ (succ zero)) _v_43)))=(nat-to-int (succ (len _v_43))))
NOW TESTING (forall ((Nat) (Lst) (Lst)) ((cons _qv_40 (insort _qv_41 _qv_42))=(insort (cons _qv_40 _qv_41) (cons _qv_40 _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (insort (succ (succ zero)) _v_43)))=(nat-to-int (succ (len _v_43))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_30))=_qv_30))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (insort (succ (succ zero)) _v_43)))=(nat-to-int (succ (len _v_43))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_31)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (insort (succ (succ zero)) _v_43)))=(nat-to-int (succ (len _v_43))))
NOW TESTING (forall ((Nat) (Nat)) ((less _qv_32 _qv_33)=(less _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (insort (succ (succ zero)) _v_43)))=(nat-to-int (succ (len _v_43))))
NOW TESTING (forall ((Lst)) ((sort (sort _qv_34))=_qv_34))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (insort (succ (succ zero)) _v_43)))=(nat-to-int (succ (len _v_43))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_35))=(nat-to-int _qv_35)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (insort (succ (succ zero)) _v_43)))=(nat-to-int (succ (len _v_43))))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_36))=(nat-to-int _qv_36)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (insort (succ (succ zero)) _v_43)))=(nat-to-int (succ (len _v_43))))
NOW TESTING (forall ((Nat) (Lst) (Lst)) ((insort _qv_37 (cons _qv_38 _qv_39))=(cons (insort _qv_37 _qv_38) (insort _qv_37 _qv_39))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (insort (succ (succ zero)) _v_43)))=(nat-to-int (succ (len _v_43))))
NOW TESTING (forall ((Nat) (Lst) (Lst)) ((cons _qv_40 (insort _qv_41 _qv_42))=(insort (cons _qv_40 _qv_41) (cons _qv_40 _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (insort (succ (succ zero)) _v_43)))=(nat-to-int (succ (len _v_43))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_30))=_qv_30))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (insort (succ (succ zero)) _v_43)))=(nat-to-int (succ (len _v_43))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_31)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (insort (succ (succ zero)) _v_43)))=(nat-to-int (succ (len _v_43))))
NOW TESTING (forall ((Nat) (Nat)) ((less _qv_32 _qv_33)=(less _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (insort (succ (succ zero)) _v_43)))=(nat-to-int (succ (len _v_43))))
NOW TESTING (forall ((Lst)) ((sort (sort _qv_34))=_qv_34))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (insort (succ (succ zero)) _v_43)))=(nat-to-int (succ (len _v_43))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_35))=(nat-to-int _qv_35)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (insort (succ (succ zero)) _v_43)))=(nat-to-int (succ (len _v_43))))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_36))=(nat-to-int _qv_36)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (insort (succ (succ zero)) _v_43)))=(nat-to-int (succ (len _v_43))))
NOW TESTING (forall ((Nat) (Lst) (Lst)) ((insort _qv_37 (cons _qv_38 _qv_39))=(cons (insort _qv_37 _qv_38) (insort _qv_37 _qv_39))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (insort (succ (succ zero)) _v_43)))=(nat-to-int (succ (len _v_43))))
NOW TESTING (forall ((Nat) (Lst) (Lst)) ((cons _qv_40 (insort _qv_41 _qv_42))=(insort (cons _qv_40 _qv_41) (cons _qv_40 _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (insort (succ (succ zero)) _v_43))=(succ (len _v_43)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_30))=_qv_30))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (insort (succ (succ zero)) _v_43))=(succ (len _v_43)))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_31)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (insort (succ (succ zero)) _v_43))=(succ (len _v_43)))
NOW TESTING (forall ((Nat) (Nat)) ((less _qv_32 _qv_33)=(less _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (insort (succ (succ zero)) _v_43))=(succ (len _v_43)))
NOW TESTING (forall ((Lst)) ((sort (sort _qv_34))=_qv_34))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (insort (succ (succ zero)) _v_43))=(succ (len _v_43)))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_35))=(nat-to-int _qv_35)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (insort (succ (succ zero)) _v_43))=(succ (len _v_43)))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_36))=(nat-to-int _qv_36)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (insort (succ (succ zero)) _v_43))=(succ (len _v_43)))
NOW TESTING (forall ((Nat) (Lst) (Lst)) ((insort _qv_37 (cons _qv_38 _qv_39))=(cons (insort _qv_37 _qv_38) (insort _qv_37 _qv_39))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (insort (succ (succ zero)) _v_43))=(succ (len _v_43)))
NOW TESTING (forall ((Nat) (Lst) (Lst)) ((cons _qv_40 (insort _qv_41 _qv_42))=(insort (cons _qv_40 _qv_41) (cons _qv_40 _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (insort (succ (succ zero)) _v_43)))=(nat-to-int (succ (len _v_43))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_30))=_qv_30))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (insort (succ (succ zero)) _v_43)))=(nat-to-int (succ (len _v_43))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_31)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (insort (succ (succ zero)) _v_43)))=(nat-to-int (succ (len _v_43))))
NOW TESTING (forall ((Nat) (Nat)) ((less _qv_32 _qv_33)=(less _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (insort (succ (succ zero)) _v_43)))=(nat-to-int (succ (len _v_43))))
NOW TESTING (forall ((Lst)) ((sort (sort _qv_34))=_qv_34))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (insort (succ (succ zero)) _v_43)))=(nat-to-int (succ (len _v_43))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_35))=(nat-to-int _qv_35)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (insort (succ (succ zero)) _v_43)))=(nat-to-int (succ (len _v_43))))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_36))=(nat-to-int _qv_36)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (insort (succ (succ zero)) _v_43)))=(nat-to-int (succ (len _v_43))))
NOW TESTING (forall ((Nat) (Lst) (Lst)) ((insort _qv_37 (cons _qv_38 _qv_39))=(cons (insort _qv_37 _qv_38) (insort _qv_37 _qv_39))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (insort (succ (succ zero)) _v_43)))=(nat-to-int (succ (len _v_43))))
NOW TESTING (forall ((Nat) (Lst) (Lst)) ((cons _qv_40 (insort _qv_41 _qv_42))=(insort (cons _qv_40 _qv_41) (cons _qv_40 _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (insort (succ (succ zero)) _v_43)))=(nat-to-int (succ (len _v_43))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_30))=_qv_30))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (insort (succ (succ zero)) _v_43)))=(nat-to-int (succ (len _v_43))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_31)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (insort (succ (succ zero)) _v_43)))=(nat-to-int (succ (len _v_43))))
NOW TESTING (forall ((Nat) (Nat)) ((less _qv_32 _qv_33)=(less _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (insort (succ (succ zero)) _v_43)))=(nat-to-int (succ (len _v_43))))
NOW TESTING (forall ((Lst)) ((sort (sort _qv_34))=_qv_34))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (insort (succ (succ zero)) _v_43)))=(nat-to-int (succ (len _v_43))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_35))=(nat-to-int _qv_35)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (insort (succ (succ zero)) _v_43)))=(nat-to-int (succ (len _v_43))))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_36))=(nat-to-int _qv_36)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (insort (succ (succ zero)) _v_43)))=(nat-to-int (succ (len _v_43))))
NOW TESTING (forall ((Nat) (Lst) (Lst)) ((insort _qv_37 (cons _qv_38 _qv_39))=(cons (insort _qv_37 _qv_38) (insort _qv_37 _qv_39))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (insort (succ (succ zero)) _v_43)))=(nat-to-int (succ (len _v_43))))
NOW TESTING (forall ((Nat) (Lst) (Lst)) ((cons _qv_40 (insort _qv_41 _qv_42))=(insort (cons _qv_40 _qv_41) (cons _qv_40 _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (insort (succ (succ zero)) _v_43)))=(nat-to-int (len (insort _t_14 _v_43))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_30))=_qv_30))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (insort (succ (succ zero)) _v_43)))=(nat-to-int (len (insort _t_14 _v_43))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_31)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (insort (succ (succ zero)) _v_43)))=(nat-to-int (len (insort _t_14 _v_43))))
NOW TESTING (forall ((Nat) (Nat)) ((less _qv_32 _qv_33)=(less _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (insort (succ (succ zero)) _v_43)))=(nat-to-int (len (insort _t_14 _v_43))))
NOW TESTING (forall ((Lst)) ((sort (sort _qv_34))=_qv_34))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (insort (succ (succ zero)) _v_43)))=(nat-to-int (len (insort _t_14 _v_43))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_35))=(nat-to-int _qv_35)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (insort (succ (succ zero)) _v_43)))=(nat-to-int (len (insort _t_14 _v_43))))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_36))=(nat-to-int _qv_36)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (insort (succ (succ zero)) _v_43)))=(nat-to-int (len (insort _t_14 _v_43))))
NOW TESTING (forall ((Nat) (Lst) (Lst)) ((insort _qv_37 (cons _qv_38 _qv_39))=(cons (insort _qv_37 _qv_38) (insort _qv_37 _qv_39))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (insort (succ (succ zero)) _v_43)))=(nat-to-int (len (insort _t_14 _v_43))))
NOW TESTING (forall ((Nat) (Lst) (Lst)) ((cons _qv_40 (insort _qv_41 _qv_42))=(insort (cons _qv_40 _qv_41) (cons _qv_40 _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (insort (succ (succ zero)) _v_43)))=(nat-to-int (succ (len _v_43))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_30))=_qv_30))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (insort (succ (succ zero)) _v_43)))=(nat-to-int (succ (len _v_43))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_31)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (insort (succ (succ zero)) _v_43)))=(nat-to-int (succ (len _v_43))))
NOW TESTING (forall ((Nat) (Nat)) ((less _qv_32 _qv_33)=(less _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (insort (succ (succ zero)) _v_43)))=(nat-to-int (succ (len _v_43))))
NOW TESTING (forall ((Lst)) ((sort (sort _qv_34))=_qv_34))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (insort (succ (succ zero)) _v_43)))=(nat-to-int (succ (len _v_43))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_35))=(nat-to-int _qv_35)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (insort (succ (succ zero)) _v_43)))=(nat-to-int (succ (len _v_43))))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_36))=(nat-to-int _qv_36)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (insort (succ (succ zero)) _v_43)))=(nat-to-int (succ (len _v_43))))
NOW TESTING (forall ((Nat) (Lst) (Lst)) ((insort _qv_37 (cons _qv_38 _qv_39))=(cons (insort _qv_37 _qv_38) (insort _qv_37 _qv_39))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (insort (succ (succ zero)) _v_43)))=(nat-to-int (succ (len _v_43))))
NOW TESTING (forall ((Nat) (Lst) (Lst)) ((cons _qv_40 (insort _qv_41 _qv_42))=(insort (cons _qv_40 _qv_41) (cons _qv_40 _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (insort (succ (succ zero)) _v_43)))=(nat-to-int (succ (len _v_43))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_30))=_qv_30))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (insort (succ (succ zero)) _v_43)))=(nat-to-int (succ (len _v_43))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_31)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (insort (succ (succ zero)) _v_43)))=(nat-to-int (succ (len _v_43))))
NOW TESTING (forall ((Nat) (Nat)) ((less _qv_32 _qv_33)=(less _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (insort (succ (succ zero)) _v_43)))=(nat-to-int (succ (len _v_43))))
NOW TESTING (forall ((Lst)) ((sort (sort _qv_34))=_qv_34))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (insort (succ (succ zero)) _v_43)))=(nat-to-int (succ (len _v_43))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_35))=(nat-to-int _qv_35)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (insort (succ (succ zero)) _v_43)))=(nat-to-int (succ (len _v_43))))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_36))=(nat-to-int _qv_36)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (insort (succ (succ zero)) _v_43)))=(nat-to-int (succ (len _v_43))))
NOW TESTING (forall ((Nat) (Lst) (Lst)) ((insort _qv_37 (cons _qv_38 _qv_39))=(cons (insort _qv_37 _qv_38) (insort _qv_37 _qv_39))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (insort (succ (succ zero)) _v_43)))=(nat-to-int (succ (len _v_43))))
NOW TESTING (forall ((Nat) (Lst) (Lst)) ((cons _qv_40 (insort _qv_41 _qv_42))=(insort (cons _qv_40 _qv_41) (cons _qv_40 _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (insort (succ (succ zero)) _v_43)))=(nat-to-int (len (insort _t_14 _v_43))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_30))=_qv_30))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (insort (succ (succ zero)) _v_43)))=(nat-to-int (len (insort _t_14 _v_43))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_31)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (insort (succ (succ zero)) _v_43)))=(nat-to-int (len (insort _t_14 _v_43))))
NOW TESTING (forall ((Nat) (Nat)) ((less _qv_32 _qv_33)=(less _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (insort (succ (succ zero)) _v_43)))=(nat-to-int (len (insort _t_14 _v_43))))
NOW TESTING (forall ((Lst)) ((sort (sort _qv_34))=_qv_34))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (insort (succ (succ zero)) _v_43)))=(nat-to-int (len (insort _t_14 _v_43))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_35))=(nat-to-int _qv_35)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (insort (succ (succ zero)) _v_43)))=(nat-to-int (len (insort _t_14 _v_43))))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_36))=(nat-to-int _qv_36)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (insort (succ (succ zero)) _v_43)))=(nat-to-int (len (insort _t_14 _v_43))))
NOW TESTING (forall ((Nat) (Lst) (Lst)) ((insort _qv_37 (cons _qv_38 _qv_39))=(cons (insort _qv_37 _qv_38) (insort _qv_37 _qv_39))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (insort (succ (succ zero)) _v_43)))=(nat-to-int (len (insort _t_14 _v_43))))
NOW TESTING (forall ((Nat) (Lst) (Lst)) ((cons _qv_40 (insort _qv_41 _qv_42))=(insort (cons _qv_40 _qv_41) (cons _qv_40 _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (insort (succ (succ zero)) _v_43))=(len (insort _t_14 _v_43)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_30))=_qv_30))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (insort (succ (succ zero)) _v_43))=(len (insort _t_14 _v_43)))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_31)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (insort (succ (succ zero)) _v_43))=(len (insort _t_14 _v_43)))
NOW TESTING (forall ((Nat) (Nat)) ((less _qv_32 _qv_33)=(less _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (insort (succ (succ zero)) _v_43))=(len (insort _t_14 _v_43)))
NOW TESTING (forall ((Lst)) ((sort (sort _qv_34))=_qv_34))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (insort (succ (succ zero)) _v_43))=(len (insort _t_14 _v_43)))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_35))=(nat-to-int _qv_35)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (insort (succ (succ zero)) _v_43))=(len (insort _t_14 _v_43)))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_36))=(nat-to-int _qv_36)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (insort (succ (succ zero)) _v_43))=(len (insort _t_14 _v_43)))
NOW TESTING (forall ((Nat) (Lst) (Lst)) ((insort _qv_37 (cons _qv_38 _qv_39))=(cons (insort _qv_37 _qv_38) (insort _qv_37 _qv_39))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (insort (succ (succ zero)) _v_43))=(len (insort _t_14 _v_43)))
NOW TESTING (forall ((Nat) (Lst) (Lst)) ((cons _qv_40 (insort _qv_41 _qv_42))=(insort (cons _qv_40 _qv_41) (cons _qv_40 _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (insort (succ (succ zero)) _v_43)))=(nat-to-int (succ (len _v_43))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_30))=_qv_30))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (insort (succ (succ zero)) _v_43)))=(nat-to-int (succ (len _v_43))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_31)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (insort (succ (succ zero)) _v_43)))=(nat-to-int (succ (len _v_43))))
NOW TESTING (forall ((Nat) (Nat)) ((less _qv_32 _qv_33)=(less _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (insort (succ (succ zero)) _v_43)))=(nat-to-int (succ (len _v_43))))
NOW TESTING (forall ((Lst)) ((sort (sort _qv_34))=_qv_34))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (insort (succ (succ zero)) _v_43)))=(nat-to-int (succ (len _v_43))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_35))=(nat-to-int _qv_35)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (insort (succ (succ zero)) _v_43)))=(nat-to-int (succ (len _v_43))))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_36))=(nat-to-int _qv_36)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (insort (succ (succ zero)) _v_43)))=(nat-to-int (succ (len _v_43))))
NOW TESTING (forall ((Nat) (Lst) (Lst)) ((insort _qv_37 (cons _qv_38 _qv_39))=(cons (insort _qv_37 _qv_38) (insort _qv_37 _qv_39))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (insort (succ (succ zero)) _v_43)))=(nat-to-int (succ (len _v_43))))
NOW TESTING (forall ((Nat) (Lst) (Lst)) ((cons _qv_40 (insort _qv_41 _qv_42))=(insort (cons _qv_40 _qv_41) (cons _qv_40 _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (insort (succ (succ zero)) _v_43)))=(nat-to-int (succ (len _v_43))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_30))=_qv_30))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (insort (succ (succ zero)) _v_43)))=(nat-to-int (succ (len _v_43))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_31)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (insort (succ (succ zero)) _v_43)))=(nat-to-int (succ (len _v_43))))
NOW TESTING (forall ((Nat) (Nat)) ((less _qv_32 _qv_33)=(less _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (insort (succ (succ zero)) _v_43)))=(nat-to-int (succ (len _v_43))))
NOW TESTING (forall ((Lst)) ((sort (sort _qv_34))=_qv_34))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (insort (succ (succ zero)) _v_43)))=(nat-to-int (succ (len _v_43))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_35))=(nat-to-int _qv_35)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (insort (succ (succ zero)) _v_43)))=(nat-to-int (succ (len _v_43))))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_36))=(nat-to-int _qv_36)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (insort (succ (succ zero)) _v_43)))=(nat-to-int (succ (len _v_43))))
NOW TESTING (forall ((Nat) (Lst) (Lst)) ((insort _qv_37 (cons _qv_38 _qv_39))=(cons (insort _qv_37 _qv_38) (insort _qv_37 _qv_39))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (insort (succ (succ zero)) _v_43)))=(nat-to-int (succ (len _v_43))))
NOW TESTING (forall ((Nat) (Lst) (Lst)) ((cons _qv_40 (insort _qv_41 _qv_42))=(insort (cons _qv_40 _qv_41) (cons _qv_40 _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (insort (succ (succ zero)) _v_43)))=(nat-to-int (succ (len _v_43))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_30))=_qv_30))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (insort (succ (succ zero)) _v_43)))=(nat-to-int (succ (len _v_43))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_31)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (insort (succ (succ zero)) _v_43)))=(nat-to-int (succ (len _v_43))))
NOW TESTING (forall ((Nat) (Nat)) ((less _qv_32 _qv_33)=(less _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (insort (succ (succ zero)) _v_43)))=(nat-to-int (succ (len _v_43))))
NOW TESTING (forall ((Lst)) ((sort (sort _qv_34))=_qv_34))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (insort (succ (succ zero)) _v_43)))=(nat-to-int (succ (len _v_43))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_35))=(nat-to-int _qv_35)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (insort (succ (succ zero)) _v_43)))=(nat-to-int (succ (len _v_43))))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_36))=(nat-to-int _qv_36)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (insort (succ (succ zero)) _v_43)))=(nat-to-int (succ (len _v_43))))
NOW TESTING (forall ((Nat) (Lst) (Lst)) ((insort _qv_37 (cons _qv_38 _qv_39))=(cons (insort _qv_37 _qv_38) (insort _qv_37 _qv_39))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (insort (succ (succ zero)) _v_43)))=(nat-to-int (succ (len _v_43))))
NOW TESTING (forall ((Nat) (Lst) (Lst)) ((cons _qv_40 (insort _qv_41 _qv_42))=(insort (cons _qv_40 _qv_41) (cons _qv_40 _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (insort (succ (succ zero)) _v_43)))=(nat-to-int (succ (len _v_43))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_30))=_qv_30))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (insort (succ (succ zero)) _v_43)))=(nat-to-int (succ (len _v_43))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_31)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (insort (succ (succ zero)) _v_43)))=(nat-to-int (succ (len _v_43))))
NOW TESTING (forall ((Nat) (Nat)) ((less _qv_32 _qv_33)=(less _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (insort (succ (succ zero)) _v_43)))=(nat-to-int (succ (len _v_43))))
NOW TESTING (forall ((Lst)) ((sort (sort _qv_34))=_qv_34))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (insort (succ (succ zero)) _v_43)))=(nat-to-int (succ (len _v_43))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_35))=(nat-to-int _qv_35)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (insort (succ (succ zero)) _v_43)))=(nat-to-int (succ (len _v_43))))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_36))=(nat-to-int _qv_36)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (insort (succ (succ zero)) _v_43)))=(nat-to-int (succ (len _v_43))))
NOW TESTING (forall ((Nat) (Lst) (Lst)) ((insort _qv_37 (cons _qv_38 _qv_39))=(cons (insort _qv_37 _qv_38) (insort _qv_37 _qv_39))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (insort (succ (succ zero)) _v_43)))=(nat-to-int (succ (len _v_43))))
NOW TESTING (forall ((Nat) (Lst) (Lst)) ((cons _qv_40 (insort _qv_41 _qv_42))=(insort (cons _qv_40 _qv_41) (cons _qv_40 _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (insort (succ (succ zero)) _v_43))=(succ (len _v_43)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_30))=_qv_30))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (insort (succ (succ zero)) _v_43))=(succ (len _v_43)))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_31)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (insort (succ (succ zero)) _v_43))=(succ (len _v_43)))
NOW TESTING (forall ((Nat) (Nat)) ((less _qv_32 _qv_33)=(less _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (insort (succ (succ zero)) _v_43))=(succ (len _v_43)))
NOW TESTING (forall ((Lst)) ((sort (sort _qv_34))=_qv_34))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (insort (succ (succ zero)) _v_43))=(succ (len _v_43)))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_35))=(nat-to-int _qv_35)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (insort (succ (succ zero)) _v_43))=(succ (len _v_43)))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_36))=(nat-to-int _qv_36)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (insort (succ (succ zero)) _v_43))=(succ (len _v_43)))
NOW TESTING (forall ((Nat) (Lst) (Lst)) ((insort _qv_37 (cons _qv_38 _qv_39))=(cons (insort _qv_37 _qv_38) (insort _qv_37 _qv_39))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (insort (succ (succ zero)) _v_43))=(succ (len _v_43)))
NOW TESTING (forall ((Nat) (Lst) (Lst)) ((cons _qv_40 (insort _qv_41 _qv_42))=(insort (cons _qv_40 _qv_41) (cons _qv_40 _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (insort (succ (succ zero)) _v_43)))=(nat-to-int (succ (len _v_43))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_30))=_qv_30))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (insort (succ (succ zero)) _v_43)))=(nat-to-int (succ (len _v_43))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_31)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (insort (succ (succ zero)) _v_43)))=(nat-to-int (succ (len _v_43))))
NOW TESTING (forall ((Nat) (Nat)) ((less _qv_32 _qv_33)=(less _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (insort (succ (succ zero)) _v_43)))=(nat-to-int (succ (len _v_43))))
NOW TESTING (forall ((Lst)) ((sort (sort _qv_34))=_qv_34))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (insort (succ (succ zero)) _v_43)))=(nat-to-int (succ (len _v_43))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_35))=(nat-to-int _qv_35)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (insort (succ (succ zero)) _v_43)))=(nat-to-int (succ (len _v_43))))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_36))=(nat-to-int _qv_36)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (insort (succ (succ zero)) _v_43)))=(nat-to-int (succ (len _v_43))))
NOW TESTING (forall ((Nat) (Lst) (Lst)) ((insort _qv_37 (cons _qv_38 _qv_39))=(cons (insort _qv_37 _qv_38) (insort _qv_37 _qv_39))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (insort (succ (succ zero)) _v_43)))=(nat-to-int (succ (len _v_43))))
NOW TESTING (forall ((Nat) (Lst) (Lst)) ((cons _qv_40 (insort _qv_41 _qv_42))=(insort (cons _qv_40 _qv_41) (cons _qv_40 _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (insort (succ (succ zero)) _v_43)))=(nat-to-int (succ (len _v_43))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_30))=_qv_30))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (insort (succ (succ zero)) _v_43)))=(nat-to-int (succ (len _v_43))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_31)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (insort (succ (succ zero)) _v_43)))=(nat-to-int (succ (len _v_43))))
NOW TESTING (forall ((Nat) (Nat)) ((less _qv_32 _qv_33)=(less _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (insort (succ (succ zero)) _v_43)))=(nat-to-int (succ (len _v_43))))
NOW TESTING (forall ((Lst)) ((sort (sort _qv_34))=_qv_34))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (insort (succ (succ zero)) _v_43)))=(nat-to-int (succ (len _v_43))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_35))=(nat-to-int _qv_35)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (insort (succ (succ zero)) _v_43)))=(nat-to-int (succ (len _v_43))))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_36))=(nat-to-int _qv_36)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (insort (succ (succ zero)) _v_43)))=(nat-to-int (succ (len _v_43))))
NOW TESTING (forall ((Nat) (Lst) (Lst)) ((insort _qv_37 (cons _qv_38 _qv_39))=(cons (insort _qv_37 _qv_38) (insort _qv_37 _qv_39))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (insort (succ (succ zero)) _v_43)))=(nat-to-int (succ (len _v_43))))
NOW TESTING (forall ((Nat) (Lst) (Lst)) ((cons _qv_40 (insort _qv_41 _qv_42))=(insort (cons _qv_40 _qv_41) (cons _qv_40 _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (insort (succ (succ zero)) _v_43)))=(nat-to-int (succ (len _v_43))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_30))=_qv_30))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (insort (succ (succ zero)) _v_43)))=(nat-to-int (succ (len _v_43))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_31)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (insort (succ (succ zero)) _v_43)))=(nat-to-int (succ (len _v_43))))
NOW TESTING (forall ((Nat) (Nat)) ((less _qv_32 _qv_33)=(less _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (insort (succ (succ zero)) _v_43)))=(nat-to-int (succ (len _v_43))))
NOW TESTING (forall ((Lst)) ((sort (sort _qv_34))=_qv_34))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (insort (succ (succ zero)) _v_43)))=(nat-to-int (succ (len _v_43))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_35))=(nat-to-int _qv_35)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (insort (succ (succ zero)) _v_43)))=(nat-to-int (succ (len _v_43))))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_36))=(nat-to-int _qv_36)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (insort (succ (succ zero)) _v_43)))=(nat-to-int (succ (len _v_43))))
NOW TESTING (forall ((Nat) (Lst) (Lst)) ((insort _qv_37 (cons _qv_38 _qv_39))=(cons (insort _qv_37 _qv_38) (insort _qv_37 _qv_39))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (insort (succ (succ zero)) _v_43)))=(nat-to-int (succ (len _v_43))))
NOW TESTING (forall ((Nat) (Lst) (Lst)) ((cons _qv_40 (insort _qv_41 _qv_42))=(insort (cons _qv_40 _qv_41) (cons _qv_40 _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (insort (succ (succ zero)) _v_43)))=(nat-to-int (succ (len _v_43))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_30))=_qv_30))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (insort (succ (succ zero)) _v_43)))=(nat-to-int (succ (len _v_43))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_31)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (insort (succ (succ zero)) _v_43)))=(nat-to-int (succ (len _v_43))))
NOW TESTING (forall ((Nat) (Nat)) ((less _qv_32 _qv_33)=(less _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (insort (succ (succ zero)) _v_43)))=(nat-to-int (succ (len _v_43))))
NOW TESTING (forall ((Lst)) ((sort (sort _qv_34))=_qv_34))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (insort (succ (succ zero)) _v_43)))=(nat-to-int (succ (len _v_43))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_35))=(nat-to-int _qv_35)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (insort (succ (succ zero)) _v_43)))=(nat-to-int (succ (len _v_43))))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_36))=(nat-to-int _qv_36)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (insort (succ (succ zero)) _v_43)))=(nat-to-int (succ (len _v_43))))
NOW TESTING (forall ((Nat) (Lst) (Lst)) ((insort _qv_37 (cons _qv_38 _qv_39))=(cons (insort _qv_37 _qv_38) (insort _qv_37 _qv_39))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (insort (succ (succ zero)) _v_43)))=(nat-to-int (succ (len _v_43))))
NOW TESTING (forall ((Nat) (Lst) (Lst)) ((cons _qv_40 (insort _qv_41 _qv_42))=(insort (cons _qv_40 _qv_41) (cons _qv_40 _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (insort (succ (succ zero)) _v_43))=(succ (len _v_43)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_30))=_qv_30))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (insort (succ (succ zero)) _v_43))=(succ (len _v_43)))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_31)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (insort (succ (succ zero)) _v_43))=(succ (len _v_43)))
NOW TESTING (forall ((Nat) (Nat)) ((less _qv_32 _qv_33)=(less _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (insort (succ (succ zero)) _v_43))=(succ (len _v_43)))
NOW TESTING (forall ((Lst)) ((sort (sort _qv_34))=_qv_34))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (insort (succ (succ zero)) _v_43))=(succ (len _v_43)))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_35))=(nat-to-int _qv_35)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (insort (succ (succ zero)) _v_43))=(succ (len _v_43)))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_36))=(nat-to-int _qv_36)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (insort (succ (succ zero)) _v_43))=(succ (len _v_43)))
NOW TESTING (forall ((Nat) (Lst) (Lst)) ((insort _qv_37 (cons _qv_38 _qv_39))=(cons (insort _qv_37 _qv_38) (insort _qv_37 _qv_39))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (insort (succ (succ zero)) _v_43))=(succ (len _v_43)))
NOW TESTING (forall ((Nat) (Lst) (Lst)) ((cons _qv_40 (insort _qv_41 _qv_42))=(insort (cons _qv_40 _qv_41) (cons _qv_40 _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (insort (succ (succ zero)) _v_43))=(len (insort _t_14 _v_43)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_30))=_qv_30))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (insort (succ (succ zero)) _v_43))=(len (insort _t_14 _v_43)))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_31)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (insort (succ (succ zero)) _v_43))=(len (insort _t_14 _v_43)))
NOW TESTING (forall ((Nat) (Nat)) ((less _qv_32 _qv_33)=(less _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (insort (succ (succ zero)) _v_43))=(len (insort _t_14 _v_43)))
NOW TESTING (forall ((Lst)) ((sort (sort _qv_34))=_qv_34))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (insort (succ (succ zero)) _v_43))=(len (insort _t_14 _v_43)))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_35))=(nat-to-int _qv_35)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (insort (succ (succ zero)) _v_43))=(len (insort _t_14 _v_43)))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_36))=(nat-to-int _qv_36)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (insort (succ (succ zero)) _v_43))=(len (insort _t_14 _v_43)))
NOW TESTING (forall ((Nat) (Lst) (Lst)) ((insort _qv_37 (cons _qv_38 _qv_39))=(cons (insort _qv_37 _qv_38) (insort _qv_37 _qv_39))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (insort (succ (succ zero)) _v_43))=(len (insort _t_14 _v_43)))
NOW TESTING (forall ((Nat) (Lst) (Lst)) ((cons _qv_40 (insort _qv_41 _qv_42))=(insort (cons _qv_40 _qv_41) (cons _qv_40 _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (insort (succ (succ zero)) _v_43)))=(nat-to-int (succ (len _v_43))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_30))=_qv_30))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (insort (succ (succ zero)) _v_43)))=(nat-to-int (succ (len _v_43))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_31)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (insort (succ (succ zero)) _v_43)))=(nat-to-int (succ (len _v_43))))
NOW TESTING (forall ((Nat) (Nat)) ((less _qv_32 _qv_33)=(less _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (insort (succ (succ zero)) _v_43)))=(nat-to-int (succ (len _v_43))))
NOW TESTING (forall ((Lst)) ((sort (sort _qv_34))=_qv_34))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (insort (succ (succ zero)) _v_43)))=(nat-to-int (succ (len _v_43))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_35))=(nat-to-int _qv_35)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (insort (succ (succ zero)) _v_43)))=(nat-to-int (succ (len _v_43))))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_36))=(nat-to-int _qv_36)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (insort (succ (succ zero)) _v_43)))=(nat-to-int (succ (len _v_43))))
NOW TESTING (forall ((Nat) (Lst) (Lst)) ((insort _qv_37 (cons _qv_38 _qv_39))=(cons (insort _qv_37 _qv_38) (insort _qv_37 _qv_39))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (insort (succ (succ zero)) _v_43)))=(nat-to-int (succ (len _v_43))))
NOW TESTING (forall ((Nat) (Lst) (Lst)) ((cons _qv_40 (insort _qv_41 _qv_42))=(insort (cons _qv_40 _qv_41) (cons _qv_40 _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (insort (succ (succ zero)) _v_43)))=(nat-to-int (succ (len _v_43))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_30))=_qv_30))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (insort (succ (succ zero)) _v_43)))=(nat-to-int (succ (len _v_43))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_31)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (insort (succ (succ zero)) _v_43)))=(nat-to-int (succ (len _v_43))))
NOW TESTING (forall ((Nat) (Nat)) ((less _qv_32 _qv_33)=(less _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (insort (succ (succ zero)) _v_43)))=(nat-to-int (succ (len _v_43))))
NOW TESTING (forall ((Lst)) ((sort (sort _qv_34))=_qv_34))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (insort (succ (succ zero)) _v_43)))=(nat-to-int (succ (len _v_43))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_35))=(nat-to-int _qv_35)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (insort (succ (succ zero)) _v_43)))=(nat-to-int (succ (len _v_43))))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_36))=(nat-to-int _qv_36)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (insort (succ (succ zero)) _v_43)))=(nat-to-int (succ (len _v_43))))
NOW TESTING (forall ((Nat) (Lst) (Lst)) ((insort _qv_37 (cons _qv_38 _qv_39))=(cons (insort _qv_37 _qv_38) (insort _qv_37 _qv_39))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (insort (succ (succ zero)) _v_43)))=(nat-to-int (succ (len _v_43))))
NOW TESTING (forall ((Nat) (Lst) (Lst)) ((cons _qv_40 (insort _qv_41 _qv_42))=(insort (cons _qv_40 _qv_41) (cons _qv_40 _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (insort (succ (succ zero)) _v_43)))=(nat-to-int (len (insort _t_14 _v_43))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_30))=_qv_30))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (insort (succ (succ zero)) _v_43)))=(nat-to-int (len (insort _t_14 _v_43))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_31)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (insort (succ (succ zero)) _v_43)))=(nat-to-int (len (insort _t_14 _v_43))))
NOW TESTING (forall ((Nat) (Nat)) ((less _qv_32 _qv_33)=(less _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (insort (succ (succ zero)) _v_43)))=(nat-to-int (len (insort _t_14 _v_43))))
NOW TESTING (forall ((Lst)) ((sort (sort _qv_34))=_qv_34))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (insort (succ (succ zero)) _v_43)))=(nat-to-int (len (insort _t_14 _v_43))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_35))=(nat-to-int _qv_35)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (insort (succ (succ zero)) _v_43)))=(nat-to-int (len (insort _t_14 _v_43))))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_36))=(nat-to-int _qv_36)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (insort (succ (succ zero)) _v_43)))=(nat-to-int (len (insort _t_14 _v_43))))
NOW TESTING (forall ((Nat) (Lst) (Lst)) ((insort _qv_37 (cons _qv_38 _qv_39))=(cons (insort _qv_37 _qv_38) (insort _qv_37 _qv_39))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (insort (succ (succ zero)) _v_43)))=(nat-to-int (len (insort _t_14 _v_43))))
NOW TESTING (forall ((Nat) (Lst) (Lst)) ((cons _qv_40 (insort _qv_41 _qv_42))=(insort (cons _qv_40 _qv_41) (cons _qv_40 _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (insort (succ (succ zero)) _v_43)))=(nat-to-int (succ (len _v_43))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_30))=_qv_30))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (insort (succ (succ zero)) _v_43)))=(nat-to-int (succ (len _v_43))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_31)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (insort (succ (succ zero)) _v_43)))=(nat-to-int (succ (len _v_43))))
NOW TESTING (forall ((Nat) (Nat)) ((less _qv_32 _qv_33)=(less _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (insort (succ (succ zero)) _v_43)))=(nat-to-int (succ (len _v_43))))
NOW TESTING (forall ((Lst)) ((sort (sort _qv_34))=_qv_34))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (insort (succ (succ zero)) _v_43)))=(nat-to-int (succ (len _v_43))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_35))=(nat-to-int _qv_35)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (insort (succ (succ zero)) _v_43)))=(nat-to-int (succ (len _v_43))))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_36))=(nat-to-int _qv_36)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (insort (succ (succ zero)) _v_43)))=(nat-to-int (succ (len _v_43))))
NOW TESTING (forall ((Nat) (Lst) (Lst)) ((insort _qv_37 (cons _qv_38 _qv_39))=(cons (insort _qv_37 _qv_38) (insort _qv_37 _qv_39))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (insort (succ (succ zero)) _v_43)))=(nat-to-int (succ (len _v_43))))
NOW TESTING (forall ((Nat) (Lst) (Lst)) ((cons _qv_40 (insort _qv_41 _qv_42))=(insort (cons _qv_40 _qv_41) (cons _qv_40 _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (insort (succ (succ zero)) _v_43)))=(nat-to-int (succ (len _v_43))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_30))=_qv_30))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (insort (succ (succ zero)) _v_43)))=(nat-to-int (succ (len _v_43))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_31)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (insort (succ (succ zero)) _v_43)))=(nat-to-int (succ (len _v_43))))
NOW TESTING (forall ((Nat) (Nat)) ((less _qv_32 _qv_33)=(less _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (insort (succ (succ zero)) _v_43)))=(nat-to-int (succ (len _v_43))))
NOW TESTING (forall ((Lst)) ((sort (sort _qv_34))=_qv_34))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (insort (succ (succ zero)) _v_43)))=(nat-to-int (succ (len _v_43))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_35))=(nat-to-int _qv_35)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (insort (succ (succ zero)) _v_43)))=(nat-to-int (succ (len _v_43))))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_36))=(nat-to-int _qv_36)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (insort (succ (succ zero)) _v_43)))=(nat-to-int (succ (len _v_43))))
NOW TESTING (forall ((Nat) (Lst) (Lst)) ((insort _qv_37 (cons _qv_38 _qv_39))=(cons (insort _qv_37 _qv_38) (insort _qv_37 _qv_39))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (insort (succ (succ zero)) _v_43)))=(nat-to-int (succ (len _v_43))))
NOW TESTING (forall ((Nat) (Lst) (Lst)) ((cons _qv_40 (insort _qv_41 _qv_42))=(insort (cons _qv_40 _qv_41) (cons _qv_40 _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (insort (succ (succ zero)) _v_43)))=(nat-to-int (len (insort _t_14 _v_43))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_30))=_qv_30))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (insort (succ (succ zero)) _v_43)))=(nat-to-int (len (insort _t_14 _v_43))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_31)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (insort (succ (succ zero)) _v_43)))=(nat-to-int (len (insort _t_14 _v_43))))
NOW TESTING (forall ((Nat) (Nat)) ((less _qv_32 _qv_33)=(less _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (insort (succ (succ zero)) _v_43)))=(nat-to-int (len (insort _t_14 _v_43))))
NOW TESTING (forall ((Lst)) ((sort (sort _qv_34))=_qv_34))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (insort (succ (succ zero)) _v_43)))=(nat-to-int (len (insort _t_14 _v_43))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_35))=(nat-to-int _qv_35)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (insort (succ (succ zero)) _v_43)))=(nat-to-int (len (insort _t_14 _v_43))))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_36))=(nat-to-int _qv_36)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (insort (succ (succ zero)) _v_43)))=(nat-to-int (len (insort _t_14 _v_43))))
NOW TESTING (forall ((Nat) (Lst) (Lst)) ((insort _qv_37 (cons _qv_38 _qv_39))=(cons (insort _qv_37 _qv_38) (insort _qv_37 _qv_39))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (insort (succ (succ zero)) _v_43)))=(nat-to-int (len (insort _t_14 _v_43))))
NOW TESTING (forall ((Nat) (Lst) (Lst)) ((cons _qv_40 (insort _qv_41 _qv_42))=(insort (cons _qv_40 _qv_41) (cons _qv_40 _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (insort (succ (succ zero)) _v_43))=(len (insort _t_14 _v_43)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_30))=_qv_30))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (insort (succ (succ zero)) _v_43))=(len (insort _t_14 _v_43)))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_31)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (insort (succ (succ zero)) _v_43))=(len (insort _t_14 _v_43)))
NOW TESTING (forall ((Nat) (Nat)) ((less _qv_32 _qv_33)=(less _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (insort (succ (succ zero)) _v_43))=(len (insort _t_14 _v_43)))
NOW TESTING (forall ((Lst)) ((sort (sort _qv_34))=_qv_34))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (insort (succ (succ zero)) _v_43))=(len (insort _t_14 _v_43)))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_35))=(nat-to-int _qv_35)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (insort (succ (succ zero)) _v_43))=(len (insort _t_14 _v_43)))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_36))=(nat-to-int _qv_36)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (insort (succ (succ zero)) _v_43))=(len (insort _t_14 _v_43)))
NOW TESTING (forall ((Nat) (Lst) (Lst)) ((insort _qv_37 (cons _qv_38 _qv_39))=(cons (insort _qv_37 _qv_38) (insort _qv_37 _qv_39))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (insort (succ (succ zero)) _v_43))=(len (insort _t_14 _v_43)))
NOW TESTING (forall ((Nat) (Lst) (Lst)) ((cons _qv_40 (insort _qv_41 _qv_42))=(insort (cons _qv_40 _qv_41) (cons _qv_40 _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (insort (succ (succ zero)) _v_43)))=(nat-to-int (succ (len _v_43))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_30))=_qv_30))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (insort (succ (succ zero)) _v_43)))=(nat-to-int (succ (len _v_43))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_31)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (insort (succ (succ zero)) _v_43)))=(nat-to-int (succ (len _v_43))))
NOW TESTING (forall ((Nat) (Nat)) ((less _qv_32 _qv_33)=(less _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (insort (succ (succ zero)) _v_43)))=(nat-to-int (succ (len _v_43))))
NOW TESTING (forall ((Lst)) ((sort (sort _qv_34))=_qv_34))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (insort (succ (succ zero)) _v_43)))=(nat-to-int (succ (len _v_43))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_35))=(nat-to-int _qv_35)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (insort (succ (succ zero)) _v_43)))=(nat-to-int (succ (len _v_43))))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_36))=(nat-to-int _qv_36)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (insort (succ (succ zero)) _v_43)))=(nat-to-int (succ (len _v_43))))
NOW TESTING (forall ((Nat) (Lst) (Lst)) ((insort _qv_37 (cons _qv_38 _qv_39))=(cons (insort _qv_37 _qv_38) (insort _qv_37 _qv_39))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (insort (succ (succ zero)) _v_43)))=(nat-to-int (succ (len _v_43))))
NOW TESTING (forall ((Nat) (Lst) (Lst)) ((cons _qv_40 (insort _qv_41 _qv_42))=(insort (cons _qv_40 _qv_41) (cons _qv_40 _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (insort (succ (succ zero)) _v_43)))=(nat-to-int (succ (len _v_43))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_30))=_qv_30))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (insort (succ (succ zero)) _v_43)))=(nat-to-int (succ (len _v_43))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_31)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (insort (succ (succ zero)) _v_43)))=(nat-to-int (succ (len _v_43))))
NOW TESTING (forall ((Nat) (Nat)) ((less _qv_32 _qv_33)=(less _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (insort (succ (succ zero)) _v_43)))=(nat-to-int (succ (len _v_43))))
NOW TESTING (forall ((Lst)) ((sort (sort _qv_34))=_qv_34))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (insort (succ (succ zero)) _v_43)))=(nat-to-int (succ (len _v_43))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_35))=(nat-to-int _qv_35)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (insort (succ (succ zero)) _v_43)))=(nat-to-int (succ (len _v_43))))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_36))=(nat-to-int _qv_36)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (insort (succ (succ zero)) _v_43)))=(nat-to-int (succ (len _v_43))))
NOW TESTING (forall ((Nat) (Lst) (Lst)) ((insort _qv_37 (cons _qv_38 _qv_39))=(cons (insort _qv_37 _qv_38) (insort _qv_37 _qv_39))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (insort (succ (succ zero)) _v_43)))=(nat-to-int (succ (len _v_43))))
NOW TESTING (forall ((Nat) (Lst) (Lst)) ((cons _qv_40 (insort _qv_41 _qv_42))=(insort (cons _qv_40 _qv_41) (cons _qv_40 _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (insort (succ (succ zero)) _v_43)))=(nat-to-int (succ (len _v_43))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_30))=_qv_30))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (insort (succ (succ zero)) _v_43)))=(nat-to-int (succ (len _v_43))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_31)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (insort (succ (succ zero)) _v_43)))=(nat-to-int (succ (len _v_43))))
NOW TESTING (forall ((Nat) (Nat)) ((less _qv_32 _qv_33)=(less _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (insort (succ (succ zero)) _v_43)))=(nat-to-int (succ (len _v_43))))
NOW TESTING (forall ((Lst)) ((sort (sort _qv_34))=_qv_34))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (insort (succ (succ zero)) _v_43)))=(nat-to-int (succ (len _v_43))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_35))=(nat-to-int _qv_35)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (insort (succ (succ zero)) _v_43)))=(nat-to-int (succ (len _v_43))))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_36))=(nat-to-int _qv_36)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (insort (succ (succ zero)) _v_43)))=(nat-to-int (succ (len _v_43))))
NOW TESTING (forall ((Nat) (Lst) (Lst)) ((insort _qv_37 (cons _qv_38 _qv_39))=(cons (insort _qv_37 _qv_38) (insort _qv_37 _qv_39))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (insort (succ (succ zero)) _v_43)))=(nat-to-int (succ (len _v_43))))
NOW TESTING (forall ((Nat) (Lst) (Lst)) ((cons _qv_40 (insort _qv_41 _qv_42))=(insort (cons _qv_40 _qv_41) (cons _qv_40 _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (insort (succ (succ zero)) _v_43)))=(nat-to-int (succ (len _v_43))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_30))=_qv_30))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (insort (succ (succ zero)) _v_43)))=(nat-to-int (succ (len _v_43))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_31)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (insort (succ (succ zero)) _v_43)))=(nat-to-int (succ (len _v_43))))
NOW TESTING (forall ((Nat) (Nat)) ((less _qv_32 _qv_33)=(less _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (insort (succ (succ zero)) _v_43)))=(nat-to-int (succ (len _v_43))))
NOW TESTING (forall ((Lst)) ((sort (sort _qv_34))=_qv_34))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (insort (succ (succ zero)) _v_43)))=(nat-to-int (succ (len _v_43))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_35))=(nat-to-int _qv_35)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (insort (succ (succ zero)) _v_43)))=(nat-to-int (succ (len _v_43))))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_36))=(nat-to-int _qv_36)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (insort (succ (succ zero)) _v_43)))=(nat-to-int (succ (len _v_43))))
NOW TESTING (forall ((Nat) (Lst) (Lst)) ((insort _qv_37 (cons _qv_38 _qv_39))=(cons (insort _qv_37 _qv_38) (insort _qv_37 _qv_39))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (insort (succ (succ zero)) _v_43)))=(nat-to-int (succ (len _v_43))))
NOW TESTING (forall ((Nat) (Lst) (Lst)) ((cons _qv_40 (insort _qv_41 _qv_42))=(insort (cons _qv_40 _qv_41) (cons _qv_40 _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (insort (succ (succ zero)) _v_43))=(succ (len _v_43)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_30))=_qv_30))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (insort (succ (succ zero)) _v_43))=(succ (len _v_43)))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_31)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (insort (succ (succ zero)) _v_43))=(succ (len _v_43)))
NOW TESTING (forall ((Nat) (Nat)) ((less _qv_32 _qv_33)=(less _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (insort (succ (succ zero)) _v_43))=(succ (len _v_43)))
NOW TESTING (forall ((Lst)) ((sort (sort _qv_34))=_qv_34))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (insort (succ (succ zero)) _v_43))=(succ (len _v_43)))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_35))=(nat-to-int _qv_35)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (insort (succ (succ zero)) _v_43))=(succ (len _v_43)))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_36))=(nat-to-int _qv_36)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (insort (succ (succ zero)) _v_43))=(succ (len _v_43)))
NOW TESTING (forall ((Nat) (Lst) (Lst)) ((insort _qv_37 (cons _qv_38 _qv_39))=(cons (insort _qv_37 _qv_38) (insort _qv_37 _qv_39))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (insort (succ (succ zero)) _v_43))=(succ (len _v_43)))
NOW TESTING (forall ((Nat) (Lst) (Lst)) ((cons _qv_40 (insort _qv_41 _qv_42))=(insort (cons _qv_40 _qv_41) (cons _qv_40 _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (insort (succ (succ zero)) _v_43)))=(nat-to-int (succ (len _v_43))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_30))=_qv_30))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (insort (succ (succ zero)) _v_43)))=(nat-to-int (succ (len _v_43))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_31)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (insort (succ (succ zero)) _v_43)))=(nat-to-int (succ (len _v_43))))
NOW TESTING (forall ((Nat) (Nat)) ((less _qv_32 _qv_33)=(less _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (insort (succ (succ zero)) _v_43)))=(nat-to-int (succ (len _v_43))))
NOW TESTING (forall ((Lst)) ((sort (sort _qv_34))=_qv_34))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (insort (succ (succ zero)) _v_43)))=(nat-to-int (succ (len _v_43))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_35))=(nat-to-int _qv_35)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (insort (succ (succ zero)) _v_43)))=(nat-to-int (succ (len _v_43))))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_36))=(nat-to-int _qv_36)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (insort (succ (succ zero)) _v_43)))=(nat-to-int (succ (len _v_43))))
NOW TESTING (forall ((Nat) (Lst) (Lst)) ((insort _qv_37 (cons _qv_38 _qv_39))=(cons (insort _qv_37 _qv_38) (insort _qv_37 _qv_39))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (insort (succ (succ zero)) _v_43)))=(nat-to-int (succ (len _v_43))))
NOW TESTING (forall ((Nat) (Lst) (Lst)) ((cons _qv_40 (insort _qv_41 _qv_42))=(insort (cons _qv_40 _qv_41) (cons _qv_40 _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (insort (succ (succ zero)) _v_43)))=(nat-to-int (succ (len _v_43))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_30))=_qv_30))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (insort (succ (succ zero)) _v_43)))=(nat-to-int (succ (len _v_43))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_31)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (insort (succ (succ zero)) _v_43)))=(nat-to-int (succ (len _v_43))))
NOW TESTING (forall ((Nat) (Nat)) ((less _qv_32 _qv_33)=(less _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (insort (succ (succ zero)) _v_43)))=(nat-to-int (succ (len _v_43))))
NOW TESTING (forall ((Lst)) ((sort (sort _qv_34))=_qv_34))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (insort (succ (succ zero)) _v_43)))=(nat-to-int (succ (len _v_43))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_35))=(nat-to-int _qv_35)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (insort (succ (succ zero)) _v_43)))=(nat-to-int (succ (len _v_43))))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_36))=(nat-to-int _qv_36)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (insort (succ (succ zero)) _v_43)))=(nat-to-int (succ (len _v_43))))
NOW TESTING (forall ((Nat) (Lst) (Lst)) ((insort _qv_37 (cons _qv_38 _qv_39))=(cons (insort _qv_37 _qv_38) (insort _qv_37 _qv_39))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (insort (succ (succ zero)) _v_43)))=(nat-to-int (succ (len _v_43))))
NOW TESTING (forall ((Nat) (Lst) (Lst)) ((cons _qv_40 (insort _qv_41 _qv_42))=(insort (cons _qv_40 _qv_41) (cons _qv_40 _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (insort (succ (succ zero)) _v_43)))=(nat-to-int (succ (len _v_43))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_30))=_qv_30))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (insort (succ (succ zero)) _v_43)))=(nat-to-int (succ (len _v_43))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_31)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (insort (succ (succ zero)) _v_43)))=(nat-to-int (succ (len _v_43))))
NOW TESTING (forall ((Nat) (Nat)) ((less _qv_32 _qv_33)=(less _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (insort (succ (succ zero)) _v_43)))=(nat-to-int (succ (len _v_43))))
NOW TESTING (forall ((Lst)) ((sort (sort _qv_34))=_qv_34))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (insort (succ (succ zero)) _v_43)))=(nat-to-int (succ (len _v_43))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_35))=(nat-to-int _qv_35)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (insort (succ (succ zero)) _v_43)))=(nat-to-int (succ (len _v_43))))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_36))=(nat-to-int _qv_36)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (insort (succ (succ zero)) _v_43)))=(nat-to-int (succ (len _v_43))))
NOW TESTING (forall ((Nat) (Lst) (Lst)) ((insort _qv_37 (cons _qv_38 _qv_39))=(cons (insort _qv_37 _qv_38) (insort _qv_37 _qv_39))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (insort (succ (succ zero)) _v_43)))=(nat-to-int (succ (len _v_43))))
NOW TESTING (forall ((Nat) (Lst) (Lst)) ((cons _qv_40 (insort _qv_41 _qv_42))=(insort (cons _qv_40 _qv_41) (cons _qv_40 _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (insort (succ (succ zero)) _v_43)))=(nat-to-int (succ (len _v_43))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_30))=_qv_30))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (insort (succ (succ zero)) _v_43)))=(nat-to-int (succ (len _v_43))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_31)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (insort (succ (succ zero)) _v_43)))=(nat-to-int (succ (len _v_43))))
NOW TESTING (forall ((Nat) (Nat)) ((less _qv_32 _qv_33)=(less _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (insort (succ (succ zero)) _v_43)))=(nat-to-int (succ (len _v_43))))
NOW TESTING (forall ((Lst)) ((sort (sort _qv_34))=_qv_34))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (insort (succ (succ zero)) _v_43)))=(nat-to-int (succ (len _v_43))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_35))=(nat-to-int _qv_35)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (insort (succ (succ zero)) _v_43)))=(nat-to-int (succ (len _v_43))))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_36))=(nat-to-int _qv_36)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (insort (succ (succ zero)) _v_43)))=(nat-to-int (succ (len _v_43))))
NOW TESTING (forall ((Nat) (Lst) (Lst)) ((insort _qv_37 (cons _qv_38 _qv_39))=(cons (insort _qv_37 _qv_38) (insort _qv_37 _qv_39))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (insort (succ (succ zero)) _v_43)))=(nat-to-int (succ (len _v_43))))
NOW TESTING (forall ((Nat) (Lst) (Lst)) ((cons _qv_40 (insort _qv_41 _qv_42))=(insort (cons _qv_40 _qv_41) (cons _qv_40 _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (insort (succ (succ zero)) _v_43))=(succ (len _v_43)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_30))=_qv_30))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (insort (succ (succ zero)) _v_43))=(succ (len _v_43)))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_31)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (insort (succ (succ zero)) _v_43))=(succ (len _v_43)))
NOW TESTING (forall ((Nat) (Nat)) ((less _qv_32 _qv_33)=(less _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (insort (succ (succ zero)) _v_43))=(succ (len _v_43)))
NOW TESTING (forall ((Lst)) ((sort (sort _qv_34))=_qv_34))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (insort (succ (succ zero)) _v_43))=(succ (len _v_43)))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_35))=(nat-to-int _qv_35)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (insort (succ (succ zero)) _v_43))=(succ (len _v_43)))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_36))=(nat-to-int _qv_36)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (insort (succ (succ zero)) _v_43))=(succ (len _v_43)))
NOW TESTING (forall ((Nat) (Lst) (Lst)) ((insort _qv_37 (cons _qv_38 _qv_39))=(cons (insort _qv_37 _qv_38) (insort _qv_37 _qv_39))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (insort (succ (succ zero)) _v_43))=(succ (len _v_43)))
NOW TESTING (forall ((Nat) (Lst) (Lst)) ((cons _qv_40 (insort _qv_41 _qv_42))=(insort (cons _qv_40 _qv_41) (cons _qv_40 _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (insort (succ (succ zero)) _v_43))=(len (insort _t_14 _v_43)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_30))=_qv_30))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (insort (succ (succ zero)) _v_43))=(len (insort _t_14 _v_43)))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_31)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (insort (succ (succ zero)) _v_43))=(len (insort _t_14 _v_43)))
NOW TESTING (forall ((Nat) (Nat)) ((less _qv_32 _qv_33)=(less _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (insort (succ (succ zero)) _v_43))=(len (insort _t_14 _v_43)))
NOW TESTING (forall ((Lst)) ((sort (sort _qv_34))=_qv_34))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (insort (succ (succ zero)) _v_43))=(len (insort _t_14 _v_43)))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_35))=(nat-to-int _qv_35)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (insort (succ (succ zero)) _v_43))=(len (insort _t_14 _v_43)))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_36))=(nat-to-int _qv_36)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (insort (succ (succ zero)) _v_43))=(len (insort _t_14 _v_43)))
NOW TESTING (forall ((Nat) (Lst) (Lst)) ((insort _qv_37 (cons _qv_38 _qv_39))=(cons (insort _qv_37 _qv_38) (insort _qv_37 _qv_39))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (insort (succ (succ zero)) _v_43))=(len (insort _t_14 _v_43)))
NOW TESTING (forall ((Nat) (Lst) (Lst)) ((cons _qv_40 (insort _qv_41 _qv_42))=(insort (cons _qv_40 _qv_41) (cons _qv_40 _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (insort (succ (succ zero)) _v_43))=(succ (len _v_43)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_30))=_qv_30))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (insort (succ (succ zero)) _v_43))=(succ (len _v_43)))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_31)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (insort (succ (succ zero)) _v_43))=(succ (len _v_43)))
NOW TESTING (forall ((Nat) (Nat)) ((less _qv_32 _qv_33)=(less _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (insort (succ (succ zero)) _v_43))=(succ (len _v_43)))
NOW TESTING (forall ((Lst)) ((sort (sort _qv_34))=_qv_34))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (insort (succ (succ zero)) _v_43))=(succ (len _v_43)))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_35))=(nat-to-int _qv_35)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (insort (succ (succ zero)) _v_43))=(succ (len _v_43)))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_36))=(nat-to-int _qv_36)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (insort (succ (succ zero)) _v_43))=(succ (len _v_43)))
NOW TESTING (forall ((Nat) (Lst) (Lst)) ((insort _qv_37 (cons _qv_38 _qv_39))=(cons (insort _qv_37 _qv_38) (insort _qv_37 _qv_39))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (insort (succ (succ zero)) _v_43))=(succ (len _v_43)))
NOW TESTING (forall ((Nat) (Lst) (Lst)) ((cons _qv_40 (insort _qv_41 _qv_42))=(insort (cons _qv_40 _qv_41) (cons _qv_40 _qv_42))))
USE ASSUMPTION FAILED

  proven by induction: ((len (insort (succ _t_14) _v_13))=(succ (len _v_13)))
  rewriting done
}

Proved
unsat
