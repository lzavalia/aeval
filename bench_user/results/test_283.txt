
The Knowledge Scheme currently contains the following lemmas:
	(forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
	(forall ((Nat)) (0<=(nat-to-int _qv_1)))
	(forall ((Lst) (Lst)) ((append _qv_2 _qv_3)=(append _qv_3 _qv_2)))
	(forall ((Lst) (Lst) (Lst)) ((append (append _qv_4 _qv_5) _qv_6)=(append _qv_4 (append _qv_5 _qv_6))))
	(forall ((Nat)) ((nat-to-int (succ _qv_7))=(nat-to-int _qv_7)))
	(forall ((Lst)) ((nat-to-int (len _qv_8))=(nat-to-int _qv_8)))

Simplified goal: (forall ((Lst) (Lst)) ((even (len (append x y)))=(even (len (append y x)))))


Base case:       ((even (len (append nil _v_9)))=(even (len (append _v_9 nil))))
{
  {
    ====================
    | Assumptions [0]: (forall ((Nat)) ((nat-to-int _qv_1)>=0))
    | Assumptions [1]: (forall ((Nat) (Nat)) (((nat-to-int _qv_2)=(nat-to-int _qv_3))->(_qv_2=_qv_3)))
    | Assumptions [2]: (forall ((Nat)) ((nat-to-int (succ _qv_4))=(1+(nat-to-int _qv_4))))
    | Assumptions [3]: (forall ((Nat)) ((even (succ _qv_5))=(!(even _qv_5))))
    | Assumptions [4]: (forall ((Lst)) ((append nil _qv_6)=_qv_6))
    | Assumptions [5]: (forall ((Nat) (Lst) (Lst)) ((append (cons _qv_7 _qv_8) _qv_9)=(cons _qv_7 (append _qv_8 _qv_9))))
    | Assumptions [6]: (forall ((Nat) (Lst)) ((len (cons _qv_10 _qv_11))=(succ (len _qv_11))))
    | Assumptions [7]: ((nat-to-int (len nil))=0)
    | Assumptions [8]: (even (len nil))
    ====================
  }
  rewritten [4]: ((even (len _v_9))=(even (len (append _v_9 nil))))

The Knowledge Scheme currently contains the following lemmas:
	(forall ((Nat)) ((succ (succ _qv_10))=_qv_10))
	(forall ((Nat)) (0<=(nat-to-int _qv_11)))
	(forall ((Lst) (Lst)) ((append _qv_12 _qv_13)=(append _qv_13 _qv_12)))
	(forall ((Lst) (Lst) (Lst)) ((append (append _qv_14 _qv_15) _qv_16)=(append _qv_14 (append _qv_15 _qv_16))))
	(forall ((Nat)) ((nat-to-int (succ _qv_17))=(nat-to-int _qv_17)))
	(forall ((Lst)) ((nat-to-int (len _qv_18))=(nat-to-int _qv_18)))

  proven by induction: ((even (len _v_9))=(even (len (append _v_9 nil))))
}
Inductive step:  ((even (len (append (cons _t_10 _t_11) _v_9)))=(even (len (append _v_9 (cons _t_10 _t_11)))))
{
  {
    ====================
    | Assumptions [0]: (forall ((Nat)) ((nat-to-int _qv_1)>=0))
    | Assumptions [1]: (forall ((Nat) (Nat)) (((nat-to-int _qv_2)=(nat-to-int _qv_3))->(_qv_2=_qv_3)))
    | Assumptions [2]: (forall ((Nat)) ((nat-to-int (succ _qv_4))=(1+(nat-to-int _qv_4))))
    | Assumptions [3]: (forall ((Nat)) ((even (succ _qv_5))=(!(even _qv_5))))
    | Assumptions [4]: (forall ((Lst)) ((append nil _qv_6)=_qv_6))
    | Assumptions [5]: (forall ((Nat) (Lst) (Lst)) ((append (cons _qv_7 _qv_8) _qv_9)=(cons _qv_7 (append _qv_8 _qv_9))))
    | Assumptions [6]: (forall ((Nat) (Lst)) ((len (cons _qv_10 _qv_11))=(succ (len _qv_11))))
    | Assumptions [7]: (even (len nil))
    | Assumptions [8]: (forall ((Lst)) ((even (len (append _t_11 y)))=(even (len (append y _t_11)))))
    | Assumptions [9]: (forall ((Lst)) ((even (len (append y _t_11)))=(even (len (append _t_11 y)))))
    | Assumptions [10]: ((nat-to-int (len nil))=0)
    ====================
  }
  rewritten [5]: ((even (len (cons _t_10 (append _t_11 _v_9))))=(even (len (append _v_9 (cons _t_10 _t_11)))))
  rewritten [6]: ((even (succ (len (append _t_11 _v_9))))=(even (len (append _v_9 (cons _t_10 _t_11)))))
  rewritten [3]: ((!(even (len (append _t_11 _v_9))))=(even (len (append _v_9 (cons _t_10 _t_11)))))
  rewritten [8]: ((!(even (len (append _v_9 _t_11))))=(even (len (append _v_9 (cons _t_10 _t_11)))))
CURRENT SUBGOAL ((!(even (len (append _t_11 _v_9))))=(even (len (append _v_9 (cons _t_10 _t_11)))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((!(even (len (append _t_11 _v_9))))=(even (len (append _v_9 (cons _t_10 _t_11)))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((!(even (len (append _t_11 _v_9))))=(even (len (append _v_9 (cons _t_10 _t_11)))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_2 _qv_3)=(append _qv_3 _qv_2)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((!(even (len (append _t_11 _v_9))))=(even (len (append _v_9 (cons _t_10 _t_11)))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_4 _qv_5) _qv_6)=(append _qv_4 (append _qv_5 _qv_6))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((!(even (len (append _t_11 _v_9))))=(even (len (append _v_9 (cons _t_10 _t_11)))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_7))=(nat-to-int _qv_7)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((!(even (len (append _t_11 _v_9))))=(even (len (append _v_9 (cons _t_10 _t_11)))))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_8))=(nat-to-int _qv_8)))
USE ASSUMPTION FAILED

  backtrack to: ((!(even (len (append _t_11 _v_9))))=(even (len (append _v_9 (cons _t_10 _t_11)))))
  rewritten [8]: ((!(even (len (append _v_9 _t_11))))=(even (len (append _v_9 (cons _t_10 _t_11)))))
CURRENT SUBGOAL ((!(even (len (append _t_11 _v_9))))=(even (len (append _v_9 (cons _t_10 _t_11)))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((!(even (len (append _t_11 _v_9))))=(even (len (append _v_9 (cons _t_10 _t_11)))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((!(even (len (append _t_11 _v_9))))=(even (len (append _v_9 (cons _t_10 _t_11)))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_2 _qv_3)=(append _qv_3 _qv_2)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((!(even (len (append _t_11 _v_9))))=(even (len (append _v_9 (cons _t_10 _t_11)))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_4 _qv_5) _qv_6)=(append _qv_4 (append _qv_5 _qv_6))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((!(even (len (append _t_11 _v_9))))=(even (len (append _v_9 (cons _t_10 _t_11)))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_7))=(nat-to-int _qv_7)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((!(even (len (append _t_11 _v_9))))=(even (len (append _v_9 (cons _t_10 _t_11)))))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_8))=(nat-to-int _qv_8)))
USE ASSUMPTION FAILED

  backtrack to: ((!(even (len (append _t_11 _v_9))))=(even (len (append _v_9 (cons _t_10 _t_11)))))
CURRENT SUBGOAL ((even (succ (len (append _t_11 _v_9))))=(even (len (append _v_9 (cons _t_10 _t_11)))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((even (succ (len (append _t_11 _v_9))))=(even (len (append _v_9 (cons _t_10 _t_11)))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((even (succ (len (append _t_11 _v_9))))=(even (len (append _v_9 (cons _t_10 _t_11)))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_2 _qv_3)=(append _qv_3 _qv_2)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((even (succ (len (append _t_11 _v_9))))=(even (len (append _v_9 (cons _t_10 _t_11)))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_4 _qv_5) _qv_6)=(append _qv_4 (append _qv_5 _qv_6))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((even (succ (len (append _t_11 _v_9))))=(even (len (append _v_9 (cons _t_10 _t_11)))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_7))=(nat-to-int _qv_7)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((even (succ (len (append _t_11 _v_9))))=(even (len (append _v_9 (cons _t_10 _t_11)))))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_8))=(nat-to-int _qv_8)))
USE ASSUMPTION FAILED

  backtrack to: ((even (succ (len (append _t_11 _v_9))))=(even (len (append _v_9 (cons _t_10 _t_11)))))
  rewritten [3]: ((!(even (len (append _t_11 _v_9))))=(even (len (append _v_9 (cons _t_10 _t_11)))))
  rewritten [8]: ((!(even (len (append _v_9 _t_11))))=(even (len (append _v_9 (cons _t_10 _t_11)))))
CURRENT SUBGOAL ((!(even (len (append _t_11 _v_9))))=(even (len (append _v_9 (cons _t_10 _t_11)))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((!(even (len (append _t_11 _v_9))))=(even (len (append _v_9 (cons _t_10 _t_11)))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((!(even (len (append _t_11 _v_9))))=(even (len (append _v_9 (cons _t_10 _t_11)))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_2 _qv_3)=(append _qv_3 _qv_2)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((!(even (len (append _t_11 _v_9))))=(even (len (append _v_9 (cons _t_10 _t_11)))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_4 _qv_5) _qv_6)=(append _qv_4 (append _qv_5 _qv_6))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((!(even (len (append _t_11 _v_9))))=(even (len (append _v_9 (cons _t_10 _t_11)))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_7))=(nat-to-int _qv_7)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((!(even (len (append _t_11 _v_9))))=(even (len (append _v_9 (cons _t_10 _t_11)))))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_8))=(nat-to-int _qv_8)))
USE ASSUMPTION FAILED

  backtrack to: ((!(even (len (append _t_11 _v_9))))=(even (len (append _v_9 (cons _t_10 _t_11)))))
  rewritten [8]: ((!(even (len (append _v_9 _t_11))))=(even (len (append _v_9 (cons _t_10 _t_11)))))
CURRENT SUBGOAL ((!(even (len (append _t_11 _v_9))))=(even (len (append _v_9 (cons _t_10 _t_11)))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((!(even (len (append _t_11 _v_9))))=(even (len (append _v_9 (cons _t_10 _t_11)))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((!(even (len (append _t_11 _v_9))))=(even (len (append _v_9 (cons _t_10 _t_11)))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_2 _qv_3)=(append _qv_3 _qv_2)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((!(even (len (append _t_11 _v_9))))=(even (len (append _v_9 (cons _t_10 _t_11)))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_4 _qv_5) _qv_6)=(append _qv_4 (append _qv_5 _qv_6))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((!(even (len (append _t_11 _v_9))))=(even (len (append _v_9 (cons _t_10 _t_11)))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_7))=(nat-to-int _qv_7)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((!(even (len (append _t_11 _v_9))))=(even (len (append _v_9 (cons _t_10 _t_11)))))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_8))=(nat-to-int _qv_8)))
USE ASSUMPTION FAILED

  backtrack to: ((!(even (len (append _t_11 _v_9))))=(even (len (append _v_9 (cons _t_10 _t_11)))))
CURRENT SUBGOAL ((even (succ (len (append _t_11 _v_9))))=(even (len (append _v_9 (cons _t_10 _t_11)))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((even (succ (len (append _t_11 _v_9))))=(even (len (append _v_9 (cons _t_10 _t_11)))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((even (succ (len (append _t_11 _v_9))))=(even (len (append _v_9 (cons _t_10 _t_11)))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_2 _qv_3)=(append _qv_3 _qv_2)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((even (succ (len (append _t_11 _v_9))))=(even (len (append _v_9 (cons _t_10 _t_11)))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_4 _qv_5) _qv_6)=(append _qv_4 (append _qv_5 _qv_6))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((even (succ (len (append _t_11 _v_9))))=(even (len (append _v_9 (cons _t_10 _t_11)))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_7))=(nat-to-int _qv_7)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((even (succ (len (append _t_11 _v_9))))=(even (len (append _v_9 (cons _t_10 _t_11)))))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_8))=(nat-to-int _qv_8)))
USE ASSUMPTION FAILED

  backtrack to: ((even (succ (len (append _t_11 _v_9))))=(even (len (append _v_9 (cons _t_10 _t_11)))))
CURRENT SUBGOAL ((even (len (cons _t_10 (append _t_11 _v_9))))=(even (len (append _v_9 (cons _t_10 _t_11)))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((even (len (cons _t_10 (append _t_11 _v_9))))=(even (len (append _v_9 (cons _t_10 _t_11)))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((even (len (cons _t_10 (append _t_11 _v_9))))=(even (len (append _v_9 (cons _t_10 _t_11)))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_2 _qv_3)=(append _qv_3 _qv_2)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((even (len (cons _t_10 (append _t_11 _v_9))))=(even (len (append _v_9 (cons _t_10 _t_11)))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_4 _qv_5) _qv_6)=(append _qv_4 (append _qv_5 _qv_6))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((even (len (cons _t_10 (append _t_11 _v_9))))=(even (len (append _v_9 (cons _t_10 _t_11)))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_7))=(nat-to-int _qv_7)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((even (len (cons _t_10 (append _t_11 _v_9))))=(even (len (append _v_9 (cons _t_10 _t_11)))))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_8))=(nat-to-int _qv_8)))
USE ASSUMPTION FAILED

  backtrack to: ((even (len (cons _t_10 (append _t_11 _v_9))))=(even (len (append _v_9 (cons _t_10 _t_11)))))
  rewritten [6]: ((even (succ (len (append _t_11 _v_9))))=(even (len (append _v_9 (cons _t_10 _t_11)))))
  rewritten [3]: ((!(even (len (append _t_11 _v_9))))=(even (len (append _v_9 (cons _t_10 _t_11)))))
  rewritten [8]: ((!(even (len (append _v_9 _t_11))))=(even (len (append _v_9 (cons _t_10 _t_11)))))
CURRENT SUBGOAL ((!(even (len (append _t_11 _v_9))))=(even (len (append _v_9 (cons _t_10 _t_11)))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((!(even (len (append _t_11 _v_9))))=(even (len (append _v_9 (cons _t_10 _t_11)))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((!(even (len (append _t_11 _v_9))))=(even (len (append _v_9 (cons _t_10 _t_11)))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_2 _qv_3)=(append _qv_3 _qv_2)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((!(even (len (append _t_11 _v_9))))=(even (len (append _v_9 (cons _t_10 _t_11)))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_4 _qv_5) _qv_6)=(append _qv_4 (append _qv_5 _qv_6))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((!(even (len (append _t_11 _v_9))))=(even (len (append _v_9 (cons _t_10 _t_11)))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_7))=(nat-to-int _qv_7)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((!(even (len (append _t_11 _v_9))))=(even (len (append _v_9 (cons _t_10 _t_11)))))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_8))=(nat-to-int _qv_8)))
USE ASSUMPTION FAILED

  backtrack to: ((!(even (len (append _t_11 _v_9))))=(even (len (append _v_9 (cons _t_10 _t_11)))))
  rewritten [8]: ((!(even (len (append _v_9 _t_11))))=(even (len (append _v_9 (cons _t_10 _t_11)))))
CURRENT SUBGOAL ((!(even (len (append _t_11 _v_9))))=(even (len (append _v_9 (cons _t_10 _t_11)))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((!(even (len (append _t_11 _v_9))))=(even (len (append _v_9 (cons _t_10 _t_11)))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((!(even (len (append _t_11 _v_9))))=(even (len (append _v_9 (cons _t_10 _t_11)))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_2 _qv_3)=(append _qv_3 _qv_2)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((!(even (len (append _t_11 _v_9))))=(even (len (append _v_9 (cons _t_10 _t_11)))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_4 _qv_5) _qv_6)=(append _qv_4 (append _qv_5 _qv_6))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((!(even (len (append _t_11 _v_9))))=(even (len (append _v_9 (cons _t_10 _t_11)))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_7))=(nat-to-int _qv_7)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((!(even (len (append _t_11 _v_9))))=(even (len (append _v_9 (cons _t_10 _t_11)))))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_8))=(nat-to-int _qv_8)))
USE ASSUMPTION FAILED

  backtrack to: ((!(even (len (append _t_11 _v_9))))=(even (len (append _v_9 (cons _t_10 _t_11)))))
CURRENT SUBGOAL ((even (succ (len (append _t_11 _v_9))))=(even (len (append _v_9 (cons _t_10 _t_11)))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((even (succ (len (append _t_11 _v_9))))=(even (len (append _v_9 (cons _t_10 _t_11)))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((even (succ (len (append _t_11 _v_9))))=(even (len (append _v_9 (cons _t_10 _t_11)))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_2 _qv_3)=(append _qv_3 _qv_2)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((even (succ (len (append _t_11 _v_9))))=(even (len (append _v_9 (cons _t_10 _t_11)))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_4 _qv_5) _qv_6)=(append _qv_4 (append _qv_5 _qv_6))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((even (succ (len (append _t_11 _v_9))))=(even (len (append _v_9 (cons _t_10 _t_11)))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_7))=(nat-to-int _qv_7)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((even (succ (len (append _t_11 _v_9))))=(even (len (append _v_9 (cons _t_10 _t_11)))))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_8))=(nat-to-int _qv_8)))
USE ASSUMPTION FAILED

  backtrack to: ((even (succ (len (append _t_11 _v_9))))=(even (len (append _v_9 (cons _t_10 _t_11)))))
  rewritten [3]: ((!(even (len (append _t_11 _v_9))))=(even (len (append _v_9 (cons _t_10 _t_11)))))
  rewritten [8]: ((!(even (len (append _v_9 _t_11))))=(even (len (append _v_9 (cons _t_10 _t_11)))))
CURRENT SUBGOAL ((!(even (len (append _t_11 _v_9))))=(even (len (append _v_9 (cons _t_10 _t_11)))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((!(even (len (append _t_11 _v_9))))=(even (len (append _v_9 (cons _t_10 _t_11)))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((!(even (len (append _t_11 _v_9))))=(even (len (append _v_9 (cons _t_10 _t_11)))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_2 _qv_3)=(append _qv_3 _qv_2)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((!(even (len (append _t_11 _v_9))))=(even (len (append _v_9 (cons _t_10 _t_11)))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_4 _qv_5) _qv_6)=(append _qv_4 (append _qv_5 _qv_6))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((!(even (len (append _t_11 _v_9))))=(even (len (append _v_9 (cons _t_10 _t_11)))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_7))=(nat-to-int _qv_7)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((!(even (len (append _t_11 _v_9))))=(even (len (append _v_9 (cons _t_10 _t_11)))))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_8))=(nat-to-int _qv_8)))
USE ASSUMPTION FAILED

  backtrack to: ((!(even (len (append _t_11 _v_9))))=(even (len (append _v_9 (cons _t_10 _t_11)))))
  rewritten [8]: ((!(even (len (append _v_9 _t_11))))=(even (len (append _v_9 (cons _t_10 _t_11)))))
CURRENT SUBGOAL ((!(even (len (append _t_11 _v_9))))=(even (len (append _v_9 (cons _t_10 _t_11)))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((!(even (len (append _t_11 _v_9))))=(even (len (append _v_9 (cons _t_10 _t_11)))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((!(even (len (append _t_11 _v_9))))=(even (len (append _v_9 (cons _t_10 _t_11)))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_2 _qv_3)=(append _qv_3 _qv_2)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((!(even (len (append _t_11 _v_9))))=(even (len (append _v_9 (cons _t_10 _t_11)))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_4 _qv_5) _qv_6)=(append _qv_4 (append _qv_5 _qv_6))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((!(even (len (append _t_11 _v_9))))=(even (len (append _v_9 (cons _t_10 _t_11)))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_7))=(nat-to-int _qv_7)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((!(even (len (append _t_11 _v_9))))=(even (len (append _v_9 (cons _t_10 _t_11)))))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_8))=(nat-to-int _qv_8)))
USE ASSUMPTION FAILED

  backtrack to: ((!(even (len (append _t_11 _v_9))))=(even (len (append _v_9 (cons _t_10 _t_11)))))
CURRENT SUBGOAL ((even (succ (len (append _t_11 _v_9))))=(even (len (append _v_9 (cons _t_10 _t_11)))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((even (succ (len (append _t_11 _v_9))))=(even (len (append _v_9 (cons _t_10 _t_11)))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((even (succ (len (append _t_11 _v_9))))=(even (len (append _v_9 (cons _t_10 _t_11)))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_2 _qv_3)=(append _qv_3 _qv_2)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((even (succ (len (append _t_11 _v_9))))=(even (len (append _v_9 (cons _t_10 _t_11)))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_4 _qv_5) _qv_6)=(append _qv_4 (append _qv_5 _qv_6))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((even (succ (len (append _t_11 _v_9))))=(even (len (append _v_9 (cons _t_10 _t_11)))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_7))=(nat-to-int _qv_7)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((even (succ (len (append _t_11 _v_9))))=(even (len (append _v_9 (cons _t_10 _t_11)))))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_8))=(nat-to-int _qv_8)))
USE ASSUMPTION FAILED

  backtrack to: ((even (succ (len (append _t_11 _v_9))))=(even (len (append _v_9 (cons _t_10 _t_11)))))
CURRENT SUBGOAL ((even (len (cons _t_10 (append _t_11 _v_9))))=(even (len (append _v_9 (cons _t_10 _t_11)))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((even (len (cons _t_10 (append _t_11 _v_9))))=(even (len (append _v_9 (cons _t_10 _t_11)))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((even (len (cons _t_10 (append _t_11 _v_9))))=(even (len (append _v_9 (cons _t_10 _t_11)))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_2 _qv_3)=(append _qv_3 _qv_2)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((even (len (cons _t_10 (append _t_11 _v_9))))=(even (len (append _v_9 (cons _t_10 _t_11)))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_4 _qv_5) _qv_6)=(append _qv_4 (append _qv_5 _qv_6))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((even (len (cons _t_10 (append _t_11 _v_9))))=(even (len (append _v_9 (cons _t_10 _t_11)))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_7))=(nat-to-int _qv_7)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((even (len (cons _t_10 (append _t_11 _v_9))))=(even (len (append _v_9 (cons _t_10 _t_11)))))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_8))=(nat-to-int _qv_8)))
USE ASSUMPTION FAILED

  backtrack to: ((even (len (cons _t_10 (append _t_11 _v_9))))=(even (len (append _v_9 (cons _t_10 _t_11)))))
CURRENT SUBGOAL ((even (len (append (cons _t_10 _t_11) _v_9)))=(even (len (append _v_9 (cons _t_10 _t_11)))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((even (len (append (cons _t_10 _t_11) _v_9)))=(even (len (append _v_9 (cons _t_10 _t_11)))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((even (len (append (cons _t_10 _t_11) _v_9)))=(even (len (append _v_9 (cons _t_10 _t_11)))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_2 _qv_3)=(append _qv_3 _qv_2)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((even (len (append (cons _t_10 _t_11) _v_9)))=(even (len (append _v_9 (cons _t_10 _t_11)))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_4 _qv_5) _qv_6)=(append _qv_4 (append _qv_5 _qv_6))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((even (len (append (cons _t_10 _t_11) _v_9)))=(even (len (append _v_9 (cons _t_10 _t_11)))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_7))=(nat-to-int _qv_7)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((even (len (append (cons _t_10 _t_11) _v_9)))=(even (len (append _v_9 (cons _t_10 _t_11)))))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_8))=(nat-to-int _qv_8)))
USE ASSUMPTION FAILED

  backtrack to: ((even (len (append (cons _t_10 _t_11) _v_9)))=(even (len (append _v_9 (cons _t_10 _t_11)))))
  rewritten [5]: ((even (len (cons _t_10 (append _t_11 _v_9))))=(even (len (append _v_9 (cons _t_10 _t_11)))))
  rewritten [6]: ((even (succ (len (append _t_11 _v_9))))=(even (len (append _v_9 (cons _t_10 _t_11)))))
  rewritten [3]: ((!(even (len (append _t_11 _v_9))))=(even (len (append _v_9 (cons _t_10 _t_11)))))
  rewritten [8]: ((!(even (len (append _v_9 _t_11))))=(even (len (append _v_9 (cons _t_10 _t_11)))))
CURRENT SUBGOAL ((!(even (len (append _t_11 _v_9))))=(even (len (append _v_9 (cons _t_10 _t_11)))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((!(even (len (append _t_11 _v_9))))=(even (len (append _v_9 (cons _t_10 _t_11)))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((!(even (len (append _t_11 _v_9))))=(even (len (append _v_9 (cons _t_10 _t_11)))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_2 _qv_3)=(append _qv_3 _qv_2)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((!(even (len (append _t_11 _v_9))))=(even (len (append _v_9 (cons _t_10 _t_11)))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_4 _qv_5) _qv_6)=(append _qv_4 (append _qv_5 _qv_6))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((!(even (len (append _t_11 _v_9))))=(even (len (append _v_9 (cons _t_10 _t_11)))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_7))=(nat-to-int _qv_7)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((!(even (len (append _t_11 _v_9))))=(even (len (append _v_9 (cons _t_10 _t_11)))))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_8))=(nat-to-int _qv_8)))
USE ASSUMPTION FAILED

  backtrack to: ((!(even (len (append _t_11 _v_9))))=(even (len (append _v_9 (cons _t_10 _t_11)))))
  rewritten [8]: ((!(even (len (append _v_9 _t_11))))=(even (len (append _v_9 (cons _t_10 _t_11)))))
CURRENT SUBGOAL ((!(even (len (append _t_11 _v_9))))=(even (len (append _v_9 (cons _t_10 _t_11)))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((!(even (len (append _t_11 _v_9))))=(even (len (append _v_9 (cons _t_10 _t_11)))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((!(even (len (append _t_11 _v_9))))=(even (len (append _v_9 (cons _t_10 _t_11)))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_2 _qv_3)=(append _qv_3 _qv_2)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((!(even (len (append _t_11 _v_9))))=(even (len (append _v_9 (cons _t_10 _t_11)))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_4 _qv_5) _qv_6)=(append _qv_4 (append _qv_5 _qv_6))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((!(even (len (append _t_11 _v_9))))=(even (len (append _v_9 (cons _t_10 _t_11)))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_7))=(nat-to-int _qv_7)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((!(even (len (append _t_11 _v_9))))=(even (len (append _v_9 (cons _t_10 _t_11)))))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_8))=(nat-to-int _qv_8)))
USE ASSUMPTION FAILED

  backtrack to: ((!(even (len (append _t_11 _v_9))))=(even (len (append _v_9 (cons _t_10 _t_11)))))
CURRENT SUBGOAL ((even (succ (len (append _t_11 _v_9))))=(even (len (append _v_9 (cons _t_10 _t_11)))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((even (succ (len (append _t_11 _v_9))))=(even (len (append _v_9 (cons _t_10 _t_11)))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((even (succ (len (append _t_11 _v_9))))=(even (len (append _v_9 (cons _t_10 _t_11)))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_2 _qv_3)=(append _qv_3 _qv_2)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((even (succ (len (append _t_11 _v_9))))=(even (len (append _v_9 (cons _t_10 _t_11)))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_4 _qv_5) _qv_6)=(append _qv_4 (append _qv_5 _qv_6))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((even (succ (len (append _t_11 _v_9))))=(even (len (append _v_9 (cons _t_10 _t_11)))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_7))=(nat-to-int _qv_7)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((even (succ (len (append _t_11 _v_9))))=(even (len (append _v_9 (cons _t_10 _t_11)))))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_8))=(nat-to-int _qv_8)))
USE ASSUMPTION FAILED

  backtrack to: ((even (succ (len (append _t_11 _v_9))))=(even (len (append _v_9 (cons _t_10 _t_11)))))
  rewritten [3]: ((!(even (len (append _t_11 _v_9))))=(even (len (append _v_9 (cons _t_10 _t_11)))))
  rewritten [8]: ((!(even (len (append _v_9 _t_11))))=(even (len (append _v_9 (cons _t_10 _t_11)))))
CURRENT SUBGOAL ((!(even (len (append _t_11 _v_9))))=(even (len (append _v_9 (cons _t_10 _t_11)))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((!(even (len (append _t_11 _v_9))))=(even (len (append _v_9 (cons _t_10 _t_11)))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((!(even (len (append _t_11 _v_9))))=(even (len (append _v_9 (cons _t_10 _t_11)))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_2 _qv_3)=(append _qv_3 _qv_2)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((!(even (len (append _t_11 _v_9))))=(even (len (append _v_9 (cons _t_10 _t_11)))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_4 _qv_5) _qv_6)=(append _qv_4 (append _qv_5 _qv_6))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((!(even (len (append _t_11 _v_9))))=(even (len (append _v_9 (cons _t_10 _t_11)))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_7))=(nat-to-int _qv_7)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((!(even (len (append _t_11 _v_9))))=(even (len (append _v_9 (cons _t_10 _t_11)))))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_8))=(nat-to-int _qv_8)))
USE ASSUMPTION FAILED

  backtrack to: ((!(even (len (append _t_11 _v_9))))=(even (len (append _v_9 (cons _t_10 _t_11)))))
  rewritten [8]: ((!(even (len (append _v_9 _t_11))))=(even (len (append _v_9 (cons _t_10 _t_11)))))
CURRENT SUBGOAL ((!(even (len (append _t_11 _v_9))))=(even (len (append _v_9 (cons _t_10 _t_11)))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((!(even (len (append _t_11 _v_9))))=(even (len (append _v_9 (cons _t_10 _t_11)))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((!(even (len (append _t_11 _v_9))))=(even (len (append _v_9 (cons _t_10 _t_11)))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_2 _qv_3)=(append _qv_3 _qv_2)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((!(even (len (append _t_11 _v_9))))=(even (len (append _v_9 (cons _t_10 _t_11)))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_4 _qv_5) _qv_6)=(append _qv_4 (append _qv_5 _qv_6))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((!(even (len (append _t_11 _v_9))))=(even (len (append _v_9 (cons _t_10 _t_11)))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_7))=(nat-to-int _qv_7)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((!(even (len (append _t_11 _v_9))))=(even (len (append _v_9 (cons _t_10 _t_11)))))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_8))=(nat-to-int _qv_8)))
USE ASSUMPTION FAILED

  backtrack to: ((!(even (len (append _t_11 _v_9))))=(even (len (append _v_9 (cons _t_10 _t_11)))))
CURRENT SUBGOAL ((even (succ (len (append _t_11 _v_9))))=(even (len (append _v_9 (cons _t_10 _t_11)))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((even (succ (len (append _t_11 _v_9))))=(even (len (append _v_9 (cons _t_10 _t_11)))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((even (succ (len (append _t_11 _v_9))))=(even (len (append _v_9 (cons _t_10 _t_11)))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_2 _qv_3)=(append _qv_3 _qv_2)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((even (succ (len (append _t_11 _v_9))))=(even (len (append _v_9 (cons _t_10 _t_11)))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_4 _qv_5) _qv_6)=(append _qv_4 (append _qv_5 _qv_6))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((even (succ (len (append _t_11 _v_9))))=(even (len (append _v_9 (cons _t_10 _t_11)))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_7))=(nat-to-int _qv_7)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((even (succ (len (append _t_11 _v_9))))=(even (len (append _v_9 (cons _t_10 _t_11)))))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_8))=(nat-to-int _qv_8)))
USE ASSUMPTION FAILED

  backtrack to: ((even (succ (len (append _t_11 _v_9))))=(even (len (append _v_9 (cons _t_10 _t_11)))))
CURRENT SUBGOAL ((even (len (cons _t_10 (append _t_11 _v_9))))=(even (len (append _v_9 (cons _t_10 _t_11)))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((even (len (cons _t_10 (append _t_11 _v_9))))=(even (len (append _v_9 (cons _t_10 _t_11)))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((even (len (cons _t_10 (append _t_11 _v_9))))=(even (len (append _v_9 (cons _t_10 _t_11)))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_2 _qv_3)=(append _qv_3 _qv_2)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((even (len (cons _t_10 (append _t_11 _v_9))))=(even (len (append _v_9 (cons _t_10 _t_11)))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_4 _qv_5) _qv_6)=(append _qv_4 (append _qv_5 _qv_6))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((even (len (cons _t_10 (append _t_11 _v_9))))=(even (len (append _v_9 (cons _t_10 _t_11)))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_7))=(nat-to-int _qv_7)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((even (len (cons _t_10 (append _t_11 _v_9))))=(even (len (append _v_9 (cons _t_10 _t_11)))))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_8))=(nat-to-int _qv_8)))
USE ASSUMPTION FAILED

  backtrack to: ((even (len (cons _t_10 (append _t_11 _v_9))))=(even (len (append _v_9 (cons _t_10 _t_11)))))
  rewritten [6]: ((even (succ (len (append _t_11 _v_9))))=(even (len (append _v_9 (cons _t_10 _t_11)))))
  rewritten [3]: ((!(even (len (append _t_11 _v_9))))=(even (len (append _v_9 (cons _t_10 _t_11)))))
  rewritten [8]: ((!(even (len (append _v_9 _t_11))))=(even (len (append _v_9 (cons _t_10 _t_11)))))
CURRENT SUBGOAL ((!(even (len (append _t_11 _v_9))))=(even (len (append _v_9 (cons _t_10 _t_11)))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((!(even (len (append _t_11 _v_9))))=(even (len (append _v_9 (cons _t_10 _t_11)))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((!(even (len (append _t_11 _v_9))))=(even (len (append _v_9 (cons _t_10 _t_11)))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_2 _qv_3)=(append _qv_3 _qv_2)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((!(even (len (append _t_11 _v_9))))=(even (len (append _v_9 (cons _t_10 _t_11)))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_4 _qv_5) _qv_6)=(append _qv_4 (append _qv_5 _qv_6))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((!(even (len (append _t_11 _v_9))))=(even (len (append _v_9 (cons _t_10 _t_11)))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_7))=(nat-to-int _qv_7)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((!(even (len (append _t_11 _v_9))))=(even (len (append _v_9 (cons _t_10 _t_11)))))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_8))=(nat-to-int _qv_8)))
USE ASSUMPTION FAILED

  backtrack to: ((!(even (len (append _t_11 _v_9))))=(even (len (append _v_9 (cons _t_10 _t_11)))))
  rewritten [8]: ((!(even (len (append _v_9 _t_11))))=(even (len (append _v_9 (cons _t_10 _t_11)))))
CURRENT SUBGOAL ((!(even (len (append _t_11 _v_9))))=(even (len (append _v_9 (cons _t_10 _t_11)))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((!(even (len (append _t_11 _v_9))))=(even (len (append _v_9 (cons _t_10 _t_11)))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((!(even (len (append _t_11 _v_9))))=(even (len (append _v_9 (cons _t_10 _t_11)))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_2 _qv_3)=(append _qv_3 _qv_2)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((!(even (len (append _t_11 _v_9))))=(even (len (append _v_9 (cons _t_10 _t_11)))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_4 _qv_5) _qv_6)=(append _qv_4 (append _qv_5 _qv_6))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((!(even (len (append _t_11 _v_9))))=(even (len (append _v_9 (cons _t_10 _t_11)))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_7))=(nat-to-int _qv_7)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((!(even (len (append _t_11 _v_9))))=(even (len (append _v_9 (cons _t_10 _t_11)))))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_8))=(nat-to-int _qv_8)))
USE ASSUMPTION FAILED

  backtrack to: ((!(even (len (append _t_11 _v_9))))=(even (len (append _v_9 (cons _t_10 _t_11)))))
CURRENT SUBGOAL ((even (succ (len (append _t_11 _v_9))))=(even (len (append _v_9 (cons _t_10 _t_11)))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((even (succ (len (append _t_11 _v_9))))=(even (len (append _v_9 (cons _t_10 _t_11)))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((even (succ (len (append _t_11 _v_9))))=(even (len (append _v_9 (cons _t_10 _t_11)))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_2 _qv_3)=(append _qv_3 _qv_2)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((even (succ (len (append _t_11 _v_9))))=(even (len (append _v_9 (cons _t_10 _t_11)))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_4 _qv_5) _qv_6)=(append _qv_4 (append _qv_5 _qv_6))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((even (succ (len (append _t_11 _v_9))))=(even (len (append _v_9 (cons _t_10 _t_11)))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_7))=(nat-to-int _qv_7)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((even (succ (len (append _t_11 _v_9))))=(even (len (append _v_9 (cons _t_10 _t_11)))))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_8))=(nat-to-int _qv_8)))
USE ASSUMPTION FAILED

  backtrack to: ((even (succ (len (append _t_11 _v_9))))=(even (len (append _v_9 (cons _t_10 _t_11)))))
  rewritten [3]: ((!(even (len (append _t_11 _v_9))))=(even (len (append _v_9 (cons _t_10 _t_11)))))
  rewritten [8]: ((!(even (len (append _v_9 _t_11))))=(even (len (append _v_9 (cons _t_10 _t_11)))))
CURRENT SUBGOAL ((!(even (len (append _t_11 _v_9))))=(even (len (append _v_9 (cons _t_10 _t_11)))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((!(even (len (append _t_11 _v_9))))=(even (len (append _v_9 (cons _t_10 _t_11)))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((!(even (len (append _t_11 _v_9))))=(even (len (append _v_9 (cons _t_10 _t_11)))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_2 _qv_3)=(append _qv_3 _qv_2)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((!(even (len (append _t_11 _v_9))))=(even (len (append _v_9 (cons _t_10 _t_11)))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_4 _qv_5) _qv_6)=(append _qv_4 (append _qv_5 _qv_6))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((!(even (len (append _t_11 _v_9))))=(even (len (append _v_9 (cons _t_10 _t_11)))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_7))=(nat-to-int _qv_7)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((!(even (len (append _t_11 _v_9))))=(even (len (append _v_9 (cons _t_10 _t_11)))))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_8))=(nat-to-int _qv_8)))
USE ASSUMPTION FAILED

  backtrack to: ((!(even (len (append _t_11 _v_9))))=(even (len (append _v_9 (cons _t_10 _t_11)))))
  rewritten [8]: ((!(even (len (append _v_9 _t_11))))=(even (len (append _v_9 (cons _t_10 _t_11)))))
CURRENT SUBGOAL ((!(even (len (append _t_11 _v_9))))=(even (len (append _v_9 (cons _t_10 _t_11)))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((!(even (len (append _t_11 _v_9))))=(even (len (append _v_9 (cons _t_10 _t_11)))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((!(even (len (append _t_11 _v_9))))=(even (len (append _v_9 (cons _t_10 _t_11)))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_2 _qv_3)=(append _qv_3 _qv_2)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((!(even (len (append _t_11 _v_9))))=(even (len (append _v_9 (cons _t_10 _t_11)))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_4 _qv_5) _qv_6)=(append _qv_4 (append _qv_5 _qv_6))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((!(even (len (append _t_11 _v_9))))=(even (len (append _v_9 (cons _t_10 _t_11)))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_7))=(nat-to-int _qv_7)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((!(even (len (append _t_11 _v_9))))=(even (len (append _v_9 (cons _t_10 _t_11)))))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_8))=(nat-to-int _qv_8)))
USE ASSUMPTION FAILED

  backtrack to: ((!(even (len (append _t_11 _v_9))))=(even (len (append _v_9 (cons _t_10 _t_11)))))
CURRENT SUBGOAL ((even (succ (len (append _t_11 _v_9))))=(even (len (append _v_9 (cons _t_10 _t_11)))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((even (succ (len (append _t_11 _v_9))))=(even (len (append _v_9 (cons _t_10 _t_11)))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((even (succ (len (append _t_11 _v_9))))=(even (len (append _v_9 (cons _t_10 _t_11)))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_2 _qv_3)=(append _qv_3 _qv_2)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((even (succ (len (append _t_11 _v_9))))=(even (len (append _v_9 (cons _t_10 _t_11)))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_4 _qv_5) _qv_6)=(append _qv_4 (append _qv_5 _qv_6))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((even (succ (len (append _t_11 _v_9))))=(even (len (append _v_9 (cons _t_10 _t_11)))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_7))=(nat-to-int _qv_7)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((even (succ (len (append _t_11 _v_9))))=(even (len (append _v_9 (cons _t_10 _t_11)))))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_8))=(nat-to-int _qv_8)))
USE ASSUMPTION FAILED

  backtrack to: ((even (succ (len (append _t_11 _v_9))))=(even (len (append _v_9 (cons _t_10 _t_11)))))
CURRENT SUBGOAL ((even (len (cons _t_10 (append _t_11 _v_9))))=(even (len (append _v_9 (cons _t_10 _t_11)))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((even (len (cons _t_10 (append _t_11 _v_9))))=(even (len (append _v_9 (cons _t_10 _t_11)))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((even (len (cons _t_10 (append _t_11 _v_9))))=(even (len (append _v_9 (cons _t_10 _t_11)))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_2 _qv_3)=(append _qv_3 _qv_2)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((even (len (cons _t_10 (append _t_11 _v_9))))=(even (len (append _v_9 (cons _t_10 _t_11)))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_4 _qv_5) _qv_6)=(append _qv_4 (append _qv_5 _qv_6))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((even (len (cons _t_10 (append _t_11 _v_9))))=(even (len (append _v_9 (cons _t_10 _t_11)))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_7))=(nat-to-int _qv_7)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((even (len (cons _t_10 (append _t_11 _v_9))))=(even (len (append _v_9 (cons _t_10 _t_11)))))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_8))=(nat-to-int _qv_8)))
USE ASSUMPTION FAILED

  backtrack to: ((even (len (cons _t_10 (append _t_11 _v_9))))=(even (len (append _v_9 (cons _t_10 _t_11)))))
CURRENT SUBGOAL ((even (len (append (cons _t_10 _t_11) _v_9)))=(even (len (append _v_9 (cons _t_10 _t_11)))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((even (len (append (cons _t_10 _t_11) _v_9)))=(even (len (append _v_9 (cons _t_10 _t_11)))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((even (len (append (cons _t_10 _t_11) _v_9)))=(even (len (append _v_9 (cons _t_10 _t_11)))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_2 _qv_3)=(append _qv_3 _qv_2)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((even (len (append (cons _t_10 _t_11) _v_9)))=(even (len (append _v_9 (cons _t_10 _t_11)))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_4 _qv_5) _qv_6)=(append _qv_4 (append _qv_5 _qv_6))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((even (len (append (cons _t_10 _t_11) _v_9)))=(even (len (append _v_9 (cons _t_10 _t_11)))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_7))=(nat-to-int _qv_7)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((even (len (append (cons _t_10 _t_11) _v_9)))=(even (len (append _v_9 (cons _t_10 _t_11)))))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_8))=(nat-to-int _qv_8)))
USE ASSUMPTION FAILED

  backtrack to: ((even (len (append (cons _t_10 _t_11) _v_9)))=(even (len (append _v_9 (cons _t_10 _t_11)))))

Base case:       ((even (len (append _v_12 nil)))=(even (len (append nil _v_12))))
{
  {
    ====================
    | Assumptions [0]: (forall ((Nat)) ((nat-to-int _qv_1)>=0))
    | Assumptions [1]: (forall ((Nat) (Nat)) (((nat-to-int _qv_2)=(nat-to-int _qv_3))->(_qv_2=_qv_3)))
    | Assumptions [2]: (forall ((Nat)) ((nat-to-int (succ _qv_4))=(1+(nat-to-int _qv_4))))
    | Assumptions [3]: (forall ((Nat)) ((even (succ _qv_5))=(!(even _qv_5))))
    | Assumptions [4]: (forall ((Lst)) ((append nil _qv_6)=_qv_6))
    | Assumptions [5]: (forall ((Nat) (Lst) (Lst)) ((append (cons _qv_7 _qv_8) _qv_9)=(cons _qv_7 (append _qv_8 _qv_9))))
    | Assumptions [6]: (forall ((Nat) (Lst)) ((len (cons _qv_10 _qv_11))=(succ (len _qv_11))))
    | Assumptions [7]: (even (len nil))
    | Assumptions [8]: (forall ((Lst)) ((even (len (append _t_11 y)))=(even (len (append y _t_11)))))
    | Assumptions [9]: (forall ((Lst)) ((even (len (append y _t_11)))=(even (len (append _t_11 y)))))
    | Assumptions [10]: ((nat-to-int (len nil))=0)
    ====================
  }
  rewritten [4]: ((even (len (append _v_12 nil)))=(even (len _v_12)))

The Knowledge Scheme currently contains the following lemmas:
	(forall ((Nat)) ((succ (succ _qv_13))=_qv_13))
	(forall ((Nat)) (0<=(nat-to-int _qv_14)))
	(forall ((Lst) (Lst)) ((append _qv_15 _qv_16)=(append _qv_16 _qv_15)))
	(forall ((Lst) (Lst) (Lst)) ((append (append _qv_17 _qv_18) _qv_19)=(append _qv_17 (append _qv_18 _qv_19))))
	(forall ((Nat)) ((nat-to-int (succ _qv_20))=(nat-to-int _qv_20)))
	(forall ((Lst)) ((nat-to-int (len _qv_21))=(nat-to-int _qv_21)))

  proven by induction: ((even (len (append _v_12 nil)))=(even (len _v_12)))
}
Inductive step:  ((even (len (append _v_12 (cons _t_13 _t_14))))=(even (len (append (cons _t_13 _t_14) _v_12))))
{
  {
    ====================
    | Assumptions [0]: (forall ((Nat)) ((nat-to-int _qv_1)>=0))
    | Assumptions [1]: (forall ((Nat) (Nat)) (((nat-to-int _qv_2)=(nat-to-int _qv_3))->(_qv_2=_qv_3)))
    | Assumptions [2]: (forall ((Nat)) ((nat-to-int (succ _qv_4))=(1+(nat-to-int _qv_4))))
    | Assumptions [3]: (forall ((Nat)) ((even (succ _qv_5))=(!(even _qv_5))))
    | Assumptions [4]: (forall ((Lst)) ((append nil _qv_6)=_qv_6))
    | Assumptions [5]: (forall ((Nat) (Lst) (Lst)) ((append (cons _qv_7 _qv_8) _qv_9)=(cons _qv_7 (append _qv_8 _qv_9))))
    | Assumptions [6]: (forall ((Nat) (Lst)) ((len (cons _qv_10 _qv_11))=(succ (len _qv_11))))
    | Assumptions [7]: (even (len nil))
    | Assumptions [8]: (forall ((Lst)) ((even (len (append _t_11 y)))=(even (len (append y _t_11)))))
    | Assumptions [9]: (forall ((Lst)) ((even (len (append y _t_11)))=(even (len (append _t_11 y)))))
    | Assumptions [10]: ((nat-to-int (len nil))=0)
    | Assumptions [11]: (forall ((Lst)) ((even (len (append x _t_14)))=(even (len (append _t_14 x)))))
    | Assumptions [12]: (forall ((Lst)) ((even (len (append _t_14 x)))=(even (len (append x _t_14)))))
    ====================
  }
  rewritten [5]: ((even (len (append _v_12 (cons _t_13 _t_14))))=(even (len (cons _t_13 (append _t_14 _v_12)))))
  rewritten [6]: ((even (len (append _v_12 (cons _t_13 _t_14))))=(even (succ (len (append _t_14 _v_12)))))
  rewritten [3]: ((even (len (append _v_12 (cons _t_13 _t_14))))=(!(even (len (append _t_14 _v_12)))))
  rewritten [12]: ((even (len (append _v_12 (cons _t_13 _t_14))))=(!(even (len (append _v_12 _t_14)))))
CURRENT SUBGOAL ((even (len (append _v_12 (cons _t_13 _t_14))))=(!(even (len (append _t_14 _v_12)))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((even (len (append _v_12 (cons _t_13 _t_14))))=(!(even (len (append _t_14 _v_12)))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((even (len (append _v_12 (cons _t_13 _t_14))))=(!(even (len (append _t_14 _v_12)))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_2 _qv_3)=(append _qv_3 _qv_2)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((even (len (append _v_12 (cons _t_13 _t_14))))=(!(even (len (append _t_14 _v_12)))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_4 _qv_5) _qv_6)=(append _qv_4 (append _qv_5 _qv_6))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((even (len (append _v_12 (cons _t_13 _t_14))))=(!(even (len (append _t_14 _v_12)))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_7))=(nat-to-int _qv_7)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((even (len (append _v_12 (cons _t_13 _t_14))))=(!(even (len (append _t_14 _v_12)))))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_8))=(nat-to-int _qv_8)))
USE ASSUMPTION FAILED

  backtrack to: ((even (len (append _v_12 (cons _t_13 _t_14))))=(!(even (len (append _t_14 _v_12)))))
  rewritten [12]: ((even (len (append _v_12 (cons _t_13 _t_14))))=(!(even (len (append _v_12 _t_14)))))
CURRENT SUBGOAL ((even (len (append _v_12 (cons _t_13 _t_14))))=(!(even (len (append _t_14 _v_12)))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((even (len (append _v_12 (cons _t_13 _t_14))))=(!(even (len (append _t_14 _v_12)))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((even (len (append _v_12 (cons _t_13 _t_14))))=(!(even (len (append _t_14 _v_12)))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_2 _qv_3)=(append _qv_3 _qv_2)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((even (len (append _v_12 (cons _t_13 _t_14))))=(!(even (len (append _t_14 _v_12)))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_4 _qv_5) _qv_6)=(append _qv_4 (append _qv_5 _qv_6))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((even (len (append _v_12 (cons _t_13 _t_14))))=(!(even (len (append _t_14 _v_12)))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_7))=(nat-to-int _qv_7)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((even (len (append _v_12 (cons _t_13 _t_14))))=(!(even (len (append _t_14 _v_12)))))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_8))=(nat-to-int _qv_8)))
USE ASSUMPTION FAILED

  backtrack to: ((even (len (append _v_12 (cons _t_13 _t_14))))=(!(even (len (append _t_14 _v_12)))))
CURRENT SUBGOAL ((even (len (append _v_12 (cons _t_13 _t_14))))=(even (succ (len (append _t_14 _v_12)))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((even (len (append _v_12 (cons _t_13 _t_14))))=(even (succ (len (append _t_14 _v_12)))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((even (len (append _v_12 (cons _t_13 _t_14))))=(even (succ (len (append _t_14 _v_12)))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_2 _qv_3)=(append _qv_3 _qv_2)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((even (len (append _v_12 (cons _t_13 _t_14))))=(even (succ (len (append _t_14 _v_12)))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_4 _qv_5) _qv_6)=(append _qv_4 (append _qv_5 _qv_6))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((even (len (append _v_12 (cons _t_13 _t_14))))=(even (succ (len (append _t_14 _v_12)))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_7))=(nat-to-int _qv_7)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((even (len (append _v_12 (cons _t_13 _t_14))))=(even (succ (len (append _t_14 _v_12)))))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_8))=(nat-to-int _qv_8)))
USE ASSUMPTION FAILED

  backtrack to: ((even (len (append _v_12 (cons _t_13 _t_14))))=(even (succ (len (append _t_14 _v_12)))))
  rewritten [3]: ((even (len (append _v_12 (cons _t_13 _t_14))))=(!(even (len (append _t_14 _v_12)))))
  rewritten [12]: ((even (len (append _v_12 (cons _t_13 _t_14))))=(!(even (len (append _v_12 _t_14)))))
CURRENT SUBGOAL ((even (len (append _v_12 (cons _t_13 _t_14))))=(!(even (len (append _t_14 _v_12)))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((even (len (append _v_12 (cons _t_13 _t_14))))=(!(even (len (append _t_14 _v_12)))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((even (len (append _v_12 (cons _t_13 _t_14))))=(!(even (len (append _t_14 _v_12)))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_2 _qv_3)=(append _qv_3 _qv_2)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((even (len (append _v_12 (cons _t_13 _t_14))))=(!(even (len (append _t_14 _v_12)))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_4 _qv_5) _qv_6)=(append _qv_4 (append _qv_5 _qv_6))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((even (len (append _v_12 (cons _t_13 _t_14))))=(!(even (len (append _t_14 _v_12)))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_7))=(nat-to-int _qv_7)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((even (len (append _v_12 (cons _t_13 _t_14))))=(!(even (len (append _t_14 _v_12)))))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_8))=(nat-to-int _qv_8)))
USE ASSUMPTION FAILED

  backtrack to: ((even (len (append _v_12 (cons _t_13 _t_14))))=(!(even (len (append _t_14 _v_12)))))
  rewritten [12]: ((even (len (append _v_12 (cons _t_13 _t_14))))=(!(even (len (append _v_12 _t_14)))))
CURRENT SUBGOAL ((even (len (append _v_12 (cons _t_13 _t_14))))=(!(even (len (append _t_14 _v_12)))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((even (len (append _v_12 (cons _t_13 _t_14))))=(!(even (len (append _t_14 _v_12)))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((even (len (append _v_12 (cons _t_13 _t_14))))=(!(even (len (append _t_14 _v_12)))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_2 _qv_3)=(append _qv_3 _qv_2)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((even (len (append _v_12 (cons _t_13 _t_14))))=(!(even (len (append _t_14 _v_12)))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_4 _qv_5) _qv_6)=(append _qv_4 (append _qv_5 _qv_6))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((even (len (append _v_12 (cons _t_13 _t_14))))=(!(even (len (append _t_14 _v_12)))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_7))=(nat-to-int _qv_7)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((even (len (append _v_12 (cons _t_13 _t_14))))=(!(even (len (append _t_14 _v_12)))))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_8))=(nat-to-int _qv_8)))
USE ASSUMPTION FAILED

  backtrack to: ((even (len (append _v_12 (cons _t_13 _t_14))))=(!(even (len (append _t_14 _v_12)))))
CURRENT SUBGOAL ((even (len (append _v_12 (cons _t_13 _t_14))))=(even (succ (len (append _t_14 _v_12)))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((even (len (append _v_12 (cons _t_13 _t_14))))=(even (succ (len (append _t_14 _v_12)))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((even (len (append _v_12 (cons _t_13 _t_14))))=(even (succ (len (append _t_14 _v_12)))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_2 _qv_3)=(append _qv_3 _qv_2)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((even (len (append _v_12 (cons _t_13 _t_14))))=(even (succ (len (append _t_14 _v_12)))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_4 _qv_5) _qv_6)=(append _qv_4 (append _qv_5 _qv_6))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((even (len (append _v_12 (cons _t_13 _t_14))))=(even (succ (len (append _t_14 _v_12)))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_7))=(nat-to-int _qv_7)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((even (len (append _v_12 (cons _t_13 _t_14))))=(even (succ (len (append _t_14 _v_12)))))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_8))=(nat-to-int _qv_8)))
USE ASSUMPTION FAILED

  backtrack to: ((even (len (append _v_12 (cons _t_13 _t_14))))=(even (succ (len (append _t_14 _v_12)))))
CURRENT SUBGOAL ((even (len (append _v_12 (cons _t_13 _t_14))))=(even (len (cons _t_13 (append _t_14 _v_12)))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((even (len (append _v_12 (cons _t_13 _t_14))))=(even (len (cons _t_13 (append _t_14 _v_12)))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((even (len (append _v_12 (cons _t_13 _t_14))))=(even (len (cons _t_13 (append _t_14 _v_12)))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_2 _qv_3)=(append _qv_3 _qv_2)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((even (len (append _v_12 (cons _t_13 _t_14))))=(even (len (cons _t_13 (append _t_14 _v_12)))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_4 _qv_5) _qv_6)=(append _qv_4 (append _qv_5 _qv_6))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((even (len (append _v_12 (cons _t_13 _t_14))))=(even (len (cons _t_13 (append _t_14 _v_12)))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_7))=(nat-to-int _qv_7)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((even (len (append _v_12 (cons _t_13 _t_14))))=(even (len (cons _t_13 (append _t_14 _v_12)))))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_8))=(nat-to-int _qv_8)))
USE ASSUMPTION FAILED

  backtrack to: ((even (len (append _v_12 (cons _t_13 _t_14))))=(even (len (cons _t_13 (append _t_14 _v_12)))))
  rewritten [6]: ((even (len (append _v_12 (cons _t_13 _t_14))))=(even (succ (len (append _t_14 _v_12)))))
  rewritten [3]: ((even (len (append _v_12 (cons _t_13 _t_14))))=(!(even (len (append _t_14 _v_12)))))
  rewritten [12]: ((even (len (append _v_12 (cons _t_13 _t_14))))=(!(even (len (append _v_12 _t_14)))))
CURRENT SUBGOAL ((even (len (append _v_12 (cons _t_13 _t_14))))=(!(even (len (append _t_14 _v_12)))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((even (len (append _v_12 (cons _t_13 _t_14))))=(!(even (len (append _t_14 _v_12)))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((even (len (append _v_12 (cons _t_13 _t_14))))=(!(even (len (append _t_14 _v_12)))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_2 _qv_3)=(append _qv_3 _qv_2)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((even (len (append _v_12 (cons _t_13 _t_14))))=(!(even (len (append _t_14 _v_12)))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_4 _qv_5) _qv_6)=(append _qv_4 (append _qv_5 _qv_6))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((even (len (append _v_12 (cons _t_13 _t_14))))=(!(even (len (append _t_14 _v_12)))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_7))=(nat-to-int _qv_7)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((even (len (append _v_12 (cons _t_13 _t_14))))=(!(even (len (append _t_14 _v_12)))))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_8))=(nat-to-int _qv_8)))
USE ASSUMPTION FAILED

  backtrack to: ((even (len (append _v_12 (cons _t_13 _t_14))))=(!(even (len (append _t_14 _v_12)))))
  rewritten [12]: ((even (len (append _v_12 (cons _t_13 _t_14))))=(!(even (len (append _v_12 _t_14)))))
CURRENT SUBGOAL ((even (len (append _v_12 (cons _t_13 _t_14))))=(!(even (len (append _t_14 _v_12)))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((even (len (append _v_12 (cons _t_13 _t_14))))=(!(even (len (append _t_14 _v_12)))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((even (len (append _v_12 (cons _t_13 _t_14))))=(!(even (len (append _t_14 _v_12)))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_2 _qv_3)=(append _qv_3 _qv_2)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((even (len (append _v_12 (cons _t_13 _t_14))))=(!(even (len (append _t_14 _v_12)))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_4 _qv_5) _qv_6)=(append _qv_4 (append _qv_5 _qv_6))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((even (len (append _v_12 (cons _t_13 _t_14))))=(!(even (len (append _t_14 _v_12)))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_7))=(nat-to-int _qv_7)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((even (len (append _v_12 (cons _t_13 _t_14))))=(!(even (len (append _t_14 _v_12)))))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_8))=(nat-to-int _qv_8)))
USE ASSUMPTION FAILED

  backtrack to: ((even (len (append _v_12 (cons _t_13 _t_14))))=(!(even (len (append _t_14 _v_12)))))
CURRENT SUBGOAL ((even (len (append _v_12 (cons _t_13 _t_14))))=(even (succ (len (append _t_14 _v_12)))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((even (len (append _v_12 (cons _t_13 _t_14))))=(even (succ (len (append _t_14 _v_12)))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((even (len (append _v_12 (cons _t_13 _t_14))))=(even (succ (len (append _t_14 _v_12)))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_2 _qv_3)=(append _qv_3 _qv_2)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((even (len (append _v_12 (cons _t_13 _t_14))))=(even (succ (len (append _t_14 _v_12)))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_4 _qv_5) _qv_6)=(append _qv_4 (append _qv_5 _qv_6))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((even (len (append _v_12 (cons _t_13 _t_14))))=(even (succ (len (append _t_14 _v_12)))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_7))=(nat-to-int _qv_7)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((even (len (append _v_12 (cons _t_13 _t_14))))=(even (succ (len (append _t_14 _v_12)))))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_8))=(nat-to-int _qv_8)))
USE ASSUMPTION FAILED

  backtrack to: ((even (len (append _v_12 (cons _t_13 _t_14))))=(even (succ (len (append _t_14 _v_12)))))
  rewritten [3]: ((even (len (append _v_12 (cons _t_13 _t_14))))=(!(even (len (append _t_14 _v_12)))))
  rewritten [12]: ((even (len (append _v_12 (cons _t_13 _t_14))))=(!(even (len (append _v_12 _t_14)))))
CURRENT SUBGOAL ((even (len (append _v_12 (cons _t_13 _t_14))))=(!(even (len (append _t_14 _v_12)))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((even (len (append _v_12 (cons _t_13 _t_14))))=(!(even (len (append _t_14 _v_12)))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((even (len (append _v_12 (cons _t_13 _t_14))))=(!(even (len (append _t_14 _v_12)))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_2 _qv_3)=(append _qv_3 _qv_2)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((even (len (append _v_12 (cons _t_13 _t_14))))=(!(even (len (append _t_14 _v_12)))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_4 _qv_5) _qv_6)=(append _qv_4 (append _qv_5 _qv_6))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((even (len (append _v_12 (cons _t_13 _t_14))))=(!(even (len (append _t_14 _v_12)))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_7))=(nat-to-int _qv_7)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((even (len (append _v_12 (cons _t_13 _t_14))))=(!(even (len (append _t_14 _v_12)))))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_8))=(nat-to-int _qv_8)))
USE ASSUMPTION FAILED

  backtrack to: ((even (len (append _v_12 (cons _t_13 _t_14))))=(!(even (len (append _t_14 _v_12)))))
  rewritten [12]: ((even (len (append _v_12 (cons _t_13 _t_14))))=(!(even (len (append _v_12 _t_14)))))
CURRENT SUBGOAL ((even (len (append _v_12 (cons _t_13 _t_14))))=(!(even (len (append _t_14 _v_12)))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((even (len (append _v_12 (cons _t_13 _t_14))))=(!(even (len (append _t_14 _v_12)))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((even (len (append _v_12 (cons _t_13 _t_14))))=(!(even (len (append _t_14 _v_12)))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_2 _qv_3)=(append _qv_3 _qv_2)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((even (len (append _v_12 (cons _t_13 _t_14))))=(!(even (len (append _t_14 _v_12)))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_4 _qv_5) _qv_6)=(append _qv_4 (append _qv_5 _qv_6))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((even (len (append _v_12 (cons _t_13 _t_14))))=(!(even (len (append _t_14 _v_12)))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_7))=(nat-to-int _qv_7)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((even (len (append _v_12 (cons _t_13 _t_14))))=(!(even (len (append _t_14 _v_12)))))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_8))=(nat-to-int _qv_8)))
USE ASSUMPTION FAILED

  backtrack to: ((even (len (append _v_12 (cons _t_13 _t_14))))=(!(even (len (append _t_14 _v_12)))))
CURRENT SUBGOAL ((even (len (append _v_12 (cons _t_13 _t_14))))=(even (succ (len (append _t_14 _v_12)))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((even (len (append _v_12 (cons _t_13 _t_14))))=(even (succ (len (append _t_14 _v_12)))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((even (len (append _v_12 (cons _t_13 _t_14))))=(even (succ (len (append _t_14 _v_12)))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_2 _qv_3)=(append _qv_3 _qv_2)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((even (len (append _v_12 (cons _t_13 _t_14))))=(even (succ (len (append _t_14 _v_12)))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_4 _qv_5) _qv_6)=(append _qv_4 (append _qv_5 _qv_6))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((even (len (append _v_12 (cons _t_13 _t_14))))=(even (succ (len (append _t_14 _v_12)))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_7))=(nat-to-int _qv_7)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((even (len (append _v_12 (cons _t_13 _t_14))))=(even (succ (len (append _t_14 _v_12)))))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_8))=(nat-to-int _qv_8)))
USE ASSUMPTION FAILED

  backtrack to: ((even (len (append _v_12 (cons _t_13 _t_14))))=(even (succ (len (append _t_14 _v_12)))))
CURRENT SUBGOAL ((even (len (append _v_12 (cons _t_13 _t_14))))=(even (len (cons _t_13 (append _t_14 _v_12)))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((even (len (append _v_12 (cons _t_13 _t_14))))=(even (len (cons _t_13 (append _t_14 _v_12)))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((even (len (append _v_12 (cons _t_13 _t_14))))=(even (len (cons _t_13 (append _t_14 _v_12)))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_2 _qv_3)=(append _qv_3 _qv_2)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((even (len (append _v_12 (cons _t_13 _t_14))))=(even (len (cons _t_13 (append _t_14 _v_12)))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_4 _qv_5) _qv_6)=(append _qv_4 (append _qv_5 _qv_6))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((even (len (append _v_12 (cons _t_13 _t_14))))=(even (len (cons _t_13 (append _t_14 _v_12)))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_7))=(nat-to-int _qv_7)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((even (len (append _v_12 (cons _t_13 _t_14))))=(even (len (cons _t_13 (append _t_14 _v_12)))))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_8))=(nat-to-int _qv_8)))
USE ASSUMPTION FAILED

  backtrack to: ((even (len (append _v_12 (cons _t_13 _t_14))))=(even (len (cons _t_13 (append _t_14 _v_12)))))
CURRENT SUBGOAL ((even (len (append _v_12 (cons _t_13 _t_14))))=(even (len (append (cons _t_13 _t_14) _v_12))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((even (len (append _v_12 (cons _t_13 _t_14))))=(even (len (append (cons _t_13 _t_14) _v_12))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((even (len (append _v_12 (cons _t_13 _t_14))))=(even (len (append (cons _t_13 _t_14) _v_12))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_2 _qv_3)=(append _qv_3 _qv_2)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((even (len (append _v_12 (cons _t_13 _t_14))))=(even (len (append (cons _t_13 _t_14) _v_12))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_4 _qv_5) _qv_6)=(append _qv_4 (append _qv_5 _qv_6))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((even (len (append _v_12 (cons _t_13 _t_14))))=(even (len (append (cons _t_13 _t_14) _v_12))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_7))=(nat-to-int _qv_7)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((even (len (append _v_12 (cons _t_13 _t_14))))=(even (len (append (cons _t_13 _t_14) _v_12))))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_8))=(nat-to-int _qv_8)))
USE ASSUMPTION FAILED

  backtrack to: ((even (len (append _v_12 (cons _t_13 _t_14))))=(even (len (append (cons _t_13 _t_14) _v_12))))
  rewritten [5]: ((even (len (append _v_12 (cons _t_13 _t_14))))=(even (len (cons _t_13 (append _t_14 _v_12)))))
  rewritten [6]: ((even (len (append _v_12 (cons _t_13 _t_14))))=(even (succ (len (append _t_14 _v_12)))))
  rewritten [3]: ((even (len (append _v_12 (cons _t_13 _t_14))))=(!(even (len (append _t_14 _v_12)))))
  rewritten [12]: ((even (len (append _v_12 (cons _t_13 _t_14))))=(!(even (len (append _v_12 _t_14)))))
CURRENT SUBGOAL ((even (len (append _v_12 (cons _t_13 _t_14))))=(!(even (len (append _t_14 _v_12)))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((even (len (append _v_12 (cons _t_13 _t_14))))=(!(even (len (append _t_14 _v_12)))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((even (len (append _v_12 (cons _t_13 _t_14))))=(!(even (len (append _t_14 _v_12)))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_2 _qv_3)=(append _qv_3 _qv_2)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((even (len (append _v_12 (cons _t_13 _t_14))))=(!(even (len (append _t_14 _v_12)))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_4 _qv_5) _qv_6)=(append _qv_4 (append _qv_5 _qv_6))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((even (len (append _v_12 (cons _t_13 _t_14))))=(!(even (len (append _t_14 _v_12)))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_7))=(nat-to-int _qv_7)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((even (len (append _v_12 (cons _t_13 _t_14))))=(!(even (len (append _t_14 _v_12)))))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_8))=(nat-to-int _qv_8)))
USE ASSUMPTION FAILED

  backtrack to: ((even (len (append _v_12 (cons _t_13 _t_14))))=(!(even (len (append _t_14 _v_12)))))
  rewritten [12]: ((even (len (append _v_12 (cons _t_13 _t_14))))=(!(even (len (append _v_12 _t_14)))))
CURRENT SUBGOAL ((even (len (append _v_12 (cons _t_13 _t_14))))=(!(even (len (append _t_14 _v_12)))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((even (len (append _v_12 (cons _t_13 _t_14))))=(!(even (len (append _t_14 _v_12)))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((even (len (append _v_12 (cons _t_13 _t_14))))=(!(even (len (append _t_14 _v_12)))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_2 _qv_3)=(append _qv_3 _qv_2)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((even (len (append _v_12 (cons _t_13 _t_14))))=(!(even (len (append _t_14 _v_12)))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_4 _qv_5) _qv_6)=(append _qv_4 (append _qv_5 _qv_6))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((even (len (append _v_12 (cons _t_13 _t_14))))=(!(even (len (append _t_14 _v_12)))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_7))=(nat-to-int _qv_7)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((even (len (append _v_12 (cons _t_13 _t_14))))=(!(even (len (append _t_14 _v_12)))))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_8))=(nat-to-int _qv_8)))
USE ASSUMPTION FAILED

  backtrack to: ((even (len (append _v_12 (cons _t_13 _t_14))))=(!(even (len (append _t_14 _v_12)))))
CURRENT SUBGOAL ((even (len (append _v_12 (cons _t_13 _t_14))))=(even (succ (len (append _t_14 _v_12)))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((even (len (append _v_12 (cons _t_13 _t_14))))=(even (succ (len (append _t_14 _v_12)))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((even (len (append _v_12 (cons _t_13 _t_14))))=(even (succ (len (append _t_14 _v_12)))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_2 _qv_3)=(append _qv_3 _qv_2)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((even (len (append _v_12 (cons _t_13 _t_14))))=(even (succ (len (append _t_14 _v_12)))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_4 _qv_5) _qv_6)=(append _qv_4 (append _qv_5 _qv_6))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((even (len (append _v_12 (cons _t_13 _t_14))))=(even (succ (len (append _t_14 _v_12)))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_7))=(nat-to-int _qv_7)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((even (len (append _v_12 (cons _t_13 _t_14))))=(even (succ (len (append _t_14 _v_12)))))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_8))=(nat-to-int _qv_8)))
USE ASSUMPTION FAILED

  backtrack to: ((even (len (append _v_12 (cons _t_13 _t_14))))=(even (succ (len (append _t_14 _v_12)))))
  rewritten [3]: ((even (len (append _v_12 (cons _t_13 _t_14))))=(!(even (len (append _t_14 _v_12)))))
  rewritten [12]: ((even (len (append _v_12 (cons _t_13 _t_14))))=(!(even (len (append _v_12 _t_14)))))
CURRENT SUBGOAL ((even (len (append _v_12 (cons _t_13 _t_14))))=(!(even (len (append _t_14 _v_12)))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((even (len (append _v_12 (cons _t_13 _t_14))))=(!(even (len (append _t_14 _v_12)))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((even (len (append _v_12 (cons _t_13 _t_14))))=(!(even (len (append _t_14 _v_12)))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_2 _qv_3)=(append _qv_3 _qv_2)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((even (len (append _v_12 (cons _t_13 _t_14))))=(!(even (len (append _t_14 _v_12)))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_4 _qv_5) _qv_6)=(append _qv_4 (append _qv_5 _qv_6))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((even (len (append _v_12 (cons _t_13 _t_14))))=(!(even (len (append _t_14 _v_12)))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_7))=(nat-to-int _qv_7)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((even (len (append _v_12 (cons _t_13 _t_14))))=(!(even (len (append _t_14 _v_12)))))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_8))=(nat-to-int _qv_8)))
USE ASSUMPTION FAILED

  backtrack to: ((even (len (append _v_12 (cons _t_13 _t_14))))=(!(even (len (append _t_14 _v_12)))))
  rewritten [12]: ((even (len (append _v_12 (cons _t_13 _t_14))))=(!(even (len (append _v_12 _t_14)))))
CURRENT SUBGOAL ((even (len (append _v_12 (cons _t_13 _t_14))))=(!(even (len (append _t_14 _v_12)))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((even (len (append _v_12 (cons _t_13 _t_14))))=(!(even (len (append _t_14 _v_12)))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((even (len (append _v_12 (cons _t_13 _t_14))))=(!(even (len (append _t_14 _v_12)))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_2 _qv_3)=(append _qv_3 _qv_2)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((even (len (append _v_12 (cons _t_13 _t_14))))=(!(even (len (append _t_14 _v_12)))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_4 _qv_5) _qv_6)=(append _qv_4 (append _qv_5 _qv_6))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((even (len (append _v_12 (cons _t_13 _t_14))))=(!(even (len (append _t_14 _v_12)))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_7))=(nat-to-int _qv_7)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((even (len (append _v_12 (cons _t_13 _t_14))))=(!(even (len (append _t_14 _v_12)))))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_8))=(nat-to-int _qv_8)))
USE ASSUMPTION FAILED

  backtrack to: ((even (len (append _v_12 (cons _t_13 _t_14))))=(!(even (len (append _t_14 _v_12)))))
CURRENT SUBGOAL ((even (len (append _v_12 (cons _t_13 _t_14))))=(even (succ (len (append _t_14 _v_12)))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((even (len (append _v_12 (cons _t_13 _t_14))))=(even (succ (len (append _t_14 _v_12)))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((even (len (append _v_12 (cons _t_13 _t_14))))=(even (succ (len (append _t_14 _v_12)))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_2 _qv_3)=(append _qv_3 _qv_2)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((even (len (append _v_12 (cons _t_13 _t_14))))=(even (succ (len (append _t_14 _v_12)))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_4 _qv_5) _qv_6)=(append _qv_4 (append _qv_5 _qv_6))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((even (len (append _v_12 (cons _t_13 _t_14))))=(even (succ (len (append _t_14 _v_12)))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_7))=(nat-to-int _qv_7)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((even (len (append _v_12 (cons _t_13 _t_14))))=(even (succ (len (append _t_14 _v_12)))))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_8))=(nat-to-int _qv_8)))
USE ASSUMPTION FAILED

  backtrack to: ((even (len (append _v_12 (cons _t_13 _t_14))))=(even (succ (len (append _t_14 _v_12)))))
CURRENT SUBGOAL ((even (len (append _v_12 (cons _t_13 _t_14))))=(even (len (cons _t_13 (append _t_14 _v_12)))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((even (len (append _v_12 (cons _t_13 _t_14))))=(even (len (cons _t_13 (append _t_14 _v_12)))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((even (len (append _v_12 (cons _t_13 _t_14))))=(even (len (cons _t_13 (append _t_14 _v_12)))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_2 _qv_3)=(append _qv_3 _qv_2)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((even (len (append _v_12 (cons _t_13 _t_14))))=(even (len (cons _t_13 (append _t_14 _v_12)))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_4 _qv_5) _qv_6)=(append _qv_4 (append _qv_5 _qv_6))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((even (len (append _v_12 (cons _t_13 _t_14))))=(even (len (cons _t_13 (append _t_14 _v_12)))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_7))=(nat-to-int _qv_7)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((even (len (append _v_12 (cons _t_13 _t_14))))=(even (len (cons _t_13 (append _t_14 _v_12)))))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_8))=(nat-to-int _qv_8)))
USE ASSUMPTION FAILED

  backtrack to: ((even (len (append _v_12 (cons _t_13 _t_14))))=(even (len (cons _t_13 (append _t_14 _v_12)))))
  rewritten [6]: ((even (len (append _v_12 (cons _t_13 _t_14))))=(even (succ (len (append _t_14 _v_12)))))
  rewritten [3]: ((even (len (append _v_12 (cons _t_13 _t_14))))=(!(even (len (append _t_14 _v_12)))))
  rewritten [12]: ((even (len (append _v_12 (cons _t_13 _t_14))))=(!(even (len (append _v_12 _t_14)))))
CURRENT SUBGOAL ((even (len (append _v_12 (cons _t_13 _t_14))))=(!(even (len (append _t_14 _v_12)))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((even (len (append _v_12 (cons _t_13 _t_14))))=(!(even (len (append _t_14 _v_12)))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((even (len (append _v_12 (cons _t_13 _t_14))))=(!(even (len (append _t_14 _v_12)))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_2 _qv_3)=(append _qv_3 _qv_2)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((even (len (append _v_12 (cons _t_13 _t_14))))=(!(even (len (append _t_14 _v_12)))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_4 _qv_5) _qv_6)=(append _qv_4 (append _qv_5 _qv_6))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((even (len (append _v_12 (cons _t_13 _t_14))))=(!(even (len (append _t_14 _v_12)))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_7))=(nat-to-int _qv_7)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((even (len (append _v_12 (cons _t_13 _t_14))))=(!(even (len (append _t_14 _v_12)))))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_8))=(nat-to-int _qv_8)))
USE ASSUMPTION FAILED

  backtrack to: ((even (len (append _v_12 (cons _t_13 _t_14))))=(!(even (len (append _t_14 _v_12)))))
  rewritten [12]: ((even (len (append _v_12 (cons _t_13 _t_14))))=(!(even (len (append _v_12 _t_14)))))
CURRENT SUBGOAL ((even (len (append _v_12 (cons _t_13 _t_14))))=(!(even (len (append _t_14 _v_12)))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((even (len (append _v_12 (cons _t_13 _t_14))))=(!(even (len (append _t_14 _v_12)))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((even (len (append _v_12 (cons _t_13 _t_14))))=(!(even (len (append _t_14 _v_12)))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_2 _qv_3)=(append _qv_3 _qv_2)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((even (len (append _v_12 (cons _t_13 _t_14))))=(!(even (len (append _t_14 _v_12)))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_4 _qv_5) _qv_6)=(append _qv_4 (append _qv_5 _qv_6))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((even (len (append _v_12 (cons _t_13 _t_14))))=(!(even (len (append _t_14 _v_12)))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_7))=(nat-to-int _qv_7)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((even (len (append _v_12 (cons _t_13 _t_14))))=(!(even (len (append _t_14 _v_12)))))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_8))=(nat-to-int _qv_8)))
USE ASSUMPTION FAILED

  backtrack to: ((even (len (append _v_12 (cons _t_13 _t_14))))=(!(even (len (append _t_14 _v_12)))))
CURRENT SUBGOAL ((even (len (append _v_12 (cons _t_13 _t_14))))=(even (succ (len (append _t_14 _v_12)))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((even (len (append _v_12 (cons _t_13 _t_14))))=(even (succ (len (append _t_14 _v_12)))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((even (len (append _v_12 (cons _t_13 _t_14))))=(even (succ (len (append _t_14 _v_12)))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_2 _qv_3)=(append _qv_3 _qv_2)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((even (len (append _v_12 (cons _t_13 _t_14))))=(even (succ (len (append _t_14 _v_12)))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_4 _qv_5) _qv_6)=(append _qv_4 (append _qv_5 _qv_6))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((even (len (append _v_12 (cons _t_13 _t_14))))=(even (succ (len (append _t_14 _v_12)))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_7))=(nat-to-int _qv_7)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((even (len (append _v_12 (cons _t_13 _t_14))))=(even (succ (len (append _t_14 _v_12)))))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_8))=(nat-to-int _qv_8)))
USE ASSUMPTION FAILED

  backtrack to: ((even (len (append _v_12 (cons _t_13 _t_14))))=(even (succ (len (append _t_14 _v_12)))))
  rewritten [3]: ((even (len (append _v_12 (cons _t_13 _t_14))))=(!(even (len (append _t_14 _v_12)))))
  rewritten [12]: ((even (len (append _v_12 (cons _t_13 _t_14))))=(!(even (len (append _v_12 _t_14)))))
CURRENT SUBGOAL ((even (len (append _v_12 (cons _t_13 _t_14))))=(!(even (len (append _t_14 _v_12)))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((even (len (append _v_12 (cons _t_13 _t_14))))=(!(even (len (append _t_14 _v_12)))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((even (len (append _v_12 (cons _t_13 _t_14))))=(!(even (len (append _t_14 _v_12)))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_2 _qv_3)=(append _qv_3 _qv_2)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((even (len (append _v_12 (cons _t_13 _t_14))))=(!(even (len (append _t_14 _v_12)))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_4 _qv_5) _qv_6)=(append _qv_4 (append _qv_5 _qv_6))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((even (len (append _v_12 (cons _t_13 _t_14))))=(!(even (len (append _t_14 _v_12)))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_7))=(nat-to-int _qv_7)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((even (len (append _v_12 (cons _t_13 _t_14))))=(!(even (len (append _t_14 _v_12)))))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_8))=(nat-to-int _qv_8)))
USE ASSUMPTION FAILED

  backtrack to: ((even (len (append _v_12 (cons _t_13 _t_14))))=(!(even (len (append _t_14 _v_12)))))
  rewritten [12]: ((even (len (append _v_12 (cons _t_13 _t_14))))=(!(even (len (append _v_12 _t_14)))))
CURRENT SUBGOAL ((even (len (append _v_12 (cons _t_13 _t_14))))=(!(even (len (append _t_14 _v_12)))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((even (len (append _v_12 (cons _t_13 _t_14))))=(!(even (len (append _t_14 _v_12)))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((even (len (append _v_12 (cons _t_13 _t_14))))=(!(even (len (append _t_14 _v_12)))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_2 _qv_3)=(append _qv_3 _qv_2)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((even (len (append _v_12 (cons _t_13 _t_14))))=(!(even (len (append _t_14 _v_12)))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_4 _qv_5) _qv_6)=(append _qv_4 (append _qv_5 _qv_6))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((even (len (append _v_12 (cons _t_13 _t_14))))=(!(even (len (append _t_14 _v_12)))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_7))=(nat-to-int _qv_7)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((even (len (append _v_12 (cons _t_13 _t_14))))=(!(even (len (append _t_14 _v_12)))))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_8))=(nat-to-int _qv_8)))
USE ASSUMPTION FAILED

  backtrack to: ((even (len (append _v_12 (cons _t_13 _t_14))))=(!(even (len (append _t_14 _v_12)))))
CURRENT SUBGOAL ((even (len (append _v_12 (cons _t_13 _t_14))))=(even (succ (len (append _t_14 _v_12)))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((even (len (append _v_12 (cons _t_13 _t_14))))=(even (succ (len (append _t_14 _v_12)))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((even (len (append _v_12 (cons _t_13 _t_14))))=(even (succ (len (append _t_14 _v_12)))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_2 _qv_3)=(append _qv_3 _qv_2)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((even (len (append _v_12 (cons _t_13 _t_14))))=(even (succ (len (append _t_14 _v_12)))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_4 _qv_5) _qv_6)=(append _qv_4 (append _qv_5 _qv_6))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((even (len (append _v_12 (cons _t_13 _t_14))))=(even (succ (len (append _t_14 _v_12)))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_7))=(nat-to-int _qv_7)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((even (len (append _v_12 (cons _t_13 _t_14))))=(even (succ (len (append _t_14 _v_12)))))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_8))=(nat-to-int _qv_8)))
USE ASSUMPTION FAILED

  backtrack to: ((even (len (append _v_12 (cons _t_13 _t_14))))=(even (succ (len (append _t_14 _v_12)))))
CURRENT SUBGOAL ((even (len (append _v_12 (cons _t_13 _t_14))))=(even (len (cons _t_13 (append _t_14 _v_12)))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((even (len (append _v_12 (cons _t_13 _t_14))))=(even (len (cons _t_13 (append _t_14 _v_12)))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((even (len (append _v_12 (cons _t_13 _t_14))))=(even (len (cons _t_13 (append _t_14 _v_12)))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_2 _qv_3)=(append _qv_3 _qv_2)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((even (len (append _v_12 (cons _t_13 _t_14))))=(even (len (cons _t_13 (append _t_14 _v_12)))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_4 _qv_5) _qv_6)=(append _qv_4 (append _qv_5 _qv_6))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((even (len (append _v_12 (cons _t_13 _t_14))))=(even (len (cons _t_13 (append _t_14 _v_12)))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_7))=(nat-to-int _qv_7)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((even (len (append _v_12 (cons _t_13 _t_14))))=(even (len (cons _t_13 (append _t_14 _v_12)))))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_8))=(nat-to-int _qv_8)))
USE ASSUMPTION FAILED

  backtrack to: ((even (len (append _v_12 (cons _t_13 _t_14))))=(even (len (cons _t_13 (append _t_14 _v_12)))))
CURRENT SUBGOAL ((even (len (append _v_12 (cons _t_13 _t_14))))=(even (len (append (cons _t_13 _t_14) _v_12))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((even (len (append _v_12 (cons _t_13 _t_14))))=(even (len (append (cons _t_13 _t_14) _v_12))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((even (len (append _v_12 (cons _t_13 _t_14))))=(even (len (append (cons _t_13 _t_14) _v_12))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_2 _qv_3)=(append _qv_3 _qv_2)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((even (len (append _v_12 (cons _t_13 _t_14))))=(even (len (append (cons _t_13 _t_14) _v_12))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_4 _qv_5) _qv_6)=(append _qv_4 (append _qv_5 _qv_6))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((even (len (append _v_12 (cons _t_13 _t_14))))=(even (len (append (cons _t_13 _t_14) _v_12))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_7))=(nat-to-int _qv_7)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((even (len (append _v_12 (cons _t_13 _t_14))))=(even (len (append (cons _t_13 _t_14) _v_12))))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_8))=(nat-to-int _qv_8)))
USE ASSUMPTION FAILED

  backtrack to: ((even (len (append _v_12 (cons _t_13 _t_14))))=(even (len (append (cons _t_13 _t_14) _v_12))))
Unknown
sat
