
The Knowledge Scheme currently contains the following lemmas:
	(forall ((Lst) (Lst)) ((append _qv_0 _qv_1)=(append _qv_1 _qv_0)))
	(forall ((Lst) (Lst) (Lst)) ((append (append _qv_2 _qv_3) _qv_4)=(append _qv_2 (append _qv_3 _qv_4))))
	(forall ((Lst)) ((butlast (butlast _qv_5))=_qv_5))
	(forall ((Lst) (Lst)) ((butlast (append _qv_6 _qv_7))=(append (butlast _qv_6) (butlast _qv_7))))
	(forall ((Lst) (Lst)) ((butlast (append _qv_6 _qv_7))=(append (butlast _qv_7) (butlast _qv_6))))

Simplified goal: (forall ((Lst)) ((!(xs=nil))->((butlast (append xs (cons (last xs) nil)))=xs)))


Base case:       ((butlast (append nil (cons (last nil) nil)))=nil)
{
  proven trivially
}
Inductive step:  ((butlast (append (cons _t_8 _t_9) (cons (last (cons _t_8 _t_9)) nil)))=(cons _t_8 _t_9))
{
  proven trivially
}

Proved
unsat
