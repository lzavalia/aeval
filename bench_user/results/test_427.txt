
The Knowledge Scheme currently contains the following lemmas:
	(forall ((Nat) (Nat)) ((minus _qv_0 _qv_1)=(minus _qv_1 _qv_0)))
	(forall ((Nat) (Nat) (Nat)) ((minus (minus _qv_2 _qv_3) _qv_4)=(minus _qv_2 (minus _qv_3 _qv_4))))
	(forall ((Lst)) ((butlast (butlast _qv_5))=_qv_5))

Simplified goal: (forall ((Lst)) ((len (butlast xs))=(minus (len xs) (succ zero))))


Base case:       ((len (butlast nil))=(minus (len nil) (succ zero)))
{
  proven trivially
}
Inductive step:  ((len (butlast (cons _t_6 _t_7)))=(minus (len (cons _t_6 _t_7)) (succ (len nil))))
{
  {
    ====================
    | Assumptions [0]: ((butlast nil)=nil)
    | Assumptions [1]: (forall ((Nat) (Nat)) ((minus (succ _qv_3) (succ _qv_4))=(minus _qv_3 _qv_4)))
    | Assumptions [2]: (forall ((Nat) (Lst)) ((len (cons _qv_5 _qv_6))=(succ (len _qv_6))))
    | Assumptions [3]: (forall ((Nat) (Lst)) ((last (cons _qv_7 _qv_8))=ite(_qv_8=nil, _qv_7, (last _qv_8))))
    | Assumptions [4]: (forall ((Nat) (Lst)) ((butlast (cons _qv_9 _qv_10))=ite(_qv_10=nil, nil, (cons _qv_9 (butlast _qv_10)))))
    | Assumptions [5]: (forall ((Nat)) ((minus (len nil) _qv_1)=(len nil)))
    | Assumptions [6]: (forall ((Nat)) ((minus _qv_2 (len nil))=_qv_2))
    | Assumptions [7]: ((len (butlast _t_7))=(minus (len _t_7) (succ (len nil))))
    | Assumptions [8]: ((minus (len _t_7) (succ (len nil)))=(len (butlast _t_7)))
    ====================
  }
  rewritten [2]: ((len (butlast (cons _t_6 _t_7)))=(minus (succ (len _t_7)) (succ (len nil))))
  rewritten [1]: ((len (butlast (cons _t_6 _t_7)))=(minus (len _t_7) (len nil)))
  rewritten [4]: ((len ite(_t_7=nil, nil, (cons _t_6 (butlast _t_7))))=(minus (len _t_7) (len nil)))
  proceed with (part 1/2): ((_t_7=nil)->((len nil)=(minus (len _t_7) (len nil))))
  {
      proven trivially (with Z3)
  }
  adding ((_t_7=nil)->((len nil)=(minus (len _t_7) (len nil)))) to assumptions
  proceed with (part 2/2): ((_t_7!=nil)->((len (cons _t_6 (butlast _t_7)))=(minus (len _t_7) (len nil))))
  {
    {
      ====================
      | Assumptions [0]: ((butlast nil)=nil)
      | Assumptions [1]: (forall ((Nat) (Nat)) ((minus (succ _qv_3) (succ _qv_4))=(minus _qv_3 _qv_4)))
      | Assumptions [2]: (forall ((Nat) (Lst)) ((len (cons _qv_5 _qv_6))=(succ (len _qv_6))))
      | Assumptions [3]: (forall ((Nat) (Lst)) ((last (cons _qv_7 _qv_8))=ite(_qv_8=nil, _qv_7, (last _qv_8))))
      | Assumptions [4]: (forall ((Nat) (Lst)) ((butlast (cons _qv_9 _qv_10))=ite(_qv_10=nil, nil, (cons _qv_9 (butlast _qv_10)))))
      | Assumptions [5]: (forall ((Nat)) ((minus (len nil) _qv_1)=(len nil)))
      | Assumptions [6]: (forall ((Nat)) ((minus _qv_2 (len nil))=_qv_2))
      | Assumptions [7]: ((len (butlast _t_7))=(minus (len _t_7) (succ (len nil))))
      | Assumptions [8]: ((minus (len _t_7) (succ (len nil)))=(len (butlast _t_7)))
      | Assumptions [9]: ((_t_7=nil)->((len nil)=(minus (len _t_7) (len nil))))
      | Assumptions [10]: (_t_7!=nil)
      ====================
    }
    current subgoal: ((len (cons _t_6 (butlast _t_7)))=(minus (len _t_7) (len nil)))
    rewritten [2]: ((succ (len (butlast _t_7)))=(minus (len _t_7) (len nil)))
    rewritten [6]: ((succ (len (butlast _t_7)))=(len _t_7))
    rewritten [7]: ((succ (minus (len _t_7) (succ (len nil))))=(len _t_7))

The Knowledge Scheme currently contains the following lemmas:
	(forall ((Nat) (Nat)) ((minus _qv_9 _qv_10)=(minus _qv_10 _qv_9)))
	(forall ((Nat) (Nat) (Nat)) ((minus (minus _qv_11 _qv_12) _qv_13)=(minus _qv_11 (minus _qv_12 _qv_13))))
	(forall ((Lst)) ((butlast (butlast _qv_14))=_qv_14))

