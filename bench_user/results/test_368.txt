
The Knowledge Scheme currently contains the following lemmas:
	(forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
	(forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
	(forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
	(forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
	(forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
	(forall ((Nat) (Nat)) ((succ (plus _qv_11 _qv_12))=(plus (succ _qv_11) (succ _qv_12))))
	(forall ((Nat) (Nat)) ((succ (plus _qv_11 _qv_12))=(plus (succ _qv_12) (succ _qv_11))))

Simplified goal: (forall ((Lst) (Lst)) ((rotate (len x) (append x y))=(append y x)))


Base case:       ((rotate (len nil) (append nil _v_13))=(append _v_13 nil))
{
  {
    ====================
    | Assumptions [0]: (forall ((Nat) (Lst)) ((len (cons _qv_1 _qv_2))=(succ (len _qv_2))))
    | Assumptions [1]: (forall ((Lst)) ((append nil _qv_3)=_qv_3))
    | Assumptions [2]: (forall ((Nat) (Lst) (Lst)) ((append (cons _qv_4 _qv_5) _qv_6)=(cons _qv_4 (append _qv_5 _qv_6))))
    | Assumptions [3]: (forall ((Nat)) ((rotate (succ _qv_8) nil)=nil))
    | Assumptions [4]: (forall ((Nat) (Nat) (Lst)) ((rotate (succ _qv_9) (cons _qv_10 _qv_11))=(rotate _qv_9 (append _qv_11 (cons _qv_10 nil)))))
    | Assumptions [5]: (forall ((Nat) (Nat)) ((plus (succ _qv_13) _qv_14)=(succ (plus _qv_13 _qv_14))))
    | Assumptions [6]: (forall ((Lst)) ((rotate (len nil) _qv_7)=_qv_7))
    | Assumptions [7]: (forall ((Nat)) ((plus (len nil) _qv_12)=_qv_12))
    ====================
  }
  rewritten [1]: ((rotate (len nil) _v_13)=(append _v_13 nil))
  rewritten [6]: (_v_13=(append _v_13 nil))

The Knowledge Scheme currently contains the following lemmas:
	(forall ((Nat)) ((succ (succ _qv_14))=_qv_14))
	(forall ((Lst) (Lst)) ((append _qv_15 _qv_16)=(append _qv_16 _qv_15)))
	(forall ((Lst) (Lst) (Lst)) ((append (append _qv_17 _qv_18) _qv_19)=(append _qv_17 (append _qv_18 _qv_19))))
	(forall ((Nat) (Nat)) ((plus _qv_20 _qv_21)=(plus _qv_21 _qv_20)))
	(forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_22 _qv_23) _qv_24)=(plus _qv_22 (plus _qv_23 _qv_24))))
	(forall ((Nat) (Nat)) ((succ (plus _qv_25 _qv_26))=(plus (succ _qv_25) (succ _qv_26))))
	(forall ((Nat) (Nat)) ((succ (plus _qv_25 _qv_26))=(plus (succ _qv_26) (succ _qv_25))))

  proven by induction: (_v_13=(append _v_13 nil))
  rewriting done
}
Inductive step:  ((rotate (len (cons _t_14 _t_15)) (append (cons _t_14 _t_15) _v_13))=(append _v_13 (cons _t_14 _t_15)))
{
  {
    ====================
    | Assumptions [0]: (forall ((Nat) (Lst)) ((len (cons _qv_1 _qv_2))=(succ (len _qv_2))))
    | Assumptions [1]: (forall ((Lst)) ((append nil _qv_3)=_qv_3))
    | Assumptions [2]: (forall ((Nat) (Lst) (Lst)) ((append (cons _qv_4 _qv_5) _qv_6)=(cons _qv_4 (append _qv_5 _qv_6))))
    | Assumptions [3]: (forall ((Nat)) ((rotate (succ _qv_8) nil)=nil))
    | Assumptions [4]: (forall ((Nat) (Nat) (Lst)) ((rotate (succ _qv_9) (cons _qv_10 _qv_11))=(rotate _qv_9 (append _qv_11 (cons _qv_10 nil)))))
    | Assumptions [5]: (forall ((Nat) (Nat)) ((plus (succ _qv_13) _qv_14)=(succ (plus _qv_13 _qv_14))))
    | Assumptions [6]: (forall ((Lst)) ((rotate (len _t_15) (append _t_15 y))=(append y _t_15)))
    | Assumptions [7]: (forall ((Lst)) ((append y _t_15)=(rotate (len _t_15) (append _t_15 y))))
    | Assumptions [8]: (forall ((Lst)) ((rotate (len nil) _qv_7)=_qv_7))
    | Assumptions [9]: (forall ((Nat)) ((plus (len nil) _qv_12)=_qv_12))
    ====================
  }
  rewritten [0]: ((rotate (succ (len _t_15)) (append (cons _t_14 _t_15) _v_13))=(append _v_13 (cons _t_14 _t_15)))
  rewritten [2]: ((rotate (succ (len _t_15)) (cons _t_14 (append _t_15 _v_13)))=(append _v_13 (cons _t_14 _t_15)))
  rewritten [4]: ((rotate (len _t_15) (append (append _t_15 _v_13) (cons _t_14 nil)))=(append _v_13 (cons _t_14 _t_15)))
CURRENT SUBGOAL ((rotate (succ (len _t_15)) (cons _t_14 (append _t_15 _v_13)))=(append _v_13 (cons _t_14 _t_15)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len _t_15)) (cons _t_14 (append _t_15 _v_13)))=(append _v_13 (cons _t_14 _t_15)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len _t_15)) (cons _t_14 (append _t_15 _v_13)))=(append _v_13 (cons _t_14 _t_15)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len _t_15)) (cons _t_14 (append _t_15 _v_13)))=(append _v_13 (cons _t_14 _t_15)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len _t_15)) (cons _t_14 (append _t_15 _v_13)))=(append _v_13 (cons _t_14 _t_15)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len _t_15)) (cons _t_14 (append _t_15 _v_13)))=(append _v_13 (cons _t_14 _t_15)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_11 _qv_12))=(plus (succ _qv_11) (succ _qv_12))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len _t_15)) (cons _t_14 (append _t_15 _v_13)))=(append _v_13 (cons _t_14 _t_15)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_11 _qv_12))=(plus (succ _qv_12) (succ _qv_11))))
USE ASSUMPTION FAILED

  backtrack to: ((rotate (succ (len _t_15)) (cons _t_14 (append _t_15 _v_13)))=(append _v_13 (cons _t_14 _t_15)))
  rewritten [4]: ((rotate (len _t_15) (append (append _t_15 _v_13) (cons _t_14 nil)))=(append _v_13 (cons _t_14 _t_15)))
CURRENT SUBGOAL ((rotate (succ (len _t_15)) (cons _t_14 (append _t_15 _v_13)))=(append _v_13 (cons _t_14 _t_15)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len _t_15)) (cons _t_14 (append _t_15 _v_13)))=(append _v_13 (cons _t_14 _t_15)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len _t_15)) (cons _t_14 (append _t_15 _v_13)))=(append _v_13 (cons _t_14 _t_15)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len _t_15)) (cons _t_14 (append _t_15 _v_13)))=(append _v_13 (cons _t_14 _t_15)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len _t_15)) (cons _t_14 (append _t_15 _v_13)))=(append _v_13 (cons _t_14 _t_15)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len _t_15)) (cons _t_14 (append _t_15 _v_13)))=(append _v_13 (cons _t_14 _t_15)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_11 _qv_12))=(plus (succ _qv_11) (succ _qv_12))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len _t_15)) (cons _t_14 (append _t_15 _v_13)))=(append _v_13 (cons _t_14 _t_15)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_11 _qv_12))=(plus (succ _qv_12) (succ _qv_11))))
USE ASSUMPTION FAILED

  backtrack to: ((rotate (succ (len _t_15)) (cons _t_14 (append _t_15 _v_13)))=(append _v_13 (cons _t_14 _t_15)))
CURRENT SUBGOAL ((rotate (succ (len _t_15)) (append (cons _t_14 _t_15) _v_13))=(append _v_13 (cons _t_14 _t_15)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len _t_15)) (append (cons _t_14 _t_15) _v_13))=(append _v_13 (cons _t_14 _t_15)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len _t_15)) (append (cons _t_14 _t_15) _v_13))=(append _v_13 (cons _t_14 _t_15)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len _t_15)) (append (cons _t_14 _t_15) _v_13))=(append _v_13 (cons _t_14 _t_15)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len _t_15)) (append (cons _t_14 _t_15) _v_13))=(append _v_13 (cons _t_14 _t_15)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len _t_15)) (append (cons _t_14 _t_15) _v_13))=(append _v_13 (cons _t_14 _t_15)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_11 _qv_12))=(plus (succ _qv_11) (succ _qv_12))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len _t_15)) (append (cons _t_14 _t_15) _v_13))=(append _v_13 (cons _t_14 _t_15)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_11 _qv_12))=(plus (succ _qv_12) (succ _qv_11))))
USE ASSUMPTION FAILED

  backtrack to: ((rotate (succ (len _t_15)) (append (cons _t_14 _t_15) _v_13))=(append _v_13 (cons _t_14 _t_15)))
  rewritten [2]: ((rotate (succ (len _t_15)) (cons _t_14 (append _t_15 _v_13)))=(append _v_13 (cons _t_14 _t_15)))
  rewritten [4]: ((rotate (len _t_15) (append (append _t_15 _v_13) (cons _t_14 nil)))=(append _v_13 (cons _t_14 _t_15)))
CURRENT SUBGOAL ((rotate (succ (len _t_15)) (cons _t_14 (append _t_15 _v_13)))=(append _v_13 (cons _t_14 _t_15)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len _t_15)) (cons _t_14 (append _t_15 _v_13)))=(append _v_13 (cons _t_14 _t_15)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len _t_15)) (cons _t_14 (append _t_15 _v_13)))=(append _v_13 (cons _t_14 _t_15)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len _t_15)) (cons _t_14 (append _t_15 _v_13)))=(append _v_13 (cons _t_14 _t_15)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len _t_15)) (cons _t_14 (append _t_15 _v_13)))=(append _v_13 (cons _t_14 _t_15)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len _t_15)) (cons _t_14 (append _t_15 _v_13)))=(append _v_13 (cons _t_14 _t_15)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_11 _qv_12))=(plus (succ _qv_11) (succ _qv_12))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len _t_15)) (cons _t_14 (append _t_15 _v_13)))=(append _v_13 (cons _t_14 _t_15)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_11 _qv_12))=(plus (succ _qv_12) (succ _qv_11))))
USE ASSUMPTION FAILED

  backtrack to: ((rotate (succ (len _t_15)) (cons _t_14 (append _t_15 _v_13)))=(append _v_13 (cons _t_14 _t_15)))
  rewritten [4]: ((rotate (len _t_15) (append (append _t_15 _v_13) (cons _t_14 nil)))=(append _v_13 (cons _t_14 _t_15)))
CURRENT SUBGOAL ((rotate (succ (len _t_15)) (cons _t_14 (append _t_15 _v_13)))=(append _v_13 (cons _t_14 _t_15)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len _t_15)) (cons _t_14 (append _t_15 _v_13)))=(append _v_13 (cons _t_14 _t_15)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len _t_15)) (cons _t_14 (append _t_15 _v_13)))=(append _v_13 (cons _t_14 _t_15)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len _t_15)) (cons _t_14 (append _t_15 _v_13)))=(append _v_13 (cons _t_14 _t_15)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len _t_15)) (cons _t_14 (append _t_15 _v_13)))=(append _v_13 (cons _t_14 _t_15)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len _t_15)) (cons _t_14 (append _t_15 _v_13)))=(append _v_13 (cons _t_14 _t_15)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_11 _qv_12))=(plus (succ _qv_11) (succ _qv_12))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len _t_15)) (cons _t_14 (append _t_15 _v_13)))=(append _v_13 (cons _t_14 _t_15)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_11 _qv_12))=(plus (succ _qv_12) (succ _qv_11))))
USE ASSUMPTION FAILED

  backtrack to: ((rotate (succ (len _t_15)) (cons _t_14 (append _t_15 _v_13)))=(append _v_13 (cons _t_14 _t_15)))
CURRENT SUBGOAL ((rotate (succ (len _t_15)) (append (cons _t_14 _t_15) _v_13))=(append _v_13 (cons _t_14 _t_15)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len _t_15)) (append (cons _t_14 _t_15) _v_13))=(append _v_13 (cons _t_14 _t_15)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len _t_15)) (append (cons _t_14 _t_15) _v_13))=(append _v_13 (cons _t_14 _t_15)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len _t_15)) (append (cons _t_14 _t_15) _v_13))=(append _v_13 (cons _t_14 _t_15)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len _t_15)) (append (cons _t_14 _t_15) _v_13))=(append _v_13 (cons _t_14 _t_15)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len _t_15)) (append (cons _t_14 _t_15) _v_13))=(append _v_13 (cons _t_14 _t_15)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_11 _qv_12))=(plus (succ _qv_11) (succ _qv_12))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len _t_15)) (append (cons _t_14 _t_15) _v_13))=(append _v_13 (cons _t_14 _t_15)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_11 _qv_12))=(plus (succ _qv_12) (succ _qv_11))))
USE ASSUMPTION FAILED

  backtrack to: ((rotate (succ (len _t_15)) (append (cons _t_14 _t_15) _v_13))=(append _v_13 (cons _t_14 _t_15)))
CURRENT SUBGOAL ((rotate (len (cons _t_14 _t_15)) (append (cons _t_14 _t_15) _v_13))=(append _v_13 (cons _t_14 _t_15)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (cons _t_14 _t_15)) (append (cons _t_14 _t_15) _v_13))=(append _v_13 (cons _t_14 _t_15)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (cons _t_14 _t_15)) (append (cons _t_14 _t_15) _v_13))=(append _v_13 (cons _t_14 _t_15)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (cons _t_14 _t_15)) (append (cons _t_14 _t_15) _v_13))=(append _v_13 (cons _t_14 _t_15)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (cons _t_14 _t_15)) (append (cons _t_14 _t_15) _v_13))=(append _v_13 (cons _t_14 _t_15)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (cons _t_14 _t_15)) (append (cons _t_14 _t_15) _v_13))=(append _v_13 (cons _t_14 _t_15)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_11 _qv_12))=(plus (succ _qv_11) (succ _qv_12))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (cons _t_14 _t_15)) (append (cons _t_14 _t_15) _v_13))=(append _v_13 (cons _t_14 _t_15)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_11 _qv_12))=(plus (succ _qv_12) (succ _qv_11))))
USE ASSUMPTION FAILED

  backtrack to: ((rotate (len (cons _t_14 _t_15)) (append (cons _t_14 _t_15) _v_13))=(append _v_13 (cons _t_14 _t_15)))
  rewritten [2]: ((rotate (len (cons _t_14 _t_15)) (cons _t_14 (append _t_15 _v_13)))=(append _v_13 (cons _t_14 _t_15)))
  rewritten [0]: ((rotate (succ (len _t_15)) (cons _t_14 (append _t_15 _v_13)))=(append _v_13 (cons _t_14 _t_15)))
  rewritten [4]: ((rotate (len _t_15) (append (append _t_15 _v_13) (cons _t_14 nil)))=(append _v_13 (cons _t_14 _t_15)))
CURRENT SUBGOAL ((rotate (succ (len _t_15)) (cons _t_14 (append _t_15 _v_13)))=(append _v_13 (cons _t_14 _t_15)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len _t_15)) (cons _t_14 (append _t_15 _v_13)))=(append _v_13 (cons _t_14 _t_15)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len _t_15)) (cons _t_14 (append _t_15 _v_13)))=(append _v_13 (cons _t_14 _t_15)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len _t_15)) (cons _t_14 (append _t_15 _v_13)))=(append _v_13 (cons _t_14 _t_15)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len _t_15)) (cons _t_14 (append _t_15 _v_13)))=(append _v_13 (cons _t_14 _t_15)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len _t_15)) (cons _t_14 (append _t_15 _v_13)))=(append _v_13 (cons _t_14 _t_15)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_11 _qv_12))=(plus (succ _qv_11) (succ _qv_12))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len _t_15)) (cons _t_14 (append _t_15 _v_13)))=(append _v_13 (cons _t_14 _t_15)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_11 _qv_12))=(plus (succ _qv_12) (succ _qv_11))))
USE ASSUMPTION FAILED

  backtrack to: ((rotate (succ (len _t_15)) (cons _t_14 (append _t_15 _v_13)))=(append _v_13 (cons _t_14 _t_15)))
  rewritten [4]: ((rotate (len _t_15) (append (append _t_15 _v_13) (cons _t_14 nil)))=(append _v_13 (cons _t_14 _t_15)))
CURRENT SUBGOAL ((rotate (succ (len _t_15)) (cons _t_14 (append _t_15 _v_13)))=(append _v_13 (cons _t_14 _t_15)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len _t_15)) (cons _t_14 (append _t_15 _v_13)))=(append _v_13 (cons _t_14 _t_15)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len _t_15)) (cons _t_14 (append _t_15 _v_13)))=(append _v_13 (cons _t_14 _t_15)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len _t_15)) (cons _t_14 (append _t_15 _v_13)))=(append _v_13 (cons _t_14 _t_15)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len _t_15)) (cons _t_14 (append _t_15 _v_13)))=(append _v_13 (cons _t_14 _t_15)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len _t_15)) (cons _t_14 (append _t_15 _v_13)))=(append _v_13 (cons _t_14 _t_15)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_11 _qv_12))=(plus (succ _qv_11) (succ _qv_12))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len _t_15)) (cons _t_14 (append _t_15 _v_13)))=(append _v_13 (cons _t_14 _t_15)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_11 _qv_12))=(plus (succ _qv_12) (succ _qv_11))))
USE ASSUMPTION FAILED

  backtrack to: ((rotate (succ (len _t_15)) (cons _t_14 (append _t_15 _v_13)))=(append _v_13 (cons _t_14 _t_15)))
CURRENT SUBGOAL ((rotate (len (cons _t_14 _t_15)) (cons _t_14 (append _t_15 _v_13)))=(append _v_13 (cons _t_14 _t_15)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (cons _t_14 _t_15)) (cons _t_14 (append _t_15 _v_13)))=(append _v_13 (cons _t_14 _t_15)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (cons _t_14 _t_15)) (cons _t_14 (append _t_15 _v_13)))=(append _v_13 (cons _t_14 _t_15)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (cons _t_14 _t_15)) (cons _t_14 (append _t_15 _v_13)))=(append _v_13 (cons _t_14 _t_15)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (cons _t_14 _t_15)) (cons _t_14 (append _t_15 _v_13)))=(append _v_13 (cons _t_14 _t_15)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (cons _t_14 _t_15)) (cons _t_14 (append _t_15 _v_13)))=(append _v_13 (cons _t_14 _t_15)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_11 _qv_12))=(plus (succ _qv_11) (succ _qv_12))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (cons _t_14 _t_15)) (cons _t_14 (append _t_15 _v_13)))=(append _v_13 (cons _t_14 _t_15)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_11 _qv_12))=(plus (succ _qv_12) (succ _qv_11))))
USE ASSUMPTION FAILED

  backtrack to: ((rotate (len (cons _t_14 _t_15)) (cons _t_14 (append _t_15 _v_13)))=(append _v_13 (cons _t_14 _t_15)))
  rewritten [0]: ((rotate (succ (len _t_15)) (cons _t_14 (append _t_15 _v_13)))=(append _v_13 (cons _t_14 _t_15)))
  rewritten [4]: ((rotate (len _t_15) (append (append _t_15 _v_13) (cons _t_14 nil)))=(append _v_13 (cons _t_14 _t_15)))
CURRENT SUBGOAL ((rotate (succ (len _t_15)) (cons _t_14 (append _t_15 _v_13)))=(append _v_13 (cons _t_14 _t_15)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len _t_15)) (cons _t_14 (append _t_15 _v_13)))=(append _v_13 (cons _t_14 _t_15)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len _t_15)) (cons _t_14 (append _t_15 _v_13)))=(append _v_13 (cons _t_14 _t_15)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len _t_15)) (cons _t_14 (append _t_15 _v_13)))=(append _v_13 (cons _t_14 _t_15)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len _t_15)) (cons _t_14 (append _t_15 _v_13)))=(append _v_13 (cons _t_14 _t_15)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len _t_15)) (cons _t_14 (append _t_15 _v_13)))=(append _v_13 (cons _t_14 _t_15)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_11 _qv_12))=(plus (succ _qv_11) (succ _qv_12))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len _t_15)) (cons _t_14 (append _t_15 _v_13)))=(append _v_13 (cons _t_14 _t_15)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_11 _qv_12))=(plus (succ _qv_12) (succ _qv_11))))
USE ASSUMPTION FAILED

  backtrack to: ((rotate (succ (len _t_15)) (cons _t_14 (append _t_15 _v_13)))=(append _v_13 (cons _t_14 _t_15)))
  rewritten [4]: ((rotate (len _t_15) (append (append _t_15 _v_13) (cons _t_14 nil)))=(append _v_13 (cons _t_14 _t_15)))
CURRENT SUBGOAL ((rotate (succ (len _t_15)) (cons _t_14 (append _t_15 _v_13)))=(append _v_13 (cons _t_14 _t_15)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len _t_15)) (cons _t_14 (append _t_15 _v_13)))=(append _v_13 (cons _t_14 _t_15)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len _t_15)) (cons _t_14 (append _t_15 _v_13)))=(append _v_13 (cons _t_14 _t_15)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len _t_15)) (cons _t_14 (append _t_15 _v_13)))=(append _v_13 (cons _t_14 _t_15)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len _t_15)) (cons _t_14 (append _t_15 _v_13)))=(append _v_13 (cons _t_14 _t_15)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len _t_15)) (cons _t_14 (append _t_15 _v_13)))=(append _v_13 (cons _t_14 _t_15)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_11 _qv_12))=(plus (succ _qv_11) (succ _qv_12))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len _t_15)) (cons _t_14 (append _t_15 _v_13)))=(append _v_13 (cons _t_14 _t_15)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_11 _qv_12))=(plus (succ _qv_12) (succ _qv_11))))
USE ASSUMPTION FAILED

  backtrack to: ((rotate (succ (len _t_15)) (cons _t_14 (append _t_15 _v_13)))=(append _v_13 (cons _t_14 _t_15)))
CURRENT SUBGOAL ((rotate (len (cons _t_14 _t_15)) (cons _t_14 (append _t_15 _v_13)))=(append _v_13 (cons _t_14 _t_15)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (cons _t_14 _t_15)) (cons _t_14 (append _t_15 _v_13)))=(append _v_13 (cons _t_14 _t_15)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (cons _t_14 _t_15)) (cons _t_14 (append _t_15 _v_13)))=(append _v_13 (cons _t_14 _t_15)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (cons _t_14 _t_15)) (cons _t_14 (append _t_15 _v_13)))=(append _v_13 (cons _t_14 _t_15)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (cons _t_14 _t_15)) (cons _t_14 (append _t_15 _v_13)))=(append _v_13 (cons _t_14 _t_15)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (cons _t_14 _t_15)) (cons _t_14 (append _t_15 _v_13)))=(append _v_13 (cons _t_14 _t_15)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_11 _qv_12))=(plus (succ _qv_11) (succ _qv_12))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (cons _t_14 _t_15)) (cons _t_14 (append _t_15 _v_13)))=(append _v_13 (cons _t_14 _t_15)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_11 _qv_12))=(plus (succ _qv_12) (succ _qv_11))))
USE ASSUMPTION FAILED

  backtrack to: ((rotate (len (cons _t_14 _t_15)) (cons _t_14 (append _t_15 _v_13)))=(append _v_13 (cons _t_14 _t_15)))
CURRENT SUBGOAL ((rotate (len (cons _t_14 _t_15)) (append (cons _t_14 _t_15) _v_13))=(append _v_13 (cons _t_14 _t_15)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (cons _t_14 _t_15)) (append (cons _t_14 _t_15) _v_13))=(append _v_13 (cons _t_14 _t_15)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (cons _t_14 _t_15)) (append (cons _t_14 _t_15) _v_13))=(append _v_13 (cons _t_14 _t_15)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (cons _t_14 _t_15)) (append (cons _t_14 _t_15) _v_13))=(append _v_13 (cons _t_14 _t_15)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (cons _t_14 _t_15)) (append (cons _t_14 _t_15) _v_13))=(append _v_13 (cons _t_14 _t_15)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (cons _t_14 _t_15)) (append (cons _t_14 _t_15) _v_13))=(append _v_13 (cons _t_14 _t_15)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_11 _qv_12))=(plus (succ _qv_11) (succ _qv_12))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (cons _t_14 _t_15)) (append (cons _t_14 _t_15) _v_13))=(append _v_13 (cons _t_14 _t_15)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_11 _qv_12))=(plus (succ _qv_12) (succ _qv_11))))
USE ASSUMPTION FAILED

  backtrack to: ((rotate (len (cons _t_14 _t_15)) (append (cons _t_14 _t_15) _v_13))=(append _v_13 (cons _t_14 _t_15)))
  rewritten [0]: ((rotate (succ (len _t_15)) (append (cons _t_14 _t_15) _v_13))=(append _v_13 (cons _t_14 _t_15)))
  rewritten [2]: ((rotate (succ (len _t_15)) (cons _t_14 (append _t_15 _v_13)))=(append _v_13 (cons _t_14 _t_15)))
  rewritten [4]: ((rotate (len _t_15) (append (append _t_15 _v_13) (cons _t_14 nil)))=(append _v_13 (cons _t_14 _t_15)))
CURRENT SUBGOAL ((rotate (succ (len _t_15)) (cons _t_14 (append _t_15 _v_13)))=(append _v_13 (cons _t_14 _t_15)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len _t_15)) (cons _t_14 (append _t_15 _v_13)))=(append _v_13 (cons _t_14 _t_15)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len _t_15)) (cons _t_14 (append _t_15 _v_13)))=(append _v_13 (cons _t_14 _t_15)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len _t_15)) (cons _t_14 (append _t_15 _v_13)))=(append _v_13 (cons _t_14 _t_15)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len _t_15)) (cons _t_14 (append _t_15 _v_13)))=(append _v_13 (cons _t_14 _t_15)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len _t_15)) (cons _t_14 (append _t_15 _v_13)))=(append _v_13 (cons _t_14 _t_15)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_11 _qv_12))=(plus (succ _qv_11) (succ _qv_12))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len _t_15)) (cons _t_14 (append _t_15 _v_13)))=(append _v_13 (cons _t_14 _t_15)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_11 _qv_12))=(plus (succ _qv_12) (succ _qv_11))))
USE ASSUMPTION FAILED

  backtrack to: ((rotate (succ (len _t_15)) (cons _t_14 (append _t_15 _v_13)))=(append _v_13 (cons _t_14 _t_15)))
  rewritten [4]: ((rotate (len _t_15) (append (append _t_15 _v_13) (cons _t_14 nil)))=(append _v_13 (cons _t_14 _t_15)))
CURRENT SUBGOAL ((rotate (succ (len _t_15)) (cons _t_14 (append _t_15 _v_13)))=(append _v_13 (cons _t_14 _t_15)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len _t_15)) (cons _t_14 (append _t_15 _v_13)))=(append _v_13 (cons _t_14 _t_15)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len _t_15)) (cons _t_14 (append _t_15 _v_13)))=(append _v_13 (cons _t_14 _t_15)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len _t_15)) (cons _t_14 (append _t_15 _v_13)))=(append _v_13 (cons _t_14 _t_15)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len _t_15)) (cons _t_14 (append _t_15 _v_13)))=(append _v_13 (cons _t_14 _t_15)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len _t_15)) (cons _t_14 (append _t_15 _v_13)))=(append _v_13 (cons _t_14 _t_15)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_11 _qv_12))=(plus (succ _qv_11) (succ _qv_12))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len _t_15)) (cons _t_14 (append _t_15 _v_13)))=(append _v_13 (cons _t_14 _t_15)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_11 _qv_12))=(plus (succ _qv_12) (succ _qv_11))))
USE ASSUMPTION FAILED

  backtrack to: ((rotate (succ (len _t_15)) (cons _t_14 (append _t_15 _v_13)))=(append _v_13 (cons _t_14 _t_15)))
CURRENT SUBGOAL ((rotate (succ (len _t_15)) (append (cons _t_14 _t_15) _v_13))=(append _v_13 (cons _t_14 _t_15)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len _t_15)) (append (cons _t_14 _t_15) _v_13))=(append _v_13 (cons _t_14 _t_15)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len _t_15)) (append (cons _t_14 _t_15) _v_13))=(append _v_13 (cons _t_14 _t_15)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len _t_15)) (append (cons _t_14 _t_15) _v_13))=(append _v_13 (cons _t_14 _t_15)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len _t_15)) (append (cons _t_14 _t_15) _v_13))=(append _v_13 (cons _t_14 _t_15)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len _t_15)) (append (cons _t_14 _t_15) _v_13))=(append _v_13 (cons _t_14 _t_15)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_11 _qv_12))=(plus (succ _qv_11) (succ _qv_12))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len _t_15)) (append (cons _t_14 _t_15) _v_13))=(append _v_13 (cons _t_14 _t_15)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_11 _qv_12))=(plus (succ _qv_12) (succ _qv_11))))
USE ASSUMPTION FAILED

  backtrack to: ((rotate (succ (len _t_15)) (append (cons _t_14 _t_15) _v_13))=(append _v_13 (cons _t_14 _t_15)))
  rewritten [2]: ((rotate (succ (len _t_15)) (cons _t_14 (append _t_15 _v_13)))=(append _v_13 (cons _t_14 _t_15)))
  rewritten [4]: ((rotate (len _t_15) (append (append _t_15 _v_13) (cons _t_14 nil)))=(append _v_13 (cons _t_14 _t_15)))
CURRENT SUBGOAL ((rotate (succ (len _t_15)) (cons _t_14 (append _t_15 _v_13)))=(append _v_13 (cons _t_14 _t_15)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len _t_15)) (cons _t_14 (append _t_15 _v_13)))=(append _v_13 (cons _t_14 _t_15)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len _t_15)) (cons _t_14 (append _t_15 _v_13)))=(append _v_13 (cons _t_14 _t_15)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len _t_15)) (cons _t_14 (append _t_15 _v_13)))=(append _v_13 (cons _t_14 _t_15)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len _t_15)) (cons _t_14 (append _t_15 _v_13)))=(append _v_13 (cons _t_14 _t_15)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len _t_15)) (cons _t_14 (append _t_15 _v_13)))=(append _v_13 (cons _t_14 _t_15)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_11 _qv_12))=(plus (succ _qv_11) (succ _qv_12))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len _t_15)) (cons _t_14 (append _t_15 _v_13)))=(append _v_13 (cons _t_14 _t_15)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_11 _qv_12))=(plus (succ _qv_12) (succ _qv_11))))
USE ASSUMPTION FAILED

  backtrack to: ((rotate (succ (len _t_15)) (cons _t_14 (append _t_15 _v_13)))=(append _v_13 (cons _t_14 _t_15)))
  rewritten [4]: ((rotate (len _t_15) (append (append _t_15 _v_13) (cons _t_14 nil)))=(append _v_13 (cons _t_14 _t_15)))
CURRENT SUBGOAL ((rotate (succ (len _t_15)) (cons _t_14 (append _t_15 _v_13)))=(append _v_13 (cons _t_14 _t_15)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len _t_15)) (cons _t_14 (append _t_15 _v_13)))=(append _v_13 (cons _t_14 _t_15)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len _t_15)) (cons _t_14 (append _t_15 _v_13)))=(append _v_13 (cons _t_14 _t_15)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len _t_15)) (cons _t_14 (append _t_15 _v_13)))=(append _v_13 (cons _t_14 _t_15)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len _t_15)) (cons _t_14 (append _t_15 _v_13)))=(append _v_13 (cons _t_14 _t_15)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len _t_15)) (cons _t_14 (append _t_15 _v_13)))=(append _v_13 (cons _t_14 _t_15)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_11 _qv_12))=(plus (succ _qv_11) (succ _qv_12))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len _t_15)) (cons _t_14 (append _t_15 _v_13)))=(append _v_13 (cons _t_14 _t_15)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_11 _qv_12))=(plus (succ _qv_12) (succ _qv_11))))
USE ASSUMPTION FAILED

  backtrack to: ((rotate (succ (len _t_15)) (cons _t_14 (append _t_15 _v_13)))=(append _v_13 (cons _t_14 _t_15)))
CURRENT SUBGOAL ((rotate (succ (len _t_15)) (append (cons _t_14 _t_15) _v_13))=(append _v_13 (cons _t_14 _t_15)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len _t_15)) (append (cons _t_14 _t_15) _v_13))=(append _v_13 (cons _t_14 _t_15)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len _t_15)) (append (cons _t_14 _t_15) _v_13))=(append _v_13 (cons _t_14 _t_15)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len _t_15)) (append (cons _t_14 _t_15) _v_13))=(append _v_13 (cons _t_14 _t_15)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len _t_15)) (append (cons _t_14 _t_15) _v_13))=(append _v_13 (cons _t_14 _t_15)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len _t_15)) (append (cons _t_14 _t_15) _v_13))=(append _v_13 (cons _t_14 _t_15)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_11 _qv_12))=(plus (succ _qv_11) (succ _qv_12))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len _t_15)) (append (cons _t_14 _t_15) _v_13))=(append _v_13 (cons _t_14 _t_15)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_11 _qv_12))=(plus (succ _qv_12) (succ _qv_11))))
USE ASSUMPTION FAILED

  backtrack to: ((rotate (succ (len _t_15)) (append (cons _t_14 _t_15) _v_13))=(append _v_13 (cons _t_14 _t_15)))
CURRENT SUBGOAL ((rotate (len (cons _t_14 _t_15)) (append (cons _t_14 _t_15) _v_13))=(append _v_13 (cons _t_14 _t_15)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (cons _t_14 _t_15)) (append (cons _t_14 _t_15) _v_13))=(append _v_13 (cons _t_14 _t_15)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (cons _t_14 _t_15)) (append (cons _t_14 _t_15) _v_13))=(append _v_13 (cons _t_14 _t_15)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (cons _t_14 _t_15)) (append (cons _t_14 _t_15) _v_13))=(append _v_13 (cons _t_14 _t_15)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (cons _t_14 _t_15)) (append (cons _t_14 _t_15) _v_13))=(append _v_13 (cons _t_14 _t_15)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (cons _t_14 _t_15)) (append (cons _t_14 _t_15) _v_13))=(append _v_13 (cons _t_14 _t_15)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_11 _qv_12))=(plus (succ _qv_11) (succ _qv_12))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (cons _t_14 _t_15)) (append (cons _t_14 _t_15) _v_13))=(append _v_13 (cons _t_14 _t_15)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_11 _qv_12))=(plus (succ _qv_12) (succ _qv_11))))
USE ASSUMPTION FAILED

  backtrack to: ((rotate (len (cons _t_14 _t_15)) (append (cons _t_14 _t_15) _v_13))=(append _v_13 (cons _t_14 _t_15)))
  rewritten [2]: ((rotate (len (cons _t_14 _t_15)) (cons _t_14 (append _t_15 _v_13)))=(append _v_13 (cons _t_14 _t_15)))
  rewritten [0]: ((rotate (succ (len _t_15)) (cons _t_14 (append _t_15 _v_13)))=(append _v_13 (cons _t_14 _t_15)))
  rewritten [4]: ((rotate (len _t_15) (append (append _t_15 _v_13) (cons _t_14 nil)))=(append _v_13 (cons _t_14 _t_15)))
CURRENT SUBGOAL ((rotate (succ (len _t_15)) (cons _t_14 (append _t_15 _v_13)))=(append _v_13 (cons _t_14 _t_15)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len _t_15)) (cons _t_14 (append _t_15 _v_13)))=(append _v_13 (cons _t_14 _t_15)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len _t_15)) (cons _t_14 (append _t_15 _v_13)))=(append _v_13 (cons _t_14 _t_15)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len _t_15)) (cons _t_14 (append _t_15 _v_13)))=(append _v_13 (cons _t_14 _t_15)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len _t_15)) (cons _t_14 (append _t_15 _v_13)))=(append _v_13 (cons _t_14 _t_15)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len _t_15)) (cons _t_14 (append _t_15 _v_13)))=(append _v_13 (cons _t_14 _t_15)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_11 _qv_12))=(plus (succ _qv_11) (succ _qv_12))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len _t_15)) (cons _t_14 (append _t_15 _v_13)))=(append _v_13 (cons _t_14 _t_15)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_11 _qv_12))=(plus (succ _qv_12) (succ _qv_11))))
USE ASSUMPTION FAILED

  backtrack to: ((rotate (succ (len _t_15)) (cons _t_14 (append _t_15 _v_13)))=(append _v_13 (cons _t_14 _t_15)))
  rewritten [4]: ((rotate (len _t_15) (append (append _t_15 _v_13) (cons _t_14 nil)))=(append _v_13 (cons _t_14 _t_15)))
CURRENT SUBGOAL ((rotate (succ (len _t_15)) (cons _t_14 (append _t_15 _v_13)))=(append _v_13 (cons _t_14 _t_15)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len _t_15)) (cons _t_14 (append _t_15 _v_13)))=(append _v_13 (cons _t_14 _t_15)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len _t_15)) (cons _t_14 (append _t_15 _v_13)))=(append _v_13 (cons _t_14 _t_15)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len _t_15)) (cons _t_14 (append _t_15 _v_13)))=(append _v_13 (cons _t_14 _t_15)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len _t_15)) (cons _t_14 (append _t_15 _v_13)))=(append _v_13 (cons _t_14 _t_15)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len _t_15)) (cons _t_14 (append _t_15 _v_13)))=(append _v_13 (cons _t_14 _t_15)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_11 _qv_12))=(plus (succ _qv_11) (succ _qv_12))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len _t_15)) (cons _t_14 (append _t_15 _v_13)))=(append _v_13 (cons _t_14 _t_15)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_11 _qv_12))=(plus (succ _qv_12) (succ _qv_11))))
USE ASSUMPTION FAILED

  backtrack to: ((rotate (succ (len _t_15)) (cons _t_14 (append _t_15 _v_13)))=(append _v_13 (cons _t_14 _t_15)))
CURRENT SUBGOAL ((rotate (len (cons _t_14 _t_15)) (cons _t_14 (append _t_15 _v_13)))=(append _v_13 (cons _t_14 _t_15)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (cons _t_14 _t_15)) (cons _t_14 (append _t_15 _v_13)))=(append _v_13 (cons _t_14 _t_15)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (cons _t_14 _t_15)) (cons _t_14 (append _t_15 _v_13)))=(append _v_13 (cons _t_14 _t_15)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (cons _t_14 _t_15)) (cons _t_14 (append _t_15 _v_13)))=(append _v_13 (cons _t_14 _t_15)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (cons _t_14 _t_15)) (cons _t_14 (append _t_15 _v_13)))=(append _v_13 (cons _t_14 _t_15)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (cons _t_14 _t_15)) (cons _t_14 (append _t_15 _v_13)))=(append _v_13 (cons _t_14 _t_15)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_11 _qv_12))=(plus (succ _qv_11) (succ _qv_12))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (cons _t_14 _t_15)) (cons _t_14 (append _t_15 _v_13)))=(append _v_13 (cons _t_14 _t_15)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_11 _qv_12))=(plus (succ _qv_12) (succ _qv_11))))
USE ASSUMPTION FAILED

  backtrack to: ((rotate (len (cons _t_14 _t_15)) (cons _t_14 (append _t_15 _v_13)))=(append _v_13 (cons _t_14 _t_15)))
  rewritten [0]: ((rotate (succ (len _t_15)) (cons _t_14 (append _t_15 _v_13)))=(append _v_13 (cons _t_14 _t_15)))
  rewritten [4]: ((rotate (len _t_15) (append (append _t_15 _v_13) (cons _t_14 nil)))=(append _v_13 (cons _t_14 _t_15)))
CURRENT SUBGOAL ((rotate (succ (len _t_15)) (cons _t_14 (append _t_15 _v_13)))=(append _v_13 (cons _t_14 _t_15)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len _t_15)) (cons _t_14 (append _t_15 _v_13)))=(append _v_13 (cons _t_14 _t_15)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len _t_15)) (cons _t_14 (append _t_15 _v_13)))=(append _v_13 (cons _t_14 _t_15)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len _t_15)) (cons _t_14 (append _t_15 _v_13)))=(append _v_13 (cons _t_14 _t_15)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len _t_15)) (cons _t_14 (append _t_15 _v_13)))=(append _v_13 (cons _t_14 _t_15)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len _t_15)) (cons _t_14 (append _t_15 _v_13)))=(append _v_13 (cons _t_14 _t_15)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_11 _qv_12))=(plus (succ _qv_11) (succ _qv_12))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len _t_15)) (cons _t_14 (append _t_15 _v_13)))=(append _v_13 (cons _t_14 _t_15)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_11 _qv_12))=(plus (succ _qv_12) (succ _qv_11))))
USE ASSUMPTION FAILED

  backtrack to: ((rotate (succ (len _t_15)) (cons _t_14 (append _t_15 _v_13)))=(append _v_13 (cons _t_14 _t_15)))
  rewritten [4]: ((rotate (len _t_15) (append (append _t_15 _v_13) (cons _t_14 nil)))=(append _v_13 (cons _t_14 _t_15)))
CURRENT SUBGOAL ((rotate (succ (len _t_15)) (cons _t_14 (append _t_15 _v_13)))=(append _v_13 (cons _t_14 _t_15)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len _t_15)) (cons _t_14 (append _t_15 _v_13)))=(append _v_13 (cons _t_14 _t_15)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len _t_15)) (cons _t_14 (append _t_15 _v_13)))=(append _v_13 (cons _t_14 _t_15)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len _t_15)) (cons _t_14 (append _t_15 _v_13)))=(append _v_13 (cons _t_14 _t_15)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len _t_15)) (cons _t_14 (append _t_15 _v_13)))=(append _v_13 (cons _t_14 _t_15)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len _t_15)) (cons _t_14 (append _t_15 _v_13)))=(append _v_13 (cons _t_14 _t_15)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_11 _qv_12))=(plus (succ _qv_11) (succ _qv_12))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len _t_15)) (cons _t_14 (append _t_15 _v_13)))=(append _v_13 (cons _t_14 _t_15)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_11 _qv_12))=(plus (succ _qv_12) (succ _qv_11))))
USE ASSUMPTION FAILED

  backtrack to: ((rotate (succ (len _t_15)) (cons _t_14 (append _t_15 _v_13)))=(append _v_13 (cons _t_14 _t_15)))
CURRENT SUBGOAL ((rotate (len (cons _t_14 _t_15)) (cons _t_14 (append _t_15 _v_13)))=(append _v_13 (cons _t_14 _t_15)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (cons _t_14 _t_15)) (cons _t_14 (append _t_15 _v_13)))=(append _v_13 (cons _t_14 _t_15)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (cons _t_14 _t_15)) (cons _t_14 (append _t_15 _v_13)))=(append _v_13 (cons _t_14 _t_15)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (cons _t_14 _t_15)) (cons _t_14 (append _t_15 _v_13)))=(append _v_13 (cons _t_14 _t_15)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (cons _t_14 _t_15)) (cons _t_14 (append _t_15 _v_13)))=(append _v_13 (cons _t_14 _t_15)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (cons _t_14 _t_15)) (cons _t_14 (append _t_15 _v_13)))=(append _v_13 (cons _t_14 _t_15)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_11 _qv_12))=(plus (succ _qv_11) (succ _qv_12))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (cons _t_14 _t_15)) (cons _t_14 (append _t_15 _v_13)))=(append _v_13 (cons _t_14 _t_15)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_11 _qv_12))=(plus (succ _qv_12) (succ _qv_11))))
USE ASSUMPTION FAILED

  backtrack to: ((rotate (len (cons _t_14 _t_15)) (cons _t_14 (append _t_15 _v_13)))=(append _v_13 (cons _t_14 _t_15)))
CURRENT SUBGOAL ((rotate (len (cons _t_14 _t_15)) (append (cons _t_14 _t_15) _v_13))=(append _v_13 (cons _t_14 _t_15)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (cons _t_14 _t_15)) (append (cons _t_14 _t_15) _v_13))=(append _v_13 (cons _t_14 _t_15)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (cons _t_14 _t_15)) (append (cons _t_14 _t_15) _v_13))=(append _v_13 (cons _t_14 _t_15)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (cons _t_14 _t_15)) (append (cons _t_14 _t_15) _v_13))=(append _v_13 (cons _t_14 _t_15)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (cons _t_14 _t_15)) (append (cons _t_14 _t_15) _v_13))=(append _v_13 (cons _t_14 _t_15)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (cons _t_14 _t_15)) (append (cons _t_14 _t_15) _v_13))=(append _v_13 (cons _t_14 _t_15)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_11 _qv_12))=(plus (succ _qv_11) (succ _qv_12))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (cons _t_14 _t_15)) (append (cons _t_14 _t_15) _v_13))=(append _v_13 (cons _t_14 _t_15)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_11 _qv_12))=(plus (succ _qv_12) (succ _qv_11))))
USE ASSUMPTION FAILED

  backtrack to: ((rotate (len (cons _t_14 _t_15)) (append (cons _t_14 _t_15) _v_13))=(append _v_13 (cons _t_14 _t_15)))

Base case:       ((rotate (len _v_20) (append _v_20 nil))=(append nil _v_20))
{
  {
    ====================
    | Assumptions [0]: (forall ((Nat) (Lst)) ((len (cons _qv_1 _qv_2))=(succ (len _qv_2))))
    | Assumptions [1]: (forall ((Lst)) ((append nil _qv_3)=_qv_3))
    | Assumptions [2]: (forall ((Nat) (Lst) (Lst)) ((append (cons _qv_4 _qv_5) _qv_6)=(cons _qv_4 (append _qv_5 _qv_6))))
    | Assumptions [3]: (forall ((Nat)) ((rotate (succ _qv_8) nil)=nil))
    | Assumptions [4]: (forall ((Nat) (Nat) (Lst)) ((rotate (succ _qv_9) (cons _qv_10 _qv_11))=(rotate _qv_9 (append _qv_11 (cons _qv_10 nil)))))
    | Assumptions [5]: (forall ((Nat) (Nat)) ((plus (succ _qv_13) _qv_14)=(succ (plus _qv_13 _qv_14))))
    | Assumptions [6]: (forall ((Lst)) ((rotate (len _t_15) (append _t_15 y))=(append y _t_15)))
    | Assumptions [7]: (forall ((Lst)) ((append y _t_15)=(rotate (len _t_15) (append _t_15 y))))
    | Assumptions [8]: (forall ((Lst)) ((rotate (len nil) _qv_7)=_qv_7))
    | Assumptions [9]: (forall ((Nat)) ((plus (len nil) _qv_12)=_qv_12))
    ====================
  }
  rewritten [1]: ((rotate (len _v_20) (append _v_20 nil))=_v_20)

The Knowledge Scheme currently contains the following lemmas:
	(forall ((Nat)) ((succ (succ _qv_21))=_qv_21))
	(forall ((Lst) (Lst)) ((append _qv_22 _qv_23)=(append _qv_23 _qv_22)))
	(forall ((Lst) (Lst) (Lst)) ((append (append _qv_24 _qv_25) _qv_26)=(append _qv_24 (append _qv_25 _qv_26))))
	(forall ((Nat) (Nat)) ((plus _qv_27 _qv_28)=(plus _qv_28 _qv_27)))
	(forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_29 _qv_30) _qv_31)=(plus _qv_29 (plus _qv_30 _qv_31))))
	(forall ((Nat) (Nat)) ((succ (plus _qv_32 _qv_33))=(plus (succ _qv_32) (succ _qv_33))))
	(forall ((Nat) (Nat)) ((succ (plus _qv_32 _qv_33))=(plus (succ _qv_33) (succ _qv_32))))

CURRENT SUBGOAL ((rotate (succ (len _t_35)) (cons _t_34 (append _t_35 nil)))=(cons _t_34 _t_35))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_21))=_qv_21))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len _t_35)) (cons _t_34 (append _t_35 nil)))=(cons _t_34 _t_35))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_22 _qv_23)=(append _qv_23 _qv_22)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len _t_35)) (cons _t_34 (append _t_35 nil)))=(cons _t_34 _t_35))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_24 _qv_25) _qv_26)=(append _qv_24 (append _qv_25 _qv_26))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len _t_35)) (cons _t_34 (append _t_35 nil)))=(cons _t_34 _t_35))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_27 _qv_28)=(plus _qv_28 _qv_27)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len _t_35)) (cons _t_34 (append _t_35 nil)))=(cons _t_34 _t_35))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_29 _qv_30) _qv_31)=(plus _qv_29 (plus _qv_30 _qv_31))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len _t_35)) (cons _t_34 (append _t_35 nil)))=(cons _t_34 _t_35))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_32 _qv_33))=(plus (succ _qv_32) (succ _qv_33))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len _t_35)) (cons _t_34 (append _t_35 nil)))=(cons _t_34 _t_35))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_32 _qv_33))=(plus (succ _qv_33) (succ _qv_32))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len _t_35)) (cons _t_34 (append _t_35 nil)))=(cons _t_34 _t_35))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_21))=_qv_21))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len _t_35)) (cons _t_34 (append _t_35 nil)))=(cons _t_34 _t_35))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_22 _qv_23)=(append _qv_23 _qv_22)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len _t_35)) (cons _t_34 (append _t_35 nil)))=(cons _t_34 _t_35))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_24 _qv_25) _qv_26)=(append _qv_24 (append _qv_25 _qv_26))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len _t_35)) (cons _t_34 (append _t_35 nil)))=(cons _t_34 _t_35))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_27 _qv_28)=(plus _qv_28 _qv_27)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len _t_35)) (cons _t_34 (append _t_35 nil)))=(cons _t_34 _t_35))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_29 _qv_30) _qv_31)=(plus _qv_29 (plus _qv_30 _qv_31))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len _t_35)) (cons _t_34 (append _t_35 nil)))=(cons _t_34 _t_35))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_32 _qv_33))=(plus (succ _qv_32) (succ _qv_33))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len _t_35)) (cons _t_34 (append _t_35 nil)))=(cons _t_34 _t_35))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_32 _qv_33))=(plus (succ _qv_33) (succ _qv_32))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len _t_35)) (append (cons _t_34 _t_35) nil))=(cons _t_34 _t_35))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_21))=_qv_21))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len _t_35)) (append (cons _t_34 _t_35) nil))=(cons _t_34 _t_35))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_22 _qv_23)=(append _qv_23 _qv_22)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len _t_35)) (append (cons _t_34 _t_35) nil))=(cons _t_34 _t_35))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_24 _qv_25) _qv_26)=(append _qv_24 (append _qv_25 _qv_26))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len _t_35)) (append (cons _t_34 _t_35) nil))=(cons _t_34 _t_35))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_27 _qv_28)=(plus _qv_28 _qv_27)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len _t_35)) (append (cons _t_34 _t_35) nil))=(cons _t_34 _t_35))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_29 _qv_30) _qv_31)=(plus _qv_29 (plus _qv_30 _qv_31))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len _t_35)) (append (cons _t_34 _t_35) nil))=(cons _t_34 _t_35))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_32 _qv_33))=(plus (succ _qv_32) (succ _qv_33))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len _t_35)) (append (cons _t_34 _t_35) nil))=(cons _t_34 _t_35))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_32 _qv_33))=(plus (succ _qv_33) (succ _qv_32))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len _t_35)) (cons _t_34 (append _t_35 nil)))=(cons _t_34 _t_35))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_21))=_qv_21))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len _t_35)) (cons _t_34 (append _t_35 nil)))=(cons _t_34 _t_35))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_22 _qv_23)=(append _qv_23 _qv_22)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len _t_35)) (cons _t_34 (append _t_35 nil)))=(cons _t_34 _t_35))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_24 _qv_25) _qv_26)=(append _qv_24 (append _qv_25 _qv_26))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len _t_35)) (cons _t_34 (append _t_35 nil)))=(cons _t_34 _t_35))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_27 _qv_28)=(plus _qv_28 _qv_27)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len _t_35)) (cons _t_34 (append _t_35 nil)))=(cons _t_34 _t_35))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_29 _qv_30) _qv_31)=(plus _qv_29 (plus _qv_30 _qv_31))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len _t_35)) (cons _t_34 (append _t_35 nil)))=(cons _t_34 _t_35))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_32 _qv_33))=(plus (succ _qv_32) (succ _qv_33))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len _t_35)) (cons _t_34 (append _t_35 nil)))=(cons _t_34 _t_35))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_32 _qv_33))=(plus (succ _qv_33) (succ _qv_32))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len _t_35)) (cons _t_34 (append _t_35 nil)))=(cons _t_34 _t_35))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_21))=_qv_21))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len _t_35)) (cons _t_34 (append _t_35 nil)))=(cons _t_34 _t_35))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_22 _qv_23)=(append _qv_23 _qv_22)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len _t_35)) (cons _t_34 (append _t_35 nil)))=(cons _t_34 _t_35))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_24 _qv_25) _qv_26)=(append _qv_24 (append _qv_25 _qv_26))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len _t_35)) (cons _t_34 (append _t_35 nil)))=(cons _t_34 _t_35))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_27 _qv_28)=(plus _qv_28 _qv_27)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len _t_35)) (cons _t_34 (append _t_35 nil)))=(cons _t_34 _t_35))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_29 _qv_30) _qv_31)=(plus _qv_29 (plus _qv_30 _qv_31))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len _t_35)) (cons _t_34 (append _t_35 nil)))=(cons _t_34 _t_35))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_32 _qv_33))=(plus (succ _qv_32) (succ _qv_33))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len _t_35)) (cons _t_34 (append _t_35 nil)))=(cons _t_34 _t_35))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_32 _qv_33))=(plus (succ _qv_33) (succ _qv_32))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len _t_35)) (append (cons _t_34 _t_35) nil))=(cons _t_34 _t_35))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_21))=_qv_21))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len _t_35)) (append (cons _t_34 _t_35) nil))=(cons _t_34 _t_35))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_22 _qv_23)=(append _qv_23 _qv_22)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len _t_35)) (append (cons _t_34 _t_35) nil))=(cons _t_34 _t_35))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_24 _qv_25) _qv_26)=(append _qv_24 (append _qv_25 _qv_26))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len _t_35)) (append (cons _t_34 _t_35) nil))=(cons _t_34 _t_35))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_27 _qv_28)=(plus _qv_28 _qv_27)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len _t_35)) (append (cons _t_34 _t_35) nil))=(cons _t_34 _t_35))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_29 _qv_30) _qv_31)=(plus _qv_29 (plus _qv_30 _qv_31))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len _t_35)) (append (cons _t_34 _t_35) nil))=(cons _t_34 _t_35))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_32 _qv_33))=(plus (succ _qv_32) (succ _qv_33))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len _t_35)) (append (cons _t_34 _t_35) nil))=(cons _t_34 _t_35))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_32 _qv_33))=(plus (succ _qv_33) (succ _qv_32))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (cons _t_34 _t_35)) (append (cons _t_34 _t_35) nil))=(cons _t_34 _t_35))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_21))=_qv_21))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (cons _t_34 _t_35)) (append (cons _t_34 _t_35) nil))=(cons _t_34 _t_35))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_22 _qv_23)=(append _qv_23 _qv_22)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (cons _t_34 _t_35)) (append (cons _t_34 _t_35) nil))=(cons _t_34 _t_35))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_24 _qv_25) _qv_26)=(append _qv_24 (append _qv_25 _qv_26))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (cons _t_34 _t_35)) (append (cons _t_34 _t_35) nil))=(cons _t_34 _t_35))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_27 _qv_28)=(plus _qv_28 _qv_27)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (cons _t_34 _t_35)) (append (cons _t_34 _t_35) nil))=(cons _t_34 _t_35))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_29 _qv_30) _qv_31)=(plus _qv_29 (plus _qv_30 _qv_31))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (cons _t_34 _t_35)) (append (cons _t_34 _t_35) nil))=(cons _t_34 _t_35))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_32 _qv_33))=(plus (succ _qv_32) (succ _qv_33))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (cons _t_34 _t_35)) (append (cons _t_34 _t_35) nil))=(cons _t_34 _t_35))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_32 _qv_33))=(plus (succ _qv_33) (succ _qv_32))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len _t_35)) (cons _t_34 (append _t_35 nil)))=(cons _t_34 _t_35))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_21))=_qv_21))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len _t_35)) (cons _t_34 (append _t_35 nil)))=(cons _t_34 _t_35))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_22 _qv_23)=(append _qv_23 _qv_22)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len _t_35)) (cons _t_34 (append _t_35 nil)))=(cons _t_34 _t_35))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_24 _qv_25) _qv_26)=(append _qv_24 (append _qv_25 _qv_26))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len _t_35)) (cons _t_34 (append _t_35 nil)))=(cons _t_34 _t_35))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_27 _qv_28)=(plus _qv_28 _qv_27)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len _t_35)) (cons _t_34 (append _t_35 nil)))=(cons _t_34 _t_35))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_29 _qv_30) _qv_31)=(plus _qv_29 (plus _qv_30 _qv_31))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len _t_35)) (cons _t_34 (append _t_35 nil)))=(cons _t_34 _t_35))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_32 _qv_33))=(plus (succ _qv_32) (succ _qv_33))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len _t_35)) (cons _t_34 (append _t_35 nil)))=(cons _t_34 _t_35))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_32 _qv_33))=(plus (succ _qv_33) (succ _qv_32))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len _t_35)) (cons _t_34 (append _t_35 nil)))=(cons _t_34 _t_35))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_21))=_qv_21))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len _t_35)) (cons _t_34 (append _t_35 nil)))=(cons _t_34 _t_35))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_22 _qv_23)=(append _qv_23 _qv_22)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len _t_35)) (cons _t_34 (append _t_35 nil)))=(cons _t_34 _t_35))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_24 _qv_25) _qv_26)=(append _qv_24 (append _qv_25 _qv_26))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len _t_35)) (cons _t_34 (append _t_35 nil)))=(cons _t_34 _t_35))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_27 _qv_28)=(plus _qv_28 _qv_27)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len _t_35)) (cons _t_34 (append _t_35 nil)))=(cons _t_34 _t_35))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_29 _qv_30) _qv_31)=(plus _qv_29 (plus _qv_30 _qv_31))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len _t_35)) (cons _t_34 (append _t_35 nil)))=(cons _t_34 _t_35))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_32 _qv_33))=(plus (succ _qv_32) (succ _qv_33))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len _t_35)) (cons _t_34 (append _t_35 nil)))=(cons _t_34 _t_35))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_32 _qv_33))=(plus (succ _qv_33) (succ _qv_32))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (cons _t_34 _t_35)) (cons _t_34 (append _t_35 nil)))=(cons _t_34 _t_35))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_21))=_qv_21))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (cons _t_34 _t_35)) (cons _t_34 (append _t_35 nil)))=(cons _t_34 _t_35))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_22 _qv_23)=(append _qv_23 _qv_22)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (cons _t_34 _t_35)) (cons _t_34 (append _t_35 nil)))=(cons _t_34 _t_35))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_24 _qv_25) _qv_26)=(append _qv_24 (append _qv_25 _qv_26))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (cons _t_34 _t_35)) (cons _t_34 (append _t_35 nil)))=(cons _t_34 _t_35))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_27 _qv_28)=(plus _qv_28 _qv_27)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (cons _t_34 _t_35)) (cons _t_34 (append _t_35 nil)))=(cons _t_34 _t_35))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_29 _qv_30) _qv_31)=(plus _qv_29 (plus _qv_30 _qv_31))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (cons _t_34 _t_35)) (cons _t_34 (append _t_35 nil)))=(cons _t_34 _t_35))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_32 _qv_33))=(plus (succ _qv_32) (succ _qv_33))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (cons _t_34 _t_35)) (cons _t_34 (append _t_35 nil)))=(cons _t_34 _t_35))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_32 _qv_33))=(plus (succ _qv_33) (succ _qv_32))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len _t_35)) (cons _t_34 (append _t_35 nil)))=(cons _t_34 _t_35))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_21))=_qv_21))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len _t_35)) (cons _t_34 (append _t_35 nil)))=(cons _t_34 _t_35))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_22 _qv_23)=(append _qv_23 _qv_22)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len _t_35)) (cons _t_34 (append _t_35 nil)))=(cons _t_34 _t_35))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_24 _qv_25) _qv_26)=(append _qv_24 (append _qv_25 _qv_26))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len _t_35)) (cons _t_34 (append _t_35 nil)))=(cons _t_34 _t_35))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_27 _qv_28)=(plus _qv_28 _qv_27)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len _t_35)) (cons _t_34 (append _t_35 nil)))=(cons _t_34 _t_35))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_29 _qv_30) _qv_31)=(plus _qv_29 (plus _qv_30 _qv_31))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len _t_35)) (cons _t_34 (append _t_35 nil)))=(cons _t_34 _t_35))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_32 _qv_33))=(plus (succ _qv_32) (succ _qv_33))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len _t_35)) (cons _t_34 (append _t_35 nil)))=(cons _t_34 _t_35))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_32 _qv_33))=(plus (succ _qv_33) (succ _qv_32))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len _t_35)) (cons _t_34 (append _t_35 nil)))=(cons _t_34 _t_35))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_21))=_qv_21))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len _t_35)) (cons _t_34 (append _t_35 nil)))=(cons _t_34 _t_35))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_22 _qv_23)=(append _qv_23 _qv_22)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len _t_35)) (cons _t_34 (append _t_35 nil)))=(cons _t_34 _t_35))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_24 _qv_25) _qv_26)=(append _qv_24 (append _qv_25 _qv_26))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len _t_35)) (cons _t_34 (append _t_35 nil)))=(cons _t_34 _t_35))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_27 _qv_28)=(plus _qv_28 _qv_27)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len _t_35)) (cons _t_34 (append _t_35 nil)))=(cons _t_34 _t_35))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_29 _qv_30) _qv_31)=(plus _qv_29 (plus _qv_30 _qv_31))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len _t_35)) (cons _t_34 (append _t_35 nil)))=(cons _t_34 _t_35))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_32 _qv_33))=(plus (succ _qv_32) (succ _qv_33))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len _t_35)) (cons _t_34 (append _t_35 nil)))=(cons _t_34 _t_35))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_32 _qv_33))=(plus (succ _qv_33) (succ _qv_32))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (cons _t_34 _t_35)) (cons _t_34 (append _t_35 nil)))=(cons _t_34 _t_35))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_21))=_qv_21))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (cons _t_34 _t_35)) (cons _t_34 (append _t_35 nil)))=(cons _t_34 _t_35))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_22 _qv_23)=(append _qv_23 _qv_22)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (cons _t_34 _t_35)) (cons _t_34 (append _t_35 nil)))=(cons _t_34 _t_35))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_24 _qv_25) _qv_26)=(append _qv_24 (append _qv_25 _qv_26))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (cons _t_34 _t_35)) (cons _t_34 (append _t_35 nil)))=(cons _t_34 _t_35))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_27 _qv_28)=(plus _qv_28 _qv_27)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (cons _t_34 _t_35)) (cons _t_34 (append _t_35 nil)))=(cons _t_34 _t_35))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_29 _qv_30) _qv_31)=(plus _qv_29 (plus _qv_30 _qv_31))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (cons _t_34 _t_35)) (cons _t_34 (append _t_35 nil)))=(cons _t_34 _t_35))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_32 _qv_33))=(plus (succ _qv_32) (succ _qv_33))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (cons _t_34 _t_35)) (cons _t_34 (append _t_35 nil)))=(cons _t_34 _t_35))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_32 _qv_33))=(plus (succ _qv_33) (succ _qv_32))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (cons _t_34 _t_35)) (append (cons _t_34 _t_35) nil))=(cons _t_34 _t_35))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_21))=_qv_21))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (cons _t_34 _t_35)) (append (cons _t_34 _t_35) nil))=(cons _t_34 _t_35))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_22 _qv_23)=(append _qv_23 _qv_22)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (cons _t_34 _t_35)) (append (cons _t_34 _t_35) nil))=(cons _t_34 _t_35))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_24 _qv_25) _qv_26)=(append _qv_24 (append _qv_25 _qv_26))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (cons _t_34 _t_35)) (append (cons _t_34 _t_35) nil))=(cons _t_34 _t_35))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_27 _qv_28)=(plus _qv_28 _qv_27)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (cons _t_34 _t_35)) (append (cons _t_34 _t_35) nil))=(cons _t_34 _t_35))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_29 _qv_30) _qv_31)=(plus _qv_29 (plus _qv_30 _qv_31))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (cons _t_34 _t_35)) (append (cons _t_34 _t_35) nil))=(cons _t_34 _t_35))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_32 _qv_33))=(plus (succ _qv_32) (succ _qv_33))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (cons _t_34 _t_35)) (append (cons _t_34 _t_35) nil))=(cons _t_34 _t_35))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_32 _qv_33))=(plus (succ _qv_33) (succ _qv_32))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len _t_35)) (cons _t_34 (append _t_35 nil)))=(cons _t_34 _t_35))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_21))=_qv_21))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len _t_35)) (cons _t_34 (append _t_35 nil)))=(cons _t_34 _t_35))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_22 _qv_23)=(append _qv_23 _qv_22)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len _t_35)) (cons _t_34 (append _t_35 nil)))=(cons _t_34 _t_35))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_24 _qv_25) _qv_26)=(append _qv_24 (append _qv_25 _qv_26))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len _t_35)) (cons _t_34 (append _t_35 nil)))=(cons _t_34 _t_35))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_27 _qv_28)=(plus _qv_28 _qv_27)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len _t_35)) (cons _t_34 (append _t_35 nil)))=(cons _t_34 _t_35))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_29 _qv_30) _qv_31)=(plus _qv_29 (plus _qv_30 _qv_31))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len _t_35)) (cons _t_34 (append _t_35 nil)))=(cons _t_34 _t_35))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_32 _qv_33))=(plus (succ _qv_32) (succ _qv_33))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len _t_35)) (cons _t_34 (append _t_35 nil)))=(cons _t_34 _t_35))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_32 _qv_33))=(plus (succ _qv_33) (succ _qv_32))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len _t_35)) (cons _t_34 (append _t_35 nil)))=(cons _t_34 _t_35))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_21))=_qv_21))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len _t_35)) (cons _t_34 (append _t_35 nil)))=(cons _t_34 _t_35))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_22 _qv_23)=(append _qv_23 _qv_22)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len _t_35)) (cons _t_34 (append _t_35 nil)))=(cons _t_34 _t_35))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_24 _qv_25) _qv_26)=(append _qv_24 (append _qv_25 _qv_26))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len _t_35)) (cons _t_34 (append _t_35 nil)))=(cons _t_34 _t_35))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_27 _qv_28)=(plus _qv_28 _qv_27)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len _t_35)) (cons _t_34 (append _t_35 nil)))=(cons _t_34 _t_35))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_29 _qv_30) _qv_31)=(plus _qv_29 (plus _qv_30 _qv_31))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len _t_35)) (cons _t_34 (append _t_35 nil)))=(cons _t_34 _t_35))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_32 _qv_33))=(plus (succ _qv_32) (succ _qv_33))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len _t_35)) (cons _t_34 (append _t_35 nil)))=(cons _t_34 _t_35))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_32 _qv_33))=(plus (succ _qv_33) (succ _qv_32))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len _t_35)) (append (cons _t_34 _t_35) nil))=(cons _t_34 _t_35))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_21))=_qv_21))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len _t_35)) (append (cons _t_34 _t_35) nil))=(cons _t_34 _t_35))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_22 _qv_23)=(append _qv_23 _qv_22)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len _t_35)) (append (cons _t_34 _t_35) nil))=(cons _t_34 _t_35))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_24 _qv_25) _qv_26)=(append _qv_24 (append _qv_25 _qv_26))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len _t_35)) (append (cons _t_34 _t_35) nil))=(cons _t_34 _t_35))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_27 _qv_28)=(plus _qv_28 _qv_27)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len _t_35)) (append (cons _t_34 _t_35) nil))=(cons _t_34 _t_35))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_29 _qv_30) _qv_31)=(plus _qv_29 (plus _qv_30 _qv_31))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len _t_35)) (append (cons _t_34 _t_35) nil))=(cons _t_34 _t_35))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_32 _qv_33))=(plus (succ _qv_32) (succ _qv_33))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len _t_35)) (append (cons _t_34 _t_35) nil))=(cons _t_34 _t_35))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_32 _qv_33))=(plus (succ _qv_33) (succ _qv_32))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len _t_35)) (cons _t_34 (append _t_35 nil)))=(cons _t_34 _t_35))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_21))=_qv_21))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len _t_35)) (cons _t_34 (append _t_35 nil)))=(cons _t_34 _t_35))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_22 _qv_23)=(append _qv_23 _qv_22)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len _t_35)) (cons _t_34 (append _t_35 nil)))=(cons _t_34 _t_35))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_24 _qv_25) _qv_26)=(append _qv_24 (append _qv_25 _qv_26))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len _t_35)) (cons _t_34 (append _t_35 nil)))=(cons _t_34 _t_35))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_27 _qv_28)=(plus _qv_28 _qv_27)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len _t_35)) (cons _t_34 (append _t_35 nil)))=(cons _t_34 _t_35))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_29 _qv_30) _qv_31)=(plus _qv_29 (plus _qv_30 _qv_31))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len _t_35)) (cons _t_34 (append _t_35 nil)))=(cons _t_34 _t_35))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_32 _qv_33))=(plus (succ _qv_32) (succ _qv_33))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len _t_35)) (cons _t_34 (append _t_35 nil)))=(cons _t_34 _t_35))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_32 _qv_33))=(plus (succ _qv_33) (succ _qv_32))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len _t_35)) (cons _t_34 (append _t_35 nil)))=(cons _t_34 _t_35))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_21))=_qv_21))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len _t_35)) (cons _t_34 (append _t_35 nil)))=(cons _t_34 _t_35))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_22 _qv_23)=(append _qv_23 _qv_22)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len _t_35)) (cons _t_34 (append _t_35 nil)))=(cons _t_34 _t_35))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_24 _qv_25) _qv_26)=(append _qv_24 (append _qv_25 _qv_26))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len _t_35)) (cons _t_34 (append _t_35 nil)))=(cons _t_34 _t_35))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_27 _qv_28)=(plus _qv_28 _qv_27)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len _t_35)) (cons _t_34 (append _t_35 nil)))=(cons _t_34 _t_35))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_29 _qv_30) _qv_31)=(plus _qv_29 (plus _qv_30 _qv_31))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len _t_35)) (cons _t_34 (append _t_35 nil)))=(cons _t_34 _t_35))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_32 _qv_33))=(plus (succ _qv_32) (succ _qv_33))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len _t_35)) (cons _t_34 (append _t_35 nil)))=(cons _t_34 _t_35))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_32 _qv_33))=(plus (succ _qv_33) (succ _qv_32))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len _t_35)) (append (cons _t_34 _t_35) nil))=(cons _t_34 _t_35))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_21))=_qv_21))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len _t_35)) (append (cons _t_34 _t_35) nil))=(cons _t_34 _t_35))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_22 _qv_23)=(append _qv_23 _qv_22)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len _t_35)) (append (cons _t_34 _t_35) nil))=(cons _t_34 _t_35))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_24 _qv_25) _qv_26)=(append _qv_24 (append _qv_25 _qv_26))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len _t_35)) (append (cons _t_34 _t_35) nil))=(cons _t_34 _t_35))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_27 _qv_28)=(plus _qv_28 _qv_27)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len _t_35)) (append (cons _t_34 _t_35) nil))=(cons _t_34 _t_35))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_29 _qv_30) _qv_31)=(plus _qv_29 (plus _qv_30 _qv_31))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len _t_35)) (append (cons _t_34 _t_35) nil))=(cons _t_34 _t_35))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_32 _qv_33))=(plus (succ _qv_32) (succ _qv_33))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len _t_35)) (append (cons _t_34 _t_35) nil))=(cons _t_34 _t_35))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_32 _qv_33))=(plus (succ _qv_33) (succ _qv_32))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (cons _t_34 _t_35)) (append (cons _t_34 _t_35) nil))=(cons _t_34 _t_35))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_21))=_qv_21))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (cons _t_34 _t_35)) (append (cons _t_34 _t_35) nil))=(cons _t_34 _t_35))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_22 _qv_23)=(append _qv_23 _qv_22)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (cons _t_34 _t_35)) (append (cons _t_34 _t_35) nil))=(cons _t_34 _t_35))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_24 _qv_25) _qv_26)=(append _qv_24 (append _qv_25 _qv_26))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (cons _t_34 _t_35)) (append (cons _t_34 _t_35) nil))=(cons _t_34 _t_35))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_27 _qv_28)=(plus _qv_28 _qv_27)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (cons _t_34 _t_35)) (append (cons _t_34 _t_35) nil))=(cons _t_34 _t_35))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_29 _qv_30) _qv_31)=(plus _qv_29 (plus _qv_30 _qv_31))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (cons _t_34 _t_35)) (append (cons _t_34 _t_35) nil))=(cons _t_34 _t_35))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_32 _qv_33))=(plus (succ _qv_32) (succ _qv_33))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (cons _t_34 _t_35)) (append (cons _t_34 _t_35) nil))=(cons _t_34 _t_35))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_32 _qv_33))=(plus (succ _qv_33) (succ _qv_32))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len _t_35)) (cons _t_34 (append _t_35 nil)))=(cons _t_34 _t_35))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_21))=_qv_21))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len _t_35)) (cons _t_34 (append _t_35 nil)))=(cons _t_34 _t_35))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_22 _qv_23)=(append _qv_23 _qv_22)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len _t_35)) (cons _t_34 (append _t_35 nil)))=(cons _t_34 _t_35))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_24 _qv_25) _qv_26)=(append _qv_24 (append _qv_25 _qv_26))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len _t_35)) (cons _t_34 (append _t_35 nil)))=(cons _t_34 _t_35))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_27 _qv_28)=(plus _qv_28 _qv_27)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len _t_35)) (cons _t_34 (append _t_35 nil)))=(cons _t_34 _t_35))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_29 _qv_30) _qv_31)=(plus _qv_29 (plus _qv_30 _qv_31))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len _t_35)) (cons _t_34 (append _t_35 nil)))=(cons _t_34 _t_35))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_32 _qv_33))=(plus (succ _qv_32) (succ _qv_33))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len _t_35)) (cons _t_34 (append _t_35 nil)))=(cons _t_34 _t_35))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_32 _qv_33))=(plus (succ _qv_33) (succ _qv_32))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len _t_35)) (cons _t_34 (append _t_35 nil)))=(cons _t_34 _t_35))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_21))=_qv_21))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len _t_35)) (cons _t_34 (append _t_35 nil)))=(cons _t_34 _t_35))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_22 _qv_23)=(append _qv_23 _qv_22)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len _t_35)) (cons _t_34 (append _t_35 nil)))=(cons _t_34 _t_35))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_24 _qv_25) _qv_26)=(append _qv_24 (append _qv_25 _qv_26))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len _t_35)) (cons _t_34 (append _t_35 nil)))=(cons _t_34 _t_35))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_27 _qv_28)=(plus _qv_28 _qv_27)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len _t_35)) (cons _t_34 (append _t_35 nil)))=(cons _t_34 _t_35))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_29 _qv_30) _qv_31)=(plus _qv_29 (plus _qv_30 _qv_31))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len _t_35)) (cons _t_34 (append _t_35 nil)))=(cons _t_34 _t_35))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_32 _qv_33))=(plus (succ _qv_32) (succ _qv_33))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len _t_35)) (cons _t_34 (append _t_35 nil)))=(cons _t_34 _t_35))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_32 _qv_33))=(plus (succ _qv_33) (succ _qv_32))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (cons _t_34 _t_35)) (cons _t_34 (append _t_35 nil)))=(cons _t_34 _t_35))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_21))=_qv_21))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (cons _t_34 _t_35)) (cons _t_34 (append _t_35 nil)))=(cons _t_34 _t_35))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_22 _qv_23)=(append _qv_23 _qv_22)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (cons _t_34 _t_35)) (cons _t_34 (append _t_35 nil)))=(cons _t_34 _t_35))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_24 _qv_25) _qv_26)=(append _qv_24 (append _qv_25 _qv_26))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (cons _t_34 _t_35)) (cons _t_34 (append _t_35 nil)))=(cons _t_34 _t_35))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_27 _qv_28)=(plus _qv_28 _qv_27)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (cons _t_34 _t_35)) (cons _t_34 (append _t_35 nil)))=(cons _t_34 _t_35))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_29 _qv_30) _qv_31)=(plus _qv_29 (plus _qv_30 _qv_31))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (cons _t_34 _t_35)) (cons _t_34 (append _t_35 nil)))=(cons _t_34 _t_35))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_32 _qv_33))=(plus (succ _qv_32) (succ _qv_33))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (cons _t_34 _t_35)) (cons _t_34 (append _t_35 nil)))=(cons _t_34 _t_35))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_32 _qv_33))=(plus (succ _qv_33) (succ _qv_32))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len _t_35)) (cons _t_34 (append _t_35 nil)))=(cons _t_34 _t_35))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_21))=_qv_21))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len _t_35)) (cons _t_34 (append _t_35 nil)))=(cons _t_34 _t_35))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_22 _qv_23)=(append _qv_23 _qv_22)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len _t_35)) (cons _t_34 (append _t_35 nil)))=(cons _t_34 _t_35))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_24 _qv_25) _qv_26)=(append _qv_24 (append _qv_25 _qv_26))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len _t_35)) (cons _t_34 (append _t_35 nil)))=(cons _t_34 _t_35))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_27 _qv_28)=(plus _qv_28 _qv_27)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len _t_35)) (cons _t_34 (append _t_35 nil)))=(cons _t_34 _t_35))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_29 _qv_30) _qv_31)=(plus _qv_29 (plus _qv_30 _qv_31))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len _t_35)) (cons _t_34 (append _t_35 nil)))=(cons _t_34 _t_35))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_32 _qv_33))=(plus (succ _qv_32) (succ _qv_33))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len _t_35)) (cons _t_34 (append _t_35 nil)))=(cons _t_34 _t_35))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_32 _qv_33))=(plus (succ _qv_33) (succ _qv_32))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len _t_35)) (cons _t_34 (append _t_35 nil)))=(cons _t_34 _t_35))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_21))=_qv_21))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len _t_35)) (cons _t_34 (append _t_35 nil)))=(cons _t_34 _t_35))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_22 _qv_23)=(append _qv_23 _qv_22)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len _t_35)) (cons _t_34 (append _t_35 nil)))=(cons _t_34 _t_35))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_24 _qv_25) _qv_26)=(append _qv_24 (append _qv_25 _qv_26))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len _t_35)) (cons _t_34 (append _t_35 nil)))=(cons _t_34 _t_35))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_27 _qv_28)=(plus _qv_28 _qv_27)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len _t_35)) (cons _t_34 (append _t_35 nil)))=(cons _t_34 _t_35))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_29 _qv_30) _qv_31)=(plus _qv_29 (plus _qv_30 _qv_31))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len _t_35)) (cons _t_34 (append _t_35 nil)))=(cons _t_34 _t_35))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_32 _qv_33))=(plus (succ _qv_32) (succ _qv_33))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len _t_35)) (cons _t_34 (append _t_35 nil)))=(cons _t_34 _t_35))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_32 _qv_33))=(plus (succ _qv_33) (succ _qv_32))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (cons _t_34 _t_35)) (cons _t_34 (append _t_35 nil)))=(cons _t_34 _t_35))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_21))=_qv_21))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (cons _t_34 _t_35)) (cons _t_34 (append _t_35 nil)))=(cons _t_34 _t_35))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_22 _qv_23)=(append _qv_23 _qv_22)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (cons _t_34 _t_35)) (cons _t_34 (append _t_35 nil)))=(cons _t_34 _t_35))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_24 _qv_25) _qv_26)=(append _qv_24 (append _qv_25 _qv_26))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (cons _t_34 _t_35)) (cons _t_34 (append _t_35 nil)))=(cons _t_34 _t_35))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_27 _qv_28)=(plus _qv_28 _qv_27)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (cons _t_34 _t_35)) (cons _t_34 (append _t_35 nil)))=(cons _t_34 _t_35))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_29 _qv_30) _qv_31)=(plus _qv_29 (plus _qv_30 _qv_31))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (cons _t_34 _t_35)) (cons _t_34 (append _t_35 nil)))=(cons _t_34 _t_35))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_32 _qv_33))=(plus (succ _qv_32) (succ _qv_33))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (cons _t_34 _t_35)) (cons _t_34 (append _t_35 nil)))=(cons _t_34 _t_35))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_32 _qv_33))=(plus (succ _qv_33) (succ _qv_32))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (cons _t_34 _t_35)) (append (cons _t_34 _t_35) nil))=(cons _t_34 _t_35))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_21))=_qv_21))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (cons _t_34 _t_35)) (append (cons _t_34 _t_35) nil))=(cons _t_34 _t_35))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_22 _qv_23)=(append _qv_23 _qv_22)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (cons _t_34 _t_35)) (append (cons _t_34 _t_35) nil))=(cons _t_34 _t_35))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_24 _qv_25) _qv_26)=(append _qv_24 (append _qv_25 _qv_26))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (cons _t_34 _t_35)) (append (cons _t_34 _t_35) nil))=(cons _t_34 _t_35))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_27 _qv_28)=(plus _qv_28 _qv_27)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (cons _t_34 _t_35)) (append (cons _t_34 _t_35) nil))=(cons _t_34 _t_35))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_29 _qv_30) _qv_31)=(plus _qv_29 (plus _qv_30 _qv_31))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (cons _t_34 _t_35)) (append (cons _t_34 _t_35) nil))=(cons _t_34 _t_35))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_32 _qv_33))=(plus (succ _qv_32) (succ _qv_33))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (cons _t_34 _t_35)) (append (cons _t_34 _t_35) nil))=(cons _t_34 _t_35))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_32 _qv_33))=(plus (succ _qv_33) (succ _qv_32))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len _v_20) (append _v_20 nil))=(append nil _v_20))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len _v_20) (append _v_20 nil))=(append nil _v_20))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len _v_20) (append _v_20 nil))=(append nil _v_20))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len _v_20) (append _v_20 nil))=(append nil _v_20))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len _v_20) (append _v_20 nil))=(append nil _v_20))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len _v_20) (append _v_20 nil))=(append nil _v_20))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_11 _qv_12))=(plus (succ _qv_11) (succ _qv_12))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len _v_20) (append _v_20 nil))=(append nil _v_20))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_11 _qv_12))=(plus (succ _qv_12) (succ _qv_11))))
USE ASSUMPTION FAILED

  backtrack to: ((rotate (len _v_20) (append _v_20 nil))=(append nil _v_20))
  rewritten [1]: ((rotate (len _v_20) (append _v_20 nil))=_v_20)

The Knowledge Scheme currently contains the following lemmas:
	(forall ((Nat)) ((succ (succ _qv_21))=_qv_21))
	(forall ((Lst) (Lst)) ((append _qv_22 _qv_23)=(append _qv_23 _qv_22)))
	(forall ((Lst) (Lst) (Lst)) ((append (append _qv_24 _qv_25) _qv_26)=(append _qv_24 (append _qv_25 _qv_26))))
	(forall ((Nat) (Nat)) ((plus _qv_27 _qv_28)=(plus _qv_28 _qv_27)))
	(forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_29 _qv_30) _qv_31)=(plus _qv_29 (plus _qv_30 _qv_31))))
	(forall ((Nat) (Nat)) ((succ (plus _qv_32 _qv_33))=(plus (succ _qv_32) (succ _qv_33))))
	(forall ((Nat) (Nat)) ((succ (plus _qv_32 _qv_33))=(plus (succ _qv_33) (succ _qv_32))))

CURRENT SUBGOAL ((rotate (succ (len _t_35)) (cons _t_34 (append _t_35 nil)))=(cons _t_34 _t_35))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_21))=_qv_21))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len _t_35)) (cons _t_34 (append _t_35 nil)))=(cons _t_34 _t_35))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_22 _qv_23)=(append _qv_23 _qv_22)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len _t_35)) (cons _t_34 (append _t_35 nil)))=(cons _t_34 _t_35))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_24 _qv_25) _qv_26)=(append _qv_24 (append _qv_25 _qv_26))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len _t_35)) (cons _t_34 (append _t_35 nil)))=(cons _t_34 _t_35))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_27 _qv_28)=(plus _qv_28 _qv_27)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len _t_35)) (cons _t_34 (append _t_35 nil)))=(cons _t_34 _t_35))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_29 _qv_30) _qv_31)=(plus _qv_29 (plus _qv_30 _qv_31))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len _t_35)) (cons _t_34 (append _t_35 nil)))=(cons _t_34 _t_35))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_32 _qv_33))=(plus (succ _qv_32) (succ _qv_33))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len _t_35)) (cons _t_34 (append _t_35 nil)))=(cons _t_34 _t_35))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_32 _qv_33))=(plus (succ _qv_33) (succ _qv_32))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len _t_35)) (cons _t_34 (append _t_35 nil)))=(cons _t_34 _t_35))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_21))=_qv_21))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len _t_35)) (cons _t_34 (append _t_35 nil)))=(cons _t_34 _t_35))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_22 _qv_23)=(append _qv_23 _qv_22)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len _t_35)) (cons _t_34 (append _t_35 nil)))=(cons _t_34 _t_35))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_24 _qv_25) _qv_26)=(append _qv_24 (append _qv_25 _qv_26))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len _t_35)) (cons _t_34 (append _t_35 nil)))=(cons _t_34 _t_35))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_27 _qv_28)=(plus _qv_28 _qv_27)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len _t_35)) (cons _t_34 (append _t_35 nil)))=(cons _t_34 _t_35))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_29 _qv_30) _qv_31)=(plus _qv_29 (plus _qv_30 _qv_31))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len _t_35)) (cons _t_34 (append _t_35 nil)))=(cons _t_34 _t_35))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_32 _qv_33))=(plus (succ _qv_32) (succ _qv_33))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len _t_35)) (cons _t_34 (append _t_35 nil)))=(cons _t_34 _t_35))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_32 _qv_33))=(plus (succ _qv_33) (succ _qv_32))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len _t_35)) (append (cons _t_34 _t_35) nil))=(cons _t_34 _t_35))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_21))=_qv_21))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len _t_35)) (append (cons _t_34 _t_35) nil))=(cons _t_34 _t_35))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_22 _qv_23)=(append _qv_23 _qv_22)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len _t_35)) (append (cons _t_34 _t_35) nil))=(cons _t_34 _t_35))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_24 _qv_25) _qv_26)=(append _qv_24 (append _qv_25 _qv_26))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len _t_35)) (append (cons _t_34 _t_35) nil))=(cons _t_34 _t_35))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_27 _qv_28)=(plus _qv_28 _qv_27)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len _t_35)) (append (cons _t_34 _t_35) nil))=(cons _t_34 _t_35))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_29 _qv_30) _qv_31)=(plus _qv_29 (plus _qv_30 _qv_31))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len _t_35)) (append (cons _t_34 _t_35) nil))=(cons _t_34 _t_35))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_32 _qv_33))=(plus (succ _qv_32) (succ _qv_33))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len _t_35)) (append (cons _t_34 _t_35) nil))=(cons _t_34 _t_35))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_32 _qv_33))=(plus (succ _qv_33) (succ _qv_32))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len _t_35)) (cons _t_34 (append _t_35 nil)))=(cons _t_34 _t_35))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_21))=_qv_21))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len _t_35)) (cons _t_34 (append _t_35 nil)))=(cons _t_34 _t_35))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_22 _qv_23)=(append _qv_23 _qv_22)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len _t_35)) (cons _t_34 (append _t_35 nil)))=(cons _t_34 _t_35))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_24 _qv_25) _qv_26)=(append _qv_24 (append _qv_25 _qv_26))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len _t_35)) (cons _t_34 (append _t_35 nil)))=(cons _t_34 _t_35))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_27 _qv_28)=(plus _qv_28 _qv_27)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len _t_35)) (cons _t_34 (append _t_35 nil)))=(cons _t_34 _t_35))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_29 _qv_30) _qv_31)=(plus _qv_29 (plus _qv_30 _qv_31))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len _t_35)) (cons _t_34 (append _t_35 nil)))=(cons _t_34 _t_35))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_32 _qv_33))=(plus (succ _qv_32) (succ _qv_33))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len _t_35)) (cons _t_34 (append _t_35 nil)))=(cons _t_34 _t_35))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_32 _qv_33))=(plus (succ _qv_33) (succ _qv_32))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len _t_35)) (cons _t_34 (append _t_35 nil)))=(cons _t_34 _t_35))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_21))=_qv_21))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len _t_35)) (cons _t_34 (append _t_35 nil)))=(cons _t_34 _t_35))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_22 _qv_23)=(append _qv_23 _qv_22)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len _t_35)) (cons _t_34 (append _t_35 nil)))=(cons _t_34 _t_35))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_24 _qv_25) _qv_26)=(append _qv_24 (append _qv_25 _qv_26))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len _t_35)) (cons _t_34 (append _t_35 nil)))=(cons _t_34 _t_35))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_27 _qv_28)=(plus _qv_28 _qv_27)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len _t_35)) (cons _t_34 (append _t_35 nil)))=(cons _t_34 _t_35))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_29 _qv_30) _qv_31)=(plus _qv_29 (plus _qv_30 _qv_31))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len _t_35)) (cons _t_34 (append _t_35 nil)))=(cons _t_34 _t_35))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_32 _qv_33))=(plus (succ _qv_32) (succ _qv_33))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len _t_35)) (cons _t_34 (append _t_35 nil)))=(cons _t_34 _t_35))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_32 _qv_33))=(plus (succ _qv_33) (succ _qv_32))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len _t_35)) (append (cons _t_34 _t_35) nil))=(cons _t_34 _t_35))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_21))=_qv_21))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len _t_35)) (append (cons _t_34 _t_35) nil))=(cons _t_34 _t_35))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_22 _qv_23)=(append _qv_23 _qv_22)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len _t_35)) (append (cons _t_34 _t_35) nil))=(cons _t_34 _t_35))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_24 _qv_25) _qv_26)=(append _qv_24 (append _qv_25 _qv_26))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len _t_35)) (append (cons _t_34 _t_35) nil))=(cons _t_34 _t_35))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_27 _qv_28)=(plus _qv_28 _qv_27)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len _t_35)) (append (cons _t_34 _t_35) nil))=(cons _t_34 _t_35))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_29 _qv_30) _qv_31)=(plus _qv_29 (plus _qv_30 _qv_31))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len _t_35)) (append (cons _t_34 _t_35) nil))=(cons _t_34 _t_35))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_32 _qv_33))=(plus (succ _qv_32) (succ _qv_33))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len _t_35)) (append (cons _t_34 _t_35) nil))=(cons _t_34 _t_35))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_32 _qv_33))=(plus (succ _qv_33) (succ _qv_32))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (cons _t_34 _t_35)) (append (cons _t_34 _t_35) nil))=(cons _t_34 _t_35))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_21))=_qv_21))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (cons _t_34 _t_35)) (append (cons _t_34 _t_35) nil))=(cons _t_34 _t_35))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_22 _qv_23)=(append _qv_23 _qv_22)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (cons _t_34 _t_35)) (append (cons _t_34 _t_35) nil))=(cons _t_34 _t_35))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_24 _qv_25) _qv_26)=(append _qv_24 (append _qv_25 _qv_26))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (cons _t_34 _t_35)) (append (cons _t_34 _t_35) nil))=(cons _t_34 _t_35))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_27 _qv_28)=(plus _qv_28 _qv_27)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (cons _t_34 _t_35)) (append (cons _t_34 _t_35) nil))=(cons _t_34 _t_35))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_29 _qv_30) _qv_31)=(plus _qv_29 (plus _qv_30 _qv_31))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (cons _t_34 _t_35)) (append (cons _t_34 _t_35) nil))=(cons _t_34 _t_35))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_32 _qv_33))=(plus (succ _qv_32) (succ _qv_33))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (cons _t_34 _t_35)) (append (cons _t_34 _t_35) nil))=(cons _t_34 _t_35))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_32 _qv_33))=(plus (succ _qv_33) (succ _qv_32))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len _t_35)) (cons _t_34 (append _t_35 nil)))=(cons _t_34 _t_35))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_21))=_qv_21))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len _t_35)) (cons _t_34 (append _t_35 nil)))=(cons _t_34 _t_35))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_22 _qv_23)=(append _qv_23 _qv_22)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len _t_35)) (cons _t_34 (append _t_35 nil)))=(cons _t_34 _t_35))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_24 _qv_25) _qv_26)=(append _qv_24 (append _qv_25 _qv_26))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len _t_35)) (cons _t_34 (append _t_35 nil)))=(cons _t_34 _t_35))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_27 _qv_28)=(plus _qv_28 _qv_27)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len _t_35)) (cons _t_34 (append _t_35 nil)))=(cons _t_34 _t_35))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_29 _qv_30) _qv_31)=(plus _qv_29 (plus _qv_30 _qv_31))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len _t_35)) (cons _t_34 (append _t_35 nil)))=(cons _t_34 _t_35))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_32 _qv_33))=(plus (succ _qv_32) (succ _qv_33))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len _t_35)) (cons _t_34 (append _t_35 nil)))=(cons _t_34 _t_35))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_32 _qv_33))=(plus (succ _qv_33) (succ _qv_32))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len _t_35)) (cons _t_34 (append _t_35 nil)))=(cons _t_34 _t_35))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_21))=_qv_21))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len _t_35)) (cons _t_34 (append _t_35 nil)))=(cons _t_34 _t_35))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_22 _qv_23)=(append _qv_23 _qv_22)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len _t_35)) (cons _t_34 (append _t_35 nil)))=(cons _t_34 _t_35))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_24 _qv_25) _qv_26)=(append _qv_24 (append _qv_25 _qv_26))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len _t_35)) (cons _t_34 (append _t_35 nil)))=(cons _t_34 _t_35))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_27 _qv_28)=(plus _qv_28 _qv_27)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len _t_35)) (cons _t_34 (append _t_35 nil)))=(cons _t_34 _t_35))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_29 _qv_30) _qv_31)=(plus _qv_29 (plus _qv_30 _qv_31))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len _t_35)) (cons _t_34 (append _t_35 nil)))=(cons _t_34 _t_35))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_32 _qv_33))=(plus (succ _qv_32) (succ _qv_33))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len _t_35)) (cons _t_34 (append _t_35 nil)))=(cons _t_34 _t_35))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_32 _qv_33))=(plus (succ _qv_33) (succ _qv_32))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (cons _t_34 _t_35)) (cons _t_34 (append _t_35 nil)))=(cons _t_34 _t_35))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_21))=_qv_21))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (cons _t_34 _t_35)) (cons _t_34 (append _t_35 nil)))=(cons _t_34 _t_35))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_22 _qv_23)=(append _qv_23 _qv_22)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (cons _t_34 _t_35)) (cons _t_34 (append _t_35 nil)))=(cons _t_34 _t_35))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_24 _qv_25) _qv_26)=(append _qv_24 (append _qv_25 _qv_26))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (cons _t_34 _t_35)) (cons _t_34 (append _t_35 nil)))=(cons _t_34 _t_35))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_27 _qv_28)=(plus _qv_28 _qv_27)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (cons _t_34 _t_35)) (cons _t_34 (append _t_35 nil)))=(cons _t_34 _t_35))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_29 _qv_30) _qv_31)=(plus _qv_29 (plus _qv_30 _qv_31))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (cons _t_34 _t_35)) (cons _t_34 (append _t_35 nil)))=(cons _t_34 _t_35))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_32 _qv_33))=(plus (succ _qv_32) (succ _qv_33))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (cons _t_34 _t_35)) (cons _t_34 (append _t_35 nil)))=(cons _t_34 _t_35))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_32 _qv_33))=(plus (succ _qv_33) (succ _qv_32))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len _t_35)) (cons _t_34 (append _t_35 nil)))=(cons _t_34 _t_35))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_21))=_qv_21))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len _t_35)) (cons _t_34 (append _t_35 nil)))=(cons _t_34 _t_35))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_22 _qv_23)=(append _qv_23 _qv_22)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len _t_35)) (cons _t_34 (append _t_35 nil)))=(cons _t_34 _t_35))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_24 _qv_25) _qv_26)=(append _qv_24 (append _qv_25 _qv_26))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len _t_35)) (cons _t_34 (append _t_35 nil)))=(cons _t_34 _t_35))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_27 _qv_28)=(plus _qv_28 _qv_27)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len _t_35)) (cons _t_34 (append _t_35 nil)))=(cons _t_34 _t_35))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_29 _qv_30) _qv_31)=(plus _qv_29 (plus _qv_30 _qv_31))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len _t_35)) (cons _t_34 (append _t_35 nil)))=(cons _t_34 _t_35))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_32 _qv_33))=(plus (succ _qv_32) (succ _qv_33))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len _t_35)) (cons _t_34 (append _t_35 nil)))=(cons _t_34 _t_35))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_32 _qv_33))=(plus (succ _qv_33) (succ _qv_32))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len _t_35)) (cons _t_34 (append _t_35 nil)))=(cons _t_34 _t_35))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_21))=_qv_21))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len _t_35)) (cons _t_34 (append _t_35 nil)))=(cons _t_34 _t_35))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_22 _qv_23)=(append _qv_23 _qv_22)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len _t_35)) (cons _t_34 (append _t_35 nil)))=(cons _t_34 _t_35))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_24 _qv_25) _qv_26)=(append _qv_24 (append _qv_25 _qv_26))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len _t_35)) (cons _t_34 (append _t_35 nil)))=(cons _t_34 _t_35))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_27 _qv_28)=(plus _qv_28 _qv_27)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len _t_35)) (cons _t_34 (append _t_35 nil)))=(cons _t_34 _t_35))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_29 _qv_30) _qv_31)=(plus _qv_29 (plus _qv_30 _qv_31))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len _t_35)) (cons _t_34 (append _t_35 nil)))=(cons _t_34 _t_35))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_32 _qv_33))=(plus (succ _qv_32) (succ _qv_33))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len _t_35)) (cons _t_34 (append _t_35 nil)))=(cons _t_34 _t_35))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_32 _qv_33))=(plus (succ _qv_33) (succ _qv_32))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (cons _t_34 _t_35)) (cons _t_34 (append _t_35 nil)))=(cons _t_34 _t_35))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_21))=_qv_21))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (cons _t_34 _t_35)) (cons _t_34 (append _t_35 nil)))=(cons _t_34 _t_35))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_22 _qv_23)=(append _qv_23 _qv_22)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (cons _t_34 _t_35)) (cons _t_34 (append _t_35 nil)))=(cons _t_34 _t_35))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_24 _qv_25) _qv_26)=(append _qv_24 (append _qv_25 _qv_26))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (cons _t_34 _t_35)) (cons _t_34 (append _t_35 nil)))=(cons _t_34 _t_35))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_27 _qv_28)=(plus _qv_28 _qv_27)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (cons _t_34 _t_35)) (cons _t_34 (append _t_35 nil)))=(cons _t_34 _t_35))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_29 _qv_30) _qv_31)=(plus _qv_29 (plus _qv_30 _qv_31))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (cons _t_34 _t_35)) (cons _t_34 (append _t_35 nil)))=(cons _t_34 _t_35))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_32 _qv_33))=(plus (succ _qv_32) (succ _qv_33))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (cons _t_34 _t_35)) (cons _t_34 (append _t_35 nil)))=(cons _t_34 _t_35))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_32 _qv_33))=(plus (succ _qv_33) (succ _qv_32))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (cons _t_34 _t_35)) (append (cons _t_34 _t_35) nil))=(cons _t_34 _t_35))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_21))=_qv_21))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (cons _t_34 _t_35)) (append (cons _t_34 _t_35) nil))=(cons _t_34 _t_35))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_22 _qv_23)=(append _qv_23 _qv_22)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (cons _t_34 _t_35)) (append (cons _t_34 _t_35) nil))=(cons _t_34 _t_35))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_24 _qv_25) _qv_26)=(append _qv_24 (append _qv_25 _qv_26))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (cons _t_34 _t_35)) (append (cons _t_34 _t_35) nil))=(cons _t_34 _t_35))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_27 _qv_28)=(plus _qv_28 _qv_27)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (cons _t_34 _t_35)) (append (cons _t_34 _t_35) nil))=(cons _t_34 _t_35))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_29 _qv_30) _qv_31)=(plus _qv_29 (plus _qv_30 _qv_31))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (cons _t_34 _t_35)) (append (cons _t_34 _t_35) nil))=(cons _t_34 _t_35))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_32 _qv_33))=(plus (succ _qv_32) (succ _qv_33))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (cons _t_34 _t_35)) (append (cons _t_34 _t_35) nil))=(cons _t_34 _t_35))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_32 _qv_33))=(plus (succ _qv_33) (succ _qv_32))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len _t_35)) (cons _t_34 (append _t_35 nil)))=(cons _t_34 _t_35))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_21))=_qv_21))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len _t_35)) (cons _t_34 (append _t_35 nil)))=(cons _t_34 _t_35))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_22 _qv_23)=(append _qv_23 _qv_22)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len _t_35)) (cons _t_34 (append _t_35 nil)))=(cons _t_34 _t_35))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_24 _qv_25) _qv_26)=(append _qv_24 (append _qv_25 _qv_26))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len _t_35)) (cons _t_34 (append _t_35 nil)))=(cons _t_34 _t_35))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_27 _qv_28)=(plus _qv_28 _qv_27)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len _t_35)) (cons _t_34 (append _t_35 nil)))=(cons _t_34 _t_35))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_29 _qv_30) _qv_31)=(plus _qv_29 (plus _qv_30 _qv_31))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len _t_35)) (cons _t_34 (append _t_35 nil)))=(cons _t_34 _t_35))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_32 _qv_33))=(plus (succ _qv_32) (succ _qv_33))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len _t_35)) (cons _t_34 (append _t_35 nil)))=(cons _t_34 _t_35))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_32 _qv_33))=(plus (succ _qv_33) (succ _qv_32))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len _t_35)) (cons _t_34 (append _t_35 nil)))=(cons _t_34 _t_35))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_21))=_qv_21))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len _t_35)) (cons _t_34 (append _t_35 nil)))=(cons _t_34 _t_35))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_22 _qv_23)=(append _qv_23 _qv_22)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len _t_35)) (cons _t_34 (append _t_35 nil)))=(cons _t_34 _t_35))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_24 _qv_25) _qv_26)=(append _qv_24 (append _qv_25 _qv_26))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len _t_35)) (cons _t_34 (append _t_35 nil)))=(cons _t_34 _t_35))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_27 _qv_28)=(plus _qv_28 _qv_27)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len _t_35)) (cons _t_34 (append _t_35 nil)))=(cons _t_34 _t_35))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_29 _qv_30) _qv_31)=(plus _qv_29 (plus _qv_30 _qv_31))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len _t_35)) (cons _t_34 (append _t_35 nil)))=(cons _t_34 _t_35))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_32 _qv_33))=(plus (succ _qv_32) (succ _qv_33))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len _t_35)) (cons _t_34 (append _t_35 nil)))=(cons _t_34 _t_35))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_32 _qv_33))=(plus (succ _qv_33) (succ _qv_32))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len _t_35)) (append (cons _t_34 _t_35) nil))=(cons _t_34 _t_35))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_21))=_qv_21))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len _t_35)) (append (cons _t_34 _t_35) nil))=(cons _t_34 _t_35))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_22 _qv_23)=(append _qv_23 _qv_22)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len _t_35)) (append (cons _t_34 _t_35) nil))=(cons _t_34 _t_35))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_24 _qv_25) _qv_26)=(append _qv_24 (append _qv_25 _qv_26))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len _t_35)) (append (cons _t_34 _t_35) nil))=(cons _t_34 _t_35))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_27 _qv_28)=(plus _qv_28 _qv_27)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len _t_35)) (append (cons _t_34 _t_35) nil))=(cons _t_34 _t_35))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_29 _qv_30) _qv_31)=(plus _qv_29 (plus _qv_30 _qv_31))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len _t_35)) (append (cons _t_34 _t_35) nil))=(cons _t_34 _t_35))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_32 _qv_33))=(plus (succ _qv_32) (succ _qv_33))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len _t_35)) (append (cons _t_34 _t_35) nil))=(cons _t_34 _t_35))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_32 _qv_33))=(plus (succ _qv_33) (succ _qv_32))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len _t_35)) (cons _t_34 (append _t_35 nil)))=(cons _t_34 _t_35))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_21))=_qv_21))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len _t_35)) (cons _t_34 (append _t_35 nil)))=(cons _t_34 _t_35))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_22 _qv_23)=(append _qv_23 _qv_22)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len _t_35)) (cons _t_34 (append _t_35 nil)))=(cons _t_34 _t_35))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_24 _qv_25) _qv_26)=(append _qv_24 (append _qv_25 _qv_26))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len _t_35)) (cons _t_34 (append _t_35 nil)))=(cons _t_34 _t_35))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_27 _qv_28)=(plus _qv_28 _qv_27)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len _t_35)) (cons _t_34 (append _t_35 nil)))=(cons _t_34 _t_35))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_29 _qv_30) _qv_31)=(plus _qv_29 (plus _qv_30 _qv_31))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len _t_35)) (cons _t_34 (append _t_35 nil)))=(cons _t_34 _t_35))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_32 _qv_33))=(plus (succ _qv_32) (succ _qv_33))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len _t_35)) (cons _t_34 (append _t_35 nil)))=(cons _t_34 _t_35))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_32 _qv_33))=(plus (succ _qv_33) (succ _qv_32))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len _t_35)) (cons _t_34 (append _t_35 nil)))=(cons _t_34 _t_35))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_21))=_qv_21))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len _t_35)) (cons _t_34 (append _t_35 nil)))=(cons _t_34 _t_35))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_22 _qv_23)=(append _qv_23 _qv_22)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len _t_35)) (cons _t_34 (append _t_35 nil)))=(cons _t_34 _t_35))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_24 _qv_25) _qv_26)=(append _qv_24 (append _qv_25 _qv_26))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len _t_35)) (cons _t_34 (append _t_35 nil)))=(cons _t_34 _t_35))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_27 _qv_28)=(plus _qv_28 _qv_27)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len _t_35)) (cons _t_34 (append _t_35 nil)))=(cons _t_34 _t_35))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_29 _qv_30) _qv_31)=(plus _qv_29 (plus _qv_30 _qv_31))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len _t_35)) (cons _t_34 (append _t_35 nil)))=(cons _t_34 _t_35))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_32 _qv_33))=(plus (succ _qv_32) (succ _qv_33))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len _t_35)) (cons _t_34 (append _t_35 nil)))=(cons _t_34 _t_35))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_32 _qv_33))=(plus (succ _qv_33) (succ _qv_32))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len _t_35)) (append (cons _t_34 _t_35) nil))=(cons _t_34 _t_35))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_21))=_qv_21))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len _t_35)) (append (cons _t_34 _t_35) nil))=(cons _t_34 _t_35))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_22 _qv_23)=(append _qv_23 _qv_22)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len _t_35)) (append (cons _t_34 _t_35) nil))=(cons _t_34 _t_35))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_24 _qv_25) _qv_26)=(append _qv_24 (append _qv_25 _qv_26))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len _t_35)) (append (cons _t_34 _t_35) nil))=(cons _t_34 _t_35))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_27 _qv_28)=(plus _qv_28 _qv_27)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len _t_35)) (append (cons _t_34 _t_35) nil))=(cons _t_34 _t_35))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_29 _qv_30) _qv_31)=(plus _qv_29 (plus _qv_30 _qv_31))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len _t_35)) (append (cons _t_34 _t_35) nil))=(cons _t_34 _t_35))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_32 _qv_33))=(plus (succ _qv_32) (succ _qv_33))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len _t_35)) (append (cons _t_34 _t_35) nil))=(cons _t_34 _t_35))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_32 _qv_33))=(plus (succ _qv_33) (succ _qv_32))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (cons _t_34 _t_35)) (append (cons _t_34 _t_35) nil))=(cons _t_34 _t_35))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_21))=_qv_21))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (cons _t_34 _t_35)) (append (cons _t_34 _t_35) nil))=(cons _t_34 _t_35))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_22 _qv_23)=(append _qv_23 _qv_22)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (cons _t_34 _t_35)) (append (cons _t_34 _t_35) nil))=(cons _t_34 _t_35))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_24 _qv_25) _qv_26)=(append _qv_24 (append _qv_25 _qv_26))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (cons _t_34 _t_35)) (append (cons _t_34 _t_35) nil))=(cons _t_34 _t_35))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_27 _qv_28)=(plus _qv_28 _qv_27)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (cons _t_34 _t_35)) (append (cons _t_34 _t_35) nil))=(cons _t_34 _t_35))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_29 _qv_30) _qv_31)=(plus _qv_29 (plus _qv_30 _qv_31))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (cons _t_34 _t_35)) (append (cons _t_34 _t_35) nil))=(cons _t_34 _t_35))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_32 _qv_33))=(plus (succ _qv_32) (succ _qv_33))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (cons _t_34 _t_35)) (append (cons _t_34 _t_35) nil))=(cons _t_34 _t_35))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_32 _qv_33))=(plus (succ _qv_33) (succ _qv_32))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len _t_35)) (cons _t_34 (append _t_35 nil)))=(cons _t_34 _t_35))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_21))=_qv_21))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len _t_35)) (cons _t_34 (append _t_35 nil)))=(cons _t_34 _t_35))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_22 _qv_23)=(append _qv_23 _qv_22)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len _t_35)) (cons _t_34 (append _t_35 nil)))=(cons _t_34 _t_35))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_24 _qv_25) _qv_26)=(append _qv_24 (append _qv_25 _qv_26))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len _t_35)) (cons _t_34 (append _t_35 nil)))=(cons _t_34 _t_35))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_27 _qv_28)=(plus _qv_28 _qv_27)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len _t_35)) (cons _t_34 (append _t_35 nil)))=(cons _t_34 _t_35))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_29 _qv_30) _qv_31)=(plus _qv_29 (plus _qv_30 _qv_31))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len _t_35)) (cons _t_34 (append _t_35 nil)))=(cons _t_34 _t_35))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_32 _qv_33))=(plus (succ _qv_32) (succ _qv_33))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len _t_35)) (cons _t_34 (append _t_35 nil)))=(cons _t_34 _t_35))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_32 _qv_33))=(plus (succ _qv_33) (succ _qv_32))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len _t_35)) (cons _t_34 (append _t_35 nil)))=(cons _t_34 _t_35))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_21))=_qv_21))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len _t_35)) (cons _t_34 (append _t_35 nil)))=(cons _t_34 _t_35))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_22 _qv_23)=(append _qv_23 _qv_22)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len _t_35)) (cons _t_34 (append _t_35 nil)))=(cons _t_34 _t_35))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_24 _qv_25) _qv_26)=(append _qv_24 (append _qv_25 _qv_26))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len _t_35)) (cons _t_34 (append _t_35 nil)))=(cons _t_34 _t_35))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_27 _qv_28)=(plus _qv_28 _qv_27)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len _t_35)) (cons _t_34 (append _t_35 nil)))=(cons _t_34 _t_35))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_29 _qv_30) _qv_31)=(plus _qv_29 (plus _qv_30 _qv_31))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len _t_35)) (cons _t_34 (append _t_35 nil)))=(cons _t_34 _t_35))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_32 _qv_33))=(plus (succ _qv_32) (succ _qv_33))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len _t_35)) (cons _t_34 (append _t_35 nil)))=(cons _t_34 _t_35))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_32 _qv_33))=(plus (succ _qv_33) (succ _qv_32))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (cons _t_34 _t_35)) (cons _t_34 (append _t_35 nil)))=(cons _t_34 _t_35))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_21))=_qv_21))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (cons _t_34 _t_35)) (cons _t_34 (append _t_35 nil)))=(cons _t_34 _t_35))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_22 _qv_23)=(append _qv_23 _qv_22)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (cons _t_34 _t_35)) (cons _t_34 (append _t_35 nil)))=(cons _t_34 _t_35))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_24 _qv_25) _qv_26)=(append _qv_24 (append _qv_25 _qv_26))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (cons _t_34 _t_35)) (cons _t_34 (append _t_35 nil)))=(cons _t_34 _t_35))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_27 _qv_28)=(plus _qv_28 _qv_27)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (cons _t_34 _t_35)) (cons _t_34 (append _t_35 nil)))=(cons _t_34 _t_35))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_29 _qv_30) _qv_31)=(plus _qv_29 (plus _qv_30 _qv_31))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (cons _t_34 _t_35)) (cons _t_34 (append _t_35 nil)))=(cons _t_34 _t_35))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_32 _qv_33))=(plus (succ _qv_32) (succ _qv_33))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (cons _t_34 _t_35)) (cons _t_34 (append _t_35 nil)))=(cons _t_34 _t_35))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_32 _qv_33))=(plus (succ _qv_33) (succ _qv_32))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len _t_35)) (cons _t_34 (append _t_35 nil)))=(cons _t_34 _t_35))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_21))=_qv_21))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len _t_35)) (cons _t_34 (append _t_35 nil)))=(cons _t_34 _t_35))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_22 _qv_23)=(append _qv_23 _qv_22)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len _t_35)) (cons _t_34 (append _t_35 nil)))=(cons _t_34 _t_35))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_24 _qv_25) _qv_26)=(append _qv_24 (append _qv_25 _qv_26))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len _t_35)) (cons _t_34 (append _t_35 nil)))=(cons _t_34 _t_35))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_27 _qv_28)=(plus _qv_28 _qv_27)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len _t_35)) (cons _t_34 (append _t_35 nil)))=(cons _t_34 _t_35))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_29 _qv_30) _qv_31)=(plus _qv_29 (plus _qv_30 _qv_31))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len _t_35)) (cons _t_34 (append _t_35 nil)))=(cons _t_34 _t_35))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_32 _qv_33))=(plus (succ _qv_32) (succ _qv_33))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len _t_35)) (cons _t_34 (append _t_35 nil)))=(cons _t_34 _t_35))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_32 _qv_33))=(plus (succ _qv_33) (succ _qv_32))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len _t_35)) (cons _t_34 (append _t_35 nil)))=(cons _t_34 _t_35))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_21))=_qv_21))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len _t_35)) (cons _t_34 (append _t_35 nil)))=(cons _t_34 _t_35))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_22 _qv_23)=(append _qv_23 _qv_22)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len _t_35)) (cons _t_34 (append _t_35 nil)))=(cons _t_34 _t_35))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_24 _qv_25) _qv_26)=(append _qv_24 (append _qv_25 _qv_26))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len _t_35)) (cons _t_34 (append _t_35 nil)))=(cons _t_34 _t_35))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_27 _qv_28)=(plus _qv_28 _qv_27)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len _t_35)) (cons _t_34 (append _t_35 nil)))=(cons _t_34 _t_35))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_29 _qv_30) _qv_31)=(plus _qv_29 (plus _qv_30 _qv_31))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len _t_35)) (cons _t_34 (append _t_35 nil)))=(cons _t_34 _t_35))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_32 _qv_33))=(plus (succ _qv_32) (succ _qv_33))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (len _t_35)) (cons _t_34 (append _t_35 nil)))=(cons _t_34 _t_35))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_32 _qv_33))=(plus (succ _qv_33) (succ _qv_32))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (cons _t_34 _t_35)) (cons _t_34 (append _t_35 nil)))=(cons _t_34 _t_35))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_21))=_qv_21))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (cons _t_34 _t_35)) (cons _t_34 (append _t_35 nil)))=(cons _t_34 _t_35))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_22 _qv_23)=(append _qv_23 _qv_22)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (cons _t_34 _t_35)) (cons _t_34 (append _t_35 nil)))=(cons _t_34 _t_35))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_24 _qv_25) _qv_26)=(append _qv_24 (append _qv_25 _qv_26))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (cons _t_34 _t_35)) (cons _t_34 (append _t_35 nil)))=(cons _t_34 _t_35))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_27 _qv_28)=(plus _qv_28 _qv_27)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (cons _t_34 _t_35)) (cons _t_34 (append _t_35 nil)))=(cons _t_34 _t_35))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_29 _qv_30) _qv_31)=(plus _qv_29 (plus _qv_30 _qv_31))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (cons _t_34 _t_35)) (cons _t_34 (append _t_35 nil)))=(cons _t_34 _t_35))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_32 _qv_33))=(plus (succ _qv_32) (succ _qv_33))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (cons _t_34 _t_35)) (cons _t_34 (append _t_35 nil)))=(cons _t_34 _t_35))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_32 _qv_33))=(plus (succ _qv_33) (succ _qv_32))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (cons _t_34 _t_35)) (append (cons _t_34 _t_35) nil))=(cons _t_34 _t_35))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_21))=_qv_21))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (cons _t_34 _t_35)) (append (cons _t_34 _t_35) nil))=(cons _t_34 _t_35))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_22 _qv_23)=(append _qv_23 _qv_22)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (cons _t_34 _t_35)) (append (cons _t_34 _t_35) nil))=(cons _t_34 _t_35))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_24 _qv_25) _qv_26)=(append _qv_24 (append _qv_25 _qv_26))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (cons _t_34 _t_35)) (append (cons _t_34 _t_35) nil))=(cons _t_34 _t_35))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_27 _qv_28)=(plus _qv_28 _qv_27)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (cons _t_34 _t_35)) (append (cons _t_34 _t_35) nil))=(cons _t_34 _t_35))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_29 _qv_30) _qv_31)=(plus _qv_29 (plus _qv_30 _qv_31))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (cons _t_34 _t_35)) (append (cons _t_34 _t_35) nil))=(cons _t_34 _t_35))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_32 _qv_33))=(plus (succ _qv_32) (succ _qv_33))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (cons _t_34 _t_35)) (append (cons _t_34 _t_35) nil))=(cons _t_34 _t_35))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_32 _qv_33))=(plus (succ _qv_33) (succ _qv_32))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len _v_20) (append _v_20 nil))=(append nil _v_20))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len _v_20) (append _v_20 nil))=(append nil _v_20))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len _v_20) (append _v_20 nil))=(append nil _v_20))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len _v_20) (append _v_20 nil))=(append nil _v_20))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len _v_20) (append _v_20 nil))=(append nil _v_20))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len _v_20) (append _v_20 nil))=(append nil _v_20))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_11 _qv_12))=(plus (succ _qv_11) (succ _qv_12))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len _v_20) (append _v_20 nil))=(append nil _v_20))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_11 _qv_12))=(plus (succ _qv_12) (succ _qv_11))))
USE ASSUMPTION FAILED

  backtrack to: ((rotate (len _v_20) (append _v_20 nil))=(append nil _v_20))
}
Unknown
sat
