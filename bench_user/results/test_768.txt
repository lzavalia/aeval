
The Knowledge Scheme currently contains the following lemmas:
	(forall ((Lst) (Lst)) ((append _qv_0 _qv_1)=(append _qv_1 _qv_0)))
	(forall ((Lst) (Lst) (Lst)) ((append (append _qv_2 _qv_3) _qv_4)=(append _qv_2 (append _qv_3 _qv_4))))
	(forall ((Lst)) (0<=(len _qv_5)))
	(forall ((Lst)) ((rev (rev _qv_6))=_qv_6))
	(forall ((Lst) (Lst)) ((zip _qv_7 _qv_8)=(zip _qv_8 _qv_7)))
	(forall ((ZLst) (ZLst)) ((zappend _qv_9 _qv_10)=(zappend _qv_10 _qv_9)))
	(forall ((ZLst) (ZLst) (ZLst)) ((zappend (zappend _qv_11 _qv_12) _qv_13)=(zappend _qv_11 (zappend _qv_12 _qv_13))))
	(forall ((ZLst)) ((zrev (zrev _qv_14))=_qv_14))
	(forall ((Lst)) ((len (rev _qv_15))=(len _qv_15)))
	(forall ((Lst) (Lst)) ((rev (append _qv_16 _qv_17))=(append (rev _qv_16) (rev _qv_17))))
	(forall ((Lst) (Lst)) ((rev (append _qv_16 _qv_17))=(append (rev _qv_17) (rev _qv_16))))
	(forall ((ZLst) (ZLst)) ((zrev (zappend _qv_18 _qv_19))=(zappend (zrev _qv_18) (zrev _qv_19))))
	(forall ((ZLst) (ZLst)) ((zrev (zappend _qv_18 _qv_19))=(zappend (zrev _qv_19) (zrev _qv_18))))

Simplified goal: (forall ((Lst) (Lst)) (((len xs)=(len ys))->((zip (rev xs) (rev ys))=(zrev (zip xs ys)))))


Base case:       ((zip (rev nil) (rev _v_20))=(zrev (zip nil _v_20)))
{
  proven trivially
}
Inductive step:  ((zip (rev (cons _t_21 _t_22)) (rev _v_20))=(zrev (zip (cons _t_21 _t_22) _v_20)))
{
  {
    ====================
    | Assumptions [0]: ((len nil)=0)
    | Assumptions [1]: ((rev nil)=nil)
    | Assumptions [2]: ((zrev znil)=znil)
    | Assumptions [3]: (forall ((Lst)) ((append nil _qv_1)=_qv_1))
    | Assumptions [4]: (forall (INT (Lst) (Lst)) ((append (cons _qv_2 _qv_3) _qv_4)=(cons _qv_2 (append _qv_3 _qv_4))))
    | Assumptions [5]: (forall (INT (Lst)) ((len (cons _qv_5 _qv_6))=(1+(len _qv_6))))
    | Assumptions [6]: (forall ((Lst)) ((len _qv_7)>=0))
    | Assumptions [7]: (forall (INT (Lst)) ((rev (cons _qv_8 _qv_9))=(append (rev _qv_9) (cons _qv_8 nil))))
    | Assumptions [8]: (forall ((Lst)) ((zip nil _qv_10)=znil))
    | Assumptions [9]: (forall ((Lst)) ((zip _qv_11 nil)=znil))
    | Assumptions [10]: (forall (INT (Lst) INT (Lst)) ((zip (cons _qv_12 _qv_13) (cons _qv_14 _qv_15))=(zcons (mkpair _qv_12 _qv_14) (zip _qv_13 _qv_15))))
    | Assumptions [11]: (forall ((ZLst)) ((zappend znil _qv_16)=_qv_16))
    | Assumptions [12]: (forall ((Pair) (ZLst) (ZLst)) ((zappend (zcons _qv_17 _qv_18) _qv_19)=(zcons _qv_17 (zappend _qv_18 _qv_19))))
    | Assumptions [13]: (forall ((Pair) (ZLst)) ((zrev (zcons _qv_20 _qv_21))=(zappend (zrev _qv_21) (zcons _qv_20 znil))))
    | Assumptions [14]: (forall ((Lst)) (((len _t_22)=(len ys))->((zip (rev _t_22) (rev ys))=(zrev (zip _t_22 ys)))))
    | Assumptions [15]: ((len (cons _t_21 _t_22))=(len _v_20))
    | Assumptions [16]: ((len _t_22)=((len _v_20)+-1))
    ====================
  }
  rewritten [7]: ((zip (append (rev _t_22) (cons _t_21 nil)) (rev _v_20))=(zrev (zip (cons _t_21 _t_22) _v_20)))
CURRENT SUBGOAL ((zip (rev (cons _t_21 _t_22)) (rev _v_20))=(zrev (zip (cons _t_21 _t_22) _v_20)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_0 _qv_1)=(append _qv_1 _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((zip (rev (cons _t_21 _t_22)) (rev _v_20))=(zrev (zip (cons _t_21 _t_22) _v_20)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_2 _qv_3) _qv_4)=(append _qv_2 (append _qv_3 _qv_4))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((zip (rev (cons _t_21 _t_22)) (rev _v_20))=(zrev (zip (cons _t_21 _t_22) _v_20)))
NOW TESTING (forall ((Lst)) (0<=(len _qv_5)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((zip (rev (cons _t_21 _t_22)) (rev _v_20))=(zrev (zip (cons _t_21 _t_22) _v_20)))
NOW TESTING (forall ((Lst)) ((rev (rev _qv_6))=_qv_6))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((zip (rev (cons _t_21 _t_22)) (rev _v_20))=(zrev (zip (cons _t_21 _t_22) _v_20)))
NOW TESTING (forall ((Lst) (Lst)) ((zip _qv_7 _qv_8)=(zip _qv_8 _qv_7)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((zip (rev (cons _t_21 _t_22)) (rev _v_20))=(zrev (zip (cons _t_21 _t_22) _v_20)))
NOW TESTING (forall ((ZLst) (ZLst)) ((zappend _qv_9 _qv_10)=(zappend _qv_10 _qv_9)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((zip (rev (cons _t_21 _t_22)) (rev _v_20))=(zrev (zip (cons _t_21 _t_22) _v_20)))
NOW TESTING (forall ((ZLst) (ZLst) (ZLst)) ((zappend (zappend _qv_11 _qv_12) _qv_13)=(zappend _qv_11 (zappend _qv_12 _qv_13))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((zip (rev (cons _t_21 _t_22)) (rev _v_20))=(zrev (zip (cons _t_21 _t_22) _v_20)))
NOW TESTING (forall ((ZLst)) ((zrev (zrev _qv_14))=_qv_14))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((zip (rev (cons _t_21 _t_22)) (rev _v_20))=(zrev (zip (cons _t_21 _t_22) _v_20)))
NOW TESTING (forall ((Lst)) ((len (rev _qv_15))=(len _qv_15)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((zip (rev (cons _t_21 _t_22)) (rev _v_20))=(zrev (zip (cons _t_21 _t_22) _v_20)))
NOW TESTING (forall ((Lst) (Lst)) ((rev (append _qv_16 _qv_17))=(append (rev _qv_16) (rev _qv_17))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((zip (rev (cons _t_21 _t_22)) (rev _v_20))=(zrev (zip (cons _t_21 _t_22) _v_20)))
NOW TESTING (forall ((Lst) (Lst)) ((rev (append _qv_16 _qv_17))=(append (rev _qv_17) (rev _qv_16))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((zip (rev (cons _t_21 _t_22)) (rev _v_20))=(zrev (zip (cons _t_21 _t_22) _v_20)))
NOW TESTING (forall ((ZLst) (ZLst)) ((zrev (zappend _qv_18 _qv_19))=(zappend (zrev _qv_18) (zrev _qv_19))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((zip (rev (cons _t_21 _t_22)) (rev _v_20))=(zrev (zip (cons _t_21 _t_22) _v_20)))
NOW TESTING (forall ((ZLst) (ZLst)) ((zrev (zappend _qv_18 _qv_19))=(zappend (zrev _qv_19) (zrev _qv_18))))
USE ASSUMPTION FAILED

  backtrack to: ((zip (rev (cons _t_21 _t_22)) (rev _v_20))=(zrev (zip (cons _t_21 _t_22) _v_20)))
  rewritten [7]: ((zip (append (rev _t_22) (cons _t_21 nil)) (rev _v_20))=(zrev (zip (cons _t_21 _t_22) _v_20)))
CURRENT SUBGOAL ((zip (rev (cons _t_21 _t_22)) (rev _v_20))=(zrev (zip (cons _t_21 _t_22) _v_20)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_0 _qv_1)=(append _qv_1 _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((zip (rev (cons _t_21 _t_22)) (rev _v_20))=(zrev (zip (cons _t_21 _t_22) _v_20)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_2 _qv_3) _qv_4)=(append _qv_2 (append _qv_3 _qv_4))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((zip (rev (cons _t_21 _t_22)) (rev _v_20))=(zrev (zip (cons _t_21 _t_22) _v_20)))
NOW TESTING (forall ((Lst)) (0<=(len _qv_5)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((zip (rev (cons _t_21 _t_22)) (rev _v_20))=(zrev (zip (cons _t_21 _t_22) _v_20)))
NOW TESTING (forall ((Lst)) ((rev (rev _qv_6))=_qv_6))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((zip (rev (cons _t_21 _t_22)) (rev _v_20))=(zrev (zip (cons _t_21 _t_22) _v_20)))
NOW TESTING (forall ((Lst) (Lst)) ((zip _qv_7 _qv_8)=(zip _qv_8 _qv_7)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((zip (rev (cons _t_21 _t_22)) (rev _v_20))=(zrev (zip (cons _t_21 _t_22) _v_20)))
NOW TESTING (forall ((ZLst) (ZLst)) ((zappend _qv_9 _qv_10)=(zappend _qv_10 _qv_9)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((zip (rev (cons _t_21 _t_22)) (rev _v_20))=(zrev (zip (cons _t_21 _t_22) _v_20)))
NOW TESTING (forall ((ZLst) (ZLst) (ZLst)) ((zappend (zappend _qv_11 _qv_12) _qv_13)=(zappend _qv_11 (zappend _qv_12 _qv_13))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((zip (rev (cons _t_21 _t_22)) (rev _v_20))=(zrev (zip (cons _t_21 _t_22) _v_20)))
NOW TESTING (forall ((ZLst)) ((zrev (zrev _qv_14))=_qv_14))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((zip (rev (cons _t_21 _t_22)) (rev _v_20))=(zrev (zip (cons _t_21 _t_22) _v_20)))
NOW TESTING (forall ((Lst)) ((len (rev _qv_15))=(len _qv_15)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((zip (rev (cons _t_21 _t_22)) (rev _v_20))=(zrev (zip (cons _t_21 _t_22) _v_20)))
NOW TESTING (forall ((Lst) (Lst)) ((rev (append _qv_16 _qv_17))=(append (rev _qv_16) (rev _qv_17))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((zip (rev (cons _t_21 _t_22)) (rev _v_20))=(zrev (zip (cons _t_21 _t_22) _v_20)))
NOW TESTING (forall ((Lst) (Lst)) ((rev (append _qv_16 _qv_17))=(append (rev _qv_17) (rev _qv_16))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((zip (rev (cons _t_21 _t_22)) (rev _v_20))=(zrev (zip (cons _t_21 _t_22) _v_20)))
NOW TESTING (forall ((ZLst) (ZLst)) ((zrev (zappend _qv_18 _qv_19))=(zappend (zrev _qv_18) (zrev _qv_19))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((zip (rev (cons _t_21 _t_22)) (rev _v_20))=(zrev (zip (cons _t_21 _t_22) _v_20)))
NOW TESTING (forall ((ZLst) (ZLst)) ((zrev (zappend _qv_18 _qv_19))=(zappend (zrev _qv_19) (zrev _qv_18))))
USE ASSUMPTION FAILED

  backtrack to: ((zip (rev (cons _t_21 _t_22)) (rev _v_20))=(zrev (zip (cons _t_21 _t_22) _v_20)))

Base case:       ((zip (rev _v_23) (rev nil))=(zrev (zip _v_23 nil)))
{
  proven trivially
}
Inductive step:  ((zip (rev _v_23) (rev (cons _t_24 _t_25)))=(zrev (zip _v_23 (cons _t_24 _t_25))))
{
  {
    ====================
    | Assumptions [0]: ((len nil)=0)
    | Assumptions [1]: ((rev nil)=nil)
    | Assumptions [2]: ((zrev znil)=znil)
    | Assumptions [3]: (forall ((Lst)) ((append nil _qv_1)=_qv_1))
    | Assumptions [4]: (forall (INT (Lst) (Lst)) ((append (cons _qv_2 _qv_3) _qv_4)=(cons _qv_2 (append _qv_3 _qv_4))))
    | Assumptions [5]: (forall (INT (Lst)) ((len (cons _qv_5 _qv_6))=(1+(len _qv_6))))
    | Assumptions [6]: (forall ((Lst)) ((len _qv_7)>=0))
    | Assumptions [7]: (forall (INT (Lst)) ((rev (cons _qv_8 _qv_9))=(append (rev _qv_9) (cons _qv_8 nil))))
    | Assumptions [8]: (forall ((Lst)) ((zip nil _qv_10)=znil))
    | Assumptions [9]: (forall ((Lst)) ((zip _qv_11 nil)=znil))
    | Assumptions [10]: (forall (INT (Lst) INT (Lst)) ((zip (cons _qv_12 _qv_13) (cons _qv_14 _qv_15))=(zcons (mkpair _qv_12 _qv_14) (zip _qv_13 _qv_15))))
    | Assumptions [11]: (forall ((ZLst)) ((zappend znil _qv_16)=_qv_16))
    | Assumptions [12]: (forall ((Pair) (ZLst) (ZLst)) ((zappend (zcons _qv_17 _qv_18) _qv_19)=(zcons _qv_17 (zappend _qv_18 _qv_19))))
    | Assumptions [13]: (forall ((Pair) (ZLst)) ((zrev (zcons _qv_20 _qv_21))=(zappend (zrev _qv_21) (zcons _qv_20 znil))))
    | Assumptions [14]: (forall ((Lst)) (((len _t_22)=(len ys))->((zip (rev _t_22) (rev ys))=(zrev (zip _t_22 ys)))))
    | Assumptions [15]: ((len (cons _t_21 _t_22))=(len _v_20))
    | Assumptions [16]: ((len _t_22)=((len _v_20)+-1))
    | Assumptions [17]: (forall ((Lst)) (((len xs)=(len _t_25))->((zip (rev xs) (rev _t_25))=(zrev (zip xs _t_25)))))
    | Assumptions [18]: ((len _v_23)=(len (cons _t_24 _t_25)))
    | Assumptions [19]: ((len _v_23)=((len _t_25)+1))
    | Assumptions [20]: ((len _t_25)=((len (cons _t_24 _t_25))+-1))
    | Assumptions [21]: ((len (cons _t_24 _t_25))=((len _t_25)+1))
    ====================
  }
  rewritten [7]: ((zip (rev _v_23) (append (rev _t_25) (cons _t_24 nil)))=(zrev (zip _v_23 (cons _t_24 _t_25))))
CURRENT SUBGOAL ((zip (rev _v_23) (rev (cons _t_24 _t_25)))=(zrev (zip _v_23 (cons _t_24 _t_25))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_0 _qv_1)=(append _qv_1 _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((zip (rev _v_23) (rev (cons _t_24 _t_25)))=(zrev (zip _v_23 (cons _t_24 _t_25))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_2 _qv_3) _qv_4)=(append _qv_2 (append _qv_3 _qv_4))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((zip (rev _v_23) (rev (cons _t_24 _t_25)))=(zrev (zip _v_23 (cons _t_24 _t_25))))
NOW TESTING (forall ((Lst)) (0<=(len _qv_5)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((zip (rev _v_23) (rev (cons _t_24 _t_25)))=(zrev (zip _v_23 (cons _t_24 _t_25))))
NOW TESTING (forall ((Lst)) ((rev (rev _qv_6))=_qv_6))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((zip (rev _v_23) (rev (cons _t_24 _t_25)))=(zrev (zip _v_23 (cons _t_24 _t_25))))
NOW TESTING (forall ((Lst) (Lst)) ((zip _qv_7 _qv_8)=(zip _qv_8 _qv_7)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((zip (rev _v_23) (rev (cons _t_24 _t_25)))=(zrev (zip _v_23 (cons _t_24 _t_25))))
NOW TESTING (forall ((ZLst) (ZLst)) ((zappend _qv_9 _qv_10)=(zappend _qv_10 _qv_9)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((zip (rev _v_23) (rev (cons _t_24 _t_25)))=(zrev (zip _v_23 (cons _t_24 _t_25))))
NOW TESTING (forall ((ZLst) (ZLst) (ZLst)) ((zappend (zappend _qv_11 _qv_12) _qv_13)=(zappend _qv_11 (zappend _qv_12 _qv_13))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((zip (rev _v_23) (rev (cons _t_24 _t_25)))=(zrev (zip _v_23 (cons _t_24 _t_25))))
NOW TESTING (forall ((ZLst)) ((zrev (zrev _qv_14))=_qv_14))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((zip (rev _v_23) (rev (cons _t_24 _t_25)))=(zrev (zip _v_23 (cons _t_24 _t_25))))
NOW TESTING (forall ((Lst)) ((len (rev _qv_15))=(len _qv_15)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((zip (rev _v_23) (rev (cons _t_24 _t_25)))=(zrev (zip _v_23 (cons _t_24 _t_25))))
NOW TESTING (forall ((Lst) (Lst)) ((rev (append _qv_16 _qv_17))=(append (rev _qv_16) (rev _qv_17))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((zip (rev _v_23) (rev (cons _t_24 _t_25)))=(zrev (zip _v_23 (cons _t_24 _t_25))))
NOW TESTING (forall ((Lst) (Lst)) ((rev (append _qv_16 _qv_17))=(append (rev _qv_17) (rev _qv_16))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((zip (rev _v_23) (rev (cons _t_24 _t_25)))=(zrev (zip _v_23 (cons _t_24 _t_25))))
NOW TESTING (forall ((ZLst) (ZLst)) ((zrev (zappend _qv_18 _qv_19))=(zappend (zrev _qv_18) (zrev _qv_19))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((zip (rev _v_23) (rev (cons _t_24 _t_25)))=(zrev (zip _v_23 (cons _t_24 _t_25))))
NOW TESTING (forall ((ZLst) (ZLst)) ((zrev (zappend _qv_18 _qv_19))=(zappend (zrev _qv_19) (zrev _qv_18))))
USE ASSUMPTION FAILED

  backtrack to: ((zip (rev _v_23) (rev (cons _t_24 _t_25)))=(zrev (zip _v_23 (cons _t_24 _t_25))))
  rewritten [7]: ((zip (rev _v_23) (append (rev _t_25) (cons _t_24 nil)))=(zrev (zip _v_23 (cons _t_24 _t_25))))
CURRENT SUBGOAL ((zip (rev _v_23) (rev (cons _t_24 _t_25)))=(zrev (zip _v_23 (cons _t_24 _t_25))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_0 _qv_1)=(append _qv_1 _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((zip (rev _v_23) (rev (cons _t_24 _t_25)))=(zrev (zip _v_23 (cons _t_24 _t_25))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_2 _qv_3) _qv_4)=(append _qv_2 (append _qv_3 _qv_4))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((zip (rev _v_23) (rev (cons _t_24 _t_25)))=(zrev (zip _v_23 (cons _t_24 _t_25))))
NOW TESTING (forall ((Lst)) (0<=(len _qv_5)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((zip (rev _v_23) (rev (cons _t_24 _t_25)))=(zrev (zip _v_23 (cons _t_24 _t_25))))
NOW TESTING (forall ((Lst)) ((rev (rev _qv_6))=_qv_6))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((zip (rev _v_23) (rev (cons _t_24 _t_25)))=(zrev (zip _v_23 (cons _t_24 _t_25))))
NOW TESTING (forall ((Lst) (Lst)) ((zip _qv_7 _qv_8)=(zip _qv_8 _qv_7)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((zip (rev _v_23) (rev (cons _t_24 _t_25)))=(zrev (zip _v_23 (cons _t_24 _t_25))))
NOW TESTING (forall ((ZLst) (ZLst)) ((zappend _qv_9 _qv_10)=(zappend _qv_10 _qv_9)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((zip (rev _v_23) (rev (cons _t_24 _t_25)))=(zrev (zip _v_23 (cons _t_24 _t_25))))
NOW TESTING (forall ((ZLst) (ZLst) (ZLst)) ((zappend (zappend _qv_11 _qv_12) _qv_13)=(zappend _qv_11 (zappend _qv_12 _qv_13))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((zip (rev _v_23) (rev (cons _t_24 _t_25)))=(zrev (zip _v_23 (cons _t_24 _t_25))))
NOW TESTING (forall ((ZLst)) ((zrev (zrev _qv_14))=_qv_14))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((zip (rev _v_23) (rev (cons _t_24 _t_25)))=(zrev (zip _v_23 (cons _t_24 _t_25))))
NOW TESTING (forall ((Lst)) ((len (rev _qv_15))=(len _qv_15)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((zip (rev _v_23) (rev (cons _t_24 _t_25)))=(zrev (zip _v_23 (cons _t_24 _t_25))))
NOW TESTING (forall ((Lst) (Lst)) ((rev (append _qv_16 _qv_17))=(append (rev _qv_16) (rev _qv_17))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((zip (rev _v_23) (rev (cons _t_24 _t_25)))=(zrev (zip _v_23 (cons _t_24 _t_25))))
NOW TESTING (forall ((Lst) (Lst)) ((rev (append _qv_16 _qv_17))=(append (rev _qv_17) (rev _qv_16))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((zip (rev _v_23) (rev (cons _t_24 _t_25)))=(zrev (zip _v_23 (cons _t_24 _t_25))))
NOW TESTING (forall ((ZLst) (ZLst)) ((zrev (zappend _qv_18 _qv_19))=(zappend (zrev _qv_18) (zrev _qv_19))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((zip (rev _v_23) (rev (cons _t_24 _t_25)))=(zrev (zip _v_23 (cons _t_24 _t_25))))
NOW TESTING (forall ((ZLst) (ZLst)) ((zrev (zappend _qv_18 _qv_19))=(zappend (zrev _qv_19) (zrev _qv_18))))
USE ASSUMPTION FAILED

  backtrack to: ((zip (rev _v_23) (rev (cons _t_24 _t_25)))=(zrev (zip _v_23 (cons _t_24 _t_25))))
Unknown
sat
