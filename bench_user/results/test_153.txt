
The Knowledge Scheme currently contains the following lemmas:
	(forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
	(forall ((Nat)) (0<=(nat-to-int _qv_1)))
	(forall ((Nat)) ((nat-to-int (succ _qv_2))=(nat-to-int _qv_2)))

Simplified goal: (forall ((Nat) (Nat) (Lst)) ((take (succ n) (cons x xs))=(cons x (take n xs))))


Base case:       ((take (succ zero) (cons _v_3 _v_4))=(cons _v_3 (take zero _v_4)))
{
  proven trivially
}
Inductive step:  ((take (succ (succ _t_5)) (cons _v_3 _v_4))=(cons _v_3 (take (succ _t_5) _v_4)))
{
  proven trivially
}

Proved
unsat
