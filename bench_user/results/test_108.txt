
The Knowledge Scheme currently contains the following lemmas:
	(forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
	(forall ((Nat)) (0<=(nat-to-int _qv_1)))
	(forall ((Lst) (Lst)) ((zip _qv_2 _qv_3)=(zip _qv_3 _qv_2)))
	(forall ((Nat)) ((nat-to-int (succ _qv_4))=(nat-to-int _qv_4)))

Simplified goal: (forall ((Lst)) ((zip nil ys)=znil))


Base case:       ((zip nil nil)=znil)
{
  proven trivially
}
Inductive step:  ((zip nil (cons _t_5 _t_6))=(zip nil _t_6))
{
  proven trivially
}

Proved
unsat
