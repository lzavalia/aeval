
The Knowledge Scheme currently contains the following lemmas:
	(forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
	(forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
	(forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
	(forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
	(forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
	(forall ((Nat) (Nat)) ((succ (plus _qv_11 _qv_12))=(plus (succ _qv_11) (succ _qv_12))))
	(forall ((Nat) (Nat)) ((succ (plus _qv_11 _qv_12))=(plus (succ _qv_12) (succ _qv_11))))

Simplified goal: (forall ((Nat) (Nat) (Lst)) ((rotate (succ n) (rotate m x))=(rotate (succ m) (rotate n x))))


Base case:       ((rotate (succ zero) (rotate _v_13 _v_14))=(rotate (succ _v_13) (rotate zero _v_14)))
{
  {
    ====================
    | Assumptions [0]: (forall ((Nat) (Lst)) ((len (cons _qv_1 _qv_2))=(succ (len _qv_2))))
    | Assumptions [1]: (forall ((Lst)) ((append nil _qv_3)=_qv_3))
    | Assumptions [2]: (forall ((Nat) (Lst) (Lst)) ((append (cons _qv_4 _qv_5) _qv_6)=(cons _qv_4 (append _qv_5 _qv_6))))
    | Assumptions [3]: (forall ((Nat)) ((rotate (succ _qv_8) nil)=nil))
    | Assumptions [4]: (forall ((Nat) (Nat) (Lst)) ((rotate (succ _qv_9) (cons _qv_10 _qv_11))=(rotate _qv_9 (append _qv_11 (cons _qv_10 nil)))))
    | Assumptions [5]: (forall ((Nat) (Nat)) ((plus (succ _qv_13) _qv_14)=(succ (plus _qv_13 _qv_14))))
    | Assumptions [6]: (forall ((Nat) (Nat) (Lst)) ((rotate _qv_15 (rotate _qv_16 _qv_17))=(rotate _qv_16 (rotate _qv_15 _qv_17))))
    | Assumptions [7]: (forall ((Lst)) ((rotate (len nil) _qv_7)=_qv_7))
    | Assumptions [8]: (forall ((Nat)) ((plus (len nil) _qv_12)=_qv_12))
    ====================
  }
  rewritten [6]: ((rotate (succ (len nil)) (rotate _v_13 _v_14))=(rotate (len nil) (rotate (succ _v_13) _v_14)))
  rewritten [6]: ((rotate (succ (len nil)) (rotate _v_13 _v_14))=(rotate (succ _v_13) (rotate (len nil) _v_14)))
  rewritten [6]: ((rotate _v_13 (rotate (succ (len nil)) _v_14))=(rotate (succ _v_13) (rotate (len nil) _v_14)))
  rewritten [6]: ((rotate _v_13 (rotate (succ (len nil)) _v_14))=(rotate (len nil) (rotate (succ _v_13) _v_14)))
  sequence of rewrites only grows

The Knowledge Scheme currently contains the following lemmas:
	(forall ((Nat)) ((succ (succ _qv_16))=_qv_16))
	(forall ((Lst) (Lst)) ((append _qv_17 _qv_18)=(append _qv_18 _qv_17)))
	(forall ((Lst) (Lst) (Lst)) ((append (append _qv_19 _qv_20) _qv_21)=(append _qv_19 (append _qv_20 _qv_21))))
	(forall ((Nat) (Nat)) ((plus _qv_22 _qv_23)=(plus _qv_23 _qv_22)))
	(forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_24 _qv_25) _qv_26)=(plus _qv_24 (plus _qv_25 _qv_26))))
	(forall ((Nat) (Nat)) ((succ (plus _qv_27 _qv_28))=(plus (succ _qv_27) (succ _qv_28))))
	(forall ((Nat) (Nat)) ((succ (plus _qv_27 _qv_28))=(plus (succ _qv_28) (succ _qv_27))))


The Knowledge Scheme currently contains the following lemmas:
	(forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
	(forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
	(forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
	(forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
	(forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
	(forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
	(forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))

CURRENT SUBGOAL ((rotate zero (rotate (succ (succ _t_45)) _v_44))=(rotate (succ zero) (rotate (succ _t_45) _v_44)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ (succ _t_45)) _v_44))=(rotate (succ zero) (rotate (succ _t_45) _v_44)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ (succ _t_45)) _v_44))=(rotate (succ zero) (rotate (succ _t_45) _v_44)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ (succ _t_45)) _v_44))=(rotate (succ zero) (rotate (succ _t_45) _v_44)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ (succ _t_45)) _v_44))=(rotate (succ zero) (rotate (succ _t_45) _v_44)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ (succ _t_45)) _v_44))=(rotate (succ zero) (rotate (succ _t_45) _v_44)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ (succ _t_45)) _v_44))=(rotate (succ zero) (rotate (succ _t_45) _v_44)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ (succ _t_45)) _v_44))=(rotate (succ zero) (rotate (succ _t_45) _v_44)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ (succ _t_45)) _v_44))=(rotate (succ zero) (rotate (succ _t_45) _v_44)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ (succ _t_45)) _v_44))=(rotate (succ zero) (rotate (succ _t_45) _v_44)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ (succ _t_45)) _v_44))=(rotate (succ zero) (rotate (succ _t_45) _v_44)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ (succ _t_45)) _v_44))=(rotate (succ zero) (rotate (succ _t_45) _v_44)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ (succ _t_45)) _v_44))=(rotate (succ zero) (rotate (succ _t_45) _v_44)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ (succ _t_45)) _v_44))=(rotate (succ zero) (rotate (succ _t_45) _v_44)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (succ _t_45)) (rotate zero _v_44))=(rotate (succ zero) (rotate (succ _t_45) _v_44)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (succ _t_45)) (rotate zero _v_44))=(rotate (succ zero) (rotate (succ _t_45) _v_44)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (succ _t_45)) (rotate zero _v_44))=(rotate (succ zero) (rotate (succ _t_45) _v_44)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (succ _t_45)) (rotate zero _v_44))=(rotate (succ zero) (rotate (succ _t_45) _v_44)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (succ _t_45)) (rotate zero _v_44))=(rotate (succ zero) (rotate (succ _t_45) _v_44)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (succ _t_45)) (rotate zero _v_44))=(rotate (succ zero) (rotate (succ _t_45) _v_44)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (succ _t_45)) (rotate zero _v_44))=(rotate (succ zero) (rotate (succ _t_45) _v_44)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ (succ _t_45)) _v_44))=(rotate (succ zero) (rotate (succ _t_45) _v_44)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ (succ _t_45)) _v_44))=(rotate (succ zero) (rotate (succ _t_45) _v_44)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ (succ _t_45)) _v_44))=(rotate (succ zero) (rotate (succ _t_45) _v_44)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ (succ _t_45)) _v_44))=(rotate (succ zero) (rotate (succ _t_45) _v_44)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ (succ _t_45)) _v_44))=(rotate (succ zero) (rotate (succ _t_45) _v_44)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ (succ _t_45)) _v_44))=(rotate (succ zero) (rotate (succ _t_45) _v_44)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ (succ _t_45)) _v_44))=(rotate (succ zero) (rotate (succ _t_45) _v_44)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ (succ _t_45)) _v_44))=(rotate (succ zero) (rotate (succ _t_45) _v_44)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ (succ _t_45)) _v_44))=(rotate (succ zero) (rotate (succ _t_45) _v_44)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ (succ _t_45)) _v_44))=(rotate (succ zero) (rotate (succ _t_45) _v_44)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ (succ _t_45)) _v_44))=(rotate (succ zero) (rotate (succ _t_45) _v_44)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ (succ _t_45)) _v_44))=(rotate (succ zero) (rotate (succ _t_45) _v_44)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ (succ _t_45)) _v_44))=(rotate (succ zero) (rotate (succ _t_45) _v_44)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ (succ _t_45)) _v_44))=(rotate (succ zero) (rotate (succ _t_45) _v_44)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (succ _t_45)) (rotate zero _v_44))=(rotate (succ zero) (rotate (succ _t_45) _v_44)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (succ _t_45)) (rotate zero _v_44))=(rotate (succ zero) (rotate (succ _t_45) _v_44)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (succ _t_45)) (rotate zero _v_44))=(rotate (succ zero) (rotate (succ _t_45) _v_44)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (succ _t_45)) (rotate zero _v_44))=(rotate (succ zero) (rotate (succ _t_45) _v_44)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (succ _t_45)) (rotate zero _v_44))=(rotate (succ zero) (rotate (succ _t_45) _v_44)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (succ _t_45)) (rotate zero _v_44))=(rotate (succ zero) (rotate (succ _t_45) _v_44)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (succ _t_45)) (rotate zero _v_44))=(rotate (succ zero) (rotate (succ _t_45) _v_44)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (succ _t_45)) (rotate zero _v_44))=(rotate (succ _t_45) (rotate (succ zero) _v_44)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (succ _t_45)) (rotate zero _v_44))=(rotate (succ _t_45) (rotate (succ zero) _v_44)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (succ _t_45)) (rotate zero _v_44))=(rotate (succ _t_45) (rotate (succ zero) _v_44)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (succ _t_45)) (rotate zero _v_44))=(rotate (succ _t_45) (rotate (succ zero) _v_44)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (succ _t_45)) (rotate zero _v_44))=(rotate (succ _t_45) (rotate (succ zero) _v_44)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (succ _t_45)) (rotate zero _v_44))=(rotate (succ _t_45) (rotate (succ zero) _v_44)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (succ _t_45)) (rotate zero _v_44))=(rotate (succ _t_45) (rotate (succ zero) _v_44)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ (succ _t_45)) _v_44))=(rotate (succ zero) (rotate (succ _t_45) _v_44)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ (succ _t_45)) _v_44))=(rotate (succ zero) (rotate (succ _t_45) _v_44)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ (succ _t_45)) _v_44))=(rotate (succ zero) (rotate (succ _t_45) _v_44)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ (succ _t_45)) _v_44))=(rotate (succ zero) (rotate (succ _t_45) _v_44)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ (succ _t_45)) _v_44))=(rotate (succ zero) (rotate (succ _t_45) _v_44)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ (succ _t_45)) _v_44))=(rotate (succ zero) (rotate (succ _t_45) _v_44)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ (succ _t_45)) _v_44))=(rotate (succ zero) (rotate (succ _t_45) _v_44)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ (succ _t_45)) _v_44))=(rotate (succ zero) (rotate (succ _t_45) _v_44)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ (succ _t_45)) _v_44))=(rotate (succ zero) (rotate (succ _t_45) _v_44)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ (succ _t_45)) _v_44))=(rotate (succ zero) (rotate (succ _t_45) _v_44)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ (succ _t_45)) _v_44))=(rotate (succ zero) (rotate (succ _t_45) _v_44)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ (succ _t_45)) _v_44))=(rotate (succ zero) (rotate (succ _t_45) _v_44)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ (succ _t_45)) _v_44))=(rotate (succ zero) (rotate (succ _t_45) _v_44)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ (succ _t_45)) _v_44))=(rotate (succ zero) (rotate (succ _t_45) _v_44)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ (succ _t_45)) _v_44))=(rotate (succ _t_45) (rotate (succ zero) _v_44)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ (succ _t_45)) _v_44))=(rotate (succ _t_45) (rotate (succ zero) _v_44)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ (succ _t_45)) _v_44))=(rotate (succ _t_45) (rotate (succ zero) _v_44)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ (succ _t_45)) _v_44))=(rotate (succ _t_45) (rotate (succ zero) _v_44)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ (succ _t_45)) _v_44))=(rotate (succ _t_45) (rotate (succ zero) _v_44)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ (succ _t_45)) _v_44))=(rotate (succ _t_45) (rotate (succ zero) _v_44)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ (succ _t_45)) _v_44))=(rotate (succ _t_45) (rotate (succ zero) _v_44)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ (succ _t_45)) _v_44))=(rotate (succ zero) (rotate (succ _t_45) _v_44)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ (succ _t_45)) _v_44))=(rotate (succ zero) (rotate (succ _t_45) _v_44)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ (succ _t_45)) _v_44))=(rotate (succ zero) (rotate (succ _t_45) _v_44)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ (succ _t_45)) _v_44))=(rotate (succ zero) (rotate (succ _t_45) _v_44)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ (succ _t_45)) _v_44))=(rotate (succ zero) (rotate (succ _t_45) _v_44)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ (succ _t_45)) _v_44))=(rotate (succ zero) (rotate (succ _t_45) _v_44)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ (succ _t_45)) _v_44))=(rotate (succ zero) (rotate (succ _t_45) _v_44)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ (succ _t_45)) _v_44))=(rotate (succ zero) (rotate (succ _t_45) _v_44)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ (succ _t_45)) _v_44))=(rotate (succ zero) (rotate (succ _t_45) _v_44)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ (succ _t_45)) _v_44))=(rotate (succ zero) (rotate (succ _t_45) _v_44)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ (succ _t_45)) _v_44))=(rotate (succ zero) (rotate (succ _t_45) _v_44)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ (succ _t_45)) _v_44))=(rotate (succ zero) (rotate (succ _t_45) _v_44)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ (succ _t_45)) _v_44))=(rotate (succ zero) (rotate (succ _t_45) _v_44)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ (succ _t_45)) _v_44))=(rotate (succ zero) (rotate (succ _t_45) _v_44)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ (succ _t_45)) _v_44))=(rotate (succ _t_45) (rotate (succ zero) _v_44)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ (succ _t_45)) _v_44))=(rotate (succ _t_45) (rotate (succ zero) _v_44)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ (succ _t_45)) _v_44))=(rotate (succ _t_45) (rotate (succ zero) _v_44)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ (succ _t_45)) _v_44))=(rotate (succ _t_45) (rotate (succ zero) _v_44)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ (succ _t_45)) _v_44))=(rotate (succ _t_45) (rotate (succ zero) _v_44)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ (succ _t_45)) _v_44))=(rotate (succ _t_45) (rotate (succ zero) _v_44)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ (succ _t_45)) _v_44))=(rotate (succ _t_45) (rotate (succ zero) _v_44)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (succ _t_45)) (rotate zero _v_44))=(rotate (succ _t_45) (rotate (succ zero) _v_44)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (succ _t_45)) (rotate zero _v_44))=(rotate (succ _t_45) (rotate (succ zero) _v_44)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (succ _t_45)) (rotate zero _v_44))=(rotate (succ _t_45) (rotate (succ zero) _v_44)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (succ _t_45)) (rotate zero _v_44))=(rotate (succ _t_45) (rotate (succ zero) _v_44)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (succ _t_45)) (rotate zero _v_44))=(rotate (succ _t_45) (rotate (succ zero) _v_44)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (succ _t_45)) (rotate zero _v_44))=(rotate (succ _t_45) (rotate (succ zero) _v_44)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (succ _t_45)) (rotate zero _v_44))=(rotate (succ _t_45) (rotate (succ zero) _v_44)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ (succ _t_45)) _v_44))=(rotate (succ zero) (rotate (succ _t_45) _v_44)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ (succ _t_45)) _v_44))=(rotate (succ zero) (rotate (succ _t_45) _v_44)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ (succ _t_45)) _v_44))=(rotate (succ zero) (rotate (succ _t_45) _v_44)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ (succ _t_45)) _v_44))=(rotate (succ zero) (rotate (succ _t_45) _v_44)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ (succ _t_45)) _v_44))=(rotate (succ zero) (rotate (succ _t_45) _v_44)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ (succ _t_45)) _v_44))=(rotate (succ zero) (rotate (succ _t_45) _v_44)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ (succ _t_45)) _v_44))=(rotate (succ zero) (rotate (succ _t_45) _v_44)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ (succ _t_45)) _v_44))=(rotate (succ zero) (rotate (succ _t_45) _v_44)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ (succ _t_45)) _v_44))=(rotate (succ zero) (rotate (succ _t_45) _v_44)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ (succ _t_45)) _v_44))=(rotate (succ zero) (rotate (succ _t_45) _v_44)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ (succ _t_45)) _v_44))=(rotate (succ zero) (rotate (succ _t_45) _v_44)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ (succ _t_45)) _v_44))=(rotate (succ zero) (rotate (succ _t_45) _v_44)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ (succ _t_45)) _v_44))=(rotate (succ zero) (rotate (succ _t_45) _v_44)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ (succ _t_45)) _v_44))=(rotate (succ zero) (rotate (succ _t_45) _v_44)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (succ _t_45)) (rotate zero _v_44))=(rotate (succ zero) (rotate (succ _t_45) _v_44)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (succ _t_45)) (rotate zero _v_44))=(rotate (succ zero) (rotate (succ _t_45) _v_44)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (succ _t_45)) (rotate zero _v_44))=(rotate (succ zero) (rotate (succ _t_45) _v_44)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (succ _t_45)) (rotate zero _v_44))=(rotate (succ zero) (rotate (succ _t_45) _v_44)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (succ _t_45)) (rotate zero _v_44))=(rotate (succ zero) (rotate (succ _t_45) _v_44)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (succ _t_45)) (rotate zero _v_44))=(rotate (succ zero) (rotate (succ _t_45) _v_44)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (succ _t_45)) (rotate zero _v_44))=(rotate (succ zero) (rotate (succ _t_45) _v_44)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ (succ _t_45)) _v_44))=(rotate (succ zero) (rotate (succ _t_45) _v_44)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ (succ _t_45)) _v_44))=(rotate (succ zero) (rotate (succ _t_45) _v_44)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ (succ _t_45)) _v_44))=(rotate (succ zero) (rotate (succ _t_45) _v_44)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ (succ _t_45)) _v_44))=(rotate (succ zero) (rotate (succ _t_45) _v_44)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ (succ _t_45)) _v_44))=(rotate (succ zero) (rotate (succ _t_45) _v_44)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ (succ _t_45)) _v_44))=(rotate (succ zero) (rotate (succ _t_45) _v_44)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ (succ _t_45)) _v_44))=(rotate (succ zero) (rotate (succ _t_45) _v_44)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ (succ _t_45)) _v_44))=(rotate (succ zero) (rotate (succ _t_45) _v_44)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ (succ _t_45)) _v_44))=(rotate (succ zero) (rotate (succ _t_45) _v_44)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ (succ _t_45)) _v_44))=(rotate (succ zero) (rotate (succ _t_45) _v_44)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ (succ _t_45)) _v_44))=(rotate (succ zero) (rotate (succ _t_45) _v_44)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ (succ _t_45)) _v_44))=(rotate (succ zero) (rotate (succ _t_45) _v_44)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ (succ _t_45)) _v_44))=(rotate (succ zero) (rotate (succ _t_45) _v_44)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ (succ _t_45)) _v_44))=(rotate (succ zero) (rotate (succ _t_45) _v_44)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (succ _t_45)) (rotate zero _v_44))=(rotate (succ zero) (rotate (succ _t_45) _v_44)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (succ _t_45)) (rotate zero _v_44))=(rotate (succ zero) (rotate (succ _t_45) _v_44)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (succ _t_45)) (rotate zero _v_44))=(rotate (succ zero) (rotate (succ _t_45) _v_44)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (succ _t_45)) (rotate zero _v_44))=(rotate (succ zero) (rotate (succ _t_45) _v_44)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (succ _t_45)) (rotate zero _v_44))=(rotate (succ zero) (rotate (succ _t_45) _v_44)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (succ _t_45)) (rotate zero _v_44))=(rotate (succ zero) (rotate (succ _t_45) _v_44)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (succ _t_45)) (rotate zero _v_44))=(rotate (succ zero) (rotate (succ _t_45) _v_44)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (succ _t_45)) (rotate zero _v_44))=(rotate (succ _t_45) (rotate (succ zero) _v_44)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (succ _t_45)) (rotate zero _v_44))=(rotate (succ _t_45) (rotate (succ zero) _v_44)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (succ _t_45)) (rotate zero _v_44))=(rotate (succ _t_45) (rotate (succ zero) _v_44)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (succ _t_45)) (rotate zero _v_44))=(rotate (succ _t_45) (rotate (succ zero) _v_44)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (succ _t_45)) (rotate zero _v_44))=(rotate (succ _t_45) (rotate (succ zero) _v_44)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (succ _t_45)) (rotate zero _v_44))=(rotate (succ _t_45) (rotate (succ zero) _v_44)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (succ _t_45)) (rotate zero _v_44))=(rotate (succ _t_45) (rotate (succ zero) _v_44)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ (succ _t_45)) _v_44))=(rotate (succ zero) (rotate (succ _t_45) _v_44)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ (succ _t_45)) _v_44))=(rotate (succ zero) (rotate (succ _t_45) _v_44)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ (succ _t_45)) _v_44))=(rotate (succ zero) (rotate (succ _t_45) _v_44)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ (succ _t_45)) _v_44))=(rotate (succ zero) (rotate (succ _t_45) _v_44)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ (succ _t_45)) _v_44))=(rotate (succ zero) (rotate (succ _t_45) _v_44)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ (succ _t_45)) _v_44))=(rotate (succ zero) (rotate (succ _t_45) _v_44)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ (succ _t_45)) _v_44))=(rotate (succ zero) (rotate (succ _t_45) _v_44)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ (succ _t_45)) _v_44))=(rotate (succ zero) (rotate (succ _t_45) _v_44)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ (succ _t_45)) _v_44))=(rotate (succ zero) (rotate (succ _t_45) _v_44)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ (succ _t_45)) _v_44))=(rotate (succ zero) (rotate (succ _t_45) _v_44)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ (succ _t_45)) _v_44))=(rotate (succ zero) (rotate (succ _t_45) _v_44)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ (succ _t_45)) _v_44))=(rotate (succ zero) (rotate (succ _t_45) _v_44)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ (succ _t_45)) _v_44))=(rotate (succ zero) (rotate (succ _t_45) _v_44)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ (succ _t_45)) _v_44))=(rotate (succ zero) (rotate (succ _t_45) _v_44)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ (succ _t_45)) _v_44))=(rotate (succ _t_45) (rotate (succ zero) _v_44)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ (succ _t_45)) _v_44))=(rotate (succ _t_45) (rotate (succ zero) _v_44)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ (succ _t_45)) _v_44))=(rotate (succ _t_45) (rotate (succ zero) _v_44)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ (succ _t_45)) _v_44))=(rotate (succ _t_45) (rotate (succ zero) _v_44)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ (succ _t_45)) _v_44))=(rotate (succ _t_45) (rotate (succ zero) _v_44)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ (succ _t_45)) _v_44))=(rotate (succ _t_45) (rotate (succ zero) _v_44)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ (succ _t_45)) _v_44))=(rotate (succ _t_45) (rotate (succ zero) _v_44)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ (succ _t_45)) _v_44))=(rotate (succ zero) (rotate (succ _t_45) _v_44)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ (succ _t_45)) _v_44))=(rotate (succ zero) (rotate (succ _t_45) _v_44)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ (succ _t_45)) _v_44))=(rotate (succ zero) (rotate (succ _t_45) _v_44)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ (succ _t_45)) _v_44))=(rotate (succ zero) (rotate (succ _t_45) _v_44)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ (succ _t_45)) _v_44))=(rotate (succ zero) (rotate (succ _t_45) _v_44)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ (succ _t_45)) _v_44))=(rotate (succ zero) (rotate (succ _t_45) _v_44)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ (succ _t_45)) _v_44))=(rotate (succ zero) (rotate (succ _t_45) _v_44)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ (succ _t_45)) _v_44))=(rotate (succ zero) (rotate (succ _t_45) _v_44)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ (succ _t_45)) _v_44))=(rotate (succ zero) (rotate (succ _t_45) _v_44)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ (succ _t_45)) _v_44))=(rotate (succ zero) (rotate (succ _t_45) _v_44)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ (succ _t_45)) _v_44))=(rotate (succ zero) (rotate (succ _t_45) _v_44)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ (succ _t_45)) _v_44))=(rotate (succ zero) (rotate (succ _t_45) _v_44)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ (succ _t_45)) _v_44))=(rotate (succ zero) (rotate (succ _t_45) _v_44)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ (succ _t_45)) _v_44))=(rotate (succ zero) (rotate (succ _t_45) _v_44)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ (succ _t_45)) _v_44))=(rotate (succ _t_45) (rotate (succ zero) _v_44)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ (succ _t_45)) _v_44))=(rotate (succ _t_45) (rotate (succ zero) _v_44)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ (succ _t_45)) _v_44))=(rotate (succ _t_45) (rotate (succ zero) _v_44)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ (succ _t_45)) _v_44))=(rotate (succ _t_45) (rotate (succ zero) _v_44)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ (succ _t_45)) _v_44))=(rotate (succ _t_45) (rotate (succ zero) _v_44)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ (succ _t_45)) _v_44))=(rotate (succ _t_45) (rotate (succ zero) _v_44)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ (succ _t_45)) _v_44))=(rotate (succ _t_45) (rotate (succ zero) _v_44)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (succ _t_45)) (rotate zero _v_44))=(rotate (succ _t_45) (rotate (succ zero) _v_44)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (succ _t_45)) (rotate zero _v_44))=(rotate (succ _t_45) (rotate (succ zero) _v_44)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (succ _t_45)) (rotate zero _v_44))=(rotate (succ _t_45) (rotate (succ zero) _v_44)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (succ _t_45)) (rotate zero _v_44))=(rotate (succ _t_45) (rotate (succ zero) _v_44)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (succ _t_45)) (rotate zero _v_44))=(rotate (succ _t_45) (rotate (succ zero) _v_44)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (succ _t_45)) (rotate zero _v_44))=(rotate (succ _t_45) (rotate (succ zero) _v_44)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (succ _t_45)) (rotate zero _v_44))=(rotate (succ _t_45) (rotate (succ zero) _v_44)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ (succ _t_45)) _v_44))=(rotate (succ _t_45) (rotate (succ zero) _v_44)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ (succ _t_45)) _v_44))=(rotate (succ _t_45) (rotate (succ zero) _v_44)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ (succ _t_45)) _v_44))=(rotate (succ _t_45) (rotate (succ zero) _v_44)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ (succ _t_45)) _v_44))=(rotate (succ _t_45) (rotate (succ zero) _v_44)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ (succ _t_45)) _v_44))=(rotate (succ _t_45) (rotate (succ zero) _v_44)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ (succ _t_45)) _v_44))=(rotate (succ _t_45) (rotate (succ zero) _v_44)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ (succ _t_45)) _v_44))=(rotate (succ _t_45) (rotate (succ zero) _v_44)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (succ _t_45)) (rotate zero _v_44))=(rotate (succ _t_45) (rotate (succ zero) _v_44)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (succ _t_45)) (rotate zero _v_44))=(rotate (succ _t_45) (rotate (succ zero) _v_44)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (succ _t_45)) (rotate zero _v_44))=(rotate (succ _t_45) (rotate (succ zero) _v_44)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (succ _t_45)) (rotate zero _v_44))=(rotate (succ _t_45) (rotate (succ zero) _v_44)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (succ _t_45)) (rotate zero _v_44))=(rotate (succ _t_45) (rotate (succ zero) _v_44)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (succ _t_45)) (rotate zero _v_44))=(rotate (succ _t_45) (rotate (succ zero) _v_44)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (succ _t_45)) (rotate zero _v_44))=(rotate (succ _t_45) (rotate (succ zero) _v_44)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (succ _t_45)) (rotate zero _v_44))=(rotate (succ _t_45) (rotate (succ zero) _v_44)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (succ _t_45)) (rotate zero _v_44))=(rotate (succ _t_45) (rotate (succ zero) _v_44)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (succ _t_45)) (rotate zero _v_44))=(rotate (succ _t_45) (rotate (succ zero) _v_44)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (succ _t_45)) (rotate zero _v_44))=(rotate (succ _t_45) (rotate (succ zero) _v_44)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (succ _t_45)) (rotate zero _v_44))=(rotate (succ _t_45) (rotate (succ zero) _v_44)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (succ _t_45)) (rotate zero _v_44))=(rotate (succ _t_45) (rotate (succ zero) _v_44)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (succ _t_45)) (rotate zero _v_44))=(rotate (succ _t_45) (rotate (succ zero) _v_44)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (succ _t_45)) (rotate zero _v_44))=(rotate (succ zero) (rotate (succ _t_45) _v_44)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (succ _t_45)) (rotate zero _v_44))=(rotate (succ zero) (rotate (succ _t_45) _v_44)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (succ _t_45)) (rotate zero _v_44))=(rotate (succ zero) (rotate (succ _t_45) _v_44)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (succ _t_45)) (rotate zero _v_44))=(rotate (succ zero) (rotate (succ _t_45) _v_44)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (succ _t_45)) (rotate zero _v_44))=(rotate (succ zero) (rotate (succ _t_45) _v_44)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (succ _t_45)) (rotate zero _v_44))=(rotate (succ zero) (rotate (succ _t_45) _v_44)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (succ _t_45)) (rotate zero _v_44))=(rotate (succ zero) (rotate (succ _t_45) _v_44)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (succ _t_45)) (rotate zero _v_44))=(rotate (succ _t_45) (rotate (succ zero) _v_44)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (succ _t_45)) (rotate zero _v_44))=(rotate (succ _t_45) (rotate (succ zero) _v_44)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (succ _t_45)) (rotate zero _v_44))=(rotate (succ _t_45) (rotate (succ zero) _v_44)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (succ _t_45)) (rotate zero _v_44))=(rotate (succ _t_45) (rotate (succ zero) _v_44)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (succ _t_45)) (rotate zero _v_44))=(rotate (succ _t_45) (rotate (succ zero) _v_44)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (succ _t_45)) (rotate zero _v_44))=(rotate (succ _t_45) (rotate (succ zero) _v_44)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (succ _t_45)) (rotate zero _v_44))=(rotate (succ _t_45) (rotate (succ zero) _v_44)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (succ _t_45)) (rotate zero _v_44))=(rotate (succ _t_45) (rotate (succ zero) _v_44)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (succ _t_45)) (rotate zero _v_44))=(rotate (succ _t_45) (rotate (succ zero) _v_44)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (succ _t_45)) (rotate zero _v_44))=(rotate (succ _t_45) (rotate (succ zero) _v_44)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (succ _t_45)) (rotate zero _v_44))=(rotate (succ _t_45) (rotate (succ zero) _v_44)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (succ _t_45)) (rotate zero _v_44))=(rotate (succ _t_45) (rotate (succ zero) _v_44)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (succ _t_45)) (rotate zero _v_44))=(rotate (succ _t_45) (rotate (succ zero) _v_44)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (succ _t_45)) (rotate zero _v_44))=(rotate (succ _t_45) (rotate (succ zero) _v_44)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (succ _t_45)) (rotate zero _v_44))=(rotate (succ zero) (rotate (succ _t_45) _v_44)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (succ _t_45)) (rotate zero _v_44))=(rotate (succ zero) (rotate (succ _t_45) _v_44)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (succ _t_45)) (rotate zero _v_44))=(rotate (succ zero) (rotate (succ _t_45) _v_44)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (succ _t_45)) (rotate zero _v_44))=(rotate (succ zero) (rotate (succ _t_45) _v_44)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (succ _t_45)) (rotate zero _v_44))=(rotate (succ zero) (rotate (succ _t_45) _v_44)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (succ _t_45)) (rotate zero _v_44))=(rotate (succ zero) (rotate (succ _t_45) _v_44)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (succ _t_45)) (rotate zero _v_44))=(rotate (succ zero) (rotate (succ _t_45) _v_44)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ (succ _t_45)) _v_44))=(rotate (succ zero) (rotate (succ _t_45) _v_44)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ (succ _t_45)) _v_44))=(rotate (succ zero) (rotate (succ _t_45) _v_44)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ (succ _t_45)) _v_44))=(rotate (succ zero) (rotate (succ _t_45) _v_44)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ (succ _t_45)) _v_44))=(rotate (succ zero) (rotate (succ _t_45) _v_44)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ (succ _t_45)) _v_44))=(rotate (succ zero) (rotate (succ _t_45) _v_44)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ (succ _t_45)) _v_44))=(rotate (succ zero) (rotate (succ _t_45) _v_44)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ (succ _t_45)) _v_44))=(rotate (succ zero) (rotate (succ _t_45) _v_44)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (succ _t_45)) (rotate zero _v_44))=(rotate (succ _t_45) (rotate (succ zero) _v_44)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (succ _t_45)) (rotate zero _v_44))=(rotate (succ _t_45) (rotate (succ zero) _v_44)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (succ _t_45)) (rotate zero _v_44))=(rotate (succ _t_45) (rotate (succ zero) _v_44)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (succ _t_45)) (rotate zero _v_44))=(rotate (succ _t_45) (rotate (succ zero) _v_44)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (succ _t_45)) (rotate zero _v_44))=(rotate (succ _t_45) (rotate (succ zero) _v_44)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (succ _t_45)) (rotate zero _v_44))=(rotate (succ _t_45) (rotate (succ zero) _v_44)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (succ _t_45)) (rotate zero _v_44))=(rotate (succ _t_45) (rotate (succ zero) _v_44)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (succ _t_45)) (rotate zero _v_44))=(rotate (succ _t_45) (rotate (succ zero) _v_44)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (succ _t_45)) (rotate zero _v_44))=(rotate (succ _t_45) (rotate (succ zero) _v_44)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (succ _t_45)) (rotate zero _v_44))=(rotate (succ _t_45) (rotate (succ zero) _v_44)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (succ _t_45)) (rotate zero _v_44))=(rotate (succ _t_45) (rotate (succ zero) _v_44)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (succ _t_45)) (rotate zero _v_44))=(rotate (succ _t_45) (rotate (succ zero) _v_44)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (succ _t_45)) (rotate zero _v_44))=(rotate (succ _t_45) (rotate (succ zero) _v_44)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (succ _t_45)) (rotate zero _v_44))=(rotate (succ _t_45) (rotate (succ zero) _v_44)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ (succ _t_45)) _v_44))=(rotate (succ _t_45) (rotate (succ zero) _v_44)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ (succ _t_45)) _v_44))=(rotate (succ _t_45) (rotate (succ zero) _v_44)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ (succ _t_45)) _v_44))=(rotate (succ _t_45) (rotate (succ zero) _v_44)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ (succ _t_45)) _v_44))=(rotate (succ _t_45) (rotate (succ zero) _v_44)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ (succ _t_45)) _v_44))=(rotate (succ _t_45) (rotate (succ zero) _v_44)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ (succ _t_45)) _v_44))=(rotate (succ _t_45) (rotate (succ zero) _v_44)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ (succ _t_45)) _v_44))=(rotate (succ _t_45) (rotate (succ zero) _v_44)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (succ _t_45)) (rotate zero _v_44))=(rotate (succ _t_45) (rotate (succ zero) _v_44)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (succ _t_45)) (rotate zero _v_44))=(rotate (succ _t_45) (rotate (succ zero) _v_44)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (succ _t_45)) (rotate zero _v_44))=(rotate (succ _t_45) (rotate (succ zero) _v_44)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (succ _t_45)) (rotate zero _v_44))=(rotate (succ _t_45) (rotate (succ zero) _v_44)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (succ _t_45)) (rotate zero _v_44))=(rotate (succ _t_45) (rotate (succ zero) _v_44)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (succ _t_45)) (rotate zero _v_44))=(rotate (succ _t_45) (rotate (succ zero) _v_44)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (succ _t_45)) (rotate zero _v_44))=(rotate (succ _t_45) (rotate (succ zero) _v_44)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (succ _t_45)) (rotate zero _v_44))=(rotate (succ _t_45) (rotate (succ zero) _v_44)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (succ _t_45)) (rotate zero _v_44))=(rotate (succ _t_45) (rotate (succ zero) _v_44)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (succ _t_45)) (rotate zero _v_44))=(rotate (succ _t_45) (rotate (succ zero) _v_44)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (succ _t_45)) (rotate zero _v_44))=(rotate (succ _t_45) (rotate (succ zero) _v_44)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (succ _t_45)) (rotate zero _v_44))=(rotate (succ _t_45) (rotate (succ zero) _v_44)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (succ _t_45)) (rotate zero _v_44))=(rotate (succ _t_45) (rotate (succ zero) _v_44)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (succ _t_45)) (rotate zero _v_44))=(rotate (succ _t_45) (rotate (succ zero) _v_44)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ (succ _t_45)) _v_44))=(rotate (succ _t_45) (rotate (succ zero) _v_44)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ (succ _t_45)) _v_44))=(rotate (succ _t_45) (rotate (succ zero) _v_44)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ (succ _t_45)) _v_44))=(rotate (succ _t_45) (rotate (succ zero) _v_44)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ (succ _t_45)) _v_44))=(rotate (succ _t_45) (rotate (succ zero) _v_44)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ (succ _t_45)) _v_44))=(rotate (succ _t_45) (rotate (succ zero) _v_44)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ (succ _t_45)) _v_44))=(rotate (succ _t_45) (rotate (succ zero) _v_44)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ (succ _t_45)) _v_44))=(rotate (succ _t_45) (rotate (succ zero) _v_44)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ (succ _t_45)) _v_44))=(rotate (succ zero) (rotate (succ _t_45) _v_44)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ (succ _t_45)) _v_44))=(rotate (succ zero) (rotate (succ _t_45) _v_44)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ (succ _t_45)) _v_44))=(rotate (succ zero) (rotate (succ _t_45) _v_44)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ (succ _t_45)) _v_44))=(rotate (succ zero) (rotate (succ _t_45) _v_44)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ (succ _t_45)) _v_44))=(rotate (succ zero) (rotate (succ _t_45) _v_44)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ (succ _t_45)) _v_44))=(rotate (succ zero) (rotate (succ _t_45) _v_44)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ (succ _t_45)) _v_44))=(rotate (succ zero) (rotate (succ _t_45) _v_44)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (succ _t_45)) (rotate zero _v_44))=(rotate (succ _t_45) (rotate (succ zero) _v_44)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (succ _t_45)) (rotate zero _v_44))=(rotate (succ _t_45) (rotate (succ zero) _v_44)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (succ _t_45)) (rotate zero _v_44))=(rotate (succ _t_45) (rotate (succ zero) _v_44)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (succ _t_45)) (rotate zero _v_44))=(rotate (succ _t_45) (rotate (succ zero) _v_44)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (succ _t_45)) (rotate zero _v_44))=(rotate (succ _t_45) (rotate (succ zero) _v_44)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (succ _t_45)) (rotate zero _v_44))=(rotate (succ _t_45) (rotate (succ zero) _v_44)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (succ _t_45)) (rotate zero _v_44))=(rotate (succ _t_45) (rotate (succ zero) _v_44)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (succ _t_45)) (rotate zero _v_44))=(rotate (succ _t_45) (rotate (succ zero) _v_44)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (succ _t_45)) (rotate zero _v_44))=(rotate (succ _t_45) (rotate (succ zero) _v_44)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (succ _t_45)) (rotate zero _v_44))=(rotate (succ _t_45) (rotate (succ zero) _v_44)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (succ _t_45)) (rotate zero _v_44))=(rotate (succ _t_45) (rotate (succ zero) _v_44)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (succ _t_45)) (rotate zero _v_44))=(rotate (succ _t_45) (rotate (succ zero) _v_44)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (succ _t_45)) (rotate zero _v_44))=(rotate (succ _t_45) (rotate (succ zero) _v_44)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (succ _t_45)) (rotate zero _v_44))=(rotate (succ _t_45) (rotate (succ zero) _v_44)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (succ _t_45)) (rotate zero _v_44))=(rotate (succ zero) (rotate (succ _t_45) _v_44)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (succ _t_45)) (rotate zero _v_44))=(rotate (succ zero) (rotate (succ _t_45) _v_44)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (succ _t_45)) (rotate zero _v_44))=(rotate (succ zero) (rotate (succ _t_45) _v_44)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (succ _t_45)) (rotate zero _v_44))=(rotate (succ zero) (rotate (succ _t_45) _v_44)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (succ _t_45)) (rotate zero _v_44))=(rotate (succ zero) (rotate (succ _t_45) _v_44)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (succ _t_45)) (rotate zero _v_44))=(rotate (succ zero) (rotate (succ _t_45) _v_44)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (succ _t_45)) (rotate zero _v_44))=(rotate (succ zero) (rotate (succ _t_45) _v_44)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (succ _t_45)) (rotate zero _v_44))=(rotate (succ _t_45) (rotate (succ zero) _v_44)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (succ _t_45)) (rotate zero _v_44))=(rotate (succ _t_45) (rotate (succ zero) _v_44)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (succ _t_45)) (rotate zero _v_44))=(rotate (succ _t_45) (rotate (succ zero) _v_44)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (succ _t_45)) (rotate zero _v_44))=(rotate (succ _t_45) (rotate (succ zero) _v_44)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (succ _t_45)) (rotate zero _v_44))=(rotate (succ _t_45) (rotate (succ zero) _v_44)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (succ _t_45)) (rotate zero _v_44))=(rotate (succ _t_45) (rotate (succ zero) _v_44)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (succ _t_45)) (rotate zero _v_44))=(rotate (succ _t_45) (rotate (succ zero) _v_44)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (succ _t_45)) (rotate zero _v_44))=(rotate (succ _t_45) (rotate (succ zero) _v_44)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (succ _t_45)) (rotate zero _v_44))=(rotate (succ _t_45) (rotate (succ zero) _v_44)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (succ _t_45)) (rotate zero _v_44))=(rotate (succ _t_45) (rotate (succ zero) _v_44)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (succ _t_45)) (rotate zero _v_44))=(rotate (succ _t_45) (rotate (succ zero) _v_44)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (succ _t_45)) (rotate zero _v_44))=(rotate (succ _t_45) (rotate (succ zero) _v_44)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (succ _t_45)) (rotate zero _v_44))=(rotate (succ _t_45) (rotate (succ zero) _v_44)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (succ _t_45)) (rotate zero _v_44))=(rotate (succ _t_45) (rotate (succ zero) _v_44)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (succ _t_45)) (rotate zero _v_44))=(rotate (succ zero) (rotate (succ _t_45) _v_44)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (succ _t_45)) (rotate zero _v_44))=(rotate (succ zero) (rotate (succ _t_45) _v_44)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (succ _t_45)) (rotate zero _v_44))=(rotate (succ zero) (rotate (succ _t_45) _v_44)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (succ _t_45)) (rotate zero _v_44))=(rotate (succ zero) (rotate (succ _t_45) _v_44)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (succ _t_45)) (rotate zero _v_44))=(rotate (succ zero) (rotate (succ _t_45) _v_44)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (succ _t_45)) (rotate zero _v_44))=(rotate (succ zero) (rotate (succ _t_45) _v_44)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (succ _t_45)) (rotate zero _v_44))=(rotate (succ zero) (rotate (succ _t_45) _v_44)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ (succ _t_45)) _v_44))=(rotate (succ zero) (rotate (succ _t_45) _v_44)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ (succ _t_45)) _v_44))=(rotate (succ zero) (rotate (succ _t_45) _v_44)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ (succ _t_45)) _v_44))=(rotate (succ zero) (rotate (succ _t_45) _v_44)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ (succ _t_45)) _v_44))=(rotate (succ zero) (rotate (succ _t_45) _v_44)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ (succ _t_45)) _v_44))=(rotate (succ zero) (rotate (succ _t_45) _v_44)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ (succ _t_45)) _v_44))=(rotate (succ zero) (rotate (succ _t_45) _v_44)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ (succ _t_45)) _v_44))=(rotate (succ zero) (rotate (succ _t_45) _v_44)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (succ _t_45)) (rotate zero _v_44))=(rotate (succ _t_45) (rotate (succ zero) _v_44)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (succ _t_45)) (rotate zero _v_44))=(rotate (succ _t_45) (rotate (succ zero) _v_44)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (succ _t_45)) (rotate zero _v_44))=(rotate (succ _t_45) (rotate (succ zero) _v_44)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (succ _t_45)) (rotate zero _v_44))=(rotate (succ _t_45) (rotate (succ zero) _v_44)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (succ _t_45)) (rotate zero _v_44))=(rotate (succ _t_45) (rotate (succ zero) _v_44)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (succ _t_45)) (rotate zero _v_44))=(rotate (succ _t_45) (rotate (succ zero) _v_44)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (succ _t_45)) (rotate zero _v_44))=(rotate (succ _t_45) (rotate (succ zero) _v_44)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (succ _t_45)) (rotate zero _v_44))=(rotate (succ _t_45) (rotate (succ zero) _v_44)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (succ _t_45)) (rotate zero _v_44))=(rotate (succ _t_45) (rotate (succ zero) _v_44)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (succ _t_45)) (rotate zero _v_44))=(rotate (succ _t_45) (rotate (succ zero) _v_44)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (succ _t_45)) (rotate zero _v_44))=(rotate (succ _t_45) (rotate (succ zero) _v_44)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (succ _t_45)) (rotate zero _v_44))=(rotate (succ _t_45) (rotate (succ zero) _v_44)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (succ _t_45)) (rotate zero _v_44))=(rotate (succ _t_45) (rotate (succ zero) _v_44)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (succ _t_45)) (rotate zero _v_44))=(rotate (succ _t_45) (rotate (succ zero) _v_44)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ (succ _t_45)) _v_44))=(rotate (succ _t_45) (rotate (succ zero) _v_44)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ (succ _t_45)) _v_44))=(rotate (succ _t_45) (rotate (succ zero) _v_44)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ (succ _t_45)) _v_44))=(rotate (succ _t_45) (rotate (succ zero) _v_44)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ (succ _t_45)) _v_44))=(rotate (succ _t_45) (rotate (succ zero) _v_44)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ (succ _t_45)) _v_44))=(rotate (succ _t_45) (rotate (succ zero) _v_44)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ (succ _t_45)) _v_44))=(rotate (succ _t_45) (rotate (succ zero) _v_44)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ (succ _t_45)) _v_44))=(rotate (succ _t_45) (rotate (succ zero) _v_44)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (succ _t_45)) (rotate zero _v_44))=(rotate (succ _t_45) (rotate (succ zero) _v_44)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (succ _t_45)) (rotate zero _v_44))=(rotate (succ _t_45) (rotate (succ zero) _v_44)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (succ _t_45)) (rotate zero _v_44))=(rotate (succ _t_45) (rotate (succ zero) _v_44)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (succ _t_45)) (rotate zero _v_44))=(rotate (succ _t_45) (rotate (succ zero) _v_44)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (succ _t_45)) (rotate zero _v_44))=(rotate (succ _t_45) (rotate (succ zero) _v_44)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (succ _t_45)) (rotate zero _v_44))=(rotate (succ _t_45) (rotate (succ zero) _v_44)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (succ _t_45)) (rotate zero _v_44))=(rotate (succ _t_45) (rotate (succ zero) _v_44)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (succ _t_45)) (rotate zero _v_44))=(rotate (succ _t_45) (rotate (succ zero) _v_44)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (succ _t_45)) (rotate zero _v_44))=(rotate (succ _t_45) (rotate (succ zero) _v_44)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (succ _t_45)) (rotate zero _v_44))=(rotate (succ _t_45) (rotate (succ zero) _v_44)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (succ _t_45)) (rotate zero _v_44))=(rotate (succ _t_45) (rotate (succ zero) _v_44)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (succ _t_45)) (rotate zero _v_44))=(rotate (succ _t_45) (rotate (succ zero) _v_44)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (succ _t_45)) (rotate zero _v_44))=(rotate (succ _t_45) (rotate (succ zero) _v_44)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (succ _t_45)) (rotate zero _v_44))=(rotate (succ _t_45) (rotate (succ zero) _v_44)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ (succ _t_45)) _v_44))=(rotate (succ _t_45) (rotate (succ zero) _v_44)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ (succ _t_45)) _v_44))=(rotate (succ _t_45) (rotate (succ zero) _v_44)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ (succ _t_45)) _v_44))=(rotate (succ _t_45) (rotate (succ zero) _v_44)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ (succ _t_45)) _v_44))=(rotate (succ _t_45) (rotate (succ zero) _v_44)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ (succ _t_45)) _v_44))=(rotate (succ _t_45) (rotate (succ zero) _v_44)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ (succ _t_45)) _v_44))=(rotate (succ _t_45) (rotate (succ zero) _v_44)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ (succ _t_45)) _v_44))=(rotate (succ _t_45) (rotate (succ zero) _v_44)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ (succ _t_45)) _v_44))=(rotate (succ zero) (rotate (succ _t_45) _v_44)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ (succ _t_45)) _v_44))=(rotate (succ zero) (rotate (succ _t_45) _v_44)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ (succ _t_45)) _v_44))=(rotate (succ zero) (rotate (succ _t_45) _v_44)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ (succ _t_45)) _v_44))=(rotate (succ zero) (rotate (succ _t_45) _v_44)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ (succ _t_45)) _v_44))=(rotate (succ zero) (rotate (succ _t_45) _v_44)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ (succ _t_45)) _v_44))=(rotate (succ zero) (rotate (succ _t_45) _v_44)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ (succ _t_45)) _v_44))=(rotate (succ zero) (rotate (succ _t_45) _v_44)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ (succ _t_45)) _v_44))=(rotate (succ _t_45) (rotate (succ zero) _v_44)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ (succ _t_45)) _v_44))=(rotate (succ _t_45) (rotate (succ zero) _v_44)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ (succ _t_45)) _v_44))=(rotate (succ _t_45) (rotate (succ zero) _v_44)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ (succ _t_45)) _v_44))=(rotate (succ _t_45) (rotate (succ zero) _v_44)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ (succ _t_45)) _v_44))=(rotate (succ _t_45) (rotate (succ zero) _v_44)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ (succ _t_45)) _v_44))=(rotate (succ _t_45) (rotate (succ zero) _v_44)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ (succ _t_45)) _v_44))=(rotate (succ _t_45) (rotate (succ zero) _v_44)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ (succ _t_45)) _v_44))=(rotate (succ zero) (rotate (succ _t_45) _v_44)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ (succ _t_45)) _v_44))=(rotate (succ zero) (rotate (succ _t_45) _v_44)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ (succ _t_45)) _v_44))=(rotate (succ zero) (rotate (succ _t_45) _v_44)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ (succ _t_45)) _v_44))=(rotate (succ zero) (rotate (succ _t_45) _v_44)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ (succ _t_45)) _v_44))=(rotate (succ zero) (rotate (succ _t_45) _v_44)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ (succ _t_45)) _v_44))=(rotate (succ zero) (rotate (succ _t_45) _v_44)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ (succ _t_45)) _v_44))=(rotate (succ zero) (rotate (succ _t_45) _v_44)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ (succ _t_45)) _v_44))=(rotate (succ zero) (rotate (succ _t_45) _v_44)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ (succ _t_45)) _v_44))=(rotate (succ zero) (rotate (succ _t_45) _v_44)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ (succ _t_45)) _v_44))=(rotate (succ zero) (rotate (succ _t_45) _v_44)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ (succ _t_45)) _v_44))=(rotate (succ zero) (rotate (succ _t_45) _v_44)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ (succ _t_45)) _v_44))=(rotate (succ zero) (rotate (succ _t_45) _v_44)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ (succ _t_45)) _v_44))=(rotate (succ zero) (rotate (succ _t_45) _v_44)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ (succ _t_45)) _v_44))=(rotate (succ zero) (rotate (succ _t_45) _v_44)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (succ _t_45)) (rotate zero _v_44))=(rotate (succ zero) (rotate (succ _t_45) _v_44)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (succ _t_45)) (rotate zero _v_44))=(rotate (succ zero) (rotate (succ _t_45) _v_44)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (succ _t_45)) (rotate zero _v_44))=(rotate (succ zero) (rotate (succ _t_45) _v_44)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (succ _t_45)) (rotate zero _v_44))=(rotate (succ zero) (rotate (succ _t_45) _v_44)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (succ _t_45)) (rotate zero _v_44))=(rotate (succ zero) (rotate (succ _t_45) _v_44)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (succ _t_45)) (rotate zero _v_44))=(rotate (succ zero) (rotate (succ _t_45) _v_44)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (succ _t_45)) (rotate zero _v_44))=(rotate (succ zero) (rotate (succ _t_45) _v_44)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ (succ _t_45)) _v_44))=(rotate (succ zero) (rotate (succ _t_45) _v_44)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ (succ _t_45)) _v_44))=(rotate (succ zero) (rotate (succ _t_45) _v_44)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ (succ _t_45)) _v_44))=(rotate (succ zero) (rotate (succ _t_45) _v_44)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ (succ _t_45)) _v_44))=(rotate (succ zero) (rotate (succ _t_45) _v_44)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ (succ _t_45)) _v_44))=(rotate (succ zero) (rotate (succ _t_45) _v_44)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ (succ _t_45)) _v_44))=(rotate (succ zero) (rotate (succ _t_45) _v_44)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ (succ _t_45)) _v_44))=(rotate (succ zero) (rotate (succ _t_45) _v_44)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ (succ _t_45)) _v_44))=(rotate (succ zero) (rotate (succ _t_45) _v_44)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ (succ _t_45)) _v_44))=(rotate (succ zero) (rotate (succ _t_45) _v_44)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ (succ _t_45)) _v_44))=(rotate (succ zero) (rotate (succ _t_45) _v_44)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ (succ _t_45)) _v_44))=(rotate (succ zero) (rotate (succ _t_45) _v_44)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ (succ _t_45)) _v_44))=(rotate (succ zero) (rotate (succ _t_45) _v_44)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ (succ _t_45)) _v_44))=(rotate (succ zero) (rotate (succ _t_45) _v_44)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ (succ _t_45)) _v_44))=(rotate (succ zero) (rotate (succ _t_45) _v_44)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (succ _t_45)) (rotate zero _v_44))=(rotate (succ zero) (rotate (succ _t_45) _v_44)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (succ _t_45)) (rotate zero _v_44))=(rotate (succ zero) (rotate (succ _t_45) _v_44)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (succ _t_45)) (rotate zero _v_44))=(rotate (succ zero) (rotate (succ _t_45) _v_44)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (succ _t_45)) (rotate zero _v_44))=(rotate (succ zero) (rotate (succ _t_45) _v_44)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (succ _t_45)) (rotate zero _v_44))=(rotate (succ zero) (rotate (succ _t_45) _v_44)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (succ _t_45)) (rotate zero _v_44))=(rotate (succ zero) (rotate (succ _t_45) _v_44)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (succ _t_45)) (rotate zero _v_44))=(rotate (succ zero) (rotate (succ _t_45) _v_44)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (succ _t_45)) (rotate zero _v_44))=(rotate (succ _t_45) (rotate (succ zero) _v_44)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (succ _t_45)) (rotate zero _v_44))=(rotate (succ _t_45) (rotate (succ zero) _v_44)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (succ _t_45)) (rotate zero _v_44))=(rotate (succ _t_45) (rotate (succ zero) _v_44)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (succ _t_45)) (rotate zero _v_44))=(rotate (succ _t_45) (rotate (succ zero) _v_44)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (succ _t_45)) (rotate zero _v_44))=(rotate (succ _t_45) (rotate (succ zero) _v_44)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (succ _t_45)) (rotate zero _v_44))=(rotate (succ _t_45) (rotate (succ zero) _v_44)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (succ _t_45)) (rotate zero _v_44))=(rotate (succ _t_45) (rotate (succ zero) _v_44)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ (succ _t_45)) _v_44))=(rotate (succ zero) (rotate (succ _t_45) _v_44)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ (succ _t_45)) _v_44))=(rotate (succ zero) (rotate (succ _t_45) _v_44)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ (succ _t_45)) _v_44))=(rotate (succ zero) (rotate (succ _t_45) _v_44)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ (succ _t_45)) _v_44))=(rotate (succ zero) (rotate (succ _t_45) _v_44)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ (succ _t_45)) _v_44))=(rotate (succ zero) (rotate (succ _t_45) _v_44)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ (succ _t_45)) _v_44))=(rotate (succ zero) (rotate (succ _t_45) _v_44)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ (succ _t_45)) _v_44))=(rotate (succ zero) (rotate (succ _t_45) _v_44)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ (succ _t_45)) _v_44))=(rotate (succ zero) (rotate (succ _t_45) _v_44)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ (succ _t_45)) _v_44))=(rotate (succ zero) (rotate (succ _t_45) _v_44)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ (succ _t_45)) _v_44))=(rotate (succ zero) (rotate (succ _t_45) _v_44)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ (succ _t_45)) _v_44))=(rotate (succ zero) (rotate (succ _t_45) _v_44)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ (succ _t_45)) _v_44))=(rotate (succ zero) (rotate (succ _t_45) _v_44)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ (succ _t_45)) _v_44))=(rotate (succ zero) (rotate (succ _t_45) _v_44)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ (succ _t_45)) _v_44))=(rotate (succ zero) (rotate (succ _t_45) _v_44)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ (succ _t_45)) _v_44))=(rotate (succ _t_45) (rotate (succ zero) _v_44)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ (succ _t_45)) _v_44))=(rotate (succ _t_45) (rotate (succ zero) _v_44)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ (succ _t_45)) _v_44))=(rotate (succ _t_45) (rotate (succ zero) _v_44)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ (succ _t_45)) _v_44))=(rotate (succ _t_45) (rotate (succ zero) _v_44)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ (succ _t_45)) _v_44))=(rotate (succ _t_45) (rotate (succ zero) _v_44)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ (succ _t_45)) _v_44))=(rotate (succ _t_45) (rotate (succ zero) _v_44)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ (succ _t_45)) _v_44))=(rotate (succ _t_45) (rotate (succ zero) _v_44)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ (succ _t_45)) _v_44))=(rotate (succ zero) (rotate (succ _t_45) _v_44)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ (succ _t_45)) _v_44))=(rotate (succ zero) (rotate (succ _t_45) _v_44)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ (succ _t_45)) _v_44))=(rotate (succ zero) (rotate (succ _t_45) _v_44)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ (succ _t_45)) _v_44))=(rotate (succ zero) (rotate (succ _t_45) _v_44)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ (succ _t_45)) _v_44))=(rotate (succ zero) (rotate (succ _t_45) _v_44)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ (succ _t_45)) _v_44))=(rotate (succ zero) (rotate (succ _t_45) _v_44)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ (succ _t_45)) _v_44))=(rotate (succ zero) (rotate (succ _t_45) _v_44)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ (succ _t_45)) _v_44))=(rotate (succ zero) (rotate (succ _t_45) _v_44)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ (succ _t_45)) _v_44))=(rotate (succ zero) (rotate (succ _t_45) _v_44)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ (succ _t_45)) _v_44))=(rotate (succ zero) (rotate (succ _t_45) _v_44)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ (succ _t_45)) _v_44))=(rotate (succ zero) (rotate (succ _t_45) _v_44)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ (succ _t_45)) _v_44))=(rotate (succ zero) (rotate (succ _t_45) _v_44)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ (succ _t_45)) _v_44))=(rotate (succ zero) (rotate (succ _t_45) _v_44)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ (succ _t_45)) _v_44))=(rotate (succ zero) (rotate (succ _t_45) _v_44)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ (succ _t_45)) _v_44))=(rotate (succ _t_45) (rotate (succ zero) _v_44)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ (succ _t_45)) _v_44))=(rotate (succ _t_45) (rotate (succ zero) _v_44)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ (succ _t_45)) _v_44))=(rotate (succ _t_45) (rotate (succ zero) _v_44)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ (succ _t_45)) _v_44))=(rotate (succ _t_45) (rotate (succ zero) _v_44)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ (succ _t_45)) _v_44))=(rotate (succ _t_45) (rotate (succ zero) _v_44)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ (succ _t_45)) _v_44))=(rotate (succ _t_45) (rotate (succ zero) _v_44)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ (succ _t_45)) _v_44))=(rotate (succ _t_45) (rotate (succ zero) _v_44)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (succ _t_45)) (rotate zero _v_44))=(rotate (succ _t_45) (rotate (succ zero) _v_44)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (succ _t_45)) (rotate zero _v_44))=(rotate (succ _t_45) (rotate (succ zero) _v_44)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (succ _t_45)) (rotate zero _v_44))=(rotate (succ _t_45) (rotate (succ zero) _v_44)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (succ _t_45)) (rotate zero _v_44))=(rotate (succ _t_45) (rotate (succ zero) _v_44)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (succ _t_45)) (rotate zero _v_44))=(rotate (succ _t_45) (rotate (succ zero) _v_44)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (succ _t_45)) (rotate zero _v_44))=(rotate (succ _t_45) (rotate (succ zero) _v_44)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (succ _t_45)) (rotate zero _v_44))=(rotate (succ _t_45) (rotate (succ zero) _v_44)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ (succ _t_45)) _v_44))=(rotate (succ zero) (rotate (succ _t_45) _v_44)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ (succ _t_45)) _v_44))=(rotate (succ zero) (rotate (succ _t_45) _v_44)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ (succ _t_45)) _v_44))=(rotate (succ zero) (rotate (succ _t_45) _v_44)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ (succ _t_45)) _v_44))=(rotate (succ zero) (rotate (succ _t_45) _v_44)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ (succ _t_45)) _v_44))=(rotate (succ zero) (rotate (succ _t_45) _v_44)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ (succ _t_45)) _v_44))=(rotate (succ zero) (rotate (succ _t_45) _v_44)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ (succ _t_45)) _v_44))=(rotate (succ zero) (rotate (succ _t_45) _v_44)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ (succ _t_45)) _v_44))=(rotate (succ zero) (rotate (succ _t_45) _v_44)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ (succ _t_45)) _v_44))=(rotate (succ zero) (rotate (succ _t_45) _v_44)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ (succ _t_45)) _v_44))=(rotate (succ zero) (rotate (succ _t_45) _v_44)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ (succ _t_45)) _v_44))=(rotate (succ zero) (rotate (succ _t_45) _v_44)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ (succ _t_45)) _v_44))=(rotate (succ zero) (rotate (succ _t_45) _v_44)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ (succ _t_45)) _v_44))=(rotate (succ zero) (rotate (succ _t_45) _v_44)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ (succ _t_45)) _v_44))=(rotate (succ zero) (rotate (succ _t_45) _v_44)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (succ _t_45)) (rotate zero _v_44))=(rotate (succ zero) (rotate (succ _t_45) _v_44)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (succ _t_45)) (rotate zero _v_44))=(rotate (succ zero) (rotate (succ _t_45) _v_44)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (succ _t_45)) (rotate zero _v_44))=(rotate (succ zero) (rotate (succ _t_45) _v_44)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (succ _t_45)) (rotate zero _v_44))=(rotate (succ zero) (rotate (succ _t_45) _v_44)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (succ _t_45)) (rotate zero _v_44))=(rotate (succ zero) (rotate (succ _t_45) _v_44)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (succ _t_45)) (rotate zero _v_44))=(rotate (succ zero) (rotate (succ _t_45) _v_44)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (succ _t_45)) (rotate zero _v_44))=(rotate (succ zero) (rotate (succ _t_45) _v_44)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ (succ _t_45)) _v_44))=(rotate (succ zero) (rotate (succ _t_45) _v_44)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ (succ _t_45)) _v_44))=(rotate (succ zero) (rotate (succ _t_45) _v_44)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ (succ _t_45)) _v_44))=(rotate (succ zero) (rotate (succ _t_45) _v_44)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ (succ _t_45)) _v_44))=(rotate (succ zero) (rotate (succ _t_45) _v_44)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ (succ _t_45)) _v_44))=(rotate (succ zero) (rotate (succ _t_45) _v_44)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ (succ _t_45)) _v_44))=(rotate (succ zero) (rotate (succ _t_45) _v_44)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ (succ _t_45)) _v_44))=(rotate (succ zero) (rotate (succ _t_45) _v_44)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ (succ _t_45)) _v_44))=(rotate (succ zero) (rotate (succ _t_45) _v_44)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ (succ _t_45)) _v_44))=(rotate (succ zero) (rotate (succ _t_45) _v_44)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ (succ _t_45)) _v_44))=(rotate (succ zero) (rotate (succ _t_45) _v_44)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ (succ _t_45)) _v_44))=(rotate (succ zero) (rotate (succ _t_45) _v_44)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ (succ _t_45)) _v_44))=(rotate (succ zero) (rotate (succ _t_45) _v_44)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ (succ _t_45)) _v_44))=(rotate (succ zero) (rotate (succ _t_45) _v_44)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ (succ _t_45)) _v_44))=(rotate (succ zero) (rotate (succ _t_45) _v_44)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (succ _t_45)) (rotate zero _v_44))=(rotate (succ zero) (rotate (succ _t_45) _v_44)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (succ _t_45)) (rotate zero _v_44))=(rotate (succ zero) (rotate (succ _t_45) _v_44)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (succ _t_45)) (rotate zero _v_44))=(rotate (succ zero) (rotate (succ _t_45) _v_44)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (succ _t_45)) (rotate zero _v_44))=(rotate (succ zero) (rotate (succ _t_45) _v_44)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (succ _t_45)) (rotate zero _v_44))=(rotate (succ zero) (rotate (succ _t_45) _v_44)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (succ _t_45)) (rotate zero _v_44))=(rotate (succ zero) (rotate (succ _t_45) _v_44)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (succ _t_45)) (rotate zero _v_44))=(rotate (succ zero) (rotate (succ _t_45) _v_44)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (succ _t_45)) (rotate zero _v_44))=(rotate (succ _t_45) (rotate (succ zero) _v_44)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (succ _t_45)) (rotate zero _v_44))=(rotate (succ _t_45) (rotate (succ zero) _v_44)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (succ _t_45)) (rotate zero _v_44))=(rotate (succ _t_45) (rotate (succ zero) _v_44)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (succ _t_45)) (rotate zero _v_44))=(rotate (succ _t_45) (rotate (succ zero) _v_44)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (succ _t_45)) (rotate zero _v_44))=(rotate (succ _t_45) (rotate (succ zero) _v_44)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (succ _t_45)) (rotate zero _v_44))=(rotate (succ _t_45) (rotate (succ zero) _v_44)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (succ _t_45)) (rotate zero _v_44))=(rotate (succ _t_45) (rotate (succ zero) _v_44)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ (succ _t_45)) _v_44))=(rotate (succ zero) (rotate (succ _t_45) _v_44)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ (succ _t_45)) _v_44))=(rotate (succ zero) (rotate (succ _t_45) _v_44)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ (succ _t_45)) _v_44))=(rotate (succ zero) (rotate (succ _t_45) _v_44)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ (succ _t_45)) _v_44))=(rotate (succ zero) (rotate (succ _t_45) _v_44)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ (succ _t_45)) _v_44))=(rotate (succ zero) (rotate (succ _t_45) _v_44)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ (succ _t_45)) _v_44))=(rotate (succ zero) (rotate (succ _t_45) _v_44)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ (succ _t_45)) _v_44))=(rotate (succ zero) (rotate (succ _t_45) _v_44)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ (succ _t_45)) _v_44))=(rotate (succ zero) (rotate (succ _t_45) _v_44)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ (succ _t_45)) _v_44))=(rotate (succ zero) (rotate (succ _t_45) _v_44)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ (succ _t_45)) _v_44))=(rotate (succ zero) (rotate (succ _t_45) _v_44)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ (succ _t_45)) _v_44))=(rotate (succ zero) (rotate (succ _t_45) _v_44)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ (succ _t_45)) _v_44))=(rotate (succ zero) (rotate (succ _t_45) _v_44)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ (succ _t_45)) _v_44))=(rotate (succ zero) (rotate (succ _t_45) _v_44)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ (succ _t_45)) _v_44))=(rotate (succ zero) (rotate (succ _t_45) _v_44)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ (succ _t_45)) _v_44))=(rotate (succ _t_45) (rotate (succ zero) _v_44)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ (succ _t_45)) _v_44))=(rotate (succ _t_45) (rotate (succ zero) _v_44)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ (succ _t_45)) _v_44))=(rotate (succ _t_45) (rotate (succ zero) _v_44)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ (succ _t_45)) _v_44))=(rotate (succ _t_45) (rotate (succ zero) _v_44)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ (succ _t_45)) _v_44))=(rotate (succ _t_45) (rotate (succ zero) _v_44)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ (succ _t_45)) _v_44))=(rotate (succ _t_45) (rotate (succ zero) _v_44)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ (succ _t_45)) _v_44))=(rotate (succ _t_45) (rotate (succ zero) _v_44)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ (succ _t_45)) _v_44))=(rotate (succ zero) (rotate (succ _t_45) _v_44)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ (succ _t_45)) _v_44))=(rotate (succ zero) (rotate (succ _t_45) _v_44)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ (succ _t_45)) _v_44))=(rotate (succ zero) (rotate (succ _t_45) _v_44)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ (succ _t_45)) _v_44))=(rotate (succ zero) (rotate (succ _t_45) _v_44)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ (succ _t_45)) _v_44))=(rotate (succ zero) (rotate (succ _t_45) _v_44)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ (succ _t_45)) _v_44))=(rotate (succ zero) (rotate (succ _t_45) _v_44)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ (succ _t_45)) _v_44))=(rotate (succ zero) (rotate (succ _t_45) _v_44)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ (succ _t_45)) _v_44))=(rotate (succ zero) (rotate (succ _t_45) _v_44)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ (succ _t_45)) _v_44))=(rotate (succ zero) (rotate (succ _t_45) _v_44)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ (succ _t_45)) _v_44))=(rotate (succ zero) (rotate (succ _t_45) _v_44)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ (succ _t_45)) _v_44))=(rotate (succ zero) (rotate (succ _t_45) _v_44)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ (succ _t_45)) _v_44))=(rotate (succ zero) (rotate (succ _t_45) _v_44)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ (succ _t_45)) _v_44))=(rotate (succ zero) (rotate (succ _t_45) _v_44)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ (succ _t_45)) _v_44))=(rotate (succ zero) (rotate (succ _t_45) _v_44)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ (succ _t_45)) _v_44))=(rotate (succ _t_45) (rotate (succ zero) _v_44)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ (succ _t_45)) _v_44))=(rotate (succ _t_45) (rotate (succ zero) _v_44)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ (succ _t_45)) _v_44))=(rotate (succ _t_45) (rotate (succ zero) _v_44)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ (succ _t_45)) _v_44))=(rotate (succ _t_45) (rotate (succ zero) _v_44)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ (succ _t_45)) _v_44))=(rotate (succ _t_45) (rotate (succ zero) _v_44)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ (succ _t_45)) _v_44))=(rotate (succ _t_45) (rotate (succ zero) _v_44)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ (succ _t_45)) _v_44))=(rotate (succ _t_45) (rotate (succ zero) _v_44)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (succ _t_45)) (rotate zero _v_44))=(rotate (succ _t_45) (rotate (succ zero) _v_44)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (succ _t_45)) (rotate zero _v_44))=(rotate (succ _t_45) (rotate (succ zero) _v_44)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (succ _t_45)) (rotate zero _v_44))=(rotate (succ _t_45) (rotate (succ zero) _v_44)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (succ _t_45)) (rotate zero _v_44))=(rotate (succ _t_45) (rotate (succ zero) _v_44)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (succ _t_45)) (rotate zero _v_44))=(rotate (succ _t_45) (rotate (succ zero) _v_44)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (succ _t_45)) (rotate zero _v_44))=(rotate (succ _t_45) (rotate (succ zero) _v_44)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (succ _t_45)) (rotate zero _v_44))=(rotate (succ _t_45) (rotate (succ zero) _v_44)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ (succ _t_45)) _v_44))=(rotate (succ _t_45) (rotate (succ zero) _v_44)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ (succ _t_45)) _v_44))=(rotate (succ _t_45) (rotate (succ zero) _v_44)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ (succ _t_45)) _v_44))=(rotate (succ _t_45) (rotate (succ zero) _v_44)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ (succ _t_45)) _v_44))=(rotate (succ _t_45) (rotate (succ zero) _v_44)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ (succ _t_45)) _v_44))=(rotate (succ _t_45) (rotate (succ zero) _v_44)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ (succ _t_45)) _v_44))=(rotate (succ _t_45) (rotate (succ zero) _v_44)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ (succ _t_45)) _v_44))=(rotate (succ _t_45) (rotate (succ zero) _v_44)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (succ _t_45)) (rotate zero _v_44))=(rotate (succ _t_45) (rotate (succ zero) _v_44)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (succ _t_45)) (rotate zero _v_44))=(rotate (succ _t_45) (rotate (succ zero) _v_44)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (succ _t_45)) (rotate zero _v_44))=(rotate (succ _t_45) (rotate (succ zero) _v_44)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (succ _t_45)) (rotate zero _v_44))=(rotate (succ _t_45) (rotate (succ zero) _v_44)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (succ _t_45)) (rotate zero _v_44))=(rotate (succ _t_45) (rotate (succ zero) _v_44)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (succ _t_45)) (rotate zero _v_44))=(rotate (succ _t_45) (rotate (succ zero) _v_44)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (succ _t_45)) (rotate zero _v_44))=(rotate (succ _t_45) (rotate (succ zero) _v_44)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (succ _t_45)) (rotate zero _v_44))=(rotate (succ _t_45) (rotate (succ zero) _v_44)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (succ _t_45)) (rotate zero _v_44))=(rotate (succ _t_45) (rotate (succ zero) _v_44)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (succ _t_45)) (rotate zero _v_44))=(rotate (succ _t_45) (rotate (succ zero) _v_44)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (succ _t_45)) (rotate zero _v_44))=(rotate (succ _t_45) (rotate (succ zero) _v_44)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (succ _t_45)) (rotate zero _v_44))=(rotate (succ _t_45) (rotate (succ zero) _v_44)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (succ _t_45)) (rotate zero _v_44))=(rotate (succ _t_45) (rotate (succ zero) _v_44)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (succ _t_45)) (rotate zero _v_44))=(rotate (succ _t_45) (rotate (succ zero) _v_44)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (succ _t_45)) (rotate zero _v_44))=(rotate (succ zero) (rotate (succ _t_45) _v_44)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (succ _t_45)) (rotate zero _v_44))=(rotate (succ zero) (rotate (succ _t_45) _v_44)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (succ _t_45)) (rotate zero _v_44))=(rotate (succ zero) (rotate (succ _t_45) _v_44)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (succ _t_45)) (rotate zero _v_44))=(rotate (succ zero) (rotate (succ _t_45) _v_44)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (succ _t_45)) (rotate zero _v_44))=(rotate (succ zero) (rotate (succ _t_45) _v_44)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (succ _t_45)) (rotate zero _v_44))=(rotate (succ zero) (rotate (succ _t_45) _v_44)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (succ _t_45)) (rotate zero _v_44))=(rotate (succ zero) (rotate (succ _t_45) _v_44)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (succ _t_45)) (rotate zero _v_44))=(rotate (succ _t_45) (rotate (succ zero) _v_44)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (succ _t_45)) (rotate zero _v_44))=(rotate (succ _t_45) (rotate (succ zero) _v_44)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (succ _t_45)) (rotate zero _v_44))=(rotate (succ _t_45) (rotate (succ zero) _v_44)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (succ _t_45)) (rotate zero _v_44))=(rotate (succ _t_45) (rotate (succ zero) _v_44)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (succ _t_45)) (rotate zero _v_44))=(rotate (succ _t_45) (rotate (succ zero) _v_44)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (succ _t_45)) (rotate zero _v_44))=(rotate (succ _t_45) (rotate (succ zero) _v_44)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (succ _t_45)) (rotate zero _v_44))=(rotate (succ _t_45) (rotate (succ zero) _v_44)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (succ _t_45)) (rotate zero _v_44))=(rotate (succ _t_45) (rotate (succ zero) _v_44)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (succ _t_45)) (rotate zero _v_44))=(rotate (succ _t_45) (rotate (succ zero) _v_44)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (succ _t_45)) (rotate zero _v_44))=(rotate (succ _t_45) (rotate (succ zero) _v_44)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (succ _t_45)) (rotate zero _v_44))=(rotate (succ _t_45) (rotate (succ zero) _v_44)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (succ _t_45)) (rotate zero _v_44))=(rotate (succ _t_45) (rotate (succ zero) _v_44)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (succ _t_45)) (rotate zero _v_44))=(rotate (succ _t_45) (rotate (succ zero) _v_44)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (succ _t_45)) (rotate zero _v_44))=(rotate (succ _t_45) (rotate (succ zero) _v_44)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (succ _t_45)) (rotate zero _v_44))=(rotate (succ zero) (rotate (succ _t_45) _v_44)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (succ _t_45)) (rotate zero _v_44))=(rotate (succ zero) (rotate (succ _t_45) _v_44)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (succ _t_45)) (rotate zero _v_44))=(rotate (succ zero) (rotate (succ _t_45) _v_44)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (succ _t_45)) (rotate zero _v_44))=(rotate (succ zero) (rotate (succ _t_45) _v_44)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (succ _t_45)) (rotate zero _v_44))=(rotate (succ zero) (rotate (succ _t_45) _v_44)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (succ _t_45)) (rotate zero _v_44))=(rotate (succ zero) (rotate (succ _t_45) _v_44)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (succ _t_45)) (rotate zero _v_44))=(rotate (succ zero) (rotate (succ _t_45) _v_44)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ (succ _t_45)) _v_44))=(rotate (succ zero) (rotate (succ _t_45) _v_44)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ (succ _t_45)) _v_44))=(rotate (succ zero) (rotate (succ _t_45) _v_44)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ (succ _t_45)) _v_44))=(rotate (succ zero) (rotate (succ _t_45) _v_44)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ (succ _t_45)) _v_44))=(rotate (succ zero) (rotate (succ _t_45) _v_44)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ (succ _t_45)) _v_44))=(rotate (succ zero) (rotate (succ _t_45) _v_44)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ (succ _t_45)) _v_44))=(rotate (succ zero) (rotate (succ _t_45) _v_44)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ (succ _t_45)) _v_44))=(rotate (succ zero) (rotate (succ _t_45) _v_44)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (succ _t_45)) (rotate zero _v_44))=(rotate (succ _t_45) (rotate (succ zero) _v_44)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (succ _t_45)) (rotate zero _v_44))=(rotate (succ _t_45) (rotate (succ zero) _v_44)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (succ _t_45)) (rotate zero _v_44))=(rotate (succ _t_45) (rotate (succ zero) _v_44)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (succ _t_45)) (rotate zero _v_44))=(rotate (succ _t_45) (rotate (succ zero) _v_44)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (succ _t_45)) (rotate zero _v_44))=(rotate (succ _t_45) (rotate (succ zero) _v_44)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (succ _t_45)) (rotate zero _v_44))=(rotate (succ _t_45) (rotate (succ zero) _v_44)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (succ _t_45)) (rotate zero _v_44))=(rotate (succ _t_45) (rotate (succ zero) _v_44)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (succ _t_45)) (rotate zero _v_44))=(rotate (succ _t_45) (rotate (succ zero) _v_44)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (succ _t_45)) (rotate zero _v_44))=(rotate (succ _t_45) (rotate (succ zero) _v_44)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (succ _t_45)) (rotate zero _v_44))=(rotate (succ _t_45) (rotate (succ zero) _v_44)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (succ _t_45)) (rotate zero _v_44))=(rotate (succ _t_45) (rotate (succ zero) _v_44)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (succ _t_45)) (rotate zero _v_44))=(rotate (succ _t_45) (rotate (succ zero) _v_44)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (succ _t_45)) (rotate zero _v_44))=(rotate (succ _t_45) (rotate (succ zero) _v_44)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (succ _t_45)) (rotate zero _v_44))=(rotate (succ _t_45) (rotate (succ zero) _v_44)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ (succ _t_45)) _v_44))=(rotate (succ _t_45) (rotate (succ zero) _v_44)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ (succ _t_45)) _v_44))=(rotate (succ _t_45) (rotate (succ zero) _v_44)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ (succ _t_45)) _v_44))=(rotate (succ _t_45) (rotate (succ zero) _v_44)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ (succ _t_45)) _v_44))=(rotate (succ _t_45) (rotate (succ zero) _v_44)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ (succ _t_45)) _v_44))=(rotate (succ _t_45) (rotate (succ zero) _v_44)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ (succ _t_45)) _v_44))=(rotate (succ _t_45) (rotate (succ zero) _v_44)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ (succ _t_45)) _v_44))=(rotate (succ _t_45) (rotate (succ zero) _v_44)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (succ _t_45)) (rotate zero _v_44))=(rotate (succ _t_45) (rotate (succ zero) _v_44)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (succ _t_45)) (rotate zero _v_44))=(rotate (succ _t_45) (rotate (succ zero) _v_44)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (succ _t_45)) (rotate zero _v_44))=(rotate (succ _t_45) (rotate (succ zero) _v_44)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (succ _t_45)) (rotate zero _v_44))=(rotate (succ _t_45) (rotate (succ zero) _v_44)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (succ _t_45)) (rotate zero _v_44))=(rotate (succ _t_45) (rotate (succ zero) _v_44)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (succ _t_45)) (rotate zero _v_44))=(rotate (succ _t_45) (rotate (succ zero) _v_44)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (succ _t_45)) (rotate zero _v_44))=(rotate (succ _t_45) (rotate (succ zero) _v_44)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (succ _t_45)) (rotate zero _v_44))=(rotate (succ _t_45) (rotate (succ zero) _v_44)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (succ _t_45)) (rotate zero _v_44))=(rotate (succ _t_45) (rotate (succ zero) _v_44)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (succ _t_45)) (rotate zero _v_44))=(rotate (succ _t_45) (rotate (succ zero) _v_44)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (succ _t_45)) (rotate zero _v_44))=(rotate (succ _t_45) (rotate (succ zero) _v_44)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (succ _t_45)) (rotate zero _v_44))=(rotate (succ _t_45) (rotate (succ zero) _v_44)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (succ _t_45)) (rotate zero _v_44))=(rotate (succ _t_45) (rotate (succ zero) _v_44)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (succ _t_45)) (rotate zero _v_44))=(rotate (succ _t_45) (rotate (succ zero) _v_44)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ (succ _t_45)) _v_44))=(rotate (succ _t_45) (rotate (succ zero) _v_44)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ (succ _t_45)) _v_44))=(rotate (succ _t_45) (rotate (succ zero) _v_44)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ (succ _t_45)) _v_44))=(rotate (succ _t_45) (rotate (succ zero) _v_44)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ (succ _t_45)) _v_44))=(rotate (succ _t_45) (rotate (succ zero) _v_44)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ (succ _t_45)) _v_44))=(rotate (succ _t_45) (rotate (succ zero) _v_44)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ (succ _t_45)) _v_44))=(rotate (succ _t_45) (rotate (succ zero) _v_44)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ (succ _t_45)) _v_44))=(rotate (succ _t_45) (rotate (succ zero) _v_44)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ (succ _t_45)) _v_44))=(rotate (succ zero) (rotate (succ _t_45) _v_44)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ (succ _t_45)) _v_44))=(rotate (succ zero) (rotate (succ _t_45) _v_44)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ (succ _t_45)) _v_44))=(rotate (succ zero) (rotate (succ _t_45) _v_44)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ (succ _t_45)) _v_44))=(rotate (succ zero) (rotate (succ _t_45) _v_44)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ (succ _t_45)) _v_44))=(rotate (succ zero) (rotate (succ _t_45) _v_44)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ (succ _t_45)) _v_44))=(rotate (succ zero) (rotate (succ _t_45) _v_44)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ (succ _t_45)) _v_44))=(rotate (succ zero) (rotate (succ _t_45) _v_44)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (succ _t_45)) (rotate zero _v_44))=(rotate (succ _t_45) (rotate (succ zero) _v_44)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (succ _t_45)) (rotate zero _v_44))=(rotate (succ _t_45) (rotate (succ zero) _v_44)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (succ _t_45)) (rotate zero _v_44))=(rotate (succ _t_45) (rotate (succ zero) _v_44)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (succ _t_45)) (rotate zero _v_44))=(rotate (succ _t_45) (rotate (succ zero) _v_44)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (succ _t_45)) (rotate zero _v_44))=(rotate (succ _t_45) (rotate (succ zero) _v_44)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (succ _t_45)) (rotate zero _v_44))=(rotate (succ _t_45) (rotate (succ zero) _v_44)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (succ _t_45)) (rotate zero _v_44))=(rotate (succ _t_45) (rotate (succ zero) _v_44)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (succ _t_45)) (rotate zero _v_44))=(rotate (succ _t_45) (rotate (succ zero) _v_44)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (succ _t_45)) (rotate zero _v_44))=(rotate (succ _t_45) (rotate (succ zero) _v_44)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (succ _t_45)) (rotate zero _v_44))=(rotate (succ _t_45) (rotate (succ zero) _v_44)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (succ _t_45)) (rotate zero _v_44))=(rotate (succ _t_45) (rotate (succ zero) _v_44)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (succ _t_45)) (rotate zero _v_44))=(rotate (succ _t_45) (rotate (succ zero) _v_44)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (succ _t_45)) (rotate zero _v_44))=(rotate (succ _t_45) (rotate (succ zero) _v_44)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (succ _t_45)) (rotate zero _v_44))=(rotate (succ _t_45) (rotate (succ zero) _v_44)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (succ _t_45)) (rotate zero _v_44))=(rotate (succ zero) (rotate (succ _t_45) _v_44)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (succ _t_45)) (rotate zero _v_44))=(rotate (succ zero) (rotate (succ _t_45) _v_44)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (succ _t_45)) (rotate zero _v_44))=(rotate (succ zero) (rotate (succ _t_45) _v_44)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (succ _t_45)) (rotate zero _v_44))=(rotate (succ zero) (rotate (succ _t_45) _v_44)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (succ _t_45)) (rotate zero _v_44))=(rotate (succ zero) (rotate (succ _t_45) _v_44)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (succ _t_45)) (rotate zero _v_44))=(rotate (succ zero) (rotate (succ _t_45) _v_44)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (succ _t_45)) (rotate zero _v_44))=(rotate (succ zero) (rotate (succ _t_45) _v_44)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (succ _t_45)) (rotate zero _v_44))=(rotate (succ _t_45) (rotate (succ zero) _v_44)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (succ _t_45)) (rotate zero _v_44))=(rotate (succ _t_45) (rotate (succ zero) _v_44)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (succ _t_45)) (rotate zero _v_44))=(rotate (succ _t_45) (rotate (succ zero) _v_44)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (succ _t_45)) (rotate zero _v_44))=(rotate (succ _t_45) (rotate (succ zero) _v_44)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (succ _t_45)) (rotate zero _v_44))=(rotate (succ _t_45) (rotate (succ zero) _v_44)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (succ _t_45)) (rotate zero _v_44))=(rotate (succ _t_45) (rotate (succ zero) _v_44)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (succ _t_45)) (rotate zero _v_44))=(rotate (succ _t_45) (rotate (succ zero) _v_44)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (succ _t_45)) (rotate zero _v_44))=(rotate (succ _t_45) (rotate (succ zero) _v_44)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (succ _t_45)) (rotate zero _v_44))=(rotate (succ _t_45) (rotate (succ zero) _v_44)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (succ _t_45)) (rotate zero _v_44))=(rotate (succ _t_45) (rotate (succ zero) _v_44)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (succ _t_45)) (rotate zero _v_44))=(rotate (succ _t_45) (rotate (succ zero) _v_44)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (succ _t_45)) (rotate zero _v_44))=(rotate (succ _t_45) (rotate (succ zero) _v_44)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (succ _t_45)) (rotate zero _v_44))=(rotate (succ _t_45) (rotate (succ zero) _v_44)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (succ _t_45)) (rotate zero _v_44))=(rotate (succ _t_45) (rotate (succ zero) _v_44)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (succ _t_45)) (rotate zero _v_44))=(rotate (succ zero) (rotate (succ _t_45) _v_44)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (succ _t_45)) (rotate zero _v_44))=(rotate (succ zero) (rotate (succ _t_45) _v_44)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (succ _t_45)) (rotate zero _v_44))=(rotate (succ zero) (rotate (succ _t_45) _v_44)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (succ _t_45)) (rotate zero _v_44))=(rotate (succ zero) (rotate (succ _t_45) _v_44)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (succ _t_45)) (rotate zero _v_44))=(rotate (succ zero) (rotate (succ _t_45) _v_44)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (succ _t_45)) (rotate zero _v_44))=(rotate (succ zero) (rotate (succ _t_45) _v_44)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (succ _t_45)) (rotate zero _v_44))=(rotate (succ zero) (rotate (succ _t_45) _v_44)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ (succ _t_45)) _v_44))=(rotate (succ zero) (rotate (succ _t_45) _v_44)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ (succ _t_45)) _v_44))=(rotate (succ zero) (rotate (succ _t_45) _v_44)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ (succ _t_45)) _v_44))=(rotate (succ zero) (rotate (succ _t_45) _v_44)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ (succ _t_45)) _v_44))=(rotate (succ zero) (rotate (succ _t_45) _v_44)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ (succ _t_45)) _v_44))=(rotate (succ zero) (rotate (succ _t_45) _v_44)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ (succ _t_45)) _v_44))=(rotate (succ zero) (rotate (succ _t_45) _v_44)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ (succ _t_45)) _v_44))=(rotate (succ zero) (rotate (succ _t_45) _v_44)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (succ _t_45)) (rotate zero _v_44))=(rotate (succ _t_45) (rotate (succ zero) _v_44)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (succ _t_45)) (rotate zero _v_44))=(rotate (succ _t_45) (rotate (succ zero) _v_44)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (succ _t_45)) (rotate zero _v_44))=(rotate (succ _t_45) (rotate (succ zero) _v_44)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (succ _t_45)) (rotate zero _v_44))=(rotate (succ _t_45) (rotate (succ zero) _v_44)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (succ _t_45)) (rotate zero _v_44))=(rotate (succ _t_45) (rotate (succ zero) _v_44)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (succ _t_45)) (rotate zero _v_44))=(rotate (succ _t_45) (rotate (succ zero) _v_44)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (succ _t_45)) (rotate zero _v_44))=(rotate (succ _t_45) (rotate (succ zero) _v_44)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (succ _t_45)) (rotate zero _v_44))=(rotate (succ _t_45) (rotate (succ zero) _v_44)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (succ _t_45)) (rotate zero _v_44))=(rotate (succ _t_45) (rotate (succ zero) _v_44)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (succ _t_45)) (rotate zero _v_44))=(rotate (succ _t_45) (rotate (succ zero) _v_44)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (succ _t_45)) (rotate zero _v_44))=(rotate (succ _t_45) (rotate (succ zero) _v_44)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (succ _t_45)) (rotate zero _v_44))=(rotate (succ _t_45) (rotate (succ zero) _v_44)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (succ _t_45)) (rotate zero _v_44))=(rotate (succ _t_45) (rotate (succ zero) _v_44)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (succ _t_45)) (rotate zero _v_44))=(rotate (succ _t_45) (rotate (succ zero) _v_44)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ (succ _t_45)) _v_44))=(rotate (succ _t_45) (rotate (succ zero) _v_44)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ (succ _t_45)) _v_44))=(rotate (succ _t_45) (rotate (succ zero) _v_44)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ (succ _t_45)) _v_44))=(rotate (succ _t_45) (rotate (succ zero) _v_44)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ (succ _t_45)) _v_44))=(rotate (succ _t_45) (rotate (succ zero) _v_44)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ (succ _t_45)) _v_44))=(rotate (succ _t_45) (rotate (succ zero) _v_44)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ (succ _t_45)) _v_44))=(rotate (succ _t_45) (rotate (succ zero) _v_44)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ (succ _t_45)) _v_44))=(rotate (succ _t_45) (rotate (succ zero) _v_44)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (succ _t_45)) (rotate zero _v_44))=(rotate (succ _t_45) (rotate (succ zero) _v_44)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (succ _t_45)) (rotate zero _v_44))=(rotate (succ _t_45) (rotate (succ zero) _v_44)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (succ _t_45)) (rotate zero _v_44))=(rotate (succ _t_45) (rotate (succ zero) _v_44)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (succ _t_45)) (rotate zero _v_44))=(rotate (succ _t_45) (rotate (succ zero) _v_44)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (succ _t_45)) (rotate zero _v_44))=(rotate (succ _t_45) (rotate (succ zero) _v_44)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (succ _t_45)) (rotate zero _v_44))=(rotate (succ _t_45) (rotate (succ zero) _v_44)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (succ _t_45)) (rotate zero _v_44))=(rotate (succ _t_45) (rotate (succ zero) _v_44)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (succ _t_45)) (rotate zero _v_44))=(rotate (succ _t_45) (rotate (succ zero) _v_44)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (succ _t_45)) (rotate zero _v_44))=(rotate (succ _t_45) (rotate (succ zero) _v_44)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (succ _t_45)) (rotate zero _v_44))=(rotate (succ _t_45) (rotate (succ zero) _v_44)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (succ _t_45)) (rotate zero _v_44))=(rotate (succ _t_45) (rotate (succ zero) _v_44)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (succ _t_45)) (rotate zero _v_44))=(rotate (succ _t_45) (rotate (succ zero) _v_44)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (succ _t_45)) (rotate zero _v_44))=(rotate (succ _t_45) (rotate (succ zero) _v_44)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (succ _t_45)) (rotate zero _v_44))=(rotate (succ _t_45) (rotate (succ zero) _v_44)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ (succ _t_45)) _v_44))=(rotate (succ _t_45) (rotate (succ zero) _v_44)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ (succ _t_45)) _v_44))=(rotate (succ _t_45) (rotate (succ zero) _v_44)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ (succ _t_45)) _v_44))=(rotate (succ _t_45) (rotate (succ zero) _v_44)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ (succ _t_45)) _v_44))=(rotate (succ _t_45) (rotate (succ zero) _v_44)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ (succ _t_45)) _v_44))=(rotate (succ _t_45) (rotate (succ zero) _v_44)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ (succ _t_45)) _v_44))=(rotate (succ _t_45) (rotate (succ zero) _v_44)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ (succ _t_45)) _v_44))=(rotate (succ _t_45) (rotate (succ zero) _v_44)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ (succ _t_45)) _v_44))=(rotate (succ zero) (rotate (succ _t_45) _v_44)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ (succ _t_45)) _v_44))=(rotate (succ zero) (rotate (succ _t_45) _v_44)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ (succ _t_45)) _v_44))=(rotate (succ zero) (rotate (succ _t_45) _v_44)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ (succ _t_45)) _v_44))=(rotate (succ zero) (rotate (succ _t_45) _v_44)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ (succ _t_45)) _v_44))=(rotate (succ zero) (rotate (succ _t_45) _v_44)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ (succ _t_45)) _v_44))=(rotate (succ zero) (rotate (succ _t_45) _v_44)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ (succ _t_45)) _v_44))=(rotate (succ zero) (rotate (succ _t_45) _v_44)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ (succ _t_45)) _v_44))=(rotate (succ _t_45) (rotate (succ zero) _v_44)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ (succ _t_45)) _v_44))=(rotate (succ _t_45) (rotate (succ zero) _v_44)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ (succ _t_45)) _v_44))=(rotate (succ _t_45) (rotate (succ zero) _v_44)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ (succ _t_45)) _v_44))=(rotate (succ _t_45) (rotate (succ zero) _v_44)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ (succ _t_45)) _v_44))=(rotate (succ _t_45) (rotate (succ zero) _v_44)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ (succ _t_45)) _v_44))=(rotate (succ _t_45) (rotate (succ zero) _v_44)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ (succ _t_45)) _v_44))=(rotate (succ _t_45) (rotate (succ zero) _v_44)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_29) _v_30))=(rotate (succ zero) (rotate _v_29 _v_30)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_16))=_qv_16))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_29) _v_30))=(rotate (succ zero) (rotate _v_29 _v_30)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_17 _qv_18)=(append _qv_18 _qv_17)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_29) _v_30))=(rotate (succ zero) (rotate _v_29 _v_30)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_19 _qv_20) _qv_21)=(append _qv_19 (append _qv_20 _qv_21))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_29) _v_30))=(rotate (succ zero) (rotate _v_29 _v_30)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_22 _qv_23)=(plus _qv_23 _qv_22)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_29) _v_30))=(rotate (succ zero) (rotate _v_29 _v_30)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_24 _qv_25) _qv_26)=(plus _qv_24 (plus _qv_25 _qv_26))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_29) _v_30))=(rotate (succ zero) (rotate _v_29 _v_30)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_27 _qv_28))=(plus (succ _qv_27) (succ _qv_28))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_29) _v_30))=(rotate (succ zero) (rotate _v_29 _v_30)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_27 _qv_28))=(plus (succ _qv_28) (succ _qv_27))))
USE ASSUMPTION FAILED


The Knowledge Scheme currently contains the following lemmas:
	(forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
	(forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
	(forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
	(forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
	(forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
	(forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
	(forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))

CURRENT SUBGOAL ((rotate zero (rotate (succ (succ _t_45)) _v_44))=(rotate (succ zero) (rotate (succ _t_45) _v_44)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ (succ _t_45)) _v_44))=(rotate (succ zero) (rotate (succ _t_45) _v_44)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ (succ _t_45)) _v_44))=(rotate (succ zero) (rotate (succ _t_45) _v_44)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ (succ _t_45)) _v_44))=(rotate (succ zero) (rotate (succ _t_45) _v_44)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ (succ _t_45)) _v_44))=(rotate (succ zero) (rotate (succ _t_45) _v_44)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ (succ _t_45)) _v_44))=(rotate (succ zero) (rotate (succ _t_45) _v_44)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ (succ _t_45)) _v_44))=(rotate (succ zero) (rotate (succ _t_45) _v_44)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ (succ _t_45)) _v_44))=(rotate (succ zero) (rotate (succ _t_45) _v_44)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ (succ _t_45)) _v_44))=(rotate (succ zero) (rotate (succ _t_45) _v_44)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ (succ _t_45)) _v_44))=(rotate (succ zero) (rotate (succ _t_45) _v_44)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ (succ _t_45)) _v_44))=(rotate (succ zero) (rotate (succ _t_45) _v_44)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ (succ _t_45)) _v_44))=(rotate (succ zero) (rotate (succ _t_45) _v_44)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ (succ _t_45)) _v_44))=(rotate (succ zero) (rotate (succ _t_45) _v_44)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ (succ _t_45)) _v_44))=(rotate (succ zero) (rotate (succ _t_45) _v_44)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (succ _t_45)) (rotate zero _v_44))=(rotate (succ zero) (rotate (succ _t_45) _v_44)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (succ _t_45)) (rotate zero _v_44))=(rotate (succ zero) (rotate (succ _t_45) _v_44)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (succ _t_45)) (rotate zero _v_44))=(rotate (succ zero) (rotate (succ _t_45) _v_44)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (succ _t_45)) (rotate zero _v_44))=(rotate (succ zero) (rotate (succ _t_45) _v_44)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (succ _t_45)) (rotate zero _v_44))=(rotate (succ zero) (rotate (succ _t_45) _v_44)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (succ _t_45)) (rotate zero _v_44))=(rotate (succ zero) (rotate (succ _t_45) _v_44)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (succ _t_45)) (rotate zero _v_44))=(rotate (succ zero) (rotate (succ _t_45) _v_44)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ (succ _t_45)) _v_44))=(rotate (succ zero) (rotate (succ _t_45) _v_44)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ (succ _t_45)) _v_44))=(rotate (succ zero) (rotate (succ _t_45) _v_44)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ (succ _t_45)) _v_44))=(rotate (succ zero) (rotate (succ _t_45) _v_44)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ (succ _t_45)) _v_44))=(rotate (succ zero) (rotate (succ _t_45) _v_44)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ (succ _t_45)) _v_44))=(rotate (succ zero) (rotate (succ _t_45) _v_44)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ (succ _t_45)) _v_44))=(rotate (succ zero) (rotate (succ _t_45) _v_44)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ (succ _t_45)) _v_44))=(rotate (succ zero) (rotate (succ _t_45) _v_44)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ (succ _t_45)) _v_44))=(rotate (succ zero) (rotate (succ _t_45) _v_44)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ (succ _t_45)) _v_44))=(rotate (succ zero) (rotate (succ _t_45) _v_44)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ (succ _t_45)) _v_44))=(rotate (succ zero) (rotate (succ _t_45) _v_44)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ (succ _t_45)) _v_44))=(rotate (succ zero) (rotate (succ _t_45) _v_44)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ (succ _t_45)) _v_44))=(rotate (succ zero) (rotate (succ _t_45) _v_44)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ (succ _t_45)) _v_44))=(rotate (succ zero) (rotate (succ _t_45) _v_44)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ (succ _t_45)) _v_44))=(rotate (succ zero) (rotate (succ _t_45) _v_44)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (succ _t_45)) (rotate zero _v_44))=(rotate (succ zero) (rotate (succ _t_45) _v_44)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (succ _t_45)) (rotate zero _v_44))=(rotate (succ zero) (rotate (succ _t_45) _v_44)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (succ _t_45)) (rotate zero _v_44))=(rotate (succ zero) (rotate (succ _t_45) _v_44)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (succ _t_45)) (rotate zero _v_44))=(rotate (succ zero) (rotate (succ _t_45) _v_44)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (succ _t_45)) (rotate zero _v_44))=(rotate (succ zero) (rotate (succ _t_45) _v_44)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (succ _t_45)) (rotate zero _v_44))=(rotate (succ zero) (rotate (succ _t_45) _v_44)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (succ _t_45)) (rotate zero _v_44))=(rotate (succ zero) (rotate (succ _t_45) _v_44)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (succ _t_45)) (rotate zero _v_44))=(rotate (succ _t_45) (rotate (succ zero) _v_44)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (succ _t_45)) (rotate zero _v_44))=(rotate (succ _t_45) (rotate (succ zero) _v_44)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (succ _t_45)) (rotate zero _v_44))=(rotate (succ _t_45) (rotate (succ zero) _v_44)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (succ _t_45)) (rotate zero _v_44))=(rotate (succ _t_45) (rotate (succ zero) _v_44)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (succ _t_45)) (rotate zero _v_44))=(rotate (succ _t_45) (rotate (succ zero) _v_44)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (succ _t_45)) (rotate zero _v_44))=(rotate (succ _t_45) (rotate (succ zero) _v_44)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (succ _t_45)) (rotate zero _v_44))=(rotate (succ _t_45) (rotate (succ zero) _v_44)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ (succ _t_45)) _v_44))=(rotate (succ zero) (rotate (succ _t_45) _v_44)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ (succ _t_45)) _v_44))=(rotate (succ zero) (rotate (succ _t_45) _v_44)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ (succ _t_45)) _v_44))=(rotate (succ zero) (rotate (succ _t_45) _v_44)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ (succ _t_45)) _v_44))=(rotate (succ zero) (rotate (succ _t_45) _v_44)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ (succ _t_45)) _v_44))=(rotate (succ zero) (rotate (succ _t_45) _v_44)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ (succ _t_45)) _v_44))=(rotate (succ zero) (rotate (succ _t_45) _v_44)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ (succ _t_45)) _v_44))=(rotate (succ zero) (rotate (succ _t_45) _v_44)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ (succ _t_45)) _v_44))=(rotate (succ zero) (rotate (succ _t_45) _v_44)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ (succ _t_45)) _v_44))=(rotate (succ zero) (rotate (succ _t_45) _v_44)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ (succ _t_45)) _v_44))=(rotate (succ zero) (rotate (succ _t_45) _v_44)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ (succ _t_45)) _v_44))=(rotate (succ zero) (rotate (succ _t_45) _v_44)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ (succ _t_45)) _v_44))=(rotate (succ zero) (rotate (succ _t_45) _v_44)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ (succ _t_45)) _v_44))=(rotate (succ zero) (rotate (succ _t_45) _v_44)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ (succ _t_45)) _v_44))=(rotate (succ zero) (rotate (succ _t_45) _v_44)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ (succ _t_45)) _v_44))=(rotate (succ _t_45) (rotate (succ zero) _v_44)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ (succ _t_45)) _v_44))=(rotate (succ _t_45) (rotate (succ zero) _v_44)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ (succ _t_45)) _v_44))=(rotate (succ _t_45) (rotate (succ zero) _v_44)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ (succ _t_45)) _v_44))=(rotate (succ _t_45) (rotate (succ zero) _v_44)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ (succ _t_45)) _v_44))=(rotate (succ _t_45) (rotate (succ zero) _v_44)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ (succ _t_45)) _v_44))=(rotate (succ _t_45) (rotate (succ zero) _v_44)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ (succ _t_45)) _v_44))=(rotate (succ _t_45) (rotate (succ zero) _v_44)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ (succ _t_45)) _v_44))=(rotate (succ zero) (rotate (succ _t_45) _v_44)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ (succ _t_45)) _v_44))=(rotate (succ zero) (rotate (succ _t_45) _v_44)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ (succ _t_45)) _v_44))=(rotate (succ zero) (rotate (succ _t_45) _v_44)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ (succ _t_45)) _v_44))=(rotate (succ zero) (rotate (succ _t_45) _v_44)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ (succ _t_45)) _v_44))=(rotate (succ zero) (rotate (succ _t_45) _v_44)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ (succ _t_45)) _v_44))=(rotate (succ zero) (rotate (succ _t_45) _v_44)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ (succ _t_45)) _v_44))=(rotate (succ zero) (rotate (succ _t_45) _v_44)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ (succ _t_45)) _v_44))=(rotate (succ zero) (rotate (succ _t_45) _v_44)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ (succ _t_45)) _v_44))=(rotate (succ zero) (rotate (succ _t_45) _v_44)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ (succ _t_45)) _v_44))=(rotate (succ zero) (rotate (succ _t_45) _v_44)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ (succ _t_45)) _v_44))=(rotate (succ zero) (rotate (succ _t_45) _v_44)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ (succ _t_45)) _v_44))=(rotate (succ zero) (rotate (succ _t_45) _v_44)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ (succ _t_45)) _v_44))=(rotate (succ zero) (rotate (succ _t_45) _v_44)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ (succ _t_45)) _v_44))=(rotate (succ zero) (rotate (succ _t_45) _v_44)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ (succ _t_45)) _v_44))=(rotate (succ _t_45) (rotate (succ zero) _v_44)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ (succ _t_45)) _v_44))=(rotate (succ _t_45) (rotate (succ zero) _v_44)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ (succ _t_45)) _v_44))=(rotate (succ _t_45) (rotate (succ zero) _v_44)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ (succ _t_45)) _v_44))=(rotate (succ _t_45) (rotate (succ zero) _v_44)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ (succ _t_45)) _v_44))=(rotate (succ _t_45) (rotate (succ zero) _v_44)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ (succ _t_45)) _v_44))=(rotate (succ _t_45) (rotate (succ zero) _v_44)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ (succ _t_45)) _v_44))=(rotate (succ _t_45) (rotate (succ zero) _v_44)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (succ _t_45)) (rotate zero _v_44))=(rotate (succ _t_45) (rotate (succ zero) _v_44)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (succ _t_45)) (rotate zero _v_44))=(rotate (succ _t_45) (rotate (succ zero) _v_44)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (succ _t_45)) (rotate zero _v_44))=(rotate (succ _t_45) (rotate (succ zero) _v_44)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (succ _t_45)) (rotate zero _v_44))=(rotate (succ _t_45) (rotate (succ zero) _v_44)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (succ _t_45)) (rotate zero _v_44))=(rotate (succ _t_45) (rotate (succ zero) _v_44)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (succ _t_45)) (rotate zero _v_44))=(rotate (succ _t_45) (rotate (succ zero) _v_44)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (succ _t_45)) (rotate zero _v_44))=(rotate (succ _t_45) (rotate (succ zero) _v_44)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ (succ _t_45)) _v_44))=(rotate (succ zero) (rotate (succ _t_45) _v_44)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ (succ _t_45)) _v_44))=(rotate (succ zero) (rotate (succ _t_45) _v_44)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ (succ _t_45)) _v_44))=(rotate (succ zero) (rotate (succ _t_45) _v_44)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ (succ _t_45)) _v_44))=(rotate (succ zero) (rotate (succ _t_45) _v_44)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ (succ _t_45)) _v_44))=(rotate (succ zero) (rotate (succ _t_45) _v_44)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ (succ _t_45)) _v_44))=(rotate (succ zero) (rotate (succ _t_45) _v_44)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ (succ _t_45)) _v_44))=(rotate (succ zero) (rotate (succ _t_45) _v_44)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ (succ _t_45)) _v_44))=(rotate (succ zero) (rotate (succ _t_45) _v_44)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ (succ _t_45)) _v_44))=(rotate (succ zero) (rotate (succ _t_45) _v_44)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ (succ _t_45)) _v_44))=(rotate (succ zero) (rotate (succ _t_45) _v_44)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ (succ _t_45)) _v_44))=(rotate (succ zero) (rotate (succ _t_45) _v_44)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ (succ _t_45)) _v_44))=(rotate (succ zero) (rotate (succ _t_45) _v_44)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ (succ _t_45)) _v_44))=(rotate (succ zero) (rotate (succ _t_45) _v_44)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ (succ _t_45)) _v_44))=(rotate (succ zero) (rotate (succ _t_45) _v_44)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (succ _t_45)) (rotate zero _v_44))=(rotate (succ zero) (rotate (succ _t_45) _v_44)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (succ _t_45)) (rotate zero _v_44))=(rotate (succ zero) (rotate (succ _t_45) _v_44)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (succ _t_45)) (rotate zero _v_44))=(rotate (succ zero) (rotate (succ _t_45) _v_44)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (succ _t_45)) (rotate zero _v_44))=(rotate (succ zero) (rotate (succ _t_45) _v_44)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (succ _t_45)) (rotate zero _v_44))=(rotate (succ zero) (rotate (succ _t_45) _v_44)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (succ _t_45)) (rotate zero _v_44))=(rotate (succ zero) (rotate (succ _t_45) _v_44)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (succ _t_45)) (rotate zero _v_44))=(rotate (succ zero) (rotate (succ _t_45) _v_44)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ (succ _t_45)) _v_44))=(rotate (succ zero) (rotate (succ _t_45) _v_44)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ (succ _t_45)) _v_44))=(rotate (succ zero) (rotate (succ _t_45) _v_44)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ (succ _t_45)) _v_44))=(rotate (succ zero) (rotate (succ _t_45) _v_44)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ (succ _t_45)) _v_44))=(rotate (succ zero) (rotate (succ _t_45) _v_44)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ (succ _t_45)) _v_44))=(rotate (succ zero) (rotate (succ _t_45) _v_44)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ (succ _t_45)) _v_44))=(rotate (succ zero) (rotate (succ _t_45) _v_44)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ (succ _t_45)) _v_44))=(rotate (succ zero) (rotate (succ _t_45) _v_44)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ (succ _t_45)) _v_44))=(rotate (succ zero) (rotate (succ _t_45) _v_44)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ (succ _t_45)) _v_44))=(rotate (succ zero) (rotate (succ _t_45) _v_44)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ (succ _t_45)) _v_44))=(rotate (succ zero) (rotate (succ _t_45) _v_44)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ (succ _t_45)) _v_44))=(rotate (succ zero) (rotate (succ _t_45) _v_44)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ (succ _t_45)) _v_44))=(rotate (succ zero) (rotate (succ _t_45) _v_44)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ (succ _t_45)) _v_44))=(rotate (succ zero) (rotate (succ _t_45) _v_44)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ (succ _t_45)) _v_44))=(rotate (succ zero) (rotate (succ _t_45) _v_44)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (succ _t_45)) (rotate zero _v_44))=(rotate (succ zero) (rotate (succ _t_45) _v_44)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (succ _t_45)) (rotate zero _v_44))=(rotate (succ zero) (rotate (succ _t_45) _v_44)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (succ _t_45)) (rotate zero _v_44))=(rotate (succ zero) (rotate (succ _t_45) _v_44)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (succ _t_45)) (rotate zero _v_44))=(rotate (succ zero) (rotate (succ _t_45) _v_44)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (succ _t_45)) (rotate zero _v_44))=(rotate (succ zero) (rotate (succ _t_45) _v_44)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (succ _t_45)) (rotate zero _v_44))=(rotate (succ zero) (rotate (succ _t_45) _v_44)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (succ _t_45)) (rotate zero _v_44))=(rotate (succ zero) (rotate (succ _t_45) _v_44)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (succ _t_45)) (rotate zero _v_44))=(rotate (succ _t_45) (rotate (succ zero) _v_44)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (succ _t_45)) (rotate zero _v_44))=(rotate (succ _t_45) (rotate (succ zero) _v_44)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (succ _t_45)) (rotate zero _v_44))=(rotate (succ _t_45) (rotate (succ zero) _v_44)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (succ _t_45)) (rotate zero _v_44))=(rotate (succ _t_45) (rotate (succ zero) _v_44)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (succ _t_45)) (rotate zero _v_44))=(rotate (succ _t_45) (rotate (succ zero) _v_44)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (succ _t_45)) (rotate zero _v_44))=(rotate (succ _t_45) (rotate (succ zero) _v_44)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (succ _t_45)) (rotate zero _v_44))=(rotate (succ _t_45) (rotate (succ zero) _v_44)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ (succ _t_45)) _v_44))=(rotate (succ zero) (rotate (succ _t_45) _v_44)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ (succ _t_45)) _v_44))=(rotate (succ zero) (rotate (succ _t_45) _v_44)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ (succ _t_45)) _v_44))=(rotate (succ zero) (rotate (succ _t_45) _v_44)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ (succ _t_45)) _v_44))=(rotate (succ zero) (rotate (succ _t_45) _v_44)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ (succ _t_45)) _v_44))=(rotate (succ zero) (rotate (succ _t_45) _v_44)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ (succ _t_45)) _v_44))=(rotate (succ zero) (rotate (succ _t_45) _v_44)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ (succ _t_45)) _v_44))=(rotate (succ zero) (rotate (succ _t_45) _v_44)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ (succ _t_45)) _v_44))=(rotate (succ zero) (rotate (succ _t_45) _v_44)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ (succ _t_45)) _v_44))=(rotate (succ zero) (rotate (succ _t_45) _v_44)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ (succ _t_45)) _v_44))=(rotate (succ zero) (rotate (succ _t_45) _v_44)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ (succ _t_45)) _v_44))=(rotate (succ zero) (rotate (succ _t_45) _v_44)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ (succ _t_45)) _v_44))=(rotate (succ zero) (rotate (succ _t_45) _v_44)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ (succ _t_45)) _v_44))=(rotate (succ zero) (rotate (succ _t_45) _v_44)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ (succ _t_45)) _v_44))=(rotate (succ zero) (rotate (succ _t_45) _v_44)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ (succ _t_45)) _v_44))=(rotate (succ _t_45) (rotate (succ zero) _v_44)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ (succ _t_45)) _v_44))=(rotate (succ _t_45) (rotate (succ zero) _v_44)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ (succ _t_45)) _v_44))=(rotate (succ _t_45) (rotate (succ zero) _v_44)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ (succ _t_45)) _v_44))=(rotate (succ _t_45) (rotate (succ zero) _v_44)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ (succ _t_45)) _v_44))=(rotate (succ _t_45) (rotate (succ zero) _v_44)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ (succ _t_45)) _v_44))=(rotate (succ _t_45) (rotate (succ zero) _v_44)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ (succ _t_45)) _v_44))=(rotate (succ _t_45) (rotate (succ zero) _v_44)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ (succ _t_45)) _v_44))=(rotate (succ zero) (rotate (succ _t_45) _v_44)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ (succ _t_45)) _v_44))=(rotate (succ zero) (rotate (succ _t_45) _v_44)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ (succ _t_45)) _v_44))=(rotate (succ zero) (rotate (succ _t_45) _v_44)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ (succ _t_45)) _v_44))=(rotate (succ zero) (rotate (succ _t_45) _v_44)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ (succ _t_45)) _v_44))=(rotate (succ zero) (rotate (succ _t_45) _v_44)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ (succ _t_45)) _v_44))=(rotate (succ zero) (rotate (succ _t_45) _v_44)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ (succ _t_45)) _v_44))=(rotate (succ zero) (rotate (succ _t_45) _v_44)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ (succ _t_45)) _v_44))=(rotate (succ zero) (rotate (succ _t_45) _v_44)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ (succ _t_45)) _v_44))=(rotate (succ zero) (rotate (succ _t_45) _v_44)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ (succ _t_45)) _v_44))=(rotate (succ zero) (rotate (succ _t_45) _v_44)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ (succ _t_45)) _v_44))=(rotate (succ zero) (rotate (succ _t_45) _v_44)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ (succ _t_45)) _v_44))=(rotate (succ zero) (rotate (succ _t_45) _v_44)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ (succ _t_45)) _v_44))=(rotate (succ zero) (rotate (succ _t_45) _v_44)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ (succ _t_45)) _v_44))=(rotate (succ zero) (rotate (succ _t_45) _v_44)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ (succ _t_45)) _v_44))=(rotate (succ _t_45) (rotate (succ zero) _v_44)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ (succ _t_45)) _v_44))=(rotate (succ _t_45) (rotate (succ zero) _v_44)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ (succ _t_45)) _v_44))=(rotate (succ _t_45) (rotate (succ zero) _v_44)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ (succ _t_45)) _v_44))=(rotate (succ _t_45) (rotate (succ zero) _v_44)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ (succ _t_45)) _v_44))=(rotate (succ _t_45) (rotate (succ zero) _v_44)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ (succ _t_45)) _v_44))=(rotate (succ _t_45) (rotate (succ zero) _v_44)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ (succ _t_45)) _v_44))=(rotate (succ _t_45) (rotate (succ zero) _v_44)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (succ _t_45)) (rotate zero _v_44))=(rotate (succ _t_45) (rotate (succ zero) _v_44)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (succ _t_45)) (rotate zero _v_44))=(rotate (succ _t_45) (rotate (succ zero) _v_44)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (succ _t_45)) (rotate zero _v_44))=(rotate (succ _t_45) (rotate (succ zero) _v_44)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (succ _t_45)) (rotate zero _v_44))=(rotate (succ _t_45) (rotate (succ zero) _v_44)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (succ _t_45)) (rotate zero _v_44))=(rotate (succ _t_45) (rotate (succ zero) _v_44)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (succ _t_45)) (rotate zero _v_44))=(rotate (succ _t_45) (rotate (succ zero) _v_44)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (succ _t_45)) (rotate zero _v_44))=(rotate (succ _t_45) (rotate (succ zero) _v_44)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ (succ _t_45)) _v_44))=(rotate (succ _t_45) (rotate (succ zero) _v_44)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ (succ _t_45)) _v_44))=(rotate (succ _t_45) (rotate (succ zero) _v_44)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ (succ _t_45)) _v_44))=(rotate (succ _t_45) (rotate (succ zero) _v_44)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ (succ _t_45)) _v_44))=(rotate (succ _t_45) (rotate (succ zero) _v_44)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ (succ _t_45)) _v_44))=(rotate (succ _t_45) (rotate (succ zero) _v_44)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ (succ _t_45)) _v_44))=(rotate (succ _t_45) (rotate (succ zero) _v_44)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ (succ _t_45)) _v_44))=(rotate (succ _t_45) (rotate (succ zero) _v_44)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (succ _t_45)) (rotate zero _v_44))=(rotate (succ _t_45) (rotate (succ zero) _v_44)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (succ _t_45)) (rotate zero _v_44))=(rotate (succ _t_45) (rotate (succ zero) _v_44)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (succ _t_45)) (rotate zero _v_44))=(rotate (succ _t_45) (rotate (succ zero) _v_44)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (succ _t_45)) (rotate zero _v_44))=(rotate (succ _t_45) (rotate (succ zero) _v_44)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (succ _t_45)) (rotate zero _v_44))=(rotate (succ _t_45) (rotate (succ zero) _v_44)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (succ _t_45)) (rotate zero _v_44))=(rotate (succ _t_45) (rotate (succ zero) _v_44)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (succ _t_45)) (rotate zero _v_44))=(rotate (succ _t_45) (rotate (succ zero) _v_44)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (succ _t_45)) (rotate zero _v_44))=(rotate (succ _t_45) (rotate (succ zero) _v_44)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (succ _t_45)) (rotate zero _v_44))=(rotate (succ _t_45) (rotate (succ zero) _v_44)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (succ _t_45)) (rotate zero _v_44))=(rotate (succ _t_45) (rotate (succ zero) _v_44)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (succ _t_45)) (rotate zero _v_44))=(rotate (succ _t_45) (rotate (succ zero) _v_44)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (succ _t_45)) (rotate zero _v_44))=(rotate (succ _t_45) (rotate (succ zero) _v_44)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (succ _t_45)) (rotate zero _v_44))=(rotate (succ _t_45) (rotate (succ zero) _v_44)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (succ _t_45)) (rotate zero _v_44))=(rotate (succ _t_45) (rotate (succ zero) _v_44)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (succ _t_45)) (rotate zero _v_44))=(rotate (succ zero) (rotate (succ _t_45) _v_44)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (succ _t_45)) (rotate zero _v_44))=(rotate (succ zero) (rotate (succ _t_45) _v_44)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (succ _t_45)) (rotate zero _v_44))=(rotate (succ zero) (rotate (succ _t_45) _v_44)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (succ _t_45)) (rotate zero _v_44))=(rotate (succ zero) (rotate (succ _t_45) _v_44)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (succ _t_45)) (rotate zero _v_44))=(rotate (succ zero) (rotate (succ _t_45) _v_44)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (succ _t_45)) (rotate zero _v_44))=(rotate (succ zero) (rotate (succ _t_45) _v_44)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (succ _t_45)) (rotate zero _v_44))=(rotate (succ zero) (rotate (succ _t_45) _v_44)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (succ _t_45)) (rotate zero _v_44))=(rotate (succ _t_45) (rotate (succ zero) _v_44)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (succ _t_45)) (rotate zero _v_44))=(rotate (succ _t_45) (rotate (succ zero) _v_44)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (succ _t_45)) (rotate zero _v_44))=(rotate (succ _t_45) (rotate (succ zero) _v_44)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (succ _t_45)) (rotate zero _v_44))=(rotate (succ _t_45) (rotate (succ zero) _v_44)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (succ _t_45)) (rotate zero _v_44))=(rotate (succ _t_45) (rotate (succ zero) _v_44)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (succ _t_45)) (rotate zero _v_44))=(rotate (succ _t_45) (rotate (succ zero) _v_44)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (succ _t_45)) (rotate zero _v_44))=(rotate (succ _t_45) (rotate (succ zero) _v_44)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (succ _t_45)) (rotate zero _v_44))=(rotate (succ _t_45) (rotate (succ zero) _v_44)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (succ _t_45)) (rotate zero _v_44))=(rotate (succ _t_45) (rotate (succ zero) _v_44)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (succ _t_45)) (rotate zero _v_44))=(rotate (succ _t_45) (rotate (succ zero) _v_44)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (succ _t_45)) (rotate zero _v_44))=(rotate (succ _t_45) (rotate (succ zero) _v_44)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (succ _t_45)) (rotate zero _v_44))=(rotate (succ _t_45) (rotate (succ zero) _v_44)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (succ _t_45)) (rotate zero _v_44))=(rotate (succ _t_45) (rotate (succ zero) _v_44)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (succ _t_45)) (rotate zero _v_44))=(rotate (succ _t_45) (rotate (succ zero) _v_44)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (succ _t_45)) (rotate zero _v_44))=(rotate (succ zero) (rotate (succ _t_45) _v_44)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (succ _t_45)) (rotate zero _v_44))=(rotate (succ zero) (rotate (succ _t_45) _v_44)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (succ _t_45)) (rotate zero _v_44))=(rotate (succ zero) (rotate (succ _t_45) _v_44)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (succ _t_45)) (rotate zero _v_44))=(rotate (succ zero) (rotate (succ _t_45) _v_44)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (succ _t_45)) (rotate zero _v_44))=(rotate (succ zero) (rotate (succ _t_45) _v_44)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (succ _t_45)) (rotate zero _v_44))=(rotate (succ zero) (rotate (succ _t_45) _v_44)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (succ _t_45)) (rotate zero _v_44))=(rotate (succ zero) (rotate (succ _t_45) _v_44)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ (succ _t_45)) _v_44))=(rotate (succ zero) (rotate (succ _t_45) _v_44)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ (succ _t_45)) _v_44))=(rotate (succ zero) (rotate (succ _t_45) _v_44)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ (succ _t_45)) _v_44))=(rotate (succ zero) (rotate (succ _t_45) _v_44)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ (succ _t_45)) _v_44))=(rotate (succ zero) (rotate (succ _t_45) _v_44)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ (succ _t_45)) _v_44))=(rotate (succ zero) (rotate (succ _t_45) _v_44)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ (succ _t_45)) _v_44))=(rotate (succ zero) (rotate (succ _t_45) _v_44)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ (succ _t_45)) _v_44))=(rotate (succ zero) (rotate (succ _t_45) _v_44)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (succ _t_45)) (rotate zero _v_44))=(rotate (succ _t_45) (rotate (succ zero) _v_44)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (succ _t_45)) (rotate zero _v_44))=(rotate (succ _t_45) (rotate (succ zero) _v_44)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (succ _t_45)) (rotate zero _v_44))=(rotate (succ _t_45) (rotate (succ zero) _v_44)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (succ _t_45)) (rotate zero _v_44))=(rotate (succ _t_45) (rotate (succ zero) _v_44)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (succ _t_45)) (rotate zero _v_44))=(rotate (succ _t_45) (rotate (succ zero) _v_44)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (succ _t_45)) (rotate zero _v_44))=(rotate (succ _t_45) (rotate (succ zero) _v_44)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (succ _t_45)) (rotate zero _v_44))=(rotate (succ _t_45) (rotate (succ zero) _v_44)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (succ _t_45)) (rotate zero _v_44))=(rotate (succ _t_45) (rotate (succ zero) _v_44)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (succ _t_45)) (rotate zero _v_44))=(rotate (succ _t_45) (rotate (succ zero) _v_44)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (succ _t_45)) (rotate zero _v_44))=(rotate (succ _t_45) (rotate (succ zero) _v_44)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (succ _t_45)) (rotate zero _v_44))=(rotate (succ _t_45) (rotate (succ zero) _v_44)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (succ _t_45)) (rotate zero _v_44))=(rotate (succ _t_45) (rotate (succ zero) _v_44)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (succ _t_45)) (rotate zero _v_44))=(rotate (succ _t_45) (rotate (succ zero) _v_44)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (succ _t_45)) (rotate zero _v_44))=(rotate (succ _t_45) (rotate (succ zero) _v_44)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ (succ _t_45)) _v_44))=(rotate (succ _t_45) (rotate (succ zero) _v_44)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ (succ _t_45)) _v_44))=(rotate (succ _t_45) (rotate (succ zero) _v_44)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ (succ _t_45)) _v_44))=(rotate (succ _t_45) (rotate (succ zero) _v_44)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ (succ _t_45)) _v_44))=(rotate (succ _t_45) (rotate (succ zero) _v_44)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ (succ _t_45)) _v_44))=(rotate (succ _t_45) (rotate (succ zero) _v_44)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ (succ _t_45)) _v_44))=(rotate (succ _t_45) (rotate (succ zero) _v_44)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ (succ _t_45)) _v_44))=(rotate (succ _t_45) (rotate (succ zero) _v_44)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (succ _t_45)) (rotate zero _v_44))=(rotate (succ _t_45) (rotate (succ zero) _v_44)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (succ _t_45)) (rotate zero _v_44))=(rotate (succ _t_45) (rotate (succ zero) _v_44)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (succ _t_45)) (rotate zero _v_44))=(rotate (succ _t_45) (rotate (succ zero) _v_44)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (succ _t_45)) (rotate zero _v_44))=(rotate (succ _t_45) (rotate (succ zero) _v_44)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (succ _t_45)) (rotate zero _v_44))=(rotate (succ _t_45) (rotate (succ zero) _v_44)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (succ _t_45)) (rotate zero _v_44))=(rotate (succ _t_45) (rotate (succ zero) _v_44)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (succ _t_45)) (rotate zero _v_44))=(rotate (succ _t_45) (rotate (succ zero) _v_44)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (succ _t_45)) (rotate zero _v_44))=(rotate (succ _t_45) (rotate (succ zero) _v_44)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (succ _t_45)) (rotate zero _v_44))=(rotate (succ _t_45) (rotate (succ zero) _v_44)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (succ _t_45)) (rotate zero _v_44))=(rotate (succ _t_45) (rotate (succ zero) _v_44)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (succ _t_45)) (rotate zero _v_44))=(rotate (succ _t_45) (rotate (succ zero) _v_44)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (succ _t_45)) (rotate zero _v_44))=(rotate (succ _t_45) (rotate (succ zero) _v_44)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (succ _t_45)) (rotate zero _v_44))=(rotate (succ _t_45) (rotate (succ zero) _v_44)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (succ _t_45)) (rotate zero _v_44))=(rotate (succ _t_45) (rotate (succ zero) _v_44)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ (succ _t_45)) _v_44))=(rotate (succ _t_45) (rotate (succ zero) _v_44)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ (succ _t_45)) _v_44))=(rotate (succ _t_45) (rotate (succ zero) _v_44)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ (succ _t_45)) _v_44))=(rotate (succ _t_45) (rotate (succ zero) _v_44)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ (succ _t_45)) _v_44))=(rotate (succ _t_45) (rotate (succ zero) _v_44)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ (succ _t_45)) _v_44))=(rotate (succ _t_45) (rotate (succ zero) _v_44)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ (succ _t_45)) _v_44))=(rotate (succ _t_45) (rotate (succ zero) _v_44)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ (succ _t_45)) _v_44))=(rotate (succ _t_45) (rotate (succ zero) _v_44)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ (succ _t_45)) _v_44))=(rotate (succ zero) (rotate (succ _t_45) _v_44)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ (succ _t_45)) _v_44))=(rotate (succ zero) (rotate (succ _t_45) _v_44)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ (succ _t_45)) _v_44))=(rotate (succ zero) (rotate (succ _t_45) _v_44)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ (succ _t_45)) _v_44))=(rotate (succ zero) (rotate (succ _t_45) _v_44)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ (succ _t_45)) _v_44))=(rotate (succ zero) (rotate (succ _t_45) _v_44)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ (succ _t_45)) _v_44))=(rotate (succ zero) (rotate (succ _t_45) _v_44)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ (succ _t_45)) _v_44))=(rotate (succ zero) (rotate (succ _t_45) _v_44)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (succ _t_45)) (rotate zero _v_44))=(rotate (succ _t_45) (rotate (succ zero) _v_44)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (succ _t_45)) (rotate zero _v_44))=(rotate (succ _t_45) (rotate (succ zero) _v_44)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (succ _t_45)) (rotate zero _v_44))=(rotate (succ _t_45) (rotate (succ zero) _v_44)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (succ _t_45)) (rotate zero _v_44))=(rotate (succ _t_45) (rotate (succ zero) _v_44)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (succ _t_45)) (rotate zero _v_44))=(rotate (succ _t_45) (rotate (succ zero) _v_44)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (succ _t_45)) (rotate zero _v_44))=(rotate (succ _t_45) (rotate (succ zero) _v_44)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (succ _t_45)) (rotate zero _v_44))=(rotate (succ _t_45) (rotate (succ zero) _v_44)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (succ _t_45)) (rotate zero _v_44))=(rotate (succ _t_45) (rotate (succ zero) _v_44)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (succ _t_45)) (rotate zero _v_44))=(rotate (succ _t_45) (rotate (succ zero) _v_44)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (succ _t_45)) (rotate zero _v_44))=(rotate (succ _t_45) (rotate (succ zero) _v_44)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (succ _t_45)) (rotate zero _v_44))=(rotate (succ _t_45) (rotate (succ zero) _v_44)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (succ _t_45)) (rotate zero _v_44))=(rotate (succ _t_45) (rotate (succ zero) _v_44)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (succ _t_45)) (rotate zero _v_44))=(rotate (succ _t_45) (rotate (succ zero) _v_44)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (succ _t_45)) (rotate zero _v_44))=(rotate (succ _t_45) (rotate (succ zero) _v_44)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (succ _t_45)) (rotate zero _v_44))=(rotate (succ zero) (rotate (succ _t_45) _v_44)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (succ _t_45)) (rotate zero _v_44))=(rotate (succ zero) (rotate (succ _t_45) _v_44)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (succ _t_45)) (rotate zero _v_44))=(rotate (succ zero) (rotate (succ _t_45) _v_44)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (succ _t_45)) (rotate zero _v_44))=(rotate (succ zero) (rotate (succ _t_45) _v_44)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (succ _t_45)) (rotate zero _v_44))=(rotate (succ zero) (rotate (succ _t_45) _v_44)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (succ _t_45)) (rotate zero _v_44))=(rotate (succ zero) (rotate (succ _t_45) _v_44)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (succ _t_45)) (rotate zero _v_44))=(rotate (succ zero) (rotate (succ _t_45) _v_44)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (succ _t_45)) (rotate zero _v_44))=(rotate (succ _t_45) (rotate (succ zero) _v_44)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (succ _t_45)) (rotate zero _v_44))=(rotate (succ _t_45) (rotate (succ zero) _v_44)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (succ _t_45)) (rotate zero _v_44))=(rotate (succ _t_45) (rotate (succ zero) _v_44)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (succ _t_45)) (rotate zero _v_44))=(rotate (succ _t_45) (rotate (succ zero) _v_44)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (succ _t_45)) (rotate zero _v_44))=(rotate (succ _t_45) (rotate (succ zero) _v_44)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (succ _t_45)) (rotate zero _v_44))=(rotate (succ _t_45) (rotate (succ zero) _v_44)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (succ _t_45)) (rotate zero _v_44))=(rotate (succ _t_45) (rotate (succ zero) _v_44)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (succ _t_45)) (rotate zero _v_44))=(rotate (succ _t_45) (rotate (succ zero) _v_44)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (succ _t_45)) (rotate zero _v_44))=(rotate (succ _t_45) (rotate (succ zero) _v_44)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (succ _t_45)) (rotate zero _v_44))=(rotate (succ _t_45) (rotate (succ zero) _v_44)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (succ _t_45)) (rotate zero _v_44))=(rotate (succ _t_45) (rotate (succ zero) _v_44)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (succ _t_45)) (rotate zero _v_44))=(rotate (succ _t_45) (rotate (succ zero) _v_44)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (succ _t_45)) (rotate zero _v_44))=(rotate (succ _t_45) (rotate (succ zero) _v_44)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (succ _t_45)) (rotate zero _v_44))=(rotate (succ _t_45) (rotate (succ zero) _v_44)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (succ _t_45)) (rotate zero _v_44))=(rotate (succ zero) (rotate (succ _t_45) _v_44)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (succ _t_45)) (rotate zero _v_44))=(rotate (succ zero) (rotate (succ _t_45) _v_44)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (succ _t_45)) (rotate zero _v_44))=(rotate (succ zero) (rotate (succ _t_45) _v_44)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (succ _t_45)) (rotate zero _v_44))=(rotate (succ zero) (rotate (succ _t_45) _v_44)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (succ _t_45)) (rotate zero _v_44))=(rotate (succ zero) (rotate (succ _t_45) _v_44)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (succ _t_45)) (rotate zero _v_44))=(rotate (succ zero) (rotate (succ _t_45) _v_44)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (succ _t_45)) (rotate zero _v_44))=(rotate (succ zero) (rotate (succ _t_45) _v_44)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ (succ _t_45)) _v_44))=(rotate (succ zero) (rotate (succ _t_45) _v_44)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ (succ _t_45)) _v_44))=(rotate (succ zero) (rotate (succ _t_45) _v_44)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ (succ _t_45)) _v_44))=(rotate (succ zero) (rotate (succ _t_45) _v_44)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ (succ _t_45)) _v_44))=(rotate (succ zero) (rotate (succ _t_45) _v_44)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ (succ _t_45)) _v_44))=(rotate (succ zero) (rotate (succ _t_45) _v_44)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ (succ _t_45)) _v_44))=(rotate (succ zero) (rotate (succ _t_45) _v_44)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ (succ _t_45)) _v_44))=(rotate (succ zero) (rotate (succ _t_45) _v_44)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (succ _t_45)) (rotate zero _v_44))=(rotate (succ _t_45) (rotate (succ zero) _v_44)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (succ _t_45)) (rotate zero _v_44))=(rotate (succ _t_45) (rotate (succ zero) _v_44)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (succ _t_45)) (rotate zero _v_44))=(rotate (succ _t_45) (rotate (succ zero) _v_44)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (succ _t_45)) (rotate zero _v_44))=(rotate (succ _t_45) (rotate (succ zero) _v_44)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (succ _t_45)) (rotate zero _v_44))=(rotate (succ _t_45) (rotate (succ zero) _v_44)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (succ _t_45)) (rotate zero _v_44))=(rotate (succ _t_45) (rotate (succ zero) _v_44)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (succ _t_45)) (rotate zero _v_44))=(rotate (succ _t_45) (rotate (succ zero) _v_44)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (succ _t_45)) (rotate zero _v_44))=(rotate (succ _t_45) (rotate (succ zero) _v_44)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (succ _t_45)) (rotate zero _v_44))=(rotate (succ _t_45) (rotate (succ zero) _v_44)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (succ _t_45)) (rotate zero _v_44))=(rotate (succ _t_45) (rotate (succ zero) _v_44)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (succ _t_45)) (rotate zero _v_44))=(rotate (succ _t_45) (rotate (succ zero) _v_44)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (succ _t_45)) (rotate zero _v_44))=(rotate (succ _t_45) (rotate (succ zero) _v_44)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (succ _t_45)) (rotate zero _v_44))=(rotate (succ _t_45) (rotate (succ zero) _v_44)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (succ _t_45)) (rotate zero _v_44))=(rotate (succ _t_45) (rotate (succ zero) _v_44)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ (succ _t_45)) _v_44))=(rotate (succ _t_45) (rotate (succ zero) _v_44)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ (succ _t_45)) _v_44))=(rotate (succ _t_45) (rotate (succ zero) _v_44)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ (succ _t_45)) _v_44))=(rotate (succ _t_45) (rotate (succ zero) _v_44)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ (succ _t_45)) _v_44))=(rotate (succ _t_45) (rotate (succ zero) _v_44)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ (succ _t_45)) _v_44))=(rotate (succ _t_45) (rotate (succ zero) _v_44)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ (succ _t_45)) _v_44))=(rotate (succ _t_45) (rotate (succ zero) _v_44)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ (succ _t_45)) _v_44))=(rotate (succ _t_45) (rotate (succ zero) _v_44)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (succ _t_45)) (rotate zero _v_44))=(rotate (succ _t_45) (rotate (succ zero) _v_44)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (succ _t_45)) (rotate zero _v_44))=(rotate (succ _t_45) (rotate (succ zero) _v_44)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (succ _t_45)) (rotate zero _v_44))=(rotate (succ _t_45) (rotate (succ zero) _v_44)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (succ _t_45)) (rotate zero _v_44))=(rotate (succ _t_45) (rotate (succ zero) _v_44)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (succ _t_45)) (rotate zero _v_44))=(rotate (succ _t_45) (rotate (succ zero) _v_44)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (succ _t_45)) (rotate zero _v_44))=(rotate (succ _t_45) (rotate (succ zero) _v_44)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (succ _t_45)) (rotate zero _v_44))=(rotate (succ _t_45) (rotate (succ zero) _v_44)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (succ _t_45)) (rotate zero _v_44))=(rotate (succ _t_45) (rotate (succ zero) _v_44)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (succ _t_45)) (rotate zero _v_44))=(rotate (succ _t_45) (rotate (succ zero) _v_44)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (succ _t_45)) (rotate zero _v_44))=(rotate (succ _t_45) (rotate (succ zero) _v_44)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (succ _t_45)) (rotate zero _v_44))=(rotate (succ _t_45) (rotate (succ zero) _v_44)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (succ _t_45)) (rotate zero _v_44))=(rotate (succ _t_45) (rotate (succ zero) _v_44)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (succ _t_45)) (rotate zero _v_44))=(rotate (succ _t_45) (rotate (succ zero) _v_44)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (succ _t_45)) (rotate zero _v_44))=(rotate (succ _t_45) (rotate (succ zero) _v_44)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ (succ _t_45)) _v_44))=(rotate (succ _t_45) (rotate (succ zero) _v_44)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ (succ _t_45)) _v_44))=(rotate (succ _t_45) (rotate (succ zero) _v_44)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ (succ _t_45)) _v_44))=(rotate (succ _t_45) (rotate (succ zero) _v_44)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ (succ _t_45)) _v_44))=(rotate (succ _t_45) (rotate (succ zero) _v_44)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ (succ _t_45)) _v_44))=(rotate (succ _t_45) (rotate (succ zero) _v_44)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ (succ _t_45)) _v_44))=(rotate (succ _t_45) (rotate (succ zero) _v_44)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ (succ _t_45)) _v_44))=(rotate (succ _t_45) (rotate (succ zero) _v_44)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ (succ _t_45)) _v_44))=(rotate (succ zero) (rotate (succ _t_45) _v_44)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ (succ _t_45)) _v_44))=(rotate (succ zero) (rotate (succ _t_45) _v_44)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ (succ _t_45)) _v_44))=(rotate (succ zero) (rotate (succ _t_45) _v_44)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ (succ _t_45)) _v_44))=(rotate (succ zero) (rotate (succ _t_45) _v_44)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ (succ _t_45)) _v_44))=(rotate (succ zero) (rotate (succ _t_45) _v_44)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ (succ _t_45)) _v_44))=(rotate (succ zero) (rotate (succ _t_45) _v_44)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ (succ _t_45)) _v_44))=(rotate (succ zero) (rotate (succ _t_45) _v_44)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ (succ _t_45)) _v_44))=(rotate (succ _t_45) (rotate (succ zero) _v_44)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ (succ _t_45)) _v_44))=(rotate (succ _t_45) (rotate (succ zero) _v_44)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ (succ _t_45)) _v_44))=(rotate (succ _t_45) (rotate (succ zero) _v_44)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ (succ _t_45)) _v_44))=(rotate (succ _t_45) (rotate (succ zero) _v_44)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ (succ _t_45)) _v_44))=(rotate (succ _t_45) (rotate (succ zero) _v_44)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ (succ _t_45)) _v_44))=(rotate (succ _t_45) (rotate (succ zero) _v_44)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ (succ _t_45)) _v_44))=(rotate (succ _t_45) (rotate (succ zero) _v_44)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ (succ _t_45)) _v_44))=(rotate (succ zero) (rotate (succ _t_45) _v_44)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ (succ _t_45)) _v_44))=(rotate (succ zero) (rotate (succ _t_45) _v_44)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ (succ _t_45)) _v_44))=(rotate (succ zero) (rotate (succ _t_45) _v_44)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ (succ _t_45)) _v_44))=(rotate (succ zero) (rotate (succ _t_45) _v_44)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ (succ _t_45)) _v_44))=(rotate (succ zero) (rotate (succ _t_45) _v_44)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ (succ _t_45)) _v_44))=(rotate (succ zero) (rotate (succ _t_45) _v_44)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ (succ _t_45)) _v_44))=(rotate (succ zero) (rotate (succ _t_45) _v_44)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ (succ _t_45)) _v_44))=(rotate (succ zero) (rotate (succ _t_45) _v_44)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ (succ _t_45)) _v_44))=(rotate (succ zero) (rotate (succ _t_45) _v_44)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ (succ _t_45)) _v_44))=(rotate (succ zero) (rotate (succ _t_45) _v_44)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ (succ _t_45)) _v_44))=(rotate (succ zero) (rotate (succ _t_45) _v_44)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ (succ _t_45)) _v_44))=(rotate (succ zero) (rotate (succ _t_45) _v_44)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ (succ _t_45)) _v_44))=(rotate (succ zero) (rotate (succ _t_45) _v_44)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ (succ _t_45)) _v_44))=(rotate (succ zero) (rotate (succ _t_45) _v_44)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (succ _t_45)) (rotate zero _v_44))=(rotate (succ zero) (rotate (succ _t_45) _v_44)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (succ _t_45)) (rotate zero _v_44))=(rotate (succ zero) (rotate (succ _t_45) _v_44)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (succ _t_45)) (rotate zero _v_44))=(rotate (succ zero) (rotate (succ _t_45) _v_44)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (succ _t_45)) (rotate zero _v_44))=(rotate (succ zero) (rotate (succ _t_45) _v_44)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (succ _t_45)) (rotate zero _v_44))=(rotate (succ zero) (rotate (succ _t_45) _v_44)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (succ _t_45)) (rotate zero _v_44))=(rotate (succ zero) (rotate (succ _t_45) _v_44)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (succ _t_45)) (rotate zero _v_44))=(rotate (succ zero) (rotate (succ _t_45) _v_44)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ (succ _t_45)) _v_44))=(rotate (succ zero) (rotate (succ _t_45) _v_44)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ (succ _t_45)) _v_44))=(rotate (succ zero) (rotate (succ _t_45) _v_44)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ (succ _t_45)) _v_44))=(rotate (succ zero) (rotate (succ _t_45) _v_44)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ (succ _t_45)) _v_44))=(rotate (succ zero) (rotate (succ _t_45) _v_44)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ (succ _t_45)) _v_44))=(rotate (succ zero) (rotate (succ _t_45) _v_44)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ (succ _t_45)) _v_44))=(rotate (succ zero) (rotate (succ _t_45) _v_44)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ (succ _t_45)) _v_44))=(rotate (succ zero) (rotate (succ _t_45) _v_44)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ (succ _t_45)) _v_44))=(rotate (succ zero) (rotate (succ _t_45) _v_44)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ (succ _t_45)) _v_44))=(rotate (succ zero) (rotate (succ _t_45) _v_44)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ (succ _t_45)) _v_44))=(rotate (succ zero) (rotate (succ _t_45) _v_44)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ (succ _t_45)) _v_44))=(rotate (succ zero) (rotate (succ _t_45) _v_44)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ (succ _t_45)) _v_44))=(rotate (succ zero) (rotate (succ _t_45) _v_44)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ (succ _t_45)) _v_44))=(rotate (succ zero) (rotate (succ _t_45) _v_44)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ (succ _t_45)) _v_44))=(rotate (succ zero) (rotate (succ _t_45) _v_44)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (succ _t_45)) (rotate zero _v_44))=(rotate (succ zero) (rotate (succ _t_45) _v_44)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (succ _t_45)) (rotate zero _v_44))=(rotate (succ zero) (rotate (succ _t_45) _v_44)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (succ _t_45)) (rotate zero _v_44))=(rotate (succ zero) (rotate (succ _t_45) _v_44)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (succ _t_45)) (rotate zero _v_44))=(rotate (succ zero) (rotate (succ _t_45) _v_44)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (succ _t_45)) (rotate zero _v_44))=(rotate (succ zero) (rotate (succ _t_45) _v_44)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (succ _t_45)) (rotate zero _v_44))=(rotate (succ zero) (rotate (succ _t_45) _v_44)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (succ _t_45)) (rotate zero _v_44))=(rotate (succ zero) (rotate (succ _t_45) _v_44)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (succ _t_45)) (rotate zero _v_44))=(rotate (succ _t_45) (rotate (succ zero) _v_44)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (succ _t_45)) (rotate zero _v_44))=(rotate (succ _t_45) (rotate (succ zero) _v_44)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (succ _t_45)) (rotate zero _v_44))=(rotate (succ _t_45) (rotate (succ zero) _v_44)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (succ _t_45)) (rotate zero _v_44))=(rotate (succ _t_45) (rotate (succ zero) _v_44)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (succ _t_45)) (rotate zero _v_44))=(rotate (succ _t_45) (rotate (succ zero) _v_44)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (succ _t_45)) (rotate zero _v_44))=(rotate (succ _t_45) (rotate (succ zero) _v_44)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (succ _t_45)) (rotate zero _v_44))=(rotate (succ _t_45) (rotate (succ zero) _v_44)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ (succ _t_45)) _v_44))=(rotate (succ zero) (rotate (succ _t_45) _v_44)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ (succ _t_45)) _v_44))=(rotate (succ zero) (rotate (succ _t_45) _v_44)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ (succ _t_45)) _v_44))=(rotate (succ zero) (rotate (succ _t_45) _v_44)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ (succ _t_45)) _v_44))=(rotate (succ zero) (rotate (succ _t_45) _v_44)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ (succ _t_45)) _v_44))=(rotate (succ zero) (rotate (succ _t_45) _v_44)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ (succ _t_45)) _v_44))=(rotate (succ zero) (rotate (succ _t_45) _v_44)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ (succ _t_45)) _v_44))=(rotate (succ zero) (rotate (succ _t_45) _v_44)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ (succ _t_45)) _v_44))=(rotate (succ zero) (rotate (succ _t_45) _v_44)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ (succ _t_45)) _v_44))=(rotate (succ zero) (rotate (succ _t_45) _v_44)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ (succ _t_45)) _v_44))=(rotate (succ zero) (rotate (succ _t_45) _v_44)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ (succ _t_45)) _v_44))=(rotate (succ zero) (rotate (succ _t_45) _v_44)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ (succ _t_45)) _v_44))=(rotate (succ zero) (rotate (succ _t_45) _v_44)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ (succ _t_45)) _v_44))=(rotate (succ zero) (rotate (succ _t_45) _v_44)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ (succ _t_45)) _v_44))=(rotate (succ zero) (rotate (succ _t_45) _v_44)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ (succ _t_45)) _v_44))=(rotate (succ _t_45) (rotate (succ zero) _v_44)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ (succ _t_45)) _v_44))=(rotate (succ _t_45) (rotate (succ zero) _v_44)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ (succ _t_45)) _v_44))=(rotate (succ _t_45) (rotate (succ zero) _v_44)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ (succ _t_45)) _v_44))=(rotate (succ _t_45) (rotate (succ zero) _v_44)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ (succ _t_45)) _v_44))=(rotate (succ _t_45) (rotate (succ zero) _v_44)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ (succ _t_45)) _v_44))=(rotate (succ _t_45) (rotate (succ zero) _v_44)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ (succ _t_45)) _v_44))=(rotate (succ _t_45) (rotate (succ zero) _v_44)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ (succ _t_45)) _v_44))=(rotate (succ zero) (rotate (succ _t_45) _v_44)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ (succ _t_45)) _v_44))=(rotate (succ zero) (rotate (succ _t_45) _v_44)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ (succ _t_45)) _v_44))=(rotate (succ zero) (rotate (succ _t_45) _v_44)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ (succ _t_45)) _v_44))=(rotate (succ zero) (rotate (succ _t_45) _v_44)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ (succ _t_45)) _v_44))=(rotate (succ zero) (rotate (succ _t_45) _v_44)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ (succ _t_45)) _v_44))=(rotate (succ zero) (rotate (succ _t_45) _v_44)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ (succ _t_45)) _v_44))=(rotate (succ zero) (rotate (succ _t_45) _v_44)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ (succ _t_45)) _v_44))=(rotate (succ zero) (rotate (succ _t_45) _v_44)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ (succ _t_45)) _v_44))=(rotate (succ zero) (rotate (succ _t_45) _v_44)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ (succ _t_45)) _v_44))=(rotate (succ zero) (rotate (succ _t_45) _v_44)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ (succ _t_45)) _v_44))=(rotate (succ zero) (rotate (succ _t_45) _v_44)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ (succ _t_45)) _v_44))=(rotate (succ zero) (rotate (succ _t_45) _v_44)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ (succ _t_45)) _v_44))=(rotate (succ zero) (rotate (succ _t_45) _v_44)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ (succ _t_45)) _v_44))=(rotate (succ zero) (rotate (succ _t_45) _v_44)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ (succ _t_45)) _v_44))=(rotate (succ _t_45) (rotate (succ zero) _v_44)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ (succ _t_45)) _v_44))=(rotate (succ _t_45) (rotate (succ zero) _v_44)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ (succ _t_45)) _v_44))=(rotate (succ _t_45) (rotate (succ zero) _v_44)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ (succ _t_45)) _v_44))=(rotate (succ _t_45) (rotate (succ zero) _v_44)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ (succ _t_45)) _v_44))=(rotate (succ _t_45) (rotate (succ zero) _v_44)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ (succ _t_45)) _v_44))=(rotate (succ _t_45) (rotate (succ zero) _v_44)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ (succ _t_45)) _v_44))=(rotate (succ _t_45) (rotate (succ zero) _v_44)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (succ _t_45)) (rotate zero _v_44))=(rotate (succ _t_45) (rotate (succ zero) _v_44)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (succ _t_45)) (rotate zero _v_44))=(rotate (succ _t_45) (rotate (succ zero) _v_44)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (succ _t_45)) (rotate zero _v_44))=(rotate (succ _t_45) (rotate (succ zero) _v_44)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (succ _t_45)) (rotate zero _v_44))=(rotate (succ _t_45) (rotate (succ zero) _v_44)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (succ _t_45)) (rotate zero _v_44))=(rotate (succ _t_45) (rotate (succ zero) _v_44)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (succ _t_45)) (rotate zero _v_44))=(rotate (succ _t_45) (rotate (succ zero) _v_44)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (succ _t_45)) (rotate zero _v_44))=(rotate (succ _t_45) (rotate (succ zero) _v_44)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ (succ _t_45)) _v_44))=(rotate (succ zero) (rotate (succ _t_45) _v_44)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ (succ _t_45)) _v_44))=(rotate (succ zero) (rotate (succ _t_45) _v_44)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ (succ _t_45)) _v_44))=(rotate (succ zero) (rotate (succ _t_45) _v_44)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ (succ _t_45)) _v_44))=(rotate (succ zero) (rotate (succ _t_45) _v_44)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ (succ _t_45)) _v_44))=(rotate (succ zero) (rotate (succ _t_45) _v_44)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ (succ _t_45)) _v_44))=(rotate (succ zero) (rotate (succ _t_45) _v_44)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ (succ _t_45)) _v_44))=(rotate (succ zero) (rotate (succ _t_45) _v_44)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ (succ _t_45)) _v_44))=(rotate (succ zero) (rotate (succ _t_45) _v_44)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ (succ _t_45)) _v_44))=(rotate (succ zero) (rotate (succ _t_45) _v_44)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ (succ _t_45)) _v_44))=(rotate (succ zero) (rotate (succ _t_45) _v_44)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ (succ _t_45)) _v_44))=(rotate (succ zero) (rotate (succ _t_45) _v_44)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ (succ _t_45)) _v_44))=(rotate (succ zero) (rotate (succ _t_45) _v_44)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ (succ _t_45)) _v_44))=(rotate (succ zero) (rotate (succ _t_45) _v_44)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ (succ _t_45)) _v_44))=(rotate (succ zero) (rotate (succ _t_45) _v_44)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (succ _t_45)) (rotate zero _v_44))=(rotate (succ zero) (rotate (succ _t_45) _v_44)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (succ _t_45)) (rotate zero _v_44))=(rotate (succ zero) (rotate (succ _t_45) _v_44)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (succ _t_45)) (rotate zero _v_44))=(rotate (succ zero) (rotate (succ _t_45) _v_44)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (succ _t_45)) (rotate zero _v_44))=(rotate (succ zero) (rotate (succ _t_45) _v_44)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (succ _t_45)) (rotate zero _v_44))=(rotate (succ zero) (rotate (succ _t_45) _v_44)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (succ _t_45)) (rotate zero _v_44))=(rotate (succ zero) (rotate (succ _t_45) _v_44)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (succ _t_45)) (rotate zero _v_44))=(rotate (succ zero) (rotate (succ _t_45) _v_44)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ (succ _t_45)) _v_44))=(rotate (succ zero) (rotate (succ _t_45) _v_44)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ (succ _t_45)) _v_44))=(rotate (succ zero) (rotate (succ _t_45) _v_44)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ (succ _t_45)) _v_44))=(rotate (succ zero) (rotate (succ _t_45) _v_44)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ (succ _t_45)) _v_44))=(rotate (succ zero) (rotate (succ _t_45) _v_44)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ (succ _t_45)) _v_44))=(rotate (succ zero) (rotate (succ _t_45) _v_44)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ (succ _t_45)) _v_44))=(rotate (succ zero) (rotate (succ _t_45) _v_44)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ (succ _t_45)) _v_44))=(rotate (succ zero) (rotate (succ _t_45) _v_44)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ (succ _t_45)) _v_44))=(rotate (succ zero) (rotate (succ _t_45) _v_44)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ (succ _t_45)) _v_44))=(rotate (succ zero) (rotate (succ _t_45) _v_44)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ (succ _t_45)) _v_44))=(rotate (succ zero) (rotate (succ _t_45) _v_44)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ (succ _t_45)) _v_44))=(rotate (succ zero) (rotate (succ _t_45) _v_44)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ (succ _t_45)) _v_44))=(rotate (succ zero) (rotate (succ _t_45) _v_44)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ (succ _t_45)) _v_44))=(rotate (succ zero) (rotate (succ _t_45) _v_44)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ (succ _t_45)) _v_44))=(rotate (succ zero) (rotate (succ _t_45) _v_44)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (succ _t_45)) (rotate zero _v_44))=(rotate (succ zero) (rotate (succ _t_45) _v_44)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (succ _t_45)) (rotate zero _v_44))=(rotate (succ zero) (rotate (succ _t_45) _v_44)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (succ _t_45)) (rotate zero _v_44))=(rotate (succ zero) (rotate (succ _t_45) _v_44)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (succ _t_45)) (rotate zero _v_44))=(rotate (succ zero) (rotate (succ _t_45) _v_44)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (succ _t_45)) (rotate zero _v_44))=(rotate (succ zero) (rotate (succ _t_45) _v_44)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (succ _t_45)) (rotate zero _v_44))=(rotate (succ zero) (rotate (succ _t_45) _v_44)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (succ _t_45)) (rotate zero _v_44))=(rotate (succ zero) (rotate (succ _t_45) _v_44)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (succ _t_45)) (rotate zero _v_44))=(rotate (succ _t_45) (rotate (succ zero) _v_44)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (succ _t_45)) (rotate zero _v_44))=(rotate (succ _t_45) (rotate (succ zero) _v_44)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (succ _t_45)) (rotate zero _v_44))=(rotate (succ _t_45) (rotate (succ zero) _v_44)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (succ _t_45)) (rotate zero _v_44))=(rotate (succ _t_45) (rotate (succ zero) _v_44)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (succ _t_45)) (rotate zero _v_44))=(rotate (succ _t_45) (rotate (succ zero) _v_44)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (succ _t_45)) (rotate zero _v_44))=(rotate (succ _t_45) (rotate (succ zero) _v_44)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (succ _t_45)) (rotate zero _v_44))=(rotate (succ _t_45) (rotate (succ zero) _v_44)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ (succ _t_45)) _v_44))=(rotate (succ zero) (rotate (succ _t_45) _v_44)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ (succ _t_45)) _v_44))=(rotate (succ zero) (rotate (succ _t_45) _v_44)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ (succ _t_45)) _v_44))=(rotate (succ zero) (rotate (succ _t_45) _v_44)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ (succ _t_45)) _v_44))=(rotate (succ zero) (rotate (succ _t_45) _v_44)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ (succ _t_45)) _v_44))=(rotate (succ zero) (rotate (succ _t_45) _v_44)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ (succ _t_45)) _v_44))=(rotate (succ zero) (rotate (succ _t_45) _v_44)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ (succ _t_45)) _v_44))=(rotate (succ zero) (rotate (succ _t_45) _v_44)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ (succ _t_45)) _v_44))=(rotate (succ zero) (rotate (succ _t_45) _v_44)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ (succ _t_45)) _v_44))=(rotate (succ zero) (rotate (succ _t_45) _v_44)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ (succ _t_45)) _v_44))=(rotate (succ zero) (rotate (succ _t_45) _v_44)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ (succ _t_45)) _v_44))=(rotate (succ zero) (rotate (succ _t_45) _v_44)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ (succ _t_45)) _v_44))=(rotate (succ zero) (rotate (succ _t_45) _v_44)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ (succ _t_45)) _v_44))=(rotate (succ zero) (rotate (succ _t_45) _v_44)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ (succ _t_45)) _v_44))=(rotate (succ zero) (rotate (succ _t_45) _v_44)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ (succ _t_45)) _v_44))=(rotate (succ _t_45) (rotate (succ zero) _v_44)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ (succ _t_45)) _v_44))=(rotate (succ _t_45) (rotate (succ zero) _v_44)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ (succ _t_45)) _v_44))=(rotate (succ _t_45) (rotate (succ zero) _v_44)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ (succ _t_45)) _v_44))=(rotate (succ _t_45) (rotate (succ zero) _v_44)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ (succ _t_45)) _v_44))=(rotate (succ _t_45) (rotate (succ zero) _v_44)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ (succ _t_45)) _v_44))=(rotate (succ _t_45) (rotate (succ zero) _v_44)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ (succ _t_45)) _v_44))=(rotate (succ _t_45) (rotate (succ zero) _v_44)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ (succ _t_45)) _v_44))=(rotate (succ zero) (rotate (succ _t_45) _v_44)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ (succ _t_45)) _v_44))=(rotate (succ zero) (rotate (succ _t_45) _v_44)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ (succ _t_45)) _v_44))=(rotate (succ zero) (rotate (succ _t_45) _v_44)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ (succ _t_45)) _v_44))=(rotate (succ zero) (rotate (succ _t_45) _v_44)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ (succ _t_45)) _v_44))=(rotate (succ zero) (rotate (succ _t_45) _v_44)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ (succ _t_45)) _v_44))=(rotate (succ zero) (rotate (succ _t_45) _v_44)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ (succ _t_45)) _v_44))=(rotate (succ zero) (rotate (succ _t_45) _v_44)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ (succ _t_45)) _v_44))=(rotate (succ zero) (rotate (succ _t_45) _v_44)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ (succ _t_45)) _v_44))=(rotate (succ zero) (rotate (succ _t_45) _v_44)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ (succ _t_45)) _v_44))=(rotate (succ zero) (rotate (succ _t_45) _v_44)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ (succ _t_45)) _v_44))=(rotate (succ zero) (rotate (succ _t_45) _v_44)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ (succ _t_45)) _v_44))=(rotate (succ zero) (rotate (succ _t_45) _v_44)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ (succ _t_45)) _v_44))=(rotate (succ zero) (rotate (succ _t_45) _v_44)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ (succ _t_45)) _v_44))=(rotate (succ zero) (rotate (succ _t_45) _v_44)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ (succ _t_45)) _v_44))=(rotate (succ _t_45) (rotate (succ zero) _v_44)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ (succ _t_45)) _v_44))=(rotate (succ _t_45) (rotate (succ zero) _v_44)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ (succ _t_45)) _v_44))=(rotate (succ _t_45) (rotate (succ zero) _v_44)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ (succ _t_45)) _v_44))=(rotate (succ _t_45) (rotate (succ zero) _v_44)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ (succ _t_45)) _v_44))=(rotate (succ _t_45) (rotate (succ zero) _v_44)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ (succ _t_45)) _v_44))=(rotate (succ _t_45) (rotate (succ zero) _v_44)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ (succ _t_45)) _v_44))=(rotate (succ _t_45) (rotate (succ zero) _v_44)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (succ _t_45)) (rotate zero _v_44))=(rotate (succ _t_45) (rotate (succ zero) _v_44)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (succ _t_45)) (rotate zero _v_44))=(rotate (succ _t_45) (rotate (succ zero) _v_44)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (succ _t_45)) (rotate zero _v_44))=(rotate (succ _t_45) (rotate (succ zero) _v_44)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (succ _t_45)) (rotate zero _v_44))=(rotate (succ _t_45) (rotate (succ zero) _v_44)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (succ _t_45)) (rotate zero _v_44))=(rotate (succ _t_45) (rotate (succ zero) _v_44)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (succ _t_45)) (rotate zero _v_44))=(rotate (succ _t_45) (rotate (succ zero) _v_44)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (succ _t_45)) (rotate zero _v_44))=(rotate (succ _t_45) (rotate (succ zero) _v_44)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ (succ _t_45)) _v_44))=(rotate (succ _t_45) (rotate (succ zero) _v_44)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ (succ _t_45)) _v_44))=(rotate (succ _t_45) (rotate (succ zero) _v_44)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ (succ _t_45)) _v_44))=(rotate (succ _t_45) (rotate (succ zero) _v_44)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ (succ _t_45)) _v_44))=(rotate (succ _t_45) (rotate (succ zero) _v_44)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ (succ _t_45)) _v_44))=(rotate (succ _t_45) (rotate (succ zero) _v_44)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ (succ _t_45)) _v_44))=(rotate (succ _t_45) (rotate (succ zero) _v_44)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ (succ _t_45)) _v_44))=(rotate (succ _t_45) (rotate (succ zero) _v_44)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (succ _t_45)) (rotate zero _v_44))=(rotate (succ _t_45) (rotate (succ zero) _v_44)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (succ _t_45)) (rotate zero _v_44))=(rotate (succ _t_45) (rotate (succ zero) _v_44)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (succ _t_45)) (rotate zero _v_44))=(rotate (succ _t_45) (rotate (succ zero) _v_44)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (succ _t_45)) (rotate zero _v_44))=(rotate (succ _t_45) (rotate (succ zero) _v_44)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (succ _t_45)) (rotate zero _v_44))=(rotate (succ _t_45) (rotate (succ zero) _v_44)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (succ _t_45)) (rotate zero _v_44))=(rotate (succ _t_45) (rotate (succ zero) _v_44)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (succ _t_45)) (rotate zero _v_44))=(rotate (succ _t_45) (rotate (succ zero) _v_44)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (succ _t_45)) (rotate zero _v_44))=(rotate (succ _t_45) (rotate (succ zero) _v_44)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (succ _t_45)) (rotate zero _v_44))=(rotate (succ _t_45) (rotate (succ zero) _v_44)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (succ _t_45)) (rotate zero _v_44))=(rotate (succ _t_45) (rotate (succ zero) _v_44)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (succ _t_45)) (rotate zero _v_44))=(rotate (succ _t_45) (rotate (succ zero) _v_44)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (succ _t_45)) (rotate zero _v_44))=(rotate (succ _t_45) (rotate (succ zero) _v_44)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (succ _t_45)) (rotate zero _v_44))=(rotate (succ _t_45) (rotate (succ zero) _v_44)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (succ _t_45)) (rotate zero _v_44))=(rotate (succ _t_45) (rotate (succ zero) _v_44)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (succ _t_45)) (rotate zero _v_44))=(rotate (succ zero) (rotate (succ _t_45) _v_44)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (succ _t_45)) (rotate zero _v_44))=(rotate (succ zero) (rotate (succ _t_45) _v_44)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (succ _t_45)) (rotate zero _v_44))=(rotate (succ zero) (rotate (succ _t_45) _v_44)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (succ _t_45)) (rotate zero _v_44))=(rotate (succ zero) (rotate (succ _t_45) _v_44)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (succ _t_45)) (rotate zero _v_44))=(rotate (succ zero) (rotate (succ _t_45) _v_44)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (succ _t_45)) (rotate zero _v_44))=(rotate (succ zero) (rotate (succ _t_45) _v_44)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (succ _t_45)) (rotate zero _v_44))=(rotate (succ zero) (rotate (succ _t_45) _v_44)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (succ _t_45)) (rotate zero _v_44))=(rotate (succ _t_45) (rotate (succ zero) _v_44)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (succ _t_45)) (rotate zero _v_44))=(rotate (succ _t_45) (rotate (succ zero) _v_44)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (succ _t_45)) (rotate zero _v_44))=(rotate (succ _t_45) (rotate (succ zero) _v_44)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (succ _t_45)) (rotate zero _v_44))=(rotate (succ _t_45) (rotate (succ zero) _v_44)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (succ _t_45)) (rotate zero _v_44))=(rotate (succ _t_45) (rotate (succ zero) _v_44)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (succ _t_45)) (rotate zero _v_44))=(rotate (succ _t_45) (rotate (succ zero) _v_44)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (succ _t_45)) (rotate zero _v_44))=(rotate (succ _t_45) (rotate (succ zero) _v_44)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (succ _t_45)) (rotate zero _v_44))=(rotate (succ _t_45) (rotate (succ zero) _v_44)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (succ _t_45)) (rotate zero _v_44))=(rotate (succ _t_45) (rotate (succ zero) _v_44)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (succ _t_45)) (rotate zero _v_44))=(rotate (succ _t_45) (rotate (succ zero) _v_44)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (succ _t_45)) (rotate zero _v_44))=(rotate (succ _t_45) (rotate (succ zero) _v_44)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (succ _t_45)) (rotate zero _v_44))=(rotate (succ _t_45) (rotate (succ zero) _v_44)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (succ _t_45)) (rotate zero _v_44))=(rotate (succ _t_45) (rotate (succ zero) _v_44)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (succ _t_45)) (rotate zero _v_44))=(rotate (succ _t_45) (rotate (succ zero) _v_44)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (succ _t_45)) (rotate zero _v_44))=(rotate (succ zero) (rotate (succ _t_45) _v_44)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (succ _t_45)) (rotate zero _v_44))=(rotate (succ zero) (rotate (succ _t_45) _v_44)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (succ _t_45)) (rotate zero _v_44))=(rotate (succ zero) (rotate (succ _t_45) _v_44)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (succ _t_45)) (rotate zero _v_44))=(rotate (succ zero) (rotate (succ _t_45) _v_44)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (succ _t_45)) (rotate zero _v_44))=(rotate (succ zero) (rotate (succ _t_45) _v_44)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (succ _t_45)) (rotate zero _v_44))=(rotate (succ zero) (rotate (succ _t_45) _v_44)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (succ _t_45)) (rotate zero _v_44))=(rotate (succ zero) (rotate (succ _t_45) _v_44)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ (succ _t_45)) _v_44))=(rotate (succ zero) (rotate (succ _t_45) _v_44)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ (succ _t_45)) _v_44))=(rotate (succ zero) (rotate (succ _t_45) _v_44)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ (succ _t_45)) _v_44))=(rotate (succ zero) (rotate (succ _t_45) _v_44)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ (succ _t_45)) _v_44))=(rotate (succ zero) (rotate (succ _t_45) _v_44)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ (succ _t_45)) _v_44))=(rotate (succ zero) (rotate (succ _t_45) _v_44)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ (succ _t_45)) _v_44))=(rotate (succ zero) (rotate (succ _t_45) _v_44)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ (succ _t_45)) _v_44))=(rotate (succ zero) (rotate (succ _t_45) _v_44)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (succ _t_45)) (rotate zero _v_44))=(rotate (succ _t_45) (rotate (succ zero) _v_44)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (succ _t_45)) (rotate zero _v_44))=(rotate (succ _t_45) (rotate (succ zero) _v_44)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (succ _t_45)) (rotate zero _v_44))=(rotate (succ _t_45) (rotate (succ zero) _v_44)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (succ _t_45)) (rotate zero _v_44))=(rotate (succ _t_45) (rotate (succ zero) _v_44)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (succ _t_45)) (rotate zero _v_44))=(rotate (succ _t_45) (rotate (succ zero) _v_44)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (succ _t_45)) (rotate zero _v_44))=(rotate (succ _t_45) (rotate (succ zero) _v_44)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (succ _t_45)) (rotate zero _v_44))=(rotate (succ _t_45) (rotate (succ zero) _v_44)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (succ _t_45)) (rotate zero _v_44))=(rotate (succ _t_45) (rotate (succ zero) _v_44)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (succ _t_45)) (rotate zero _v_44))=(rotate (succ _t_45) (rotate (succ zero) _v_44)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (succ _t_45)) (rotate zero _v_44))=(rotate (succ _t_45) (rotate (succ zero) _v_44)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (succ _t_45)) (rotate zero _v_44))=(rotate (succ _t_45) (rotate (succ zero) _v_44)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (succ _t_45)) (rotate zero _v_44))=(rotate (succ _t_45) (rotate (succ zero) _v_44)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (succ _t_45)) (rotate zero _v_44))=(rotate (succ _t_45) (rotate (succ zero) _v_44)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (succ _t_45)) (rotate zero _v_44))=(rotate (succ _t_45) (rotate (succ zero) _v_44)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ (succ _t_45)) _v_44))=(rotate (succ _t_45) (rotate (succ zero) _v_44)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ (succ _t_45)) _v_44))=(rotate (succ _t_45) (rotate (succ zero) _v_44)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ (succ _t_45)) _v_44))=(rotate (succ _t_45) (rotate (succ zero) _v_44)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ (succ _t_45)) _v_44))=(rotate (succ _t_45) (rotate (succ zero) _v_44)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ (succ _t_45)) _v_44))=(rotate (succ _t_45) (rotate (succ zero) _v_44)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ (succ _t_45)) _v_44))=(rotate (succ _t_45) (rotate (succ zero) _v_44)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ (succ _t_45)) _v_44))=(rotate (succ _t_45) (rotate (succ zero) _v_44)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (succ _t_45)) (rotate zero _v_44))=(rotate (succ _t_45) (rotate (succ zero) _v_44)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (succ _t_45)) (rotate zero _v_44))=(rotate (succ _t_45) (rotate (succ zero) _v_44)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (succ _t_45)) (rotate zero _v_44))=(rotate (succ _t_45) (rotate (succ zero) _v_44)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (succ _t_45)) (rotate zero _v_44))=(rotate (succ _t_45) (rotate (succ zero) _v_44)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (succ _t_45)) (rotate zero _v_44))=(rotate (succ _t_45) (rotate (succ zero) _v_44)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (succ _t_45)) (rotate zero _v_44))=(rotate (succ _t_45) (rotate (succ zero) _v_44)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (succ _t_45)) (rotate zero _v_44))=(rotate (succ _t_45) (rotate (succ zero) _v_44)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (succ _t_45)) (rotate zero _v_44))=(rotate (succ _t_45) (rotate (succ zero) _v_44)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (succ _t_45)) (rotate zero _v_44))=(rotate (succ _t_45) (rotate (succ zero) _v_44)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (succ _t_45)) (rotate zero _v_44))=(rotate (succ _t_45) (rotate (succ zero) _v_44)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (succ _t_45)) (rotate zero _v_44))=(rotate (succ _t_45) (rotate (succ zero) _v_44)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (succ _t_45)) (rotate zero _v_44))=(rotate (succ _t_45) (rotate (succ zero) _v_44)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (succ _t_45)) (rotate zero _v_44))=(rotate (succ _t_45) (rotate (succ zero) _v_44)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (succ _t_45)) (rotate zero _v_44))=(rotate (succ _t_45) (rotate (succ zero) _v_44)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ (succ _t_45)) _v_44))=(rotate (succ _t_45) (rotate (succ zero) _v_44)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ (succ _t_45)) _v_44))=(rotate (succ _t_45) (rotate (succ zero) _v_44)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ (succ _t_45)) _v_44))=(rotate (succ _t_45) (rotate (succ zero) _v_44)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ (succ _t_45)) _v_44))=(rotate (succ _t_45) (rotate (succ zero) _v_44)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ (succ _t_45)) _v_44))=(rotate (succ _t_45) (rotate (succ zero) _v_44)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ (succ _t_45)) _v_44))=(rotate (succ _t_45) (rotate (succ zero) _v_44)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ (succ _t_45)) _v_44))=(rotate (succ _t_45) (rotate (succ zero) _v_44)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ (succ _t_45)) _v_44))=(rotate (succ zero) (rotate (succ _t_45) _v_44)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ (succ _t_45)) _v_44))=(rotate (succ zero) (rotate (succ _t_45) _v_44)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ (succ _t_45)) _v_44))=(rotate (succ zero) (rotate (succ _t_45) _v_44)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ (succ _t_45)) _v_44))=(rotate (succ zero) (rotate (succ _t_45) _v_44)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ (succ _t_45)) _v_44))=(rotate (succ zero) (rotate (succ _t_45) _v_44)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ (succ _t_45)) _v_44))=(rotate (succ zero) (rotate (succ _t_45) _v_44)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ (succ _t_45)) _v_44))=(rotate (succ zero) (rotate (succ _t_45) _v_44)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (succ _t_45)) (rotate zero _v_44))=(rotate (succ _t_45) (rotate (succ zero) _v_44)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (succ _t_45)) (rotate zero _v_44))=(rotate (succ _t_45) (rotate (succ zero) _v_44)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (succ _t_45)) (rotate zero _v_44))=(rotate (succ _t_45) (rotate (succ zero) _v_44)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (succ _t_45)) (rotate zero _v_44))=(rotate (succ _t_45) (rotate (succ zero) _v_44)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (succ _t_45)) (rotate zero _v_44))=(rotate (succ _t_45) (rotate (succ zero) _v_44)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (succ _t_45)) (rotate zero _v_44))=(rotate (succ _t_45) (rotate (succ zero) _v_44)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (succ _t_45)) (rotate zero _v_44))=(rotate (succ _t_45) (rotate (succ zero) _v_44)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (succ _t_45)) (rotate zero _v_44))=(rotate (succ _t_45) (rotate (succ zero) _v_44)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (succ _t_45)) (rotate zero _v_44))=(rotate (succ _t_45) (rotate (succ zero) _v_44)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (succ _t_45)) (rotate zero _v_44))=(rotate (succ _t_45) (rotate (succ zero) _v_44)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (succ _t_45)) (rotate zero _v_44))=(rotate (succ _t_45) (rotate (succ zero) _v_44)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (succ _t_45)) (rotate zero _v_44))=(rotate (succ _t_45) (rotate (succ zero) _v_44)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (succ _t_45)) (rotate zero _v_44))=(rotate (succ _t_45) (rotate (succ zero) _v_44)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (succ _t_45)) (rotate zero _v_44))=(rotate (succ _t_45) (rotate (succ zero) _v_44)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (succ _t_45)) (rotate zero _v_44))=(rotate (succ zero) (rotate (succ _t_45) _v_44)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (succ _t_45)) (rotate zero _v_44))=(rotate (succ zero) (rotate (succ _t_45) _v_44)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (succ _t_45)) (rotate zero _v_44))=(rotate (succ zero) (rotate (succ _t_45) _v_44)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (succ _t_45)) (rotate zero _v_44))=(rotate (succ zero) (rotate (succ _t_45) _v_44)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (succ _t_45)) (rotate zero _v_44))=(rotate (succ zero) (rotate (succ _t_45) _v_44)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (succ _t_45)) (rotate zero _v_44))=(rotate (succ zero) (rotate (succ _t_45) _v_44)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (succ _t_45)) (rotate zero _v_44))=(rotate (succ zero) (rotate (succ _t_45) _v_44)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (succ _t_45)) (rotate zero _v_44))=(rotate (succ _t_45) (rotate (succ zero) _v_44)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (succ _t_45)) (rotate zero _v_44))=(rotate (succ _t_45) (rotate (succ zero) _v_44)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (succ _t_45)) (rotate zero _v_44))=(rotate (succ _t_45) (rotate (succ zero) _v_44)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (succ _t_45)) (rotate zero _v_44))=(rotate (succ _t_45) (rotate (succ zero) _v_44)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (succ _t_45)) (rotate zero _v_44))=(rotate (succ _t_45) (rotate (succ zero) _v_44)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (succ _t_45)) (rotate zero _v_44))=(rotate (succ _t_45) (rotate (succ zero) _v_44)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (succ _t_45)) (rotate zero _v_44))=(rotate (succ _t_45) (rotate (succ zero) _v_44)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (succ _t_45)) (rotate zero _v_44))=(rotate (succ _t_45) (rotate (succ zero) _v_44)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (succ _t_45)) (rotate zero _v_44))=(rotate (succ _t_45) (rotate (succ zero) _v_44)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (succ _t_45)) (rotate zero _v_44))=(rotate (succ _t_45) (rotate (succ zero) _v_44)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (succ _t_45)) (rotate zero _v_44))=(rotate (succ _t_45) (rotate (succ zero) _v_44)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (succ _t_45)) (rotate zero _v_44))=(rotate (succ _t_45) (rotate (succ zero) _v_44)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (succ _t_45)) (rotate zero _v_44))=(rotate (succ _t_45) (rotate (succ zero) _v_44)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (succ _t_45)) (rotate zero _v_44))=(rotate (succ _t_45) (rotate (succ zero) _v_44)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (succ _t_45)) (rotate zero _v_44))=(rotate (succ zero) (rotate (succ _t_45) _v_44)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (succ _t_45)) (rotate zero _v_44))=(rotate (succ zero) (rotate (succ _t_45) _v_44)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (succ _t_45)) (rotate zero _v_44))=(rotate (succ zero) (rotate (succ _t_45) _v_44)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (succ _t_45)) (rotate zero _v_44))=(rotate (succ zero) (rotate (succ _t_45) _v_44)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (succ _t_45)) (rotate zero _v_44))=(rotate (succ zero) (rotate (succ _t_45) _v_44)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (succ _t_45)) (rotate zero _v_44))=(rotate (succ zero) (rotate (succ _t_45) _v_44)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (succ _t_45)) (rotate zero _v_44))=(rotate (succ zero) (rotate (succ _t_45) _v_44)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ (succ _t_45)) _v_44))=(rotate (succ zero) (rotate (succ _t_45) _v_44)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ (succ _t_45)) _v_44))=(rotate (succ zero) (rotate (succ _t_45) _v_44)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ (succ _t_45)) _v_44))=(rotate (succ zero) (rotate (succ _t_45) _v_44)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ (succ _t_45)) _v_44))=(rotate (succ zero) (rotate (succ _t_45) _v_44)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ (succ _t_45)) _v_44))=(rotate (succ zero) (rotate (succ _t_45) _v_44)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ (succ _t_45)) _v_44))=(rotate (succ zero) (rotate (succ _t_45) _v_44)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ (succ _t_45)) _v_44))=(rotate (succ zero) (rotate (succ _t_45) _v_44)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (succ _t_45)) (rotate zero _v_44))=(rotate (succ _t_45) (rotate (succ zero) _v_44)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (succ _t_45)) (rotate zero _v_44))=(rotate (succ _t_45) (rotate (succ zero) _v_44)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (succ _t_45)) (rotate zero _v_44))=(rotate (succ _t_45) (rotate (succ zero) _v_44)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (succ _t_45)) (rotate zero _v_44))=(rotate (succ _t_45) (rotate (succ zero) _v_44)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (succ _t_45)) (rotate zero _v_44))=(rotate (succ _t_45) (rotate (succ zero) _v_44)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (succ _t_45)) (rotate zero _v_44))=(rotate (succ _t_45) (rotate (succ zero) _v_44)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (succ _t_45)) (rotate zero _v_44))=(rotate (succ _t_45) (rotate (succ zero) _v_44)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (succ _t_45)) (rotate zero _v_44))=(rotate (succ _t_45) (rotate (succ zero) _v_44)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (succ _t_45)) (rotate zero _v_44))=(rotate (succ _t_45) (rotate (succ zero) _v_44)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (succ _t_45)) (rotate zero _v_44))=(rotate (succ _t_45) (rotate (succ zero) _v_44)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (succ _t_45)) (rotate zero _v_44))=(rotate (succ _t_45) (rotate (succ zero) _v_44)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (succ _t_45)) (rotate zero _v_44))=(rotate (succ _t_45) (rotate (succ zero) _v_44)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (succ _t_45)) (rotate zero _v_44))=(rotate (succ _t_45) (rotate (succ zero) _v_44)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (succ _t_45)) (rotate zero _v_44))=(rotate (succ _t_45) (rotate (succ zero) _v_44)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ (succ _t_45)) _v_44))=(rotate (succ _t_45) (rotate (succ zero) _v_44)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ (succ _t_45)) _v_44))=(rotate (succ _t_45) (rotate (succ zero) _v_44)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ (succ _t_45)) _v_44))=(rotate (succ _t_45) (rotate (succ zero) _v_44)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ (succ _t_45)) _v_44))=(rotate (succ _t_45) (rotate (succ zero) _v_44)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ (succ _t_45)) _v_44))=(rotate (succ _t_45) (rotate (succ zero) _v_44)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ (succ _t_45)) _v_44))=(rotate (succ _t_45) (rotate (succ zero) _v_44)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ (succ _t_45)) _v_44))=(rotate (succ _t_45) (rotate (succ zero) _v_44)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (succ _t_45)) (rotate zero _v_44))=(rotate (succ _t_45) (rotate (succ zero) _v_44)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (succ _t_45)) (rotate zero _v_44))=(rotate (succ _t_45) (rotate (succ zero) _v_44)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (succ _t_45)) (rotate zero _v_44))=(rotate (succ _t_45) (rotate (succ zero) _v_44)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (succ _t_45)) (rotate zero _v_44))=(rotate (succ _t_45) (rotate (succ zero) _v_44)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (succ _t_45)) (rotate zero _v_44))=(rotate (succ _t_45) (rotate (succ zero) _v_44)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (succ _t_45)) (rotate zero _v_44))=(rotate (succ _t_45) (rotate (succ zero) _v_44)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (succ _t_45)) (rotate zero _v_44))=(rotate (succ _t_45) (rotate (succ zero) _v_44)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (succ _t_45)) (rotate zero _v_44))=(rotate (succ _t_45) (rotate (succ zero) _v_44)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (succ _t_45)) (rotate zero _v_44))=(rotate (succ _t_45) (rotate (succ zero) _v_44)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (succ _t_45)) (rotate zero _v_44))=(rotate (succ _t_45) (rotate (succ zero) _v_44)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (succ _t_45)) (rotate zero _v_44))=(rotate (succ _t_45) (rotate (succ zero) _v_44)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (succ _t_45)) (rotate zero _v_44))=(rotate (succ _t_45) (rotate (succ zero) _v_44)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (succ _t_45)) (rotate zero _v_44))=(rotate (succ _t_45) (rotate (succ zero) _v_44)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (succ _t_45)) (rotate zero _v_44))=(rotate (succ _t_45) (rotate (succ zero) _v_44)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ (succ _t_45)) _v_44))=(rotate (succ _t_45) (rotate (succ zero) _v_44)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ (succ _t_45)) _v_44))=(rotate (succ _t_45) (rotate (succ zero) _v_44)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ (succ _t_45)) _v_44))=(rotate (succ _t_45) (rotate (succ zero) _v_44)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ (succ _t_45)) _v_44))=(rotate (succ _t_45) (rotate (succ zero) _v_44)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ (succ _t_45)) _v_44))=(rotate (succ _t_45) (rotate (succ zero) _v_44)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ (succ _t_45)) _v_44))=(rotate (succ _t_45) (rotate (succ zero) _v_44)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ (succ _t_45)) _v_44))=(rotate (succ _t_45) (rotate (succ zero) _v_44)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ (succ _t_45)) _v_44))=(rotate (succ zero) (rotate (succ _t_45) _v_44)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ (succ _t_45)) _v_44))=(rotate (succ zero) (rotate (succ _t_45) _v_44)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ (succ _t_45)) _v_44))=(rotate (succ zero) (rotate (succ _t_45) _v_44)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ (succ _t_45)) _v_44))=(rotate (succ zero) (rotate (succ _t_45) _v_44)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ (succ _t_45)) _v_44))=(rotate (succ zero) (rotate (succ _t_45) _v_44)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ (succ _t_45)) _v_44))=(rotate (succ zero) (rotate (succ _t_45) _v_44)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ (succ _t_45)) _v_44))=(rotate (succ zero) (rotate (succ _t_45) _v_44)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ (succ _t_45)) _v_44))=(rotate (succ _t_45) (rotate (succ zero) _v_44)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ (succ _t_45)) _v_44))=(rotate (succ _t_45) (rotate (succ zero) _v_44)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ (succ _t_45)) _v_44))=(rotate (succ _t_45) (rotate (succ zero) _v_44)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ (succ _t_45)) _v_44))=(rotate (succ _t_45) (rotate (succ zero) _v_44)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ (succ _t_45)) _v_44))=(rotate (succ _t_45) (rotate (succ zero) _v_44)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ (succ _t_45)) _v_44))=(rotate (succ _t_45) (rotate (succ zero) _v_44)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ (succ _t_45)) _v_44))=(rotate (succ _t_45) (rotate (succ zero) _v_44)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_29) _v_30))=(rotate (succ zero) (rotate _v_29 _v_30)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_16))=_qv_16))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_29) _v_30))=(rotate (succ zero) (rotate _v_29 _v_30)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_17 _qv_18)=(append _qv_18 _qv_17)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_29) _v_30))=(rotate (succ zero) (rotate _v_29 _v_30)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_19 _qv_20) _qv_21)=(append _qv_19 (append _qv_20 _qv_21))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_29) _v_30))=(rotate (succ zero) (rotate _v_29 _v_30)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_22 _qv_23)=(plus _qv_23 _qv_22)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_29) _v_30))=(rotate (succ zero) (rotate _v_29 _v_30)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_24 _qv_25) _qv_26)=(plus _qv_24 (plus _qv_25 _qv_26))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_29) _v_30))=(rotate (succ zero) (rotate _v_29 _v_30)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_27 _qv_28))=(plus (succ _qv_27) (succ _qv_28))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_29) _v_30))=(rotate (succ zero) (rotate _v_29 _v_30)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_27 _qv_28))=(plus (succ _qv_28) (succ _qv_27))))
USE ASSUMPTION FAILED


The Knowledge Scheme currently contains the following lemmas:
	(forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
	(forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
	(forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
	(forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
	(forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
	(forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
	(forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))

CURRENT SUBGOAL ((rotate zero (rotate (succ (succ _t_45)) _v_44))=(rotate (succ _t_45) (rotate (succ zero) _v_44)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ (succ _t_45)) _v_44))=(rotate (succ _t_45) (rotate (succ zero) _v_44)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ (succ _t_45)) _v_44))=(rotate (succ _t_45) (rotate (succ zero) _v_44)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ (succ _t_45)) _v_44))=(rotate (succ _t_45) (rotate (succ zero) _v_44)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ (succ _t_45)) _v_44))=(rotate (succ _t_45) (rotate (succ zero) _v_44)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ (succ _t_45)) _v_44))=(rotate (succ _t_45) (rotate (succ zero) _v_44)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ (succ _t_45)) _v_44))=(rotate (succ _t_45) (rotate (succ zero) _v_44)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ (succ _t_45)) _v_44))=(rotate (succ _t_45) (rotate (succ zero) _v_44)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ (succ _t_45)) _v_44))=(rotate (succ _t_45) (rotate (succ zero) _v_44)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ (succ _t_45)) _v_44))=(rotate (succ _t_45) (rotate (succ zero) _v_44)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ (succ _t_45)) _v_44))=(rotate (succ _t_45) (rotate (succ zero) _v_44)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ (succ _t_45)) _v_44))=(rotate (succ _t_45) (rotate (succ zero) _v_44)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ (succ _t_45)) _v_44))=(rotate (succ _t_45) (rotate (succ zero) _v_44)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ (succ _t_45)) _v_44))=(rotate (succ _t_45) (rotate (succ zero) _v_44)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (succ _t_45)) (rotate zero _v_44))=(rotate (succ _t_45) (rotate (succ zero) _v_44)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (succ _t_45)) (rotate zero _v_44))=(rotate (succ _t_45) (rotate (succ zero) _v_44)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (succ _t_45)) (rotate zero _v_44))=(rotate (succ _t_45) (rotate (succ zero) _v_44)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (succ _t_45)) (rotate zero _v_44))=(rotate (succ _t_45) (rotate (succ zero) _v_44)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (succ _t_45)) (rotate zero _v_44))=(rotate (succ _t_45) (rotate (succ zero) _v_44)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (succ _t_45)) (rotate zero _v_44))=(rotate (succ _t_45) (rotate (succ zero) _v_44)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (succ _t_45)) (rotate zero _v_44))=(rotate (succ _t_45) (rotate (succ zero) _v_44)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ (succ _t_45)) _v_44))=(rotate (succ _t_45) (rotate (succ zero) _v_44)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ (succ _t_45)) _v_44))=(rotate (succ _t_45) (rotate (succ zero) _v_44)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ (succ _t_45)) _v_44))=(rotate (succ _t_45) (rotate (succ zero) _v_44)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ (succ _t_45)) _v_44))=(rotate (succ _t_45) (rotate (succ zero) _v_44)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ (succ _t_45)) _v_44))=(rotate (succ _t_45) (rotate (succ zero) _v_44)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ (succ _t_45)) _v_44))=(rotate (succ _t_45) (rotate (succ zero) _v_44)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ (succ _t_45)) _v_44))=(rotate (succ _t_45) (rotate (succ zero) _v_44)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ (succ _t_45)) _v_44))=(rotate (succ _t_45) (rotate (succ zero) _v_44)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ (succ _t_45)) _v_44))=(rotate (succ _t_45) (rotate (succ zero) _v_44)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ (succ _t_45)) _v_44))=(rotate (succ _t_45) (rotate (succ zero) _v_44)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ (succ _t_45)) _v_44))=(rotate (succ _t_45) (rotate (succ zero) _v_44)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ (succ _t_45)) _v_44))=(rotate (succ _t_45) (rotate (succ zero) _v_44)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ (succ _t_45)) _v_44))=(rotate (succ _t_45) (rotate (succ zero) _v_44)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ (succ _t_45)) _v_44))=(rotate (succ _t_45) (rotate (succ zero) _v_44)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (succ _t_45)) (rotate zero _v_44))=(rotate (succ _t_45) (rotate (succ zero) _v_44)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (succ _t_45)) (rotate zero _v_44))=(rotate (succ _t_45) (rotate (succ zero) _v_44)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (succ _t_45)) (rotate zero _v_44))=(rotate (succ _t_45) (rotate (succ zero) _v_44)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (succ _t_45)) (rotate zero _v_44))=(rotate (succ _t_45) (rotate (succ zero) _v_44)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (succ _t_45)) (rotate zero _v_44))=(rotate (succ _t_45) (rotate (succ zero) _v_44)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (succ _t_45)) (rotate zero _v_44))=(rotate (succ _t_45) (rotate (succ zero) _v_44)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (succ _t_45)) (rotate zero _v_44))=(rotate (succ _t_45) (rotate (succ zero) _v_44)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (succ _t_45)) (rotate zero _v_44))=(rotate (succ zero) (rotate (succ _t_45) _v_44)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (succ _t_45)) (rotate zero _v_44))=(rotate (succ zero) (rotate (succ _t_45) _v_44)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (succ _t_45)) (rotate zero _v_44))=(rotate (succ zero) (rotate (succ _t_45) _v_44)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (succ _t_45)) (rotate zero _v_44))=(rotate (succ zero) (rotate (succ _t_45) _v_44)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (succ _t_45)) (rotate zero _v_44))=(rotate (succ zero) (rotate (succ _t_45) _v_44)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (succ _t_45)) (rotate zero _v_44))=(rotate (succ zero) (rotate (succ _t_45) _v_44)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (succ _t_45)) (rotate zero _v_44))=(rotate (succ zero) (rotate (succ _t_45) _v_44)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ (succ _t_45)) _v_44))=(rotate (succ _t_45) (rotate (succ zero) _v_44)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ (succ _t_45)) _v_44))=(rotate (succ _t_45) (rotate (succ zero) _v_44)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ (succ _t_45)) _v_44))=(rotate (succ _t_45) (rotate (succ zero) _v_44)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ (succ _t_45)) _v_44))=(rotate (succ _t_45) (rotate (succ zero) _v_44)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ (succ _t_45)) _v_44))=(rotate (succ _t_45) (rotate (succ zero) _v_44)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ (succ _t_45)) _v_44))=(rotate (succ _t_45) (rotate (succ zero) _v_44)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ (succ _t_45)) _v_44))=(rotate (succ _t_45) (rotate (succ zero) _v_44)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ (succ _t_45)) _v_44))=(rotate (succ _t_45) (rotate (succ zero) _v_44)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ (succ _t_45)) _v_44))=(rotate (succ _t_45) (rotate (succ zero) _v_44)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ (succ _t_45)) _v_44))=(rotate (succ _t_45) (rotate (succ zero) _v_44)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ (succ _t_45)) _v_44))=(rotate (succ _t_45) (rotate (succ zero) _v_44)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ (succ _t_45)) _v_44))=(rotate (succ _t_45) (rotate (succ zero) _v_44)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ (succ _t_45)) _v_44))=(rotate (succ _t_45) (rotate (succ zero) _v_44)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ (succ _t_45)) _v_44))=(rotate (succ _t_45) (rotate (succ zero) _v_44)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ (succ _t_45)) _v_44))=(rotate (succ zero) (rotate (succ _t_45) _v_44)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ (succ _t_45)) _v_44))=(rotate (succ zero) (rotate (succ _t_45) _v_44)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ (succ _t_45)) _v_44))=(rotate (succ zero) (rotate (succ _t_45) _v_44)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ (succ _t_45)) _v_44))=(rotate (succ zero) (rotate (succ _t_45) _v_44)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ (succ _t_45)) _v_44))=(rotate (succ zero) (rotate (succ _t_45) _v_44)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ (succ _t_45)) _v_44))=(rotate (succ zero) (rotate (succ _t_45) _v_44)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ (succ _t_45)) _v_44))=(rotate (succ zero) (rotate (succ _t_45) _v_44)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ (succ _t_45)) _v_44))=(rotate (succ _t_45) (rotate (succ zero) _v_44)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ (succ _t_45)) _v_44))=(rotate (succ _t_45) (rotate (succ zero) _v_44)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ (succ _t_45)) _v_44))=(rotate (succ _t_45) (rotate (succ zero) _v_44)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ (succ _t_45)) _v_44))=(rotate (succ _t_45) (rotate (succ zero) _v_44)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ (succ _t_45)) _v_44))=(rotate (succ _t_45) (rotate (succ zero) _v_44)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ (succ _t_45)) _v_44))=(rotate (succ _t_45) (rotate (succ zero) _v_44)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ (succ _t_45)) _v_44))=(rotate (succ _t_45) (rotate (succ zero) _v_44)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ (succ _t_45)) _v_44))=(rotate (succ _t_45) (rotate (succ zero) _v_44)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ (succ _t_45)) _v_44))=(rotate (succ _t_45) (rotate (succ zero) _v_44)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ (succ _t_45)) _v_44))=(rotate (succ _t_45) (rotate (succ zero) _v_44)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ (succ _t_45)) _v_44))=(rotate (succ _t_45) (rotate (succ zero) _v_44)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ (succ _t_45)) _v_44))=(rotate (succ _t_45) (rotate (succ zero) _v_44)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ (succ _t_45)) _v_44))=(rotate (succ _t_45) (rotate (succ zero) _v_44)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ (succ _t_45)) _v_44))=(rotate (succ _t_45) (rotate (succ zero) _v_44)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ (succ _t_45)) _v_44))=(rotate (succ zero) (rotate (succ _t_45) _v_44)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ (succ _t_45)) _v_44))=(rotate (succ zero) (rotate (succ _t_45) _v_44)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ (succ _t_45)) _v_44))=(rotate (succ zero) (rotate (succ _t_45) _v_44)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ (succ _t_45)) _v_44))=(rotate (succ zero) (rotate (succ _t_45) _v_44)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ (succ _t_45)) _v_44))=(rotate (succ zero) (rotate (succ _t_45) _v_44)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ (succ _t_45)) _v_44))=(rotate (succ zero) (rotate (succ _t_45) _v_44)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ (succ _t_45)) _v_44))=(rotate (succ zero) (rotate (succ _t_45) _v_44)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (succ _t_45)) (rotate zero _v_44))=(rotate (succ zero) (rotate (succ _t_45) _v_44)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (succ _t_45)) (rotate zero _v_44))=(rotate (succ zero) (rotate (succ _t_45) _v_44)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (succ _t_45)) (rotate zero _v_44))=(rotate (succ zero) (rotate (succ _t_45) _v_44)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (succ _t_45)) (rotate zero _v_44))=(rotate (succ zero) (rotate (succ _t_45) _v_44)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (succ _t_45)) (rotate zero _v_44))=(rotate (succ zero) (rotate (succ _t_45) _v_44)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (succ _t_45)) (rotate zero _v_44))=(rotate (succ zero) (rotate (succ _t_45) _v_44)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (succ _t_45)) (rotate zero _v_44))=(rotate (succ zero) (rotate (succ _t_45) _v_44)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ (succ _t_45)) _v_44))=(rotate (succ _t_45) (rotate (succ zero) _v_44)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ (succ _t_45)) _v_44))=(rotate (succ _t_45) (rotate (succ zero) _v_44)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ (succ _t_45)) _v_44))=(rotate (succ _t_45) (rotate (succ zero) _v_44)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ (succ _t_45)) _v_44))=(rotate (succ _t_45) (rotate (succ zero) _v_44)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ (succ _t_45)) _v_44))=(rotate (succ _t_45) (rotate (succ zero) _v_44)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ (succ _t_45)) _v_44))=(rotate (succ _t_45) (rotate (succ zero) _v_44)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ (succ _t_45)) _v_44))=(rotate (succ _t_45) (rotate (succ zero) _v_44)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ (succ _t_45)) _v_44))=(rotate (succ _t_45) (rotate (succ zero) _v_44)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ (succ _t_45)) _v_44))=(rotate (succ _t_45) (rotate (succ zero) _v_44)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ (succ _t_45)) _v_44))=(rotate (succ _t_45) (rotate (succ zero) _v_44)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ (succ _t_45)) _v_44))=(rotate (succ _t_45) (rotate (succ zero) _v_44)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ (succ _t_45)) _v_44))=(rotate (succ _t_45) (rotate (succ zero) _v_44)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ (succ _t_45)) _v_44))=(rotate (succ _t_45) (rotate (succ zero) _v_44)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ (succ _t_45)) _v_44))=(rotate (succ _t_45) (rotate (succ zero) _v_44)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (succ _t_45)) (rotate zero _v_44))=(rotate (succ _t_45) (rotate (succ zero) _v_44)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (succ _t_45)) (rotate zero _v_44))=(rotate (succ _t_45) (rotate (succ zero) _v_44)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (succ _t_45)) (rotate zero _v_44))=(rotate (succ _t_45) (rotate (succ zero) _v_44)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (succ _t_45)) (rotate zero _v_44))=(rotate (succ _t_45) (rotate (succ zero) _v_44)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (succ _t_45)) (rotate zero _v_44))=(rotate (succ _t_45) (rotate (succ zero) _v_44)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (succ _t_45)) (rotate zero _v_44))=(rotate (succ _t_45) (rotate (succ zero) _v_44)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (succ _t_45)) (rotate zero _v_44))=(rotate (succ _t_45) (rotate (succ zero) _v_44)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ (succ _t_45)) _v_44))=(rotate (succ _t_45) (rotate (succ zero) _v_44)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ (succ _t_45)) _v_44))=(rotate (succ _t_45) (rotate (succ zero) _v_44)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ (succ _t_45)) _v_44))=(rotate (succ _t_45) (rotate (succ zero) _v_44)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ (succ _t_45)) _v_44))=(rotate (succ _t_45) (rotate (succ zero) _v_44)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ (succ _t_45)) _v_44))=(rotate (succ _t_45) (rotate (succ zero) _v_44)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ (succ _t_45)) _v_44))=(rotate (succ _t_45) (rotate (succ zero) _v_44)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ (succ _t_45)) _v_44))=(rotate (succ _t_45) (rotate (succ zero) _v_44)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ (succ _t_45)) _v_44))=(rotate (succ _t_45) (rotate (succ zero) _v_44)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ (succ _t_45)) _v_44))=(rotate (succ _t_45) (rotate (succ zero) _v_44)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ (succ _t_45)) _v_44))=(rotate (succ _t_45) (rotate (succ zero) _v_44)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ (succ _t_45)) _v_44))=(rotate (succ _t_45) (rotate (succ zero) _v_44)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ (succ _t_45)) _v_44))=(rotate (succ _t_45) (rotate (succ zero) _v_44)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ (succ _t_45)) _v_44))=(rotate (succ _t_45) (rotate (succ zero) _v_44)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ (succ _t_45)) _v_44))=(rotate (succ _t_45) (rotate (succ zero) _v_44)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (succ _t_45)) (rotate zero _v_44))=(rotate (succ _t_45) (rotate (succ zero) _v_44)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (succ _t_45)) (rotate zero _v_44))=(rotate (succ _t_45) (rotate (succ zero) _v_44)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (succ _t_45)) (rotate zero _v_44))=(rotate (succ _t_45) (rotate (succ zero) _v_44)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (succ _t_45)) (rotate zero _v_44))=(rotate (succ _t_45) (rotate (succ zero) _v_44)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (succ _t_45)) (rotate zero _v_44))=(rotate (succ _t_45) (rotate (succ zero) _v_44)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (succ _t_45)) (rotate zero _v_44))=(rotate (succ _t_45) (rotate (succ zero) _v_44)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (succ _t_45)) (rotate zero _v_44))=(rotate (succ _t_45) (rotate (succ zero) _v_44)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (succ _t_45)) (rotate zero _v_44))=(rotate (succ zero) (rotate (succ _t_45) _v_44)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (succ _t_45)) (rotate zero _v_44))=(rotate (succ zero) (rotate (succ _t_45) _v_44)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (succ _t_45)) (rotate zero _v_44))=(rotate (succ zero) (rotate (succ _t_45) _v_44)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (succ _t_45)) (rotate zero _v_44))=(rotate (succ zero) (rotate (succ _t_45) _v_44)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (succ _t_45)) (rotate zero _v_44))=(rotate (succ zero) (rotate (succ _t_45) _v_44)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (succ _t_45)) (rotate zero _v_44))=(rotate (succ zero) (rotate (succ _t_45) _v_44)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (succ _t_45)) (rotate zero _v_44))=(rotate (succ zero) (rotate (succ _t_45) _v_44)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ (succ _t_45)) _v_44))=(rotate (succ _t_45) (rotate (succ zero) _v_44)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ (succ _t_45)) _v_44))=(rotate (succ _t_45) (rotate (succ zero) _v_44)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ (succ _t_45)) _v_44))=(rotate (succ _t_45) (rotate (succ zero) _v_44)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ (succ _t_45)) _v_44))=(rotate (succ _t_45) (rotate (succ zero) _v_44)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ (succ _t_45)) _v_44))=(rotate (succ _t_45) (rotate (succ zero) _v_44)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ (succ _t_45)) _v_44))=(rotate (succ _t_45) (rotate (succ zero) _v_44)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ (succ _t_45)) _v_44))=(rotate (succ _t_45) (rotate (succ zero) _v_44)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ (succ _t_45)) _v_44))=(rotate (succ _t_45) (rotate (succ zero) _v_44)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ (succ _t_45)) _v_44))=(rotate (succ _t_45) (rotate (succ zero) _v_44)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ (succ _t_45)) _v_44))=(rotate (succ _t_45) (rotate (succ zero) _v_44)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ (succ _t_45)) _v_44))=(rotate (succ _t_45) (rotate (succ zero) _v_44)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ (succ _t_45)) _v_44))=(rotate (succ _t_45) (rotate (succ zero) _v_44)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ (succ _t_45)) _v_44))=(rotate (succ _t_45) (rotate (succ zero) _v_44)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ (succ _t_45)) _v_44))=(rotate (succ _t_45) (rotate (succ zero) _v_44)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ (succ _t_45)) _v_44))=(rotate (succ zero) (rotate (succ _t_45) _v_44)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ (succ _t_45)) _v_44))=(rotate (succ zero) (rotate (succ _t_45) _v_44)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ (succ _t_45)) _v_44))=(rotate (succ zero) (rotate (succ _t_45) _v_44)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ (succ _t_45)) _v_44))=(rotate (succ zero) (rotate (succ _t_45) _v_44)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ (succ _t_45)) _v_44))=(rotate (succ zero) (rotate (succ _t_45) _v_44)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ (succ _t_45)) _v_44))=(rotate (succ zero) (rotate (succ _t_45) _v_44)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ (succ _t_45)) _v_44))=(rotate (succ zero) (rotate (succ _t_45) _v_44)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ (succ _t_45)) _v_44))=(rotate (succ _t_45) (rotate (succ zero) _v_44)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ (succ _t_45)) _v_44))=(rotate (succ _t_45) (rotate (succ zero) _v_44)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ (succ _t_45)) _v_44))=(rotate (succ _t_45) (rotate (succ zero) _v_44)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ (succ _t_45)) _v_44))=(rotate (succ _t_45) (rotate (succ zero) _v_44)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ (succ _t_45)) _v_44))=(rotate (succ _t_45) (rotate (succ zero) _v_44)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ (succ _t_45)) _v_44))=(rotate (succ _t_45) (rotate (succ zero) _v_44)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ (succ _t_45)) _v_44))=(rotate (succ _t_45) (rotate (succ zero) _v_44)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ (succ _t_45)) _v_44))=(rotate (succ _t_45) (rotate (succ zero) _v_44)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ (succ _t_45)) _v_44))=(rotate (succ _t_45) (rotate (succ zero) _v_44)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ (succ _t_45)) _v_44))=(rotate (succ _t_45) (rotate (succ zero) _v_44)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ (succ _t_45)) _v_44))=(rotate (succ _t_45) (rotate (succ zero) _v_44)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ (succ _t_45)) _v_44))=(rotate (succ _t_45) (rotate (succ zero) _v_44)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ (succ _t_45)) _v_44))=(rotate (succ _t_45) (rotate (succ zero) _v_44)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ (succ _t_45)) _v_44))=(rotate (succ _t_45) (rotate (succ zero) _v_44)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ (succ _t_45)) _v_44))=(rotate (succ zero) (rotate (succ _t_45) _v_44)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ (succ _t_45)) _v_44))=(rotate (succ zero) (rotate (succ _t_45) _v_44)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ (succ _t_45)) _v_44))=(rotate (succ zero) (rotate (succ _t_45) _v_44)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ (succ _t_45)) _v_44))=(rotate (succ zero) (rotate (succ _t_45) _v_44)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ (succ _t_45)) _v_44))=(rotate (succ zero) (rotate (succ _t_45) _v_44)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ (succ _t_45)) _v_44))=(rotate (succ zero) (rotate (succ _t_45) _v_44)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ (succ _t_45)) _v_44))=(rotate (succ zero) (rotate (succ _t_45) _v_44)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (succ _t_45)) (rotate zero _v_44))=(rotate (succ zero) (rotate (succ _t_45) _v_44)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (succ _t_45)) (rotate zero _v_44))=(rotate (succ zero) (rotate (succ _t_45) _v_44)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (succ _t_45)) (rotate zero _v_44))=(rotate (succ zero) (rotate (succ _t_45) _v_44)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (succ _t_45)) (rotate zero _v_44))=(rotate (succ zero) (rotate (succ _t_45) _v_44)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (succ _t_45)) (rotate zero _v_44))=(rotate (succ zero) (rotate (succ _t_45) _v_44)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (succ _t_45)) (rotate zero _v_44))=(rotate (succ zero) (rotate (succ _t_45) _v_44)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (succ _t_45)) (rotate zero _v_44))=(rotate (succ zero) (rotate (succ _t_45) _v_44)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ (succ _t_45)) _v_44))=(rotate (succ zero) (rotate (succ _t_45) _v_44)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ (succ _t_45)) _v_44))=(rotate (succ zero) (rotate (succ _t_45) _v_44)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ (succ _t_45)) _v_44))=(rotate (succ zero) (rotate (succ _t_45) _v_44)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ (succ _t_45)) _v_44))=(rotate (succ zero) (rotate (succ _t_45) _v_44)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ (succ _t_45)) _v_44))=(rotate (succ zero) (rotate (succ _t_45) _v_44)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ (succ _t_45)) _v_44))=(rotate (succ zero) (rotate (succ _t_45) _v_44)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ (succ _t_45)) _v_44))=(rotate (succ zero) (rotate (succ _t_45) _v_44)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (succ _t_45)) (rotate zero _v_44))=(rotate (succ zero) (rotate (succ _t_45) _v_44)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (succ _t_45)) (rotate zero _v_44))=(rotate (succ zero) (rotate (succ _t_45) _v_44)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (succ _t_45)) (rotate zero _v_44))=(rotate (succ zero) (rotate (succ _t_45) _v_44)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (succ _t_45)) (rotate zero _v_44))=(rotate (succ zero) (rotate (succ _t_45) _v_44)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (succ _t_45)) (rotate zero _v_44))=(rotate (succ zero) (rotate (succ _t_45) _v_44)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (succ _t_45)) (rotate zero _v_44))=(rotate (succ zero) (rotate (succ _t_45) _v_44)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (succ _t_45)) (rotate zero _v_44))=(rotate (succ zero) (rotate (succ _t_45) _v_44)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (succ _t_45)) (rotate zero _v_44))=(rotate (succ zero) (rotate (succ _t_45) _v_44)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (succ _t_45)) (rotate zero _v_44))=(rotate (succ zero) (rotate (succ _t_45) _v_44)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (succ _t_45)) (rotate zero _v_44))=(rotate (succ zero) (rotate (succ _t_45) _v_44)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (succ _t_45)) (rotate zero _v_44))=(rotate (succ zero) (rotate (succ _t_45) _v_44)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (succ _t_45)) (rotate zero _v_44))=(rotate (succ zero) (rotate (succ _t_45) _v_44)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (succ _t_45)) (rotate zero _v_44))=(rotate (succ zero) (rotate (succ _t_45) _v_44)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (succ _t_45)) (rotate zero _v_44))=(rotate (succ zero) (rotate (succ _t_45) _v_44)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (succ _t_45)) (rotate zero _v_44))=(rotate (succ _t_45) (rotate (succ zero) _v_44)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (succ _t_45)) (rotate zero _v_44))=(rotate (succ _t_45) (rotate (succ zero) _v_44)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (succ _t_45)) (rotate zero _v_44))=(rotate (succ _t_45) (rotate (succ zero) _v_44)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (succ _t_45)) (rotate zero _v_44))=(rotate (succ _t_45) (rotate (succ zero) _v_44)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (succ _t_45)) (rotate zero _v_44))=(rotate (succ _t_45) (rotate (succ zero) _v_44)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (succ _t_45)) (rotate zero _v_44))=(rotate (succ _t_45) (rotate (succ zero) _v_44)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (succ _t_45)) (rotate zero _v_44))=(rotate (succ _t_45) (rotate (succ zero) _v_44)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (succ _t_45)) (rotate zero _v_44))=(rotate (succ zero) (rotate (succ _t_45) _v_44)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (succ _t_45)) (rotate zero _v_44))=(rotate (succ zero) (rotate (succ _t_45) _v_44)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (succ _t_45)) (rotate zero _v_44))=(rotate (succ zero) (rotate (succ _t_45) _v_44)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (succ _t_45)) (rotate zero _v_44))=(rotate (succ zero) (rotate (succ _t_45) _v_44)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (succ _t_45)) (rotate zero _v_44))=(rotate (succ zero) (rotate (succ _t_45) _v_44)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (succ _t_45)) (rotate zero _v_44))=(rotate (succ zero) (rotate (succ _t_45) _v_44)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (succ _t_45)) (rotate zero _v_44))=(rotate (succ zero) (rotate (succ _t_45) _v_44)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (succ _t_45)) (rotate zero _v_44))=(rotate (succ zero) (rotate (succ _t_45) _v_44)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (succ _t_45)) (rotate zero _v_44))=(rotate (succ zero) (rotate (succ _t_45) _v_44)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (succ _t_45)) (rotate zero _v_44))=(rotate (succ zero) (rotate (succ _t_45) _v_44)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (succ _t_45)) (rotate zero _v_44))=(rotate (succ zero) (rotate (succ _t_45) _v_44)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (succ _t_45)) (rotate zero _v_44))=(rotate (succ zero) (rotate (succ _t_45) _v_44)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (succ _t_45)) (rotate zero _v_44))=(rotate (succ zero) (rotate (succ _t_45) _v_44)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (succ _t_45)) (rotate zero _v_44))=(rotate (succ zero) (rotate (succ _t_45) _v_44)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (succ _t_45)) (rotate zero _v_44))=(rotate (succ _t_45) (rotate (succ zero) _v_44)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (succ _t_45)) (rotate zero _v_44))=(rotate (succ _t_45) (rotate (succ zero) _v_44)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (succ _t_45)) (rotate zero _v_44))=(rotate (succ _t_45) (rotate (succ zero) _v_44)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (succ _t_45)) (rotate zero _v_44))=(rotate (succ _t_45) (rotate (succ zero) _v_44)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (succ _t_45)) (rotate zero _v_44))=(rotate (succ _t_45) (rotate (succ zero) _v_44)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (succ _t_45)) (rotate zero _v_44))=(rotate (succ _t_45) (rotate (succ zero) _v_44)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (succ _t_45)) (rotate zero _v_44))=(rotate (succ _t_45) (rotate (succ zero) _v_44)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ (succ _t_45)) _v_44))=(rotate (succ _t_45) (rotate (succ zero) _v_44)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ (succ _t_45)) _v_44))=(rotate (succ _t_45) (rotate (succ zero) _v_44)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ (succ _t_45)) _v_44))=(rotate (succ _t_45) (rotate (succ zero) _v_44)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ (succ _t_45)) _v_44))=(rotate (succ _t_45) (rotate (succ zero) _v_44)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ (succ _t_45)) _v_44))=(rotate (succ _t_45) (rotate (succ zero) _v_44)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ (succ _t_45)) _v_44))=(rotate (succ _t_45) (rotate (succ zero) _v_44)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ (succ _t_45)) _v_44))=(rotate (succ _t_45) (rotate (succ zero) _v_44)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (succ _t_45)) (rotate zero _v_44))=(rotate (succ zero) (rotate (succ _t_45) _v_44)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (succ _t_45)) (rotate zero _v_44))=(rotate (succ zero) (rotate (succ _t_45) _v_44)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (succ _t_45)) (rotate zero _v_44))=(rotate (succ zero) (rotate (succ _t_45) _v_44)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (succ _t_45)) (rotate zero _v_44))=(rotate (succ zero) (rotate (succ _t_45) _v_44)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (succ _t_45)) (rotate zero _v_44))=(rotate (succ zero) (rotate (succ _t_45) _v_44)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (succ _t_45)) (rotate zero _v_44))=(rotate (succ zero) (rotate (succ _t_45) _v_44)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (succ _t_45)) (rotate zero _v_44))=(rotate (succ zero) (rotate (succ _t_45) _v_44)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (succ _t_45)) (rotate zero _v_44))=(rotate (succ zero) (rotate (succ _t_45) _v_44)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (succ _t_45)) (rotate zero _v_44))=(rotate (succ zero) (rotate (succ _t_45) _v_44)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (succ _t_45)) (rotate zero _v_44))=(rotate (succ zero) (rotate (succ _t_45) _v_44)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (succ _t_45)) (rotate zero _v_44))=(rotate (succ zero) (rotate (succ _t_45) _v_44)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (succ _t_45)) (rotate zero _v_44))=(rotate (succ zero) (rotate (succ _t_45) _v_44)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (succ _t_45)) (rotate zero _v_44))=(rotate (succ zero) (rotate (succ _t_45) _v_44)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (succ _t_45)) (rotate zero _v_44))=(rotate (succ zero) (rotate (succ _t_45) _v_44)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ (succ _t_45)) _v_44))=(rotate (succ zero) (rotate (succ _t_45) _v_44)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ (succ _t_45)) _v_44))=(rotate (succ zero) (rotate (succ _t_45) _v_44)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ (succ _t_45)) _v_44))=(rotate (succ zero) (rotate (succ _t_45) _v_44)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ (succ _t_45)) _v_44))=(rotate (succ zero) (rotate (succ _t_45) _v_44)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ (succ _t_45)) _v_44))=(rotate (succ zero) (rotate (succ _t_45) _v_44)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ (succ _t_45)) _v_44))=(rotate (succ zero) (rotate (succ _t_45) _v_44)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ (succ _t_45)) _v_44))=(rotate (succ zero) (rotate (succ _t_45) _v_44)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (succ _t_45)) (rotate zero _v_44))=(rotate (succ zero) (rotate (succ _t_45) _v_44)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (succ _t_45)) (rotate zero _v_44))=(rotate (succ zero) (rotate (succ _t_45) _v_44)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (succ _t_45)) (rotate zero _v_44))=(rotate (succ zero) (rotate (succ _t_45) _v_44)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (succ _t_45)) (rotate zero _v_44))=(rotate (succ zero) (rotate (succ _t_45) _v_44)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (succ _t_45)) (rotate zero _v_44))=(rotate (succ zero) (rotate (succ _t_45) _v_44)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (succ _t_45)) (rotate zero _v_44))=(rotate (succ zero) (rotate (succ _t_45) _v_44)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (succ _t_45)) (rotate zero _v_44))=(rotate (succ zero) (rotate (succ _t_45) _v_44)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (succ _t_45)) (rotate zero _v_44))=(rotate (succ zero) (rotate (succ _t_45) _v_44)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (succ _t_45)) (rotate zero _v_44))=(rotate (succ zero) (rotate (succ _t_45) _v_44)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (succ _t_45)) (rotate zero _v_44))=(rotate (succ zero) (rotate (succ _t_45) _v_44)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (succ _t_45)) (rotate zero _v_44))=(rotate (succ zero) (rotate (succ _t_45) _v_44)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (succ _t_45)) (rotate zero _v_44))=(rotate (succ zero) (rotate (succ _t_45) _v_44)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (succ _t_45)) (rotate zero _v_44))=(rotate (succ zero) (rotate (succ _t_45) _v_44)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (succ _t_45)) (rotate zero _v_44))=(rotate (succ zero) (rotate (succ _t_45) _v_44)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ (succ _t_45)) _v_44))=(rotate (succ zero) (rotate (succ _t_45) _v_44)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ (succ _t_45)) _v_44))=(rotate (succ zero) (rotate (succ _t_45) _v_44)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ (succ _t_45)) _v_44))=(rotate (succ zero) (rotate (succ _t_45) _v_44)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ (succ _t_45)) _v_44))=(rotate (succ zero) (rotate (succ _t_45) _v_44)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ (succ _t_45)) _v_44))=(rotate (succ zero) (rotate (succ _t_45) _v_44)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ (succ _t_45)) _v_44))=(rotate (succ zero) (rotate (succ _t_45) _v_44)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ (succ _t_45)) _v_44))=(rotate (succ zero) (rotate (succ _t_45) _v_44)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ (succ _t_45)) _v_44))=(rotate (succ _t_45) (rotate (succ zero) _v_44)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ (succ _t_45)) _v_44))=(rotate (succ _t_45) (rotate (succ zero) _v_44)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ (succ _t_45)) _v_44))=(rotate (succ _t_45) (rotate (succ zero) _v_44)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ (succ _t_45)) _v_44))=(rotate (succ _t_45) (rotate (succ zero) _v_44)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ (succ _t_45)) _v_44))=(rotate (succ _t_45) (rotate (succ zero) _v_44)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ (succ _t_45)) _v_44))=(rotate (succ _t_45) (rotate (succ zero) _v_44)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ (succ _t_45)) _v_44))=(rotate (succ _t_45) (rotate (succ zero) _v_44)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (succ _t_45)) (rotate zero _v_44))=(rotate (succ zero) (rotate (succ _t_45) _v_44)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (succ _t_45)) (rotate zero _v_44))=(rotate (succ zero) (rotate (succ _t_45) _v_44)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (succ _t_45)) (rotate zero _v_44))=(rotate (succ zero) (rotate (succ _t_45) _v_44)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (succ _t_45)) (rotate zero _v_44))=(rotate (succ zero) (rotate (succ _t_45) _v_44)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (succ _t_45)) (rotate zero _v_44))=(rotate (succ zero) (rotate (succ _t_45) _v_44)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (succ _t_45)) (rotate zero _v_44))=(rotate (succ zero) (rotate (succ _t_45) _v_44)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (succ _t_45)) (rotate zero _v_44))=(rotate (succ zero) (rotate (succ _t_45) _v_44)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (succ _t_45)) (rotate zero _v_44))=(rotate (succ zero) (rotate (succ _t_45) _v_44)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (succ _t_45)) (rotate zero _v_44))=(rotate (succ zero) (rotate (succ _t_45) _v_44)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (succ _t_45)) (rotate zero _v_44))=(rotate (succ zero) (rotate (succ _t_45) _v_44)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (succ _t_45)) (rotate zero _v_44))=(rotate (succ zero) (rotate (succ _t_45) _v_44)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (succ _t_45)) (rotate zero _v_44))=(rotate (succ zero) (rotate (succ _t_45) _v_44)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (succ _t_45)) (rotate zero _v_44))=(rotate (succ zero) (rotate (succ _t_45) _v_44)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (succ _t_45)) (rotate zero _v_44))=(rotate (succ zero) (rotate (succ _t_45) _v_44)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (succ _t_45)) (rotate zero _v_44))=(rotate (succ _t_45) (rotate (succ zero) _v_44)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (succ _t_45)) (rotate zero _v_44))=(rotate (succ _t_45) (rotate (succ zero) _v_44)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (succ _t_45)) (rotate zero _v_44))=(rotate (succ _t_45) (rotate (succ zero) _v_44)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (succ _t_45)) (rotate zero _v_44))=(rotate (succ _t_45) (rotate (succ zero) _v_44)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (succ _t_45)) (rotate zero _v_44))=(rotate (succ _t_45) (rotate (succ zero) _v_44)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (succ _t_45)) (rotate zero _v_44))=(rotate (succ _t_45) (rotate (succ zero) _v_44)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (succ _t_45)) (rotate zero _v_44))=(rotate (succ _t_45) (rotate (succ zero) _v_44)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (succ _t_45)) (rotate zero _v_44))=(rotate (succ zero) (rotate (succ _t_45) _v_44)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (succ _t_45)) (rotate zero _v_44))=(rotate (succ zero) (rotate (succ _t_45) _v_44)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (succ _t_45)) (rotate zero _v_44))=(rotate (succ zero) (rotate (succ _t_45) _v_44)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (succ _t_45)) (rotate zero _v_44))=(rotate (succ zero) (rotate (succ _t_45) _v_44)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (succ _t_45)) (rotate zero _v_44))=(rotate (succ zero) (rotate (succ _t_45) _v_44)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (succ _t_45)) (rotate zero _v_44))=(rotate (succ zero) (rotate (succ _t_45) _v_44)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (succ _t_45)) (rotate zero _v_44))=(rotate (succ zero) (rotate (succ _t_45) _v_44)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (succ _t_45)) (rotate zero _v_44))=(rotate (succ zero) (rotate (succ _t_45) _v_44)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (succ _t_45)) (rotate zero _v_44))=(rotate (succ zero) (rotate (succ _t_45) _v_44)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (succ _t_45)) (rotate zero _v_44))=(rotate (succ zero) (rotate (succ _t_45) _v_44)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (succ _t_45)) (rotate zero _v_44))=(rotate (succ zero) (rotate (succ _t_45) _v_44)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (succ _t_45)) (rotate zero _v_44))=(rotate (succ zero) (rotate (succ _t_45) _v_44)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (succ _t_45)) (rotate zero _v_44))=(rotate (succ zero) (rotate (succ _t_45) _v_44)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (succ _t_45)) (rotate zero _v_44))=(rotate (succ zero) (rotate (succ _t_45) _v_44)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (succ _t_45)) (rotate zero _v_44))=(rotate (succ _t_45) (rotate (succ zero) _v_44)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (succ _t_45)) (rotate zero _v_44))=(rotate (succ _t_45) (rotate (succ zero) _v_44)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (succ _t_45)) (rotate zero _v_44))=(rotate (succ _t_45) (rotate (succ zero) _v_44)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (succ _t_45)) (rotate zero _v_44))=(rotate (succ _t_45) (rotate (succ zero) _v_44)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (succ _t_45)) (rotate zero _v_44))=(rotate (succ _t_45) (rotate (succ zero) _v_44)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (succ _t_45)) (rotate zero _v_44))=(rotate (succ _t_45) (rotate (succ zero) _v_44)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (succ _t_45)) (rotate zero _v_44))=(rotate (succ _t_45) (rotate (succ zero) _v_44)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ (succ _t_45)) _v_44))=(rotate (succ _t_45) (rotate (succ zero) _v_44)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ (succ _t_45)) _v_44))=(rotate (succ _t_45) (rotate (succ zero) _v_44)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ (succ _t_45)) _v_44))=(rotate (succ _t_45) (rotate (succ zero) _v_44)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ (succ _t_45)) _v_44))=(rotate (succ _t_45) (rotate (succ zero) _v_44)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ (succ _t_45)) _v_44))=(rotate (succ _t_45) (rotate (succ zero) _v_44)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ (succ _t_45)) _v_44))=(rotate (succ _t_45) (rotate (succ zero) _v_44)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ (succ _t_45)) _v_44))=(rotate (succ _t_45) (rotate (succ zero) _v_44)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (succ _t_45)) (rotate zero _v_44))=(rotate (succ zero) (rotate (succ _t_45) _v_44)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (succ _t_45)) (rotate zero _v_44))=(rotate (succ zero) (rotate (succ _t_45) _v_44)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (succ _t_45)) (rotate zero _v_44))=(rotate (succ zero) (rotate (succ _t_45) _v_44)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (succ _t_45)) (rotate zero _v_44))=(rotate (succ zero) (rotate (succ _t_45) _v_44)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (succ _t_45)) (rotate zero _v_44))=(rotate (succ zero) (rotate (succ _t_45) _v_44)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (succ _t_45)) (rotate zero _v_44))=(rotate (succ zero) (rotate (succ _t_45) _v_44)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (succ _t_45)) (rotate zero _v_44))=(rotate (succ zero) (rotate (succ _t_45) _v_44)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (succ _t_45)) (rotate zero _v_44))=(rotate (succ zero) (rotate (succ _t_45) _v_44)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (succ _t_45)) (rotate zero _v_44))=(rotate (succ zero) (rotate (succ _t_45) _v_44)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (succ _t_45)) (rotate zero _v_44))=(rotate (succ zero) (rotate (succ _t_45) _v_44)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (succ _t_45)) (rotate zero _v_44))=(rotate (succ zero) (rotate (succ _t_45) _v_44)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (succ _t_45)) (rotate zero _v_44))=(rotate (succ zero) (rotate (succ _t_45) _v_44)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (succ _t_45)) (rotate zero _v_44))=(rotate (succ zero) (rotate (succ _t_45) _v_44)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (succ _t_45)) (rotate zero _v_44))=(rotate (succ zero) (rotate (succ _t_45) _v_44)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ (succ _t_45)) _v_44))=(rotate (succ zero) (rotate (succ _t_45) _v_44)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ (succ _t_45)) _v_44))=(rotate (succ zero) (rotate (succ _t_45) _v_44)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ (succ _t_45)) _v_44))=(rotate (succ zero) (rotate (succ _t_45) _v_44)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ (succ _t_45)) _v_44))=(rotate (succ zero) (rotate (succ _t_45) _v_44)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ (succ _t_45)) _v_44))=(rotate (succ zero) (rotate (succ _t_45) _v_44)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ (succ _t_45)) _v_44))=(rotate (succ zero) (rotate (succ _t_45) _v_44)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ (succ _t_45)) _v_44))=(rotate (succ zero) (rotate (succ _t_45) _v_44)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (succ _t_45)) (rotate zero _v_44))=(rotate (succ zero) (rotate (succ _t_45) _v_44)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (succ _t_45)) (rotate zero _v_44))=(rotate (succ zero) (rotate (succ _t_45) _v_44)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (succ _t_45)) (rotate zero _v_44))=(rotate (succ zero) (rotate (succ _t_45) _v_44)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (succ _t_45)) (rotate zero _v_44))=(rotate (succ zero) (rotate (succ _t_45) _v_44)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (succ _t_45)) (rotate zero _v_44))=(rotate (succ zero) (rotate (succ _t_45) _v_44)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (succ _t_45)) (rotate zero _v_44))=(rotate (succ zero) (rotate (succ _t_45) _v_44)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (succ _t_45)) (rotate zero _v_44))=(rotate (succ zero) (rotate (succ _t_45) _v_44)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (succ _t_45)) (rotate zero _v_44))=(rotate (succ zero) (rotate (succ _t_45) _v_44)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (succ _t_45)) (rotate zero _v_44))=(rotate (succ zero) (rotate (succ _t_45) _v_44)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (succ _t_45)) (rotate zero _v_44))=(rotate (succ zero) (rotate (succ _t_45) _v_44)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (succ _t_45)) (rotate zero _v_44))=(rotate (succ zero) (rotate (succ _t_45) _v_44)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (succ _t_45)) (rotate zero _v_44))=(rotate (succ zero) (rotate (succ _t_45) _v_44)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (succ _t_45)) (rotate zero _v_44))=(rotate (succ zero) (rotate (succ _t_45) _v_44)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (succ _t_45)) (rotate zero _v_44))=(rotate (succ zero) (rotate (succ _t_45) _v_44)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ (succ _t_45)) _v_44))=(rotate (succ zero) (rotate (succ _t_45) _v_44)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ (succ _t_45)) _v_44))=(rotate (succ zero) (rotate (succ _t_45) _v_44)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ (succ _t_45)) _v_44))=(rotate (succ zero) (rotate (succ _t_45) _v_44)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ (succ _t_45)) _v_44))=(rotate (succ zero) (rotate (succ _t_45) _v_44)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ (succ _t_45)) _v_44))=(rotate (succ zero) (rotate (succ _t_45) _v_44)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ (succ _t_45)) _v_44))=(rotate (succ zero) (rotate (succ _t_45) _v_44)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ (succ _t_45)) _v_44))=(rotate (succ zero) (rotate (succ _t_45) _v_44)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ (succ _t_45)) _v_44))=(rotate (succ _t_45) (rotate (succ zero) _v_44)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ (succ _t_45)) _v_44))=(rotate (succ _t_45) (rotate (succ zero) _v_44)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ (succ _t_45)) _v_44))=(rotate (succ _t_45) (rotate (succ zero) _v_44)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ (succ _t_45)) _v_44))=(rotate (succ _t_45) (rotate (succ zero) _v_44)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ (succ _t_45)) _v_44))=(rotate (succ _t_45) (rotate (succ zero) _v_44)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ (succ _t_45)) _v_44))=(rotate (succ _t_45) (rotate (succ zero) _v_44)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ (succ _t_45)) _v_44))=(rotate (succ _t_45) (rotate (succ zero) _v_44)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ (succ _t_45)) _v_44))=(rotate (succ zero) (rotate (succ _t_45) _v_44)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ (succ _t_45)) _v_44))=(rotate (succ zero) (rotate (succ _t_45) _v_44)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ (succ _t_45)) _v_44))=(rotate (succ zero) (rotate (succ _t_45) _v_44)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ (succ _t_45)) _v_44))=(rotate (succ zero) (rotate (succ _t_45) _v_44)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ (succ _t_45)) _v_44))=(rotate (succ zero) (rotate (succ _t_45) _v_44)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ (succ _t_45)) _v_44))=(rotate (succ zero) (rotate (succ _t_45) _v_44)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ (succ _t_45)) _v_44))=(rotate (succ zero) (rotate (succ _t_45) _v_44)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ (succ _t_45)) _v_44))=(rotate (succ _t_45) (rotate (succ zero) _v_44)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ (succ _t_45)) _v_44))=(rotate (succ _t_45) (rotate (succ zero) _v_44)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ (succ _t_45)) _v_44))=(rotate (succ _t_45) (rotate (succ zero) _v_44)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ (succ _t_45)) _v_44))=(rotate (succ _t_45) (rotate (succ zero) _v_44)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ (succ _t_45)) _v_44))=(rotate (succ _t_45) (rotate (succ zero) _v_44)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ (succ _t_45)) _v_44))=(rotate (succ _t_45) (rotate (succ zero) _v_44)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ (succ _t_45)) _v_44))=(rotate (succ _t_45) (rotate (succ zero) _v_44)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ (succ _t_45)) _v_44))=(rotate (succ _t_45) (rotate (succ zero) _v_44)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ (succ _t_45)) _v_44))=(rotate (succ _t_45) (rotate (succ zero) _v_44)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ (succ _t_45)) _v_44))=(rotate (succ _t_45) (rotate (succ zero) _v_44)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ (succ _t_45)) _v_44))=(rotate (succ _t_45) (rotate (succ zero) _v_44)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ (succ _t_45)) _v_44))=(rotate (succ _t_45) (rotate (succ zero) _v_44)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ (succ _t_45)) _v_44))=(rotate (succ _t_45) (rotate (succ zero) _v_44)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ (succ _t_45)) _v_44))=(rotate (succ _t_45) (rotate (succ zero) _v_44)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (succ _t_45)) (rotate zero _v_44))=(rotate (succ _t_45) (rotate (succ zero) _v_44)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (succ _t_45)) (rotate zero _v_44))=(rotate (succ _t_45) (rotate (succ zero) _v_44)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (succ _t_45)) (rotate zero _v_44))=(rotate (succ _t_45) (rotate (succ zero) _v_44)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (succ _t_45)) (rotate zero _v_44))=(rotate (succ _t_45) (rotate (succ zero) _v_44)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (succ _t_45)) (rotate zero _v_44))=(rotate (succ _t_45) (rotate (succ zero) _v_44)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (succ _t_45)) (rotate zero _v_44))=(rotate (succ _t_45) (rotate (succ zero) _v_44)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (succ _t_45)) (rotate zero _v_44))=(rotate (succ _t_45) (rotate (succ zero) _v_44)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ (succ _t_45)) _v_44))=(rotate (succ _t_45) (rotate (succ zero) _v_44)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ (succ _t_45)) _v_44))=(rotate (succ _t_45) (rotate (succ zero) _v_44)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ (succ _t_45)) _v_44))=(rotate (succ _t_45) (rotate (succ zero) _v_44)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ (succ _t_45)) _v_44))=(rotate (succ _t_45) (rotate (succ zero) _v_44)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ (succ _t_45)) _v_44))=(rotate (succ _t_45) (rotate (succ zero) _v_44)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ (succ _t_45)) _v_44))=(rotate (succ _t_45) (rotate (succ zero) _v_44)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ (succ _t_45)) _v_44))=(rotate (succ _t_45) (rotate (succ zero) _v_44)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ (succ _t_45)) _v_44))=(rotate (succ _t_45) (rotate (succ zero) _v_44)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ (succ _t_45)) _v_44))=(rotate (succ _t_45) (rotate (succ zero) _v_44)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ (succ _t_45)) _v_44))=(rotate (succ _t_45) (rotate (succ zero) _v_44)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ (succ _t_45)) _v_44))=(rotate (succ _t_45) (rotate (succ zero) _v_44)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ (succ _t_45)) _v_44))=(rotate (succ _t_45) (rotate (succ zero) _v_44)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ (succ _t_45)) _v_44))=(rotate (succ _t_45) (rotate (succ zero) _v_44)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ (succ _t_45)) _v_44))=(rotate (succ _t_45) (rotate (succ zero) _v_44)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (succ _t_45)) (rotate zero _v_44))=(rotate (succ _t_45) (rotate (succ zero) _v_44)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (succ _t_45)) (rotate zero _v_44))=(rotate (succ _t_45) (rotate (succ zero) _v_44)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (succ _t_45)) (rotate zero _v_44))=(rotate (succ _t_45) (rotate (succ zero) _v_44)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (succ _t_45)) (rotate zero _v_44))=(rotate (succ _t_45) (rotate (succ zero) _v_44)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (succ _t_45)) (rotate zero _v_44))=(rotate (succ _t_45) (rotate (succ zero) _v_44)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (succ _t_45)) (rotate zero _v_44))=(rotate (succ _t_45) (rotate (succ zero) _v_44)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (succ _t_45)) (rotate zero _v_44))=(rotate (succ _t_45) (rotate (succ zero) _v_44)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (succ _t_45)) (rotate zero _v_44))=(rotate (succ zero) (rotate (succ _t_45) _v_44)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (succ _t_45)) (rotate zero _v_44))=(rotate (succ zero) (rotate (succ _t_45) _v_44)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (succ _t_45)) (rotate zero _v_44))=(rotate (succ zero) (rotate (succ _t_45) _v_44)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (succ _t_45)) (rotate zero _v_44))=(rotate (succ zero) (rotate (succ _t_45) _v_44)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (succ _t_45)) (rotate zero _v_44))=(rotate (succ zero) (rotate (succ _t_45) _v_44)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (succ _t_45)) (rotate zero _v_44))=(rotate (succ zero) (rotate (succ _t_45) _v_44)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (succ _t_45)) (rotate zero _v_44))=(rotate (succ zero) (rotate (succ _t_45) _v_44)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ (succ _t_45)) _v_44))=(rotate (succ _t_45) (rotate (succ zero) _v_44)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ (succ _t_45)) _v_44))=(rotate (succ _t_45) (rotate (succ zero) _v_44)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ (succ _t_45)) _v_44))=(rotate (succ _t_45) (rotate (succ zero) _v_44)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ (succ _t_45)) _v_44))=(rotate (succ _t_45) (rotate (succ zero) _v_44)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ (succ _t_45)) _v_44))=(rotate (succ _t_45) (rotate (succ zero) _v_44)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ (succ _t_45)) _v_44))=(rotate (succ _t_45) (rotate (succ zero) _v_44)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ (succ _t_45)) _v_44))=(rotate (succ _t_45) (rotate (succ zero) _v_44)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ (succ _t_45)) _v_44))=(rotate (succ _t_45) (rotate (succ zero) _v_44)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ (succ _t_45)) _v_44))=(rotate (succ _t_45) (rotate (succ zero) _v_44)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ (succ _t_45)) _v_44))=(rotate (succ _t_45) (rotate (succ zero) _v_44)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ (succ _t_45)) _v_44))=(rotate (succ _t_45) (rotate (succ zero) _v_44)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ (succ _t_45)) _v_44))=(rotate (succ _t_45) (rotate (succ zero) _v_44)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ (succ _t_45)) _v_44))=(rotate (succ _t_45) (rotate (succ zero) _v_44)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ (succ _t_45)) _v_44))=(rotate (succ _t_45) (rotate (succ zero) _v_44)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ (succ _t_45)) _v_44))=(rotate (succ zero) (rotate (succ _t_45) _v_44)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ (succ _t_45)) _v_44))=(rotate (succ zero) (rotate (succ _t_45) _v_44)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ (succ _t_45)) _v_44))=(rotate (succ zero) (rotate (succ _t_45) _v_44)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ (succ _t_45)) _v_44))=(rotate (succ zero) (rotate (succ _t_45) _v_44)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ (succ _t_45)) _v_44))=(rotate (succ zero) (rotate (succ _t_45) _v_44)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ (succ _t_45)) _v_44))=(rotate (succ zero) (rotate (succ _t_45) _v_44)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ (succ _t_45)) _v_44))=(rotate (succ zero) (rotate (succ _t_45) _v_44)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ (succ _t_45)) _v_44))=(rotate (succ _t_45) (rotate (succ zero) _v_44)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ (succ _t_45)) _v_44))=(rotate (succ _t_45) (rotate (succ zero) _v_44)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ (succ _t_45)) _v_44))=(rotate (succ _t_45) (rotate (succ zero) _v_44)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ (succ _t_45)) _v_44))=(rotate (succ _t_45) (rotate (succ zero) _v_44)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ (succ _t_45)) _v_44))=(rotate (succ _t_45) (rotate (succ zero) _v_44)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ (succ _t_45)) _v_44))=(rotate (succ _t_45) (rotate (succ zero) _v_44)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ (succ _t_45)) _v_44))=(rotate (succ _t_45) (rotate (succ zero) _v_44)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ (succ _t_45)) _v_44))=(rotate (succ _t_45) (rotate (succ zero) _v_44)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ (succ _t_45)) _v_44))=(rotate (succ _t_45) (rotate (succ zero) _v_44)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ (succ _t_45)) _v_44))=(rotate (succ _t_45) (rotate (succ zero) _v_44)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ (succ _t_45)) _v_44))=(rotate (succ _t_45) (rotate (succ zero) _v_44)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ (succ _t_45)) _v_44))=(rotate (succ _t_45) (rotate (succ zero) _v_44)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ (succ _t_45)) _v_44))=(rotate (succ _t_45) (rotate (succ zero) _v_44)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ (succ _t_45)) _v_44))=(rotate (succ _t_45) (rotate (succ zero) _v_44)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ (succ _t_45)) _v_44))=(rotate (succ zero) (rotate (succ _t_45) _v_44)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ (succ _t_45)) _v_44))=(rotate (succ zero) (rotate (succ _t_45) _v_44)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ (succ _t_45)) _v_44))=(rotate (succ zero) (rotate (succ _t_45) _v_44)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ (succ _t_45)) _v_44))=(rotate (succ zero) (rotate (succ _t_45) _v_44)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ (succ _t_45)) _v_44))=(rotate (succ zero) (rotate (succ _t_45) _v_44)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ (succ _t_45)) _v_44))=(rotate (succ zero) (rotate (succ _t_45) _v_44)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ (succ _t_45)) _v_44))=(rotate (succ zero) (rotate (succ _t_45) _v_44)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (succ _t_45)) (rotate zero _v_44))=(rotate (succ zero) (rotate (succ _t_45) _v_44)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (succ _t_45)) (rotate zero _v_44))=(rotate (succ zero) (rotate (succ _t_45) _v_44)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (succ _t_45)) (rotate zero _v_44))=(rotate (succ zero) (rotate (succ _t_45) _v_44)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (succ _t_45)) (rotate zero _v_44))=(rotate (succ zero) (rotate (succ _t_45) _v_44)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (succ _t_45)) (rotate zero _v_44))=(rotate (succ zero) (rotate (succ _t_45) _v_44)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (succ _t_45)) (rotate zero _v_44))=(rotate (succ zero) (rotate (succ _t_45) _v_44)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (succ _t_45)) (rotate zero _v_44))=(rotate (succ zero) (rotate (succ _t_45) _v_44)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ (succ _t_45)) _v_44))=(rotate (succ _t_45) (rotate (succ zero) _v_44)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ (succ _t_45)) _v_44))=(rotate (succ _t_45) (rotate (succ zero) _v_44)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ (succ _t_45)) _v_44))=(rotate (succ _t_45) (rotate (succ zero) _v_44)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ (succ _t_45)) _v_44))=(rotate (succ _t_45) (rotate (succ zero) _v_44)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ (succ _t_45)) _v_44))=(rotate (succ _t_45) (rotate (succ zero) _v_44)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ (succ _t_45)) _v_44))=(rotate (succ _t_45) (rotate (succ zero) _v_44)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ (succ _t_45)) _v_44))=(rotate (succ _t_45) (rotate (succ zero) _v_44)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ (succ _t_45)) _v_44))=(rotate (succ _t_45) (rotate (succ zero) _v_44)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ (succ _t_45)) _v_44))=(rotate (succ _t_45) (rotate (succ zero) _v_44)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ (succ _t_45)) _v_44))=(rotate (succ _t_45) (rotate (succ zero) _v_44)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ (succ _t_45)) _v_44))=(rotate (succ _t_45) (rotate (succ zero) _v_44)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ (succ _t_45)) _v_44))=(rotate (succ _t_45) (rotate (succ zero) _v_44)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ (succ _t_45)) _v_44))=(rotate (succ _t_45) (rotate (succ zero) _v_44)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ (succ _t_45)) _v_44))=(rotate (succ _t_45) (rotate (succ zero) _v_44)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (succ _t_45)) (rotate zero _v_44))=(rotate (succ _t_45) (rotate (succ zero) _v_44)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (succ _t_45)) (rotate zero _v_44))=(rotate (succ _t_45) (rotate (succ zero) _v_44)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (succ _t_45)) (rotate zero _v_44))=(rotate (succ _t_45) (rotate (succ zero) _v_44)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (succ _t_45)) (rotate zero _v_44))=(rotate (succ _t_45) (rotate (succ zero) _v_44)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (succ _t_45)) (rotate zero _v_44))=(rotate (succ _t_45) (rotate (succ zero) _v_44)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (succ _t_45)) (rotate zero _v_44))=(rotate (succ _t_45) (rotate (succ zero) _v_44)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (succ _t_45)) (rotate zero _v_44))=(rotate (succ _t_45) (rotate (succ zero) _v_44)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ (succ _t_45)) _v_44))=(rotate (succ _t_45) (rotate (succ zero) _v_44)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ (succ _t_45)) _v_44))=(rotate (succ _t_45) (rotate (succ zero) _v_44)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ (succ _t_45)) _v_44))=(rotate (succ _t_45) (rotate (succ zero) _v_44)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ (succ _t_45)) _v_44))=(rotate (succ _t_45) (rotate (succ zero) _v_44)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ (succ _t_45)) _v_44))=(rotate (succ _t_45) (rotate (succ zero) _v_44)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ (succ _t_45)) _v_44))=(rotate (succ _t_45) (rotate (succ zero) _v_44)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ (succ _t_45)) _v_44))=(rotate (succ _t_45) (rotate (succ zero) _v_44)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ (succ _t_45)) _v_44))=(rotate (succ _t_45) (rotate (succ zero) _v_44)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ (succ _t_45)) _v_44))=(rotate (succ _t_45) (rotate (succ zero) _v_44)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ (succ _t_45)) _v_44))=(rotate (succ _t_45) (rotate (succ zero) _v_44)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ (succ _t_45)) _v_44))=(rotate (succ _t_45) (rotate (succ zero) _v_44)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ (succ _t_45)) _v_44))=(rotate (succ _t_45) (rotate (succ zero) _v_44)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ (succ _t_45)) _v_44))=(rotate (succ _t_45) (rotate (succ zero) _v_44)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ (succ _t_45)) _v_44))=(rotate (succ _t_45) (rotate (succ zero) _v_44)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (succ _t_45)) (rotate zero _v_44))=(rotate (succ _t_45) (rotate (succ zero) _v_44)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (succ _t_45)) (rotate zero _v_44))=(rotate (succ _t_45) (rotate (succ zero) _v_44)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (succ _t_45)) (rotate zero _v_44))=(rotate (succ _t_45) (rotate (succ zero) _v_44)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (succ _t_45)) (rotate zero _v_44))=(rotate (succ _t_45) (rotate (succ zero) _v_44)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (succ _t_45)) (rotate zero _v_44))=(rotate (succ _t_45) (rotate (succ zero) _v_44)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (succ _t_45)) (rotate zero _v_44))=(rotate (succ _t_45) (rotate (succ zero) _v_44)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (succ _t_45)) (rotate zero _v_44))=(rotate (succ _t_45) (rotate (succ zero) _v_44)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (succ _t_45)) (rotate zero _v_44))=(rotate (succ zero) (rotate (succ _t_45) _v_44)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (succ _t_45)) (rotate zero _v_44))=(rotate (succ zero) (rotate (succ _t_45) _v_44)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (succ _t_45)) (rotate zero _v_44))=(rotate (succ zero) (rotate (succ _t_45) _v_44)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (succ _t_45)) (rotate zero _v_44))=(rotate (succ zero) (rotate (succ _t_45) _v_44)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (succ _t_45)) (rotate zero _v_44))=(rotate (succ zero) (rotate (succ _t_45) _v_44)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (succ _t_45)) (rotate zero _v_44))=(rotate (succ zero) (rotate (succ _t_45) _v_44)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (succ _t_45)) (rotate zero _v_44))=(rotate (succ zero) (rotate (succ _t_45) _v_44)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ (succ _t_45)) _v_44))=(rotate (succ _t_45) (rotate (succ zero) _v_44)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ (succ _t_45)) _v_44))=(rotate (succ _t_45) (rotate (succ zero) _v_44)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ (succ _t_45)) _v_44))=(rotate (succ _t_45) (rotate (succ zero) _v_44)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ (succ _t_45)) _v_44))=(rotate (succ _t_45) (rotate (succ zero) _v_44)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ (succ _t_45)) _v_44))=(rotate (succ _t_45) (rotate (succ zero) _v_44)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ (succ _t_45)) _v_44))=(rotate (succ _t_45) (rotate (succ zero) _v_44)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ (succ _t_45)) _v_44))=(rotate (succ _t_45) (rotate (succ zero) _v_44)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ (succ _t_45)) _v_44))=(rotate (succ _t_45) (rotate (succ zero) _v_44)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ (succ _t_45)) _v_44))=(rotate (succ _t_45) (rotate (succ zero) _v_44)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ (succ _t_45)) _v_44))=(rotate (succ _t_45) (rotate (succ zero) _v_44)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ (succ _t_45)) _v_44))=(rotate (succ _t_45) (rotate (succ zero) _v_44)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ (succ _t_45)) _v_44))=(rotate (succ _t_45) (rotate (succ zero) _v_44)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ (succ _t_45)) _v_44))=(rotate (succ _t_45) (rotate (succ zero) _v_44)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ (succ _t_45)) _v_44))=(rotate (succ _t_45) (rotate (succ zero) _v_44)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ (succ _t_45)) _v_44))=(rotate (succ zero) (rotate (succ _t_45) _v_44)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ (succ _t_45)) _v_44))=(rotate (succ zero) (rotate (succ _t_45) _v_44)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ (succ _t_45)) _v_44))=(rotate (succ zero) (rotate (succ _t_45) _v_44)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ (succ _t_45)) _v_44))=(rotate (succ zero) (rotate (succ _t_45) _v_44)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ (succ _t_45)) _v_44))=(rotate (succ zero) (rotate (succ _t_45) _v_44)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ (succ _t_45)) _v_44))=(rotate (succ zero) (rotate (succ _t_45) _v_44)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ (succ _t_45)) _v_44))=(rotate (succ zero) (rotate (succ _t_45) _v_44)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ (succ _t_45)) _v_44))=(rotate (succ _t_45) (rotate (succ zero) _v_44)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ (succ _t_45)) _v_44))=(rotate (succ _t_45) (rotate (succ zero) _v_44)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ (succ _t_45)) _v_44))=(rotate (succ _t_45) (rotate (succ zero) _v_44)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ (succ _t_45)) _v_44))=(rotate (succ _t_45) (rotate (succ zero) _v_44)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ (succ _t_45)) _v_44))=(rotate (succ _t_45) (rotate (succ zero) _v_44)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ (succ _t_45)) _v_44))=(rotate (succ _t_45) (rotate (succ zero) _v_44)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ (succ _t_45)) _v_44))=(rotate (succ _t_45) (rotate (succ zero) _v_44)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ (succ _t_45)) _v_44))=(rotate (succ _t_45) (rotate (succ zero) _v_44)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ (succ _t_45)) _v_44))=(rotate (succ _t_45) (rotate (succ zero) _v_44)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ (succ _t_45)) _v_44))=(rotate (succ _t_45) (rotate (succ zero) _v_44)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ (succ _t_45)) _v_44))=(rotate (succ _t_45) (rotate (succ zero) _v_44)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ (succ _t_45)) _v_44))=(rotate (succ _t_45) (rotate (succ zero) _v_44)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ (succ _t_45)) _v_44))=(rotate (succ _t_45) (rotate (succ zero) _v_44)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ (succ _t_45)) _v_44))=(rotate (succ _t_45) (rotate (succ zero) _v_44)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ (succ _t_45)) _v_44))=(rotate (succ zero) (rotate (succ _t_45) _v_44)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ (succ _t_45)) _v_44))=(rotate (succ zero) (rotate (succ _t_45) _v_44)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ (succ _t_45)) _v_44))=(rotate (succ zero) (rotate (succ _t_45) _v_44)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ (succ _t_45)) _v_44))=(rotate (succ zero) (rotate (succ _t_45) _v_44)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ (succ _t_45)) _v_44))=(rotate (succ zero) (rotate (succ _t_45) _v_44)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ (succ _t_45)) _v_44))=(rotate (succ zero) (rotate (succ _t_45) _v_44)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ (succ _t_45)) _v_44))=(rotate (succ zero) (rotate (succ _t_45) _v_44)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (succ _t_45)) (rotate zero _v_44))=(rotate (succ zero) (rotate (succ _t_45) _v_44)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (succ _t_45)) (rotate zero _v_44))=(rotate (succ zero) (rotate (succ _t_45) _v_44)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (succ _t_45)) (rotate zero _v_44))=(rotate (succ zero) (rotate (succ _t_45) _v_44)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (succ _t_45)) (rotate zero _v_44))=(rotate (succ zero) (rotate (succ _t_45) _v_44)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (succ _t_45)) (rotate zero _v_44))=(rotate (succ zero) (rotate (succ _t_45) _v_44)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (succ _t_45)) (rotate zero _v_44))=(rotate (succ zero) (rotate (succ _t_45) _v_44)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (succ _t_45)) (rotate zero _v_44))=(rotate (succ zero) (rotate (succ _t_45) _v_44)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ (succ _t_45)) _v_44))=(rotate (succ zero) (rotate (succ _t_45) _v_44)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ (succ _t_45)) _v_44))=(rotate (succ zero) (rotate (succ _t_45) _v_44)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ (succ _t_45)) _v_44))=(rotate (succ zero) (rotate (succ _t_45) _v_44)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ (succ _t_45)) _v_44))=(rotate (succ zero) (rotate (succ _t_45) _v_44)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ (succ _t_45)) _v_44))=(rotate (succ zero) (rotate (succ _t_45) _v_44)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ (succ _t_45)) _v_44))=(rotate (succ zero) (rotate (succ _t_45) _v_44)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ (succ _t_45)) _v_44))=(rotate (succ zero) (rotate (succ _t_45) _v_44)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (succ _t_45)) (rotate zero _v_44))=(rotate (succ zero) (rotate (succ _t_45) _v_44)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (succ _t_45)) (rotate zero _v_44))=(rotate (succ zero) (rotate (succ _t_45) _v_44)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (succ _t_45)) (rotate zero _v_44))=(rotate (succ zero) (rotate (succ _t_45) _v_44)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (succ _t_45)) (rotate zero _v_44))=(rotate (succ zero) (rotate (succ _t_45) _v_44)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (succ _t_45)) (rotate zero _v_44))=(rotate (succ zero) (rotate (succ _t_45) _v_44)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (succ _t_45)) (rotate zero _v_44))=(rotate (succ zero) (rotate (succ _t_45) _v_44)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (succ _t_45)) (rotate zero _v_44))=(rotate (succ zero) (rotate (succ _t_45) _v_44)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (succ _t_45)) (rotate zero _v_44))=(rotate (succ zero) (rotate (succ _t_45) _v_44)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (succ _t_45)) (rotate zero _v_44))=(rotate (succ zero) (rotate (succ _t_45) _v_44)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (succ _t_45)) (rotate zero _v_44))=(rotate (succ zero) (rotate (succ _t_45) _v_44)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (succ _t_45)) (rotate zero _v_44))=(rotate (succ zero) (rotate (succ _t_45) _v_44)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (succ _t_45)) (rotate zero _v_44))=(rotate (succ zero) (rotate (succ _t_45) _v_44)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (succ _t_45)) (rotate zero _v_44))=(rotate (succ zero) (rotate (succ _t_45) _v_44)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (succ _t_45)) (rotate zero _v_44))=(rotate (succ zero) (rotate (succ _t_45) _v_44)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (succ _t_45)) (rotate zero _v_44))=(rotate (succ _t_45) (rotate (succ zero) _v_44)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (succ _t_45)) (rotate zero _v_44))=(rotate (succ _t_45) (rotate (succ zero) _v_44)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (succ _t_45)) (rotate zero _v_44))=(rotate (succ _t_45) (rotate (succ zero) _v_44)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (succ _t_45)) (rotate zero _v_44))=(rotate (succ _t_45) (rotate (succ zero) _v_44)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (succ _t_45)) (rotate zero _v_44))=(rotate (succ _t_45) (rotate (succ zero) _v_44)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (succ _t_45)) (rotate zero _v_44))=(rotate (succ _t_45) (rotate (succ zero) _v_44)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (succ _t_45)) (rotate zero _v_44))=(rotate (succ _t_45) (rotate (succ zero) _v_44)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (succ _t_45)) (rotate zero _v_44))=(rotate (succ zero) (rotate (succ _t_45) _v_44)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (succ _t_45)) (rotate zero _v_44))=(rotate (succ zero) (rotate (succ _t_45) _v_44)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (succ _t_45)) (rotate zero _v_44))=(rotate (succ zero) (rotate (succ _t_45) _v_44)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (succ _t_45)) (rotate zero _v_44))=(rotate (succ zero) (rotate (succ _t_45) _v_44)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (succ _t_45)) (rotate zero _v_44))=(rotate (succ zero) (rotate (succ _t_45) _v_44)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (succ _t_45)) (rotate zero _v_44))=(rotate (succ zero) (rotate (succ _t_45) _v_44)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (succ _t_45)) (rotate zero _v_44))=(rotate (succ zero) (rotate (succ _t_45) _v_44)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (succ _t_45)) (rotate zero _v_44))=(rotate (succ zero) (rotate (succ _t_45) _v_44)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (succ _t_45)) (rotate zero _v_44))=(rotate (succ zero) (rotate (succ _t_45) _v_44)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (succ _t_45)) (rotate zero _v_44))=(rotate (succ zero) (rotate (succ _t_45) _v_44)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (succ _t_45)) (rotate zero _v_44))=(rotate (succ zero) (rotate (succ _t_45) _v_44)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (succ _t_45)) (rotate zero _v_44))=(rotate (succ zero) (rotate (succ _t_45) _v_44)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (succ _t_45)) (rotate zero _v_44))=(rotate (succ zero) (rotate (succ _t_45) _v_44)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (succ _t_45)) (rotate zero _v_44))=(rotate (succ zero) (rotate (succ _t_45) _v_44)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (succ _t_45)) (rotate zero _v_44))=(rotate (succ _t_45) (rotate (succ zero) _v_44)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (succ _t_45)) (rotate zero _v_44))=(rotate (succ _t_45) (rotate (succ zero) _v_44)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (succ _t_45)) (rotate zero _v_44))=(rotate (succ _t_45) (rotate (succ zero) _v_44)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (succ _t_45)) (rotate zero _v_44))=(rotate (succ _t_45) (rotate (succ zero) _v_44)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (succ _t_45)) (rotate zero _v_44))=(rotate (succ _t_45) (rotate (succ zero) _v_44)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (succ _t_45)) (rotate zero _v_44))=(rotate (succ _t_45) (rotate (succ zero) _v_44)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (succ _t_45)) (rotate zero _v_44))=(rotate (succ _t_45) (rotate (succ zero) _v_44)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ (succ _t_45)) _v_44))=(rotate (succ _t_45) (rotate (succ zero) _v_44)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ (succ _t_45)) _v_44))=(rotate (succ _t_45) (rotate (succ zero) _v_44)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ (succ _t_45)) _v_44))=(rotate (succ _t_45) (rotate (succ zero) _v_44)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ (succ _t_45)) _v_44))=(rotate (succ _t_45) (rotate (succ zero) _v_44)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ (succ _t_45)) _v_44))=(rotate (succ _t_45) (rotate (succ zero) _v_44)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ (succ _t_45)) _v_44))=(rotate (succ _t_45) (rotate (succ zero) _v_44)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ (succ _t_45)) _v_44))=(rotate (succ _t_45) (rotate (succ zero) _v_44)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (succ _t_45)) (rotate zero _v_44))=(rotate (succ zero) (rotate (succ _t_45) _v_44)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (succ _t_45)) (rotate zero _v_44))=(rotate (succ zero) (rotate (succ _t_45) _v_44)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (succ _t_45)) (rotate zero _v_44))=(rotate (succ zero) (rotate (succ _t_45) _v_44)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (succ _t_45)) (rotate zero _v_44))=(rotate (succ zero) (rotate (succ _t_45) _v_44)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (succ _t_45)) (rotate zero _v_44))=(rotate (succ zero) (rotate (succ _t_45) _v_44)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (succ _t_45)) (rotate zero _v_44))=(rotate (succ zero) (rotate (succ _t_45) _v_44)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (succ _t_45)) (rotate zero _v_44))=(rotate (succ zero) (rotate (succ _t_45) _v_44)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (succ _t_45)) (rotate zero _v_44))=(rotate (succ zero) (rotate (succ _t_45) _v_44)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (succ _t_45)) (rotate zero _v_44))=(rotate (succ zero) (rotate (succ _t_45) _v_44)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (succ _t_45)) (rotate zero _v_44))=(rotate (succ zero) (rotate (succ _t_45) _v_44)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (succ _t_45)) (rotate zero _v_44))=(rotate (succ zero) (rotate (succ _t_45) _v_44)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (succ _t_45)) (rotate zero _v_44))=(rotate (succ zero) (rotate (succ _t_45) _v_44)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (succ _t_45)) (rotate zero _v_44))=(rotate (succ zero) (rotate (succ _t_45) _v_44)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (succ _t_45)) (rotate zero _v_44))=(rotate (succ zero) (rotate (succ _t_45) _v_44)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ (succ _t_45)) _v_44))=(rotate (succ zero) (rotate (succ _t_45) _v_44)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ (succ _t_45)) _v_44))=(rotate (succ zero) (rotate (succ _t_45) _v_44)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ (succ _t_45)) _v_44))=(rotate (succ zero) (rotate (succ _t_45) _v_44)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ (succ _t_45)) _v_44))=(rotate (succ zero) (rotate (succ _t_45) _v_44)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ (succ _t_45)) _v_44))=(rotate (succ zero) (rotate (succ _t_45) _v_44)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ (succ _t_45)) _v_44))=(rotate (succ zero) (rotate (succ _t_45) _v_44)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ (succ _t_45)) _v_44))=(rotate (succ zero) (rotate (succ _t_45) _v_44)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (succ _t_45)) (rotate zero _v_44))=(rotate (succ zero) (rotate (succ _t_45) _v_44)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (succ _t_45)) (rotate zero _v_44))=(rotate (succ zero) (rotate (succ _t_45) _v_44)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (succ _t_45)) (rotate zero _v_44))=(rotate (succ zero) (rotate (succ _t_45) _v_44)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (succ _t_45)) (rotate zero _v_44))=(rotate (succ zero) (rotate (succ _t_45) _v_44)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (succ _t_45)) (rotate zero _v_44))=(rotate (succ zero) (rotate (succ _t_45) _v_44)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (succ _t_45)) (rotate zero _v_44))=(rotate (succ zero) (rotate (succ _t_45) _v_44)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (succ _t_45)) (rotate zero _v_44))=(rotate (succ zero) (rotate (succ _t_45) _v_44)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (succ _t_45)) (rotate zero _v_44))=(rotate (succ zero) (rotate (succ _t_45) _v_44)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (succ _t_45)) (rotate zero _v_44))=(rotate (succ zero) (rotate (succ _t_45) _v_44)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (succ _t_45)) (rotate zero _v_44))=(rotate (succ zero) (rotate (succ _t_45) _v_44)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (succ _t_45)) (rotate zero _v_44))=(rotate (succ zero) (rotate (succ _t_45) _v_44)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (succ _t_45)) (rotate zero _v_44))=(rotate (succ zero) (rotate (succ _t_45) _v_44)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (succ _t_45)) (rotate zero _v_44))=(rotate (succ zero) (rotate (succ _t_45) _v_44)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (succ _t_45)) (rotate zero _v_44))=(rotate (succ zero) (rotate (succ _t_45) _v_44)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ (succ _t_45)) _v_44))=(rotate (succ zero) (rotate (succ _t_45) _v_44)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ (succ _t_45)) _v_44))=(rotate (succ zero) (rotate (succ _t_45) _v_44)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ (succ _t_45)) _v_44))=(rotate (succ zero) (rotate (succ _t_45) _v_44)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ (succ _t_45)) _v_44))=(rotate (succ zero) (rotate (succ _t_45) _v_44)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ (succ _t_45)) _v_44))=(rotate (succ zero) (rotate (succ _t_45) _v_44)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ (succ _t_45)) _v_44))=(rotate (succ zero) (rotate (succ _t_45) _v_44)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ (succ _t_45)) _v_44))=(rotate (succ zero) (rotate (succ _t_45) _v_44)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ (succ _t_45)) _v_44))=(rotate (succ _t_45) (rotate (succ zero) _v_44)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ (succ _t_45)) _v_44))=(rotate (succ _t_45) (rotate (succ zero) _v_44)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ (succ _t_45)) _v_44))=(rotate (succ _t_45) (rotate (succ zero) _v_44)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ (succ _t_45)) _v_44))=(rotate (succ _t_45) (rotate (succ zero) _v_44)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ (succ _t_45)) _v_44))=(rotate (succ _t_45) (rotate (succ zero) _v_44)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ (succ _t_45)) _v_44))=(rotate (succ _t_45) (rotate (succ zero) _v_44)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ (succ _t_45)) _v_44))=(rotate (succ _t_45) (rotate (succ zero) _v_44)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (succ _t_45)) (rotate zero _v_44))=(rotate (succ zero) (rotate (succ _t_45) _v_44)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (succ _t_45)) (rotate zero _v_44))=(rotate (succ zero) (rotate (succ _t_45) _v_44)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (succ _t_45)) (rotate zero _v_44))=(rotate (succ zero) (rotate (succ _t_45) _v_44)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (succ _t_45)) (rotate zero _v_44))=(rotate (succ zero) (rotate (succ _t_45) _v_44)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (succ _t_45)) (rotate zero _v_44))=(rotate (succ zero) (rotate (succ _t_45) _v_44)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (succ _t_45)) (rotate zero _v_44))=(rotate (succ zero) (rotate (succ _t_45) _v_44)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (succ _t_45)) (rotate zero _v_44))=(rotate (succ zero) (rotate (succ _t_45) _v_44)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (succ _t_45)) (rotate zero _v_44))=(rotate (succ zero) (rotate (succ _t_45) _v_44)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (succ _t_45)) (rotate zero _v_44))=(rotate (succ zero) (rotate (succ _t_45) _v_44)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (succ _t_45)) (rotate zero _v_44))=(rotate (succ zero) (rotate (succ _t_45) _v_44)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (succ _t_45)) (rotate zero _v_44))=(rotate (succ zero) (rotate (succ _t_45) _v_44)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (succ _t_45)) (rotate zero _v_44))=(rotate (succ zero) (rotate (succ _t_45) _v_44)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (succ _t_45)) (rotate zero _v_44))=(rotate (succ zero) (rotate (succ _t_45) _v_44)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (succ _t_45)) (rotate zero _v_44))=(rotate (succ zero) (rotate (succ _t_45) _v_44)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (succ _t_45)) (rotate zero _v_44))=(rotate (succ _t_45) (rotate (succ zero) _v_44)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (succ _t_45)) (rotate zero _v_44))=(rotate (succ _t_45) (rotate (succ zero) _v_44)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (succ _t_45)) (rotate zero _v_44))=(rotate (succ _t_45) (rotate (succ zero) _v_44)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (succ _t_45)) (rotate zero _v_44))=(rotate (succ _t_45) (rotate (succ zero) _v_44)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (succ _t_45)) (rotate zero _v_44))=(rotate (succ _t_45) (rotate (succ zero) _v_44)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (succ _t_45)) (rotate zero _v_44))=(rotate (succ _t_45) (rotate (succ zero) _v_44)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (succ _t_45)) (rotate zero _v_44))=(rotate (succ _t_45) (rotate (succ zero) _v_44)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (succ _t_45)) (rotate zero _v_44))=(rotate (succ zero) (rotate (succ _t_45) _v_44)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (succ _t_45)) (rotate zero _v_44))=(rotate (succ zero) (rotate (succ _t_45) _v_44)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (succ _t_45)) (rotate zero _v_44))=(rotate (succ zero) (rotate (succ _t_45) _v_44)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (succ _t_45)) (rotate zero _v_44))=(rotate (succ zero) (rotate (succ _t_45) _v_44)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (succ _t_45)) (rotate zero _v_44))=(rotate (succ zero) (rotate (succ _t_45) _v_44)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (succ _t_45)) (rotate zero _v_44))=(rotate (succ zero) (rotate (succ _t_45) _v_44)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (succ _t_45)) (rotate zero _v_44))=(rotate (succ zero) (rotate (succ _t_45) _v_44)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (succ _t_45)) (rotate zero _v_44))=(rotate (succ zero) (rotate (succ _t_45) _v_44)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (succ _t_45)) (rotate zero _v_44))=(rotate (succ zero) (rotate (succ _t_45) _v_44)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (succ _t_45)) (rotate zero _v_44))=(rotate (succ zero) (rotate (succ _t_45) _v_44)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (succ _t_45)) (rotate zero _v_44))=(rotate (succ zero) (rotate (succ _t_45) _v_44)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (succ _t_45)) (rotate zero _v_44))=(rotate (succ zero) (rotate (succ _t_45) _v_44)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (succ _t_45)) (rotate zero _v_44))=(rotate (succ zero) (rotate (succ _t_45) _v_44)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (succ _t_45)) (rotate zero _v_44))=(rotate (succ zero) (rotate (succ _t_45) _v_44)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (succ _t_45)) (rotate zero _v_44))=(rotate (succ _t_45) (rotate (succ zero) _v_44)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (succ _t_45)) (rotate zero _v_44))=(rotate (succ _t_45) (rotate (succ zero) _v_44)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (succ _t_45)) (rotate zero _v_44))=(rotate (succ _t_45) (rotate (succ zero) _v_44)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (succ _t_45)) (rotate zero _v_44))=(rotate (succ _t_45) (rotate (succ zero) _v_44)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (succ _t_45)) (rotate zero _v_44))=(rotate (succ _t_45) (rotate (succ zero) _v_44)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (succ _t_45)) (rotate zero _v_44))=(rotate (succ _t_45) (rotate (succ zero) _v_44)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (succ _t_45)) (rotate zero _v_44))=(rotate (succ _t_45) (rotate (succ zero) _v_44)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ (succ _t_45)) _v_44))=(rotate (succ _t_45) (rotate (succ zero) _v_44)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ (succ _t_45)) _v_44))=(rotate (succ _t_45) (rotate (succ zero) _v_44)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ (succ _t_45)) _v_44))=(rotate (succ _t_45) (rotate (succ zero) _v_44)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ (succ _t_45)) _v_44))=(rotate (succ _t_45) (rotate (succ zero) _v_44)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ (succ _t_45)) _v_44))=(rotate (succ _t_45) (rotate (succ zero) _v_44)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ (succ _t_45)) _v_44))=(rotate (succ _t_45) (rotate (succ zero) _v_44)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ (succ _t_45)) _v_44))=(rotate (succ _t_45) (rotate (succ zero) _v_44)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (succ _t_45)) (rotate zero _v_44))=(rotate (succ zero) (rotate (succ _t_45) _v_44)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (succ _t_45)) (rotate zero _v_44))=(rotate (succ zero) (rotate (succ _t_45) _v_44)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (succ _t_45)) (rotate zero _v_44))=(rotate (succ zero) (rotate (succ _t_45) _v_44)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (succ _t_45)) (rotate zero _v_44))=(rotate (succ zero) (rotate (succ _t_45) _v_44)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (succ _t_45)) (rotate zero _v_44))=(rotate (succ zero) (rotate (succ _t_45) _v_44)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (succ _t_45)) (rotate zero _v_44))=(rotate (succ zero) (rotate (succ _t_45) _v_44)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (succ _t_45)) (rotate zero _v_44))=(rotate (succ zero) (rotate (succ _t_45) _v_44)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (succ _t_45)) (rotate zero _v_44))=(rotate (succ zero) (rotate (succ _t_45) _v_44)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (succ _t_45)) (rotate zero _v_44))=(rotate (succ zero) (rotate (succ _t_45) _v_44)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (succ _t_45)) (rotate zero _v_44))=(rotate (succ zero) (rotate (succ _t_45) _v_44)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (succ _t_45)) (rotate zero _v_44))=(rotate (succ zero) (rotate (succ _t_45) _v_44)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (succ _t_45)) (rotate zero _v_44))=(rotate (succ zero) (rotate (succ _t_45) _v_44)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (succ _t_45)) (rotate zero _v_44))=(rotate (succ zero) (rotate (succ _t_45) _v_44)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (succ _t_45)) (rotate zero _v_44))=(rotate (succ zero) (rotate (succ _t_45) _v_44)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ (succ _t_45)) _v_44))=(rotate (succ zero) (rotate (succ _t_45) _v_44)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ (succ _t_45)) _v_44))=(rotate (succ zero) (rotate (succ _t_45) _v_44)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ (succ _t_45)) _v_44))=(rotate (succ zero) (rotate (succ _t_45) _v_44)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ (succ _t_45)) _v_44))=(rotate (succ zero) (rotate (succ _t_45) _v_44)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ (succ _t_45)) _v_44))=(rotate (succ zero) (rotate (succ _t_45) _v_44)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ (succ _t_45)) _v_44))=(rotate (succ zero) (rotate (succ _t_45) _v_44)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ (succ _t_45)) _v_44))=(rotate (succ zero) (rotate (succ _t_45) _v_44)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (succ _t_45)) (rotate zero _v_44))=(rotate (succ zero) (rotate (succ _t_45) _v_44)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (succ _t_45)) (rotate zero _v_44))=(rotate (succ zero) (rotate (succ _t_45) _v_44)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (succ _t_45)) (rotate zero _v_44))=(rotate (succ zero) (rotate (succ _t_45) _v_44)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (succ _t_45)) (rotate zero _v_44))=(rotate (succ zero) (rotate (succ _t_45) _v_44)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (succ _t_45)) (rotate zero _v_44))=(rotate (succ zero) (rotate (succ _t_45) _v_44)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (succ _t_45)) (rotate zero _v_44))=(rotate (succ zero) (rotate (succ _t_45) _v_44)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (succ _t_45)) (rotate zero _v_44))=(rotate (succ zero) (rotate (succ _t_45) _v_44)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (succ _t_45)) (rotate zero _v_44))=(rotate (succ zero) (rotate (succ _t_45) _v_44)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (succ _t_45)) (rotate zero _v_44))=(rotate (succ zero) (rotate (succ _t_45) _v_44)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (succ _t_45)) (rotate zero _v_44))=(rotate (succ zero) (rotate (succ _t_45) _v_44)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (succ _t_45)) (rotate zero _v_44))=(rotate (succ zero) (rotate (succ _t_45) _v_44)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (succ _t_45)) (rotate zero _v_44))=(rotate (succ zero) (rotate (succ _t_45) _v_44)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (succ _t_45)) (rotate zero _v_44))=(rotate (succ zero) (rotate (succ _t_45) _v_44)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ (succ _t_45)) (rotate zero _v_44))=(rotate (succ zero) (rotate (succ _t_45) _v_44)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ (succ _t_45)) _v_44))=(rotate (succ zero) (rotate (succ _t_45) _v_44)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ (succ _t_45)) _v_44))=(rotate (succ zero) (rotate (succ _t_45) _v_44)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ (succ _t_45)) _v_44))=(rotate (succ zero) (rotate (succ _t_45) _v_44)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ (succ _t_45)) _v_44))=(rotate (succ zero) (rotate (succ _t_45) _v_44)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ (succ _t_45)) _v_44))=(rotate (succ zero) (rotate (succ _t_45) _v_44)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ (succ _t_45)) _v_44))=(rotate (succ zero) (rotate (succ _t_45) _v_44)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ (succ _t_45)) _v_44))=(rotate (succ zero) (rotate (succ _t_45) _v_44)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ (succ _t_45)) _v_44))=(rotate (succ _t_45) (rotate (succ zero) _v_44)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ (succ _t_45)) _v_44))=(rotate (succ _t_45) (rotate (succ zero) _v_44)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ (succ _t_45)) _v_44))=(rotate (succ _t_45) (rotate (succ zero) _v_44)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ (succ _t_45)) _v_44))=(rotate (succ _t_45) (rotate (succ zero) _v_44)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ (succ _t_45)) _v_44))=(rotate (succ _t_45) (rotate (succ zero) _v_44)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ (succ _t_45)) _v_44))=(rotate (succ _t_45) (rotate (succ zero) _v_44)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ (succ _t_45)) _v_44))=(rotate (succ _t_45) (rotate (succ zero) _v_44)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ (succ _t_45)) _v_44))=(rotate (succ zero) (rotate (succ _t_45) _v_44)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ (succ _t_45)) _v_44))=(rotate (succ zero) (rotate (succ _t_45) _v_44)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ (succ _t_45)) _v_44))=(rotate (succ zero) (rotate (succ _t_45) _v_44)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ (succ _t_45)) _v_44))=(rotate (succ zero) (rotate (succ _t_45) _v_44)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ (succ _t_45)) _v_44))=(rotate (succ zero) (rotate (succ _t_45) _v_44)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ (succ _t_45)) _v_44))=(rotate (succ zero) (rotate (succ _t_45) _v_44)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ (succ _t_45)) _v_44))=(rotate (succ zero) (rotate (succ _t_45) _v_44)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero nil)=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (succ _v_46) nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 nil))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate (succ zero) (rotate _v_46 nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_31))=_qv_31))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_32 _qv_33)=(append _qv_33 _qv_32)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_34 _qv_35) _qv_36)=(append _qv_34 (append _qv_35 _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_37 _qv_38)=(plus _qv_38 _qv_37)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_39 _qv_40) _qv_41)=(plus _qv_39 (plus _qv_40 _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_42) (succ _qv_43))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (succ _v_46) (rotate zero nil))=(rotate _v_46 (rotate (succ zero) nil)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_42 _qv_43))=(plus (succ _qv_43) (succ _qv_42))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate zero (rotate (s