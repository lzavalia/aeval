
The Knowledge Scheme currently contains the following lemmas:
	(forall ((Lst) (Lst)) ((append _qv_0 _qv_1)=(append _qv_1 _qv_0)))
	(forall ((Lst) (Lst) (Lst)) ((append (append _qv_2 _qv_3) _qv_4)=(append _qv_2 (append _qv_3 _qv_4))))
	(forall ((Lst)) ((rev (rev _qv_5))=_qv_5))
	(forall ((Lst) (Lst)) ((zip _qv_6 _qv_7)=(zip _qv_7 _qv_6)))
	(forall ((ZLst) (ZLst)) ((zappend _qv_8 _qv_9)=(zappend _qv_9 _qv_8)))
	(forall ((ZLst) (ZLst) (ZLst)) ((zappend (zappend _qv_10 _qv_11) _qv_12)=(zappend _qv_10 (zappend _qv_11 _qv_12))))
	(forall ((ZLst)) ((zrev (zrev _qv_13))=_qv_13))
	(forall ((Lst) (Lst)) ((rev (append _qv_14 _qv_15))=(append (rev _qv_14) (rev _qv_15))))
	(forall ((Lst) (Lst)) ((rev (append _qv_14 _qv_15))=(append (rev _qv_15) (rev _qv_14))))
	(forall ((ZLst) (ZLst)) ((zrev (zappend _qv_16 _qv_17))=(zappend (zrev _qv_16) (zrev _qv_17))))
	(forall ((ZLst) (ZLst)) ((zrev (zappend _qv_16 _qv_17))=(zappend (zrev _qv_17) (zrev _qv_16))))

Simplified goal: (forall ((Lst) (Lst)) (((len xs)=(len ys))->((zip (rev xs) (rev ys))=(zrev (zip xs ys)))))


Base case:       ((zip (rev nil) (rev _v_18))=(zrev (zip nil _v_18)))
{
  proven trivially
}
Inductive step:  ((zip (rev (cons _t_19 _t_20)) (rev _v_18))=(zrev (zip (cons _t_19 _t_20) _v_18)))
{
  {
    ====================
    | Assumptions [0]: ((len nil)=zero)
    | Assumptions [1]: ((rev nil)=nil)
    | Assumptions [2]: ((zrev znil)=znil)
    | Assumptions [3]: (forall ((Lst)) ((append nil _qv_1)=_qv_1))
    | Assumptions [4]: (forall ((Nat) (Lst) (Lst)) ((append (cons _qv_2 _qv_3) _qv_4)=(cons _qv_2 (append _qv_3 _qv_4))))
    | Assumptions [5]: (forall ((Nat) (Lst)) ((len (cons _qv_5 _qv_6))=(succ (len _qv_6))))
    | Assumptions [6]: (forall ((Nat) (Lst)) ((rev (cons _qv_7 _qv_8))=(append (rev _qv_8) (cons _qv_7 nil))))
    | Assumptions [7]: (forall ((Lst)) ((zip nil _qv_9)=znil))
    | Assumptions [8]: (forall ((Lst)) ((zip _qv_10 nil)=znil))
    | Assumptions [9]: (forall ((Nat) (Lst) (Nat) (Lst)) ((zip (cons _qv_11 _qv_12) (cons _qv_13 _qv_14))=(zcons (mkpair _qv_11 _qv_13) (zip _qv_12 _qv_14))))
    | Assumptions [10]: (forall ((ZLst)) ((zappend znil _qv_15)=_qv_15))
    | Assumptions [11]: (forall ((Pair) (ZLst) (ZLst)) ((zappend (zcons _qv_16 _qv_17) _qv_18)=(zcons _qv_16 (zappend _qv_17 _qv_18))))
    | Assumptions [12]: (forall ((Pair) (ZLst)) ((zrev (zcons _qv_19 _qv_20))=(zappend (zrev _qv_20) (zcons _qv_19 znil))))
    | Assumptions [13]: (forall ((Lst)) (((len _t_20)=(len ys))->((zip (rev _t_20) (rev ys))=(zrev (zip _t_20 ys)))))
    | Assumptions [14]: ((len (cons _t_19 _t_20))=(len _v_18))
    | Assumptions [15]: ((succ (len _t_20))=(len _v_18))
    ====================
  }
  rewritten [6]: ((zip (append (rev _t_20) (cons _t_19 nil)) (rev _v_18))=(zrev (zip (cons _t_19 _t_20) _v_18)))
CURRENT SUBGOAL ((zip (rev (cons _t_19 _t_20)) (rev _v_18))=(zrev (zip (cons _t_19 _t_20) _v_18)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_0 _qv_1)=(append _qv_1 _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((zip (rev (cons _t_19 _t_20)) (rev _v_18))=(zrev (zip (cons _t_19 _t_20) _v_18)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_2 _qv_3) _qv_4)=(append _qv_2 (append _qv_3 _qv_4))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((zip (rev (cons _t_19 _t_20)) (rev _v_18))=(zrev (zip (cons _t_19 _t_20) _v_18)))
NOW TESTING (forall ((Lst)) ((rev (rev _qv_5))=_qv_5))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((zip (rev (cons _t_19 _t_20)) (rev _v_18))=(zrev (zip (cons _t_19 _t_20) _v_18)))
NOW TESTING (forall ((Lst) (Lst)) ((zip _qv_6 _qv_7)=(zip _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((zip (rev (cons _t_19 _t_20)) (rev _v_18))=(zrev (zip (cons _t_19 _t_20) _v_18)))
NOW TESTING (forall ((ZLst) (ZLst)) ((zappend _qv_8 _qv_9)=(zappend _qv_9 _qv_8)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((zip (rev (cons _t_19 _t_20)) (rev _v_18))=(zrev (zip (cons _t_19 _t_20) _v_18)))
NOW TESTING (forall ((ZLst) (ZLst) (ZLst)) ((zappend (zappend _qv_10 _qv_11) _qv_12)=(zappend _qv_10 (zappend _qv_11 _qv_12))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((zip (rev (cons _t_19 _t_20)) (rev _v_18))=(zrev (zip (cons _t_19 _t_20) _v_18)))
NOW TESTING (forall ((ZLst)) ((zrev (zrev _qv_13))=_qv_13))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((zip (rev (cons _t_19 _t_20)) (rev _v_18))=(zrev (zip (cons _t_19 _t_20) _v_18)))
NOW TESTING (forall ((Lst) (Lst)) ((rev (append _qv_14 _qv_15))=(append (rev _qv_14) (rev _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((zip (rev (cons _t_19 _t_20)) (rev _v_18))=(zrev (zip (cons _t_19 _t_20) _v_18)))
NOW TESTING (forall ((Lst) (Lst)) ((rev (append _qv_14 _qv_15))=(append (rev _qv_15) (rev _qv_14))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((zip (rev (cons _t_19 _t_20)) (rev _v_18))=(zrev (zip (cons _t_19 _t_20) _v_18)))
NOW TESTING (forall ((ZLst) (ZLst)) ((zrev (zappend _qv_16 _qv_17))=(zappend (zrev _qv_16) (zrev _qv_17))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((zip (rev (cons _t_19 _t_20)) (rev _v_18))=(zrev (zip (cons _t_19 _t_20) _v_18)))
NOW TESTING (forall ((ZLst) (ZLst)) ((zrev (zappend _qv_16 _qv_17))=(zappend (zrev _qv_17) (zrev _qv_16))))
USE ASSUMPTION FAILED

  backtrack to: ((zip (rev (cons _t_19 _t_20)) (rev _v_18))=(zrev (zip (cons _t_19 _t_20) _v_18)))
  rewritten [6]: ((zip (append (rev _t_20) (cons _t_19 nil)) (rev _v_18))=(zrev (zip (cons _t_19 _t_20) _v_18)))
CURRENT SUBGOAL ((zip (rev (cons _t_19 _t_20)) (rev _v_18))=(zrev (zip (cons _t_19 _t_20) _v_18)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_0 _qv_1)=(append _qv_1 _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((zip (rev (cons _t_19 _t_20)) (rev _v_18))=(zrev (zip (cons _t_19 _t_20) _v_18)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_2 _qv_3) _qv_4)=(append _qv_2 (append _qv_3 _qv_4))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((zip (rev (cons _t_19 _t_20)) (rev _v_18))=(zrev (zip (cons _t_19 _t_20) _v_18)))
NOW TESTING (forall ((Lst)) ((rev (rev _qv_5))=_qv_5))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((zip (rev (cons _t_19 _t_20)) (rev _v_18))=(zrev (zip (cons _t_19 _t_20) _v_18)))
NOW TESTING (forall ((Lst) (Lst)) ((zip _qv_6 _qv_7)=(zip _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((zip (rev (cons _t_19 _t_20)) (rev _v_18))=(zrev (zip (cons _t_19 _t_20) _v_18)))
NOW TESTING (forall ((ZLst) (ZLst)) ((zappend _qv_8 _qv_9)=(zappend _qv_9 _qv_8)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((zip (rev (cons _t_19 _t_20)) (rev _v_18))=(zrev (zip (cons _t_19 _t_20) _v_18)))
NOW TESTING (forall ((ZLst) (ZLst) (ZLst)) ((zappend (zappend _qv_10 _qv_11) _qv_12)=(zappend _qv_10 (zappend _qv_11 _qv_12))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((zip (rev (cons _t_19 _t_20)) (rev _v_18))=(zrev (zip (cons _t_19 _t_20) _v_18)))
NOW TESTING (forall ((ZLst)) ((zrev (zrev _qv_13))=_qv_13))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((zip (rev (cons _t_19 _t_20)) (rev _v_18))=(zrev (zip (cons _t_19 _t_20) _v_18)))
NOW TESTING (forall ((Lst) (Lst)) ((rev (append _qv_14 _qv_15))=(append (rev _qv_14) (rev _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((zip (rev (cons _t_19 _t_20)) (rev _v_18))=(zrev (zip (cons _t_19 _t_20) _v_18)))
NOW TESTING (forall ((Lst) (Lst)) ((rev (append _qv_14 _qv_15))=(append (rev _qv_15) (rev _qv_14))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((zip (rev (cons _t_19 _t_20)) (rev _v_18))=(zrev (zip (cons _t_19 _t_20) _v_18)))
NOW TESTING (forall ((ZLst) (ZLst)) ((zrev (zappend _qv_16 _qv_17))=(zappend (zrev _qv_16) (zrev _qv_17))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((zip (rev (cons _t_19 _t_20)) (rev _v_18))=(zrev (zip (cons _t_19 _t_20) _v_18)))
NOW TESTING (forall ((ZLst) (ZLst)) ((zrev (zappend _qv_16 _qv_17))=(zappend (zrev _qv_17) (zrev _qv_16))))
USE ASSUMPTION FAILED

  backtrack to: ((zip (rev (cons _t_19 _t_20)) (rev _v_18))=(zrev (zip (cons _t_19 _t_20) _v_18)))

Base case:       ((zip (rev _v_21) (rev nil))=(zrev (zip _v_21 nil)))
{
  proven trivially
}
Inductive step:  ((zip (rev _v_21) (rev (cons _t_22 _t_23)))=(zrev (zip _v_21 (cons _t_22 _t_23))))
{
  {
    ====================
    | Assumptions [0]: ((len nil)=zero)
    | Assumptions [1]: ((rev nil)=nil)
    | Assumptions [2]: ((zrev znil)=znil)
    | Assumptions [3]: (forall ((Lst)) ((append nil _qv_1)=_qv_1))
    | Assumptions [4]: (forall ((Nat) (Lst) (Lst)) ((append (cons _qv_2 _qv_3) _qv_4)=(cons _qv_2 (append _qv_3 _qv_4))))
    | Assumptions [5]: (forall ((Nat) (Lst)) ((len (cons _qv_5 _qv_6))=(succ (len _qv_6))))
    | Assumptions [6]: (forall ((Nat) (Lst)) ((rev (cons _qv_7 _qv_8))=(append (rev _qv_8) (cons _qv_7 nil))))
    | Assumptions [7]: (forall ((Lst)) ((zip nil _qv_9)=znil))
    | Assumptions [8]: (forall ((Lst)) ((zip _qv_10 nil)=znil))
    | Assumptions [9]: (forall ((Nat) (Lst) (Nat) (Lst)) ((zip (cons _qv_11 _qv_12) (cons _qv_13 _qv_14))=(zcons (mkpair _qv_11 _qv_13) (zip _qv_12 _qv_14))))
    | Assumptions [10]: (forall ((ZLst)) ((zappend znil _qv_15)=_qv_15))
    | Assumptions [11]: (forall ((Pair) (ZLst) (ZLst)) ((zappend (zcons _qv_16 _qv_17) _qv_18)=(zcons _qv_16 (zappend _qv_17 _qv_18))))
    | Assumptions [12]: (forall ((Pair) (ZLst)) ((zrev (zcons _qv_19 _qv_20))=(zappend (zrev _qv_20) (zcons _qv_19 znil))))
    | Assumptions [13]: (forall ((Lst)) (((len _t_20)=(len ys))->((zip (rev _t_20) (rev ys))=(zrev (zip _t_20 ys)))))
    | Assumptions [14]: ((len (cons _t_19 _t_20))=(len _v_18))
    | Assumptions [15]: ((succ (len _t_20))=(len _v_18))
    | Assumptions [16]: (forall ((Lst)) (((len xs)=(len _t_23))->((zip (rev xs) (rev _t_23))=(zrev (zip xs _t_23)))))
    | Assumptions [17]: ((len _v_21)=(len (cons _t_22 _t_23)))
    | Assumptions [18]: ((len _v_21)=(succ (len _t_23)))
    | Assumptions [19]: ((succ (len _t_23))=(len (cons _t_22 _t_23)))
    | Assumptions [20]: ((len (cons _t_22 _t_23))=(succ (len _t_23)))
    ====================
  }
  rewritten [6]: ((zip (rev _v_21) (append (rev _t_23) (cons _t_22 nil)))=(zrev (zip _v_21 (cons _t_22 _t_23))))
CURRENT SUBGOAL ((zip (rev _v_21) (rev (cons _t_22 _t_23)))=(zrev (zip _v_21 (cons _t_22 _t_23))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_0 _qv_1)=(append _qv_1 _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((zip (rev _v_21) (rev (cons _t_22 _t_23)))=(zrev (zip _v_21 (cons _t_22 _t_23))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_2 _qv_3) _qv_4)=(append _qv_2 (append _qv_3 _qv_4))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((zip (rev _v_21) (rev (cons _t_22 _t_23)))=(zrev (zip _v_21 (cons _t_22 _t_23))))
NOW TESTING (forall ((Lst)) ((rev (rev _qv_5))=_qv_5))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((zip (rev _v_21) (rev (cons _t_22 _t_23)))=(zrev (zip _v_21 (cons _t_22 _t_23))))
NOW TESTING (forall ((Lst) (Lst)) ((zip _qv_6 _qv_7)=(zip _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((zip (rev _v_21) (rev (cons _t_22 _t_23)))=(zrev (zip _v_21 (cons _t_22 _t_23))))
NOW TESTING (forall ((ZLst) (ZLst)) ((zappend _qv_8 _qv_9)=(zappend _qv_9 _qv_8)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((zip (rev _v_21) (rev (cons _t_22 _t_23)))=(zrev (zip _v_21 (cons _t_22 _t_23))))
NOW TESTING (forall ((ZLst) (ZLst) (ZLst)) ((zappend (zappend _qv_10 _qv_11) _qv_12)=(zappend _qv_10 (zappend _qv_11 _qv_12))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((zip (rev _v_21) (rev (cons _t_22 _t_23)))=(zrev (zip _v_21 (cons _t_22 _t_23))))
NOW TESTING (forall ((ZLst)) ((zrev (zrev _qv_13))=_qv_13))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((zip (rev _v_21) (rev (cons _t_22 _t_23)))=(zrev (zip _v_21 (cons _t_22 _t_23))))
NOW TESTING (forall ((Lst) (Lst)) ((rev (append _qv_14 _qv_15))=(append (rev _qv_14) (rev _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((zip (rev _v_21) (rev (cons _t_22 _t_23)))=(zrev (zip _v_21 (cons _t_22 _t_23))))
NOW TESTING (forall ((Lst) (Lst)) ((rev (append _qv_14 _qv_15))=(append (rev _qv_15) (rev _qv_14))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((zip (rev _v_21) (rev (cons _t_22 _t_23)))=(zrev (zip _v_21 (cons _t_22 _t_23))))
NOW TESTING (forall ((ZLst) (ZLst)) ((zrev (zappend _qv_16 _qv_17))=(zappend (zrev _qv_16) (zrev _qv_17))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((zip (rev _v_21) (rev (cons _t_22 _t_23)))=(zrev (zip _v_21 (cons _t_22 _t_23))))
NOW TESTING (forall ((ZLst) (ZLst)) ((zrev (zappend _qv_16 _qv_17))=(zappend (zrev _qv_17) (zrev _qv_16))))
USE ASSUMPTION FAILED

  backtrack to: ((zip (rev _v_21) (rev (cons _t_22 _t_23)))=(zrev (zip _v_21 (cons _t_22 _t_23))))
  rewritten [6]: ((zip (rev _v_21) (append (rev _t_23) (cons _t_22 nil)))=(zrev (zip _v_21 (cons _t_22 _t_23))))
CURRENT SUBGOAL ((zip (rev _v_21) (rev (cons _t_22 _t_23)))=(zrev (zip _v_21 (cons _t_22 _t_23))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_0 _qv_1)=(append _qv_1 _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((zip (rev _v_21) (rev (cons _t_22 _t_23)))=(zrev (zip _v_21 (cons _t_22 _t_23))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_2 _qv_3) _qv_4)=(append _qv_2 (append _qv_3 _qv_4))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((zip (rev _v_21) (rev (cons _t_22 _t_23)))=(zrev (zip _v_21 (cons _t_22 _t_23))))
NOW TESTING (forall ((Lst)) ((rev (rev _qv_5))=_qv_5))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((zip (rev _v_21) (rev (cons _t_22 _t_23)))=(zrev (zip _v_21 (cons _t_22 _t_23))))
NOW TESTING (forall ((Lst) (Lst)) ((zip _qv_6 _qv_7)=(zip _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((zip (rev _v_21) (rev (cons _t_22 _t_23)))=(zrev (zip _v_21 (cons _t_22 _t_23))))
NOW TESTING (forall ((ZLst) (ZLst)) ((zappend _qv_8 _qv_9)=(zappend _qv_9 _qv_8)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((zip (rev _v_21) (rev (cons _t_22 _t_23)))=(zrev (zip _v_21 (cons _t_22 _t_23))))
NOW TESTING (forall ((ZLst) (ZLst) (ZLst)) ((zappend (zappend _qv_10 _qv_11) _qv_12)=(zappend _qv_10 (zappend _qv_11 _qv_12))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((zip (rev _v_21) (rev (cons _t_22 _t_23)))=(zrev (zip _v_21 (cons _t_22 _t_23))))
NOW TESTING (forall ((ZLst)) ((zrev (zrev _qv_13))=_qv_13))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((zip (rev _v_21) (rev (cons _t_22 _t_23)))=(zrev (zip _v_21 (cons _t_22 _t_23))))
NOW TESTING (forall ((Lst) (Lst)) ((rev (append _qv_14 _qv_15))=(append (rev _qv_14) (rev _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((zip (rev _v_21) (rev (cons _t_22 _t_23)))=(zrev (zip _v_21 (cons _t_22 _t_23))))
NOW TESTING (forall ((Lst) (Lst)) ((rev (append _qv_14 _qv_15))=(append (rev _qv_15) (rev _qv_14))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((zip (rev _v_21) (rev (cons _t_22 _t_23)))=(zrev (zip _v_21 (cons _t_22 _t_23))))
NOW TESTING (forall ((ZLst) (ZLst)) ((zrev (zappend _qv_16 _qv_17))=(zappend (zrev _qv_16) (zrev _qv_17))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((zip (rev _v_21) (rev (cons _t_22 _t_23)))=(zrev (zip _v_21 (cons _t_22 _t_23))))
NOW TESTING (forall ((ZLst) (ZLst)) ((zrev (zappend _qv_16 _qv_17))=(zappend (zrev _qv_17) (zrev _qv_16))))
USE ASSUMPTION FAILED

  backtrack to: ((zip (rev _v_21) (rev (cons _t_22 _t_23)))=(zrev (zip _v_21 (cons _t_22 _t_23))))
Unknown
sat
