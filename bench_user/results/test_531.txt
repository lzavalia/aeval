
The Knowledge Scheme currently contains the following lemmas:

Simplified goal: (forall ((Nat) (Nat) (Lst)) ((drop x (drop y z))=(drop y (drop x z))))


Base case:       ((drop zero (drop _v_0 _v_1))=(drop _v_0 (drop zero _v_1)))
{
  proven trivially
}
Inductive step:  ((drop (succ _t_2) (drop _v_0 _v_1))=(drop _v_0 (drop (succ _t_2) _v_1)))
{
  {
    ====================
    | Assumptions [0]: (forall ((Nat)) ((drop _qv_1 nil)=nil))
    | Assumptions [1]: (forall ((Lst)) ((drop zero _qv_2)=_qv_2))
    | Assumptions [2]: (forall ((Nat) (Nat) (Lst)) ((drop (succ _qv_3) (cons _qv_4 _qv_5))=(drop _qv_3 _qv_5)))
    | Assumptions [3]: (forall ((Nat) (Lst)) ((drop _t_2 (drop y z))=(drop y (drop _t_2 z))))
    | Assumptions [4]: (forall ((Nat) (Lst)) ((drop y (drop _t_2 z))=(drop _t_2 (drop y z))))
    ====================
  }

Base case:       ((drop _v_3 (drop zero _v_4))=(drop zero (drop _v_3 _v_4)))
{
  proven trivially
}
Inductive step:  ((drop _v_3 (drop (succ _t_5) _v_4))=(drop (succ _t_5) (drop _v_3 _v_4)))
{
  {
    ====================
    | Assumptions [0]: (forall ((Nat)) ((drop _qv_1 nil)=nil))
    | Assumptions [1]: (forall ((Lst)) ((drop zero _qv_2)=_qv_2))
    | Assumptions [2]: (forall ((Nat) (Nat) (Lst)) ((drop (succ _qv_3) (cons _qv_4 _qv_5))=(drop _qv_3 _qv_5)))
    | Assumptions [3]: (forall ((Nat) (Lst)) ((drop _t_2 (drop y z))=(drop y (drop _t_2 z))))
    | Assumptions [4]: (forall ((Nat) (Lst)) ((drop y (drop _t_2 z))=(drop _t_2 (drop y z))))
    | Assumptions [5]: (forall ((Nat) (Lst)) ((drop x (drop _t_5 z))=(drop _t_5 (drop x z))))
    | Assumptions [6]: (forall ((Nat) (Lst)) ((drop _t_5 (drop x z))=(drop x (drop _t_5 z))))
    ====================
  }

Base case:       ((drop _v_6 (drop _v_7 nil))=(drop _v_7 (drop _v_6 nil)))
{
  proven trivially
}
Inductive step:  ((drop _v_6 (drop _v_7 (cons _t_8 _t_9)))=(drop _v_7 (drop _v_6 (cons _t_8 _t_9))))
{
  {
    ====================
    | Assumptions [0]: (forall ((Nat)) ((drop _qv_1 nil)=nil))
    | Assumptions [1]: (forall ((Lst)) ((drop zero _qv_2)=_qv_2))
    | Assumptions [2]: (forall ((Nat) (Nat) (Lst)) ((drop (succ _qv_3) (cons _qv_4 _qv_5))=(drop _qv_3 _qv_5)))
    | Assumptions [3]: (forall ((Nat) (Lst)) ((drop _t_2 (drop y z))=(drop y (drop _t_2 z))))
    | Assumptions [4]: (forall ((Nat) (Lst)) ((drop y (drop _t_2 z))=(drop _t_2 (drop y z))))
    | Assumptions [5]: (forall ((Nat) (Lst)) ((drop x (drop _t_5 z))=(drop _t_5 (drop x z))))
    | Assumptions [6]: (forall ((Nat) (Lst)) ((drop _t_5 (drop x z))=(drop x (drop _t_5 z))))
    | Assumptions [7]: (forall ((Nat) (Nat)) ((drop x (drop y _t_9))=(drop y (drop x _t_9))))
    | Assumptions [8]: (forall ((Nat) (Nat)) ((drop y (drop x _t_9))=(drop x (drop y _t_9))))
    ====================
  }
Unknown
sat
