
The Knowledge Scheme currently contains the following lemmas:
	(forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
	(forall ((Nat)) (0<=(nat-to-int _qv_1)))
	(forall ((Nat) (Nat)) ((plus _qv_2 _qv_3)=(plus _qv_3 _qv_2)))
	(forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_4 _qv_5) _qv_6)=(plus _qv_4 (plus _qv_5 _qv_6))))
	(forall ((Nat) (Nat)) ((mult _qv_7 _qv_8)=(mult _qv_8 _qv_7)))
	(forall ((Nat) (Nat) (Nat)) ((mult (mult _qv_9 _qv_10) _qv_11)=(mult _qv_9 (mult _qv_10 _qv_11))))
	(forall ((Nat) (Nat)) ((exp _qv_12 _qv_13)=(exp _qv_13 _qv_12)))
	(forall ((Nat) (Nat) (Nat)) ((exp (exp _qv_14 _qv_15) _qv_16)=(exp _qv_14 (exp _qv_15 _qv_16))))
	(forall ((Nat)) ((nat-to-int (succ _qv_17))=(nat-to-int _qv_17)))
	(forall ((Nat) (Nat) (Nat)) ((mult _qv_18 (plus _qv_19 _qv_20))=(plus (mult _qv_18 _qv_19) (mult _qv_18 _qv_20))))
	(forall ((Nat) (Nat) (Nat)) ((exp _qv_21 (plus _qv_22 _qv_23))=(plus (exp _qv_21 _qv_22) (exp _qv_21 _qv_23))))
	(forall ((Nat) (Nat) (Nat)) ((plus _qv_24 (mult _qv_25 _qv_26))=(mult (plus _qv_24 _qv_25) (plus _qv_24 _qv_26))))
	(forall ((Nat) (Nat) (Nat)) ((exp _qv_27 (mult _qv_28 _qv_29))=(mult (exp _qv_27 _qv_28) (exp _qv_27 _qv_29))))
	(forall ((Nat) (Nat) (Nat)) ((plus _qv_30 (exp _qv_31 _qv_32))=(exp (plus _qv_30 _qv_31) (plus _qv_30 _qv_32))))
	(forall ((Nat) (Nat) (Nat)) ((mult _qv_33 (exp _qv_34 _qv_35))=(exp (mult _qv_33 _qv_34) (mult _qv_33 _qv_35))))
	(forall ((Nat) (Nat)) ((succ (plus _qv_36 _qv_37))=(plus (succ _qv_36) (succ _qv_37))))
	(forall ((Nat) (Nat)) ((succ (plus _qv_36 _qv_37))=(plus (succ _qv_37) (succ _qv_36))))
	(forall ((Nat) (Nat)) ((succ (mult _qv_38 _qv_39))=(mult (succ _qv_38) (succ _qv_39))))
	(forall ((Nat) (Nat)) ((succ (mult _qv_38 _qv_39))=(mult (succ _qv_39) (succ _qv_38))))
	(forall ((Nat) (Nat)) ((succ (exp _qv_40 _qv_41))=(exp (succ _qv_40) (succ _qv_41))))
	(forall ((Nat) (Nat)) ((succ (exp _qv_40 _qv_41))=(exp (succ _qv_41) (succ _qv_40))))

Simplified goal: (forall ((Nat) (Nat)) ((exp x y)=(qexp x y (succ zero))))


Base case:       ((exp zero _v_42)=(qexp zero _v_42 (succ zero)))
{
  {
    ====================
    | Assumptions [0]: ((nat-to-int zero)=0)
    | Assumptions [1]: (forall ((Nat)) ((nat-to-int _qv_1)>=0))
    | Assumptions [2]: (forall ((Nat) (Nat)) (((nat-to-int _qv_2)=(nat-to-int _qv_3))->(_qv_2=_qv_3)))
    | Assumptions [3]: (forall ((Nat)) ((nat-to-int (succ _qv_4))=(1+(nat-to-int _qv_4))))
    | Assumptions [4]: (forall ((Nat)) ((plus zero _qv_5)=_qv_5))
    | Assumptions [5]: (forall ((Nat) (Nat)) ((plus (succ _qv_6) _qv_7)=(succ (plus _qv_6 _qv_7))))
    | Assumptions [6]: (forall ((Nat) (Nat)) ((nat-to-int (plus _qv_8 _qv_9))=((nat-to-int _qv_8)+(nat-to-int _qv_9))))
    | Assumptions [7]: (forall ((Nat)) ((mult zero _qv_10)=zero))
    | Assumptions [8]: (forall ((Nat) (Nat)) ((mult (succ _qv_11) _qv_12)=(plus (mult _qv_11 _qv_12) _qv_12)))
    | Assumptions [9]: (forall ((Nat)) ((exp _qv_13 zero)=(succ zero)))
    | Assumptions [10]: (forall ((Nat) (Nat)) ((exp _qv_14 (succ _qv_15))=(mult (exp _qv_14 _qv_15) _qv_14)))
    | Assumptions [11]: (forall ((Nat) (Nat)) ((qexp _qv_16 zero _qv_17)=_qv_17))
    | Assumptions [12]: (forall ((Nat) (Nat) (Nat)) ((qexp _qv_18 (succ _qv_19) _qv_20)=(qexp _qv_18 _qv_19 (mult _qv_20 _qv_18))))
    ====================
  }
  rewritten [2]: ((nat-to-int (exp zero _v_42))=(nat-to-int (qexp zero _v_42 (succ zero))))
CURRENT SUBGOAL ((exp zero _v_42)=(qexp zero _v_42 (succ zero)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((exp zero _v_42)=(qexp zero _v_42 (succ zero)))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((exp zero _v_42)=(qexp zero _v_42 (succ zero)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_2 _qv_3)=(plus _qv_3 _qv_2)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((exp zero _v_42)=(qexp zero _v_42 (succ zero)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_4 _qv_5) _qv_6)=(plus _qv_4 (plus _qv_5 _qv_6))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((exp zero _v_42)=(qexp zero _v_42 (succ zero)))
NOW TESTING (forall ((Nat) (Nat)) ((mult _qv_7 _qv_8)=(mult _qv_8 _qv_7)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((exp zero _v_42)=(qexp zero _v_42 (succ zero)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((mult (mult _qv_9 _qv_10) _qv_11)=(mult _qv_9 (mult _qv_10 _qv_11))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((exp zero _v_42)=(qexp zero _v_42 (succ zero)))
NOW TESTING (forall ((Nat) (Nat)) ((exp _qv_12 _qv_13)=(exp _qv_13 _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((exp zero _v_42)=(qexp zero _v_42 (succ zero)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((exp (exp _qv_14 _qv_15) _qv_16)=(exp _qv_14 (exp _qv_15 _qv_16))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((exp zero _v_42)=(qexp zero _v_42 (succ zero)))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_17))=(nat-to-int _qv_17)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((exp zero _v_42)=(qexp zero _v_42 (succ zero)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((mult _qv_18 (plus _qv_19 _qv_20))=(plus (mult _qv_18 _qv_19) (mult _qv_18 _qv_20))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((exp zero _v_42)=(qexp zero _v_42 (succ zero)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((exp _qv_21 (plus _qv_22 _qv_23))=(plus (exp _qv_21 _qv_22) (exp _qv_21 _qv_23))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((exp zero _v_42)=(qexp zero _v_42 (succ zero)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus _qv_24 (mult _qv_25 _qv_26))=(mult (plus _qv_24 _qv_25) (plus _qv_24 _qv_26))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((exp zero _v_42)=(qexp zero _v_42 (succ zero)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((exp _qv_27 (mult _qv_28 _qv_29))=(mult (exp _qv_27 _qv_28) (exp _qv_27 _qv_29))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((exp zero _v_42)=(qexp zero _v_42 (succ zero)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus _qv_30 (exp _qv_31 _qv_32))=(exp (plus _qv_30 _qv_31) (plus _qv_30 _qv_32))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((exp zero _v_42)=(qexp zero _v_42 (succ zero)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((mult _qv_33 (exp _qv_34 _qv_35))=(exp (mult _qv_33 _qv_34) (mult _qv_33 _qv_35))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((exp zero _v_42)=(qexp zero _v_42 (succ zero)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_36 _qv_37))=(plus (succ _qv_36) (succ _qv_37))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((exp zero _v_42)=(qexp zero _v_42 (succ zero)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_36 _qv_37))=(plus (succ _qv_37) (succ _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((exp zero _v_42)=(qexp zero _v_42 (succ zero)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (mult _qv_38 _qv_39))=(mult (succ _qv_38) (succ _qv_39))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((exp zero _v_42)=(qexp zero _v_42 (succ zero)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (mult _qv_38 _qv_39))=(mult (succ _qv_39) (succ _qv_38))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((exp zero _v_42)=(qexp zero _v_42 (succ zero)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (exp _qv_40 _qv_41))=(exp (succ _qv_40) (succ _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((exp zero _v_42)=(qexp zero _v_42 (succ zero)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (exp _qv_40 _qv_41))=(exp (succ _qv_41) (succ _qv_40))))
USE ASSUMPTION FAILED

  backtrack to: ((exp zero _v_42)=(qexp zero _v_42 (succ zero)))
  rewritten [2]: ((nat-to-int (exp zero _v_42))=(nat-to-int (qexp zero _v_42 (succ zero))))
CURRENT SUBGOAL ((exp zero _v_42)=(qexp zero _v_42 (succ zero)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((exp zero _v_42)=(qexp zero _v_42 (succ zero)))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((exp zero _v_42)=(qexp zero _v_42 (succ zero)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_2 _qv_3)=(plus _qv_3 _qv_2)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((exp zero _v_42)=(qexp zero _v_42 (succ zero)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_4 _qv_5) _qv_6)=(plus _qv_4 (plus _qv_5 _qv_6))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((exp zero _v_42)=(qexp zero _v_42 (succ zero)))
NOW TESTING (forall ((Nat) (Nat)) ((mult _qv_7 _qv_8)=(mult _qv_8 _qv_7)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((exp zero _v_42)=(qexp zero _v_42 (succ zero)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((mult (mult _qv_9 _qv_10) _qv_11)=(mult _qv_9 (mult _qv_10 _qv_11))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((exp zero _v_42)=(qexp zero _v_42 (succ zero)))
NOW TESTING (forall ((Nat) (Nat)) ((exp _qv_12 _qv_13)=(exp _qv_13 _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((exp zero _v_42)=(qexp zero _v_42 (succ zero)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((exp (exp _qv_14 _qv_15) _qv_16)=(exp _qv_14 (exp _qv_15 _qv_16))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((exp zero _v_42)=(qexp zero _v_42 (succ zero)))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_17))=(nat-to-int _qv_17)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((exp zero _v_42)=(qexp zero _v_42 (succ zero)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((mult _qv_18 (plus _qv_19 _qv_20))=(plus (mult _qv_18 _qv_19) (mult _qv_18 _qv_20))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((exp zero _v_42)=(qexp zero _v_42 (succ zero)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((exp _qv_21 (plus _qv_22 _qv_23))=(plus (exp _qv_21 _qv_22) (exp _qv_21 _qv_23))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((exp zero _v_42)=(qexp zero _v_42 (succ zero)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus _qv_24 (mult _qv_25 _qv_26))=(mult (plus _qv_24 _qv_25) (plus _qv_24 _qv_26))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((exp zero _v_42)=(qexp zero _v_42 (succ zero)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((exp _qv_27 (mult _qv_28 _qv_29))=(mult (exp _qv_27 _qv_28) (exp _qv_27 _qv_29))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((exp zero _v_42)=(qexp zero _v_42 (succ zero)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus _qv_30 (exp _qv_31 _qv_32))=(exp (plus _qv_30 _qv_31) (plus _qv_30 _qv_32))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((exp zero _v_42)=(qexp zero _v_42 (succ zero)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((mult _qv_33 (exp _qv_34 _qv_35))=(exp (mult _qv_33 _qv_34) (mult _qv_33 _qv_35))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((exp zero _v_42)=(qexp zero _v_42 (succ zero)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_36 _qv_37))=(plus (succ _qv_36) (succ _qv_37))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((exp zero _v_42)=(qexp zero _v_42 (succ zero)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_36 _qv_37))=(plus (succ _qv_37) (succ _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((exp zero _v_42)=(qexp zero _v_42 (succ zero)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (mult _qv_38 _qv_39))=(mult (succ _qv_38) (succ _qv_39))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((exp zero _v_42)=(qexp zero _v_42 (succ zero)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (mult _qv_38 _qv_39))=(mult (succ _qv_39) (succ _qv_38))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((exp zero _v_42)=(qexp zero _v_42 (succ zero)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (exp _qv_40 _qv_41))=(exp (succ _qv_40) (succ _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((exp zero _v_42)=(qexp zero _v_42 (succ zero)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (exp _qv_40 _qv_41))=(exp (succ _qv_41) (succ _qv_40))))
USE ASSUMPTION FAILED

  backtrack to: ((exp zero _v_42)=(qexp zero _v_42 (succ zero)))
}

Base case:       ((exp _v_43 zero)=(qexp _v_43 zero (succ zero)))
{
  proven trivially
}
Inductive step:  ((exp _v_43 (succ _t_44))=(qexp _v_43 (succ _t_44) (succ zero)))
{
  {
    ====================
    | Assumptions [0]: ((nat-to-int zero)=0)
    | Assumptions [1]: (forall ((Nat)) ((nat-to-int _qv_1)>=0))
    | Assumptions [2]: (forall ((Nat) (Nat)) (((nat-to-int _qv_2)=(nat-to-int _qv_3))->(_qv_2=_qv_3)))
    | Assumptions [3]: (forall ((Nat)) ((nat-to-int (succ _qv_4))=(1+(nat-to-int _qv_4))))
    | Assumptions [4]: (forall ((Nat)) ((plus zero _qv_5)=_qv_5))
    | Assumptions [5]: (forall ((Nat) (Nat)) ((plus (succ _qv_6) _qv_7)=(succ (plus _qv_6 _qv_7))))
    | Assumptions [6]: (forall ((Nat) (Nat)) ((nat-to-int (plus _qv_8 _qv_9))=((nat-to-int _qv_8)+(nat-to-int _qv_9))))
    | Assumptions [7]: (forall ((Nat)) ((mult zero _qv_10)=zero))
    | Assumptions [8]: (forall ((Nat) (Nat)) ((mult (succ _qv_11) _qv_12)=(plus (mult _qv_11 _qv_12) _qv_12)))
    | Assumptions [9]: (forall ((Nat)) ((exp _qv_13 zero)=(succ zero)))
    | Assumptions [10]: (forall ((Nat) (Nat)) ((exp _qv_14 (succ _qv_15))=(mult (exp _qv_14 _qv_15) _qv_14)))
    | Assumptions [11]: (forall ((Nat) (Nat)) ((qexp _qv_16 zero _qv_17)=_qv_17))
    | Assumptions [12]: (forall ((Nat) (Nat) (Nat)) ((qexp _qv_18 (succ _qv_19) _qv_20)=(qexp _qv_18 _qv_19 (mult _qv_20 _qv_18))))
    | Assumptions [13]: (forall ((Nat)) ((exp x _t_44)=(qexp x _t_44 (succ zero))))
    | Assumptions [14]: (forall ((Nat)) ((qexp x _t_44 (succ zero))=(exp x _t_44)))
    ====================
  }
  rewritten [2]: ((nat-to-int (exp _v_43 (succ _t_44)))=(nat-to-int (qexp _v_43 (succ _t_44) (succ zero))))
  rewritten [10]: ((nat-to-int (mult (exp _v_43 _t_44) _v_43))=(nat-to-int (qexp _v_43 (succ _t_44) (succ zero))))
  rewritten [12]: ((nat-to-int (mult (exp _v_43 _t_44) _v_43))=(nat-to-int (qexp _v_43 _t_44 (mult (succ zero) _v_43))))
  rewritten [8]: ((nat-to-int (mult (exp _v_43 _t_44) _v_43))=(nat-to-int (qexp _v_43 _t_44 (plus (mult zero _v_43) _v_43))))
  sequence of rewrites only grows
CURRENT SUBGOAL ((nat-to-int (mult (exp _v_43 _t_44) _v_43))=(nat-to-int (qexp _v_43 _t_44 (mult (succ zero) _v_43))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (mult (exp _v_43 _t_44) _v_43))=(nat-to-int (qexp _v_43 _t_44 (mult (succ zero) _v_43))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (mult (exp _v_43 _t_44) _v_43))=(nat-to-int (qexp _v_43 _t_44 (mult (succ zero) _v_43))))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_2 _qv_3)=(plus _qv_3 _qv_2)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (mult (exp _v_43 _t_44) _v_43))=(nat-to-int (qexp _v_43 _t_44 (mult (succ zero) _v_43))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_4 _qv_5) _qv_6)=(plus _qv_4 (plus _qv_5 _qv_6))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (mult (exp _v_43 _t_44) _v_43))=(nat-to-int (qexp _v_43 _t_44 (mult (succ zero) _v_43))))
NOW TESTING (forall ((Nat) (Nat)) ((mult _qv_7 _qv_8)=(mult _qv_8 _qv_7)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (mult (exp _v_43 _t_44) _v_43))=(nat-to-int (qexp _v_43 _t_44 (mult (succ zero) _v_43))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((mult (mult _qv_9 _qv_10) _qv_11)=(mult _qv_9 (mult _qv_10 _qv_11))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (mult (exp _v_43 _t_44) _v_43))=(nat-to-int (qexp _v_43 _t_44 (mult (succ zero) _v_43))))
NOW TESTING (forall ((Nat) (Nat)) ((exp _qv_12 _qv_13)=(exp _qv_13 _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (mult (exp _v_43 _t_44) _v_43))=(nat-to-int (qexp _v_43 _t_44 (mult (succ zero) _v_43))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((exp (exp _qv_14 _qv_15) _qv_16)=(exp _qv_14 (exp _qv_15 _qv_16))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (mult (exp _v_43 _t_44) _v_43))=(nat-to-int (qexp _v_43 _t_44 (mult (succ zero) _v_43))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_17))=(nat-to-int _qv_17)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (mult (exp _v_43 _t_44) _v_43))=(nat-to-int (qexp _v_43 _t_44 (mult (succ zero) _v_43))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((mult _qv_18 (plus _qv_19 _qv_20))=(plus (mult _qv_18 _qv_19) (mult _qv_18 _qv_20))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (mult (exp _v_43 _t_44) _v_43))=(nat-to-int (qexp _v_43 _t_44 (mult (succ zero) _v_43))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((exp _qv_21 (plus _qv_22 _qv_23))=(plus (exp _qv_21 _qv_22) (exp _qv_21 _qv_23))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (mult (exp _v_43 _t_44) _v_43))=(nat-to-int (qexp _v_43 _t_44 (mult (succ zero) _v_43))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus _qv_24 (mult _qv_25 _qv_26))=(mult (plus _qv_24 _qv_25) (plus _qv_24 _qv_26))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (mult (exp _v_43 _t_44) _v_43))=(nat-to-int (qexp _v_43 _t_44 (mult (succ zero) _v_43))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((exp _qv_27 (mult _qv_28 _qv_29))=(mult (exp _qv_27 _qv_28) (exp _qv_27 _qv_29))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (mult (exp _v_43 _t_44) _v_43))=(nat-to-int (qexp _v_43 _t_44 (mult (succ zero) _v_43))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus _qv_30 (exp _qv_31 _qv_32))=(exp (plus _qv_30 _qv_31) (plus _qv_30 _qv_32))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (mult (exp _v_43 _t_44) _v_43))=(nat-to-int (qexp _v_43 _t_44 (mult (succ zero) _v_43))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((mult _qv_33 (exp _qv_34 _qv_35))=(exp (mult _qv_33 _qv_34) (mult _qv_33 _qv_35))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (mult (exp _v_43 _t_44) _v_43))=(nat-to-int (qexp _v_43 _t_44 (mult (succ zero) _v_43))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_36 _qv_37))=(plus (succ _qv_36) (succ _qv_37))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (mult (exp _v_43 _t_44) _v_43))=(nat-to-int (qexp _v_43 _t_44 (mult (succ zero) _v_43))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_36 _qv_37))=(plus (succ _qv_37) (succ _qv_36))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (mult (exp _v_43 _t_44) _v_43))=(nat-to-int (qexp _v_43 _t_44 (mult (succ zero) _v_43))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (mult _qv_38 _qv_39))=(mult (succ _qv_38) (succ _qv_39))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (mult (exp _v_43 _t_44) _v_43))=(nat-to-int (qexp _v_43 _t_44 (mult (succ zero) _v_43))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (mult _qv_38 _qv_39))=(mult (succ _qv_39) (succ _qv_38))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (mult (exp _v_43 _t_44) _v_43))=(nat-to-int (qexp _v_43 _t_44 (mult (succ zero) _v_43))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (exp _qv_40 _qv_41))=(exp (succ _qv_40) (succ _qv_41))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (mult (exp _v_43 _t_44) _v_43))=(nat-to-int (qexp _v_43 _t_44 (mult (succ zero) _v_43))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (exp _qv_40 _qv_41))=(exp (succ _qv_41) (succ _qv_40))))
USE ASSUMPTION FAILED

  backtrack to: ((nat-to-int (mult (exp _v_43 _t_44) _v_43))=(nat-to-int (qexp _v_43 _t_44 (mult (succ zero) _v_43))))
  rewritten [13]: ((nat-to-int (mult (qexp _v_43 _t_44 (succ zero)) _v_43))=(nat-to-int (qexp _v_43 _t_44 (mult (succ zero) _v_43))))
  sequence of rewrites only grows

The Knowledge Scheme currently contains the following lemmas:
	(forall ((Nat)) ((succ (succ _qv_46))=_qv_46))
	(forall ((Nat)) (0<=(nat-to-int _qv_47)))
	(forall ((Nat) (Nat)) ((plus _qv_48 _qv_49)=(plus _qv_49 _qv_48)))
	(forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_50 _qv_51) _qv_52)=(plus _qv_50 (plus _qv_51 _qv_52))))
	(forall ((Nat) (Nat)) ((mult _qv_53 _qv_54)=(mult _qv_54 _qv_53)))
	(forall ((Nat) (Nat) (Nat)) ((mult (mult _qv_55 _qv_56) _qv_57)=(mult _qv_55 (mult _qv_56 _qv_57))))
	(forall ((Nat) (Nat)) ((exp _qv_58 _qv_59)=(exp _qv_59 _qv_58)))
	(forall ((Nat) (Nat) (Nat)) ((exp (exp _qv_60 _qv_61) _qv_62)=(exp _qv_60 (exp _qv_61 _qv_62))))
	(forall ((Nat)) ((nat-to-int (succ _qv_63))=(nat-to-int _qv_63)))
	(forall ((Nat) (Nat) (Nat)) ((mult _qv_64 (plus _qv_65 _qv_66))=(plus (mult _qv_64 _qv_65) (mult _qv_64 _qv_66))))
	(forall ((Nat) (Nat) (Nat)) ((exp _qv_67 (plus _qv_68 _qv_69))=(plus (exp _qv_67 _qv_68) (exp _qv_67 _qv_69))))
	(forall ((Nat) (Nat) (Nat)) ((plus _qv_70 (mult _qv_71 _qv_72))=(mult (plus _qv_70 _qv_71) (plus _qv_70 _qv_72))))
	(forall ((Nat) (Nat) (Nat)) ((exp _qv_73 (mult _qv_74 _qv_75))=(mult (exp _qv_73 _qv_74) (exp _qv_73 _qv_75))))
	(forall ((Nat) (Nat) (Nat)) ((plus _qv_76 (exp _qv_77 _qv_78))=(exp (plus _qv_76 _qv_77) (plus _qv_76 _qv_78))))
	(forall ((Nat) (Nat) (Nat)) ((mult _qv_79 (exp _qv_80 _qv_81))=(exp (mult _qv_79 _qv_80) (mult _qv_79 _qv_81))))
	(forall ((Nat) (Nat)) ((succ (plus _qv_82 _qv_83))=(plus (succ _qv_82) (succ _qv_83))))
	(forall ((Nat) (Nat)) ((succ (plus _qv_82 _qv_83))=(plus (succ _qv_83) (succ _qv_82))))
	(forall ((Nat) (Nat)) ((succ (mult _qv_84 _qv_85))=(mult (succ _qv_84) (succ _qv_85))))
	(forall ((Nat) (Nat)) ((succ (mult _qv_84 _qv_85))=(mult (succ _qv_85) (succ _qv_84))))
	(forall ((Nat) (Nat)) ((succ (exp _qv_86 _qv_87))=(exp (succ _qv_86) (succ _qv_87))))
	(forall ((Nat) (Nat)) ((succ (exp _qv_86 _qv_87))=(exp (succ _qv_87) (succ _qv_86))))

CURRENT SUBGOAL ((nat-to-int (mult (qexp zero _v_88 _v_89) zero))=(nat-to-int (qexp zero _v_88 (mult _v_89 zero))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_46))=_qv_46))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (mult (qexp zero _v_88 _v_89) zero))=(nat-to-int (qexp zero _v_88 (mult _v_89 zero))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_47)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (mult (qexp zero _v_88 _v_89) zero))=(nat-to-int (qexp zero _v_88 (mult _v_89 zero))))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_48 _qv_49)=(plus _qv_49 _qv_48)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (mult (qexp zero _v_88 _v_89) zero))=(nat-to-int (qexp zero _v_88 (mult _v_89 zero))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_50 _qv_51) _qv_52)=(plus _qv_50 (plus _qv_51 _qv_52))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (mult (qexp zero _v_88 _v_89) zero))=(nat-to-int (qexp zero _v_88 (mult _v_89 zero))))
NOW TESTING (forall ((Nat) (Nat)) ((mult _qv_53 _qv_54)=(mult _qv_54 _qv_53)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (mult (qexp zero _v_88 _v_89) zero))=(nat-to-int (qexp zero _v_88 (mult _v_89 zero))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((mult (mult _qv_55 _qv_56) _qv_57)=(mult _qv_55 (mult _qv_56 _qv_57))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (mult (qexp zero _v_88 _v_89) zero))=(nat-to-int (qexp zero _v_88 (mult _v_89 zero))))
NOW TESTING (forall ((Nat) (Nat)) ((exp _qv_58 _qv_59)=(exp _qv_59 _qv_58)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (mult (qexp zero _v_88 _v_89) zero))=(nat-to-int (qexp zero _v_88 (mult _v_89 zero))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((exp (exp _qv_60 _qv_61) _qv_62)=(exp _qv_60 (exp _qv_61 _qv_62))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (mult (qexp zero _v_88 _v_89) zero))=(nat-to-int (qexp zero _v_88 (mult _v_89 zero))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_63))=(nat-to-int _qv_63)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (mult (qexp zero _v_88 _v_89) zero))=(nat-to-int (qexp zero _v_88 (mult _v_89 zero))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((mult _qv_64 (plus _qv_65 _qv_66))=(plus (mult _qv_64 _qv_65) (mult _qv_64 _qv_66))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (mult (qexp zero _v_88 _v_89) zero))=(nat-to-int (qexp zero _v_88 (mult _v_89 zero))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((exp _qv_67 (plus _qv_68 _qv_69))=(plus (exp _qv_67 _qv_68) (exp _qv_67 _qv_69))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (mult (qexp zero _v_88 _v_89) zero))=(nat-to-int (qexp zero _v_88 (mult _v_89 zero))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus _qv_70 (mult _qv_71 _qv_72))=(mult (plus _qv_70 _qv_71) (plus _qv_70 _qv_72))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (mult (qexp zero _v_88 _v_89) zero))=(nat-to-int (qexp zero _v_88 (mult _v_89 zero))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((exp _qv_73 (mult _qv_74 _qv_75))=(mult (exp _qv_73 _qv_74) (exp _qv_73 _qv_75))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (mult (qexp zero _v_88 _v_89) zero))=(nat-to-int (qexp zero _v_88 (mult _v_89 zero))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus _qv_76 (exp _qv_77 _qv_78))=(exp (plus _qv_76 _qv_77) (plus _qv_76 _qv_78))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (mult (qexp zero _v_88 _v_89) zero))=(nat-to-int (qexp zero _v_88 (mult _v_89 zero))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((mult _qv_79 (exp _qv_80 _qv_81))=(exp (mult _qv_79 _qv_80) (mult _qv_79 _qv_81))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (mult (qexp zero _v_88 _v_89) zero))=(nat-to-int (qexp zero _v_88 (mult _v_89 zero))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_82 _qv_83))=(plus (succ _qv_82) (succ _qv_83))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (mult (qexp zero _v_88 _v_89) zero))=(nat-to-int (qexp zero _v_88 (mult _v_89 zero))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_82 _qv_83))=(plus (succ _qv_83) (succ _qv_82))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (mult (qexp zero _v_88 _v_89) zero))=(nat-to-int (qexp zero _v_88 (mult _v_89 zero))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (mult _qv_84 _qv_85))=(mult (succ _qv_84) (succ _qv_85))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (mult (qexp zero _v_88 _v_89) zero))=(nat-to-int (qexp zero _v_88 (mult _v_89 zero))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (mult _qv_84 _qv_85))=(mult (succ _qv_85) (succ _qv_84))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (mult (qexp zero _v_88 _v_89) zero))=(nat-to-int (qexp zero _v_88 (mult _v_89 zero))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (exp _qv_86 _qv_87))=(exp (succ _qv_86) (succ _qv_87))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (mult (qexp zero _v_88 _v_89) zero))=(nat-to-int (qexp zero _v_88 (mult _v_89 zero))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (exp _qv_86 _qv_87))=(exp (succ _qv_87) (succ _qv_86))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (mult (qexp zero _v_88 _v_89) zero))=(nat-to-int (qexp zero _v_88 (mult _v_89 zero))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_46))=_qv_46))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (mult (qexp zero _v_88 _v_89) zero))=(nat-to-int (qexp zero _v_88 (mult _v_89 zero))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_47)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (mult (qexp zero _v_88 _v_89) zero))=(nat-to-int (qexp zero _v_88 (mult _v_89 zero))))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_48 _qv_49)=(plus _qv_49 _qv_48)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (mult (qexp zero _v_88 _v_89) zero))=(nat-to-int (qexp zero _v_88 (mult _v_89 zero))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_50 _qv_51) _qv_52)=(plus _qv_50 (plus _qv_51 _qv_52))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (mult (qexp zero _v_88 _v_89) zero))=(nat-to-int (qexp zero _v_88 (mult _v_89 zero))))
NOW TESTING (forall ((Nat) (Nat)) ((mult _qv_53 _qv_54)=(mult _qv_54 _qv_53)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (mult (qexp zero _v_88 _v_89) zero))=(nat-to-int (qexp zero _v_88 (mult _v_89 zero))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((mult (mult _qv_55 _qv_56) _qv_57)=(mult _qv_55 (mult _qv_56 _qv_57))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (mult (qexp zero _v_88 _v_89) zero))=(nat-to-int (qexp zero _v_88 (mult _v_89 zero))))
NOW TESTING (forall ((Nat) (Nat)) ((exp _qv_58 _qv_59)=(exp _qv_59 _qv_58)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (mult (qexp zero _v_88 _v_89) zero))=(nat-to-int (qexp zero _v_88 (mult _v_89 zero))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((exp (exp _qv_60 _qv_61) _qv_62)=(exp _qv_60 (exp _qv_61 _qv_62))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (mult (qexp zero _v_88 _v_89) zero))=(nat-to-int (qexp zero _v_88 (mult _v_89 zero))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_63))=(nat-to-int _qv_63)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (mult (qexp zero _v_88 _v_89) zero))=(nat-to-int (qexp zero _v_88 (mult _v_89 zero))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((mult _qv_64 (plus _qv_65 _qv_66))=(plus (mult _qv_64 _qv_65) (mult _qv_64 _qv_66))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (mult (qexp zero _v_88 _v_89) zero))=(nat-to-int (qexp zero _v_88 (mult _v_89 zero))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((exp _qv_67 (plus _qv_68 _qv_69))=(plus (exp _qv_67 _qv_68) (exp _qv_67 _qv_69))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (mult (qexp zero _v_88 _v_89) zero))=(nat-to-int (qexp zero _v_88 (mult _v_89 zero))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus _qv_70 (mult _qv_71 _qv_72))=(mult (plus _qv_70 _qv_71) (plus _qv_70 _qv_72))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (mult (qexp zero _v_88 _v_89) zero))=(nat-to-int (qexp zero _v_88 (mult _v_89 zero))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((exp _qv_73 (mult _qv_74 _qv_75))=(mult (exp _qv_73 _qv_74) (exp _qv_73 _qv_75))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (mult (qexp zero _v_88 _v_89) zero))=(nat-to-int (qexp zero _v_88 (mult _v_89 zero))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus _qv_76 (exp _qv_77 _qv_78))=(exp (plus _qv_76 _qv_77) (plus _qv_76 _qv_78))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (mult (qexp zero _v_88 _v_89) zero))=(nat-to-int (qexp zero _v_88 (mult _v_89 zero))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((mult _qv_79 (exp _qv_80 _qv_81))=(exp (mult _qv_79 _qv_80) (mult _qv_79 _qv_81))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (mult (qexp zero _v_88 _v_89) zero))=(nat-to-int (qexp zero _v_88 (mult _v_89 zero))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_82 _qv_83))=(plus (succ _qv_82) (succ _qv_83))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (mult (qexp zero _v_88 _v_89) zero))=(nat-to-int (qexp zero _v_88 (mult _v_89 zero))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_82 _qv_83))=(plus (succ _qv_83) (succ _qv_82))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (mult (qexp zero _v_88 _v_89) zero))=(nat-to-int (qexp zero _v_88 (mult _v_89 zero))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (mult _qv_84 _qv_85))=(mult (succ _qv_84) (succ _qv_85))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (mult (qexp zero _v_88 _v_89) zero))=(nat-to-int (qexp zero _v_88 (mult _v_89 zero))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (mult _qv_84 _qv_85))=(mult (succ _qv_85) (succ _qv_84))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (mult (qexp zero _v_88 _v_89) zero))=(nat-to-int (qexp zero _v_88 (mult _v_89 zero))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (exp _qv_86 _qv_87))=(exp (succ _qv_86) (succ _qv_87))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (mult (qexp zero _v_88 _v_89) zero))=(nat-to-int (qexp zero _v_88 (mult _v_89 zero))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (exp _qv_86 _qv_87))=(exp (succ _qv_87) (succ _qv_86))))
USE ASSUMPTION FAILED

  proven by induction: ((nat-to-int (mult (qexp _v_43 _t_44 _w_45) _v_43))=(nat-to-int (qexp _v_43 _t_44 (mult _w_45 _v_43))))
  rewriting done
  rewriting done
  rewriting done
}

Proved
unsat
