
The Knowledge Scheme currently contains the following lemmas:
	(forall ((Nat) (Nat)) ((plus _qv_0 _qv_1)=(plus _qv_1 _qv_0)))
	(forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_2 _qv_3) _qv_4)=(plus _qv_2 (plus _qv_3 _qv_4))))
	(forall ((Lst) (Lst)) ((append _qv_5 _qv_6)=(append _qv_6 _qv_5)))
	(forall ((Lst) (Lst) (Lst)) ((append (append _qv_7 _qv_8) _qv_9)=(append _qv_7 (append _qv_8 _qv_9))))
	(forall ((Lst)) ((rev (rev _qv_10))=_qv_10))
	(forall ((Lst) (Lst)) ((qreva _qv_11 _qv_12)=(qreva _qv_12 _qv_11)))
	(forall ((Lst) (Lst) (Lst)) ((qreva (qreva _qv_13 _qv_14) _qv_15)=(qreva _qv_13 (qreva _qv_14 _qv_15))))
	(forall ((Lst) (Lst) (Lst)) ((qreva _qv_16 (append _qv_17 _qv_18))=(append (qreva _qv_16 _qv_17) (qreva _qv_16 _qv_18))))
	(forall ((Lst) (Lst) (Lst)) ((append _qv_19 (qreva _qv_20 _qv_21))=(qreva (append _qv_19 _qv_20) (append _qv_19 _qv_21))))
	(forall ((Lst) (Lst)) ((rev (append _qv_22 _qv_23))=(append (rev _qv_22) (rev _qv_23))))
	(forall ((Lst) (Lst)) ((rev (append _qv_22 _qv_23))=(append (rev _qv_23) (rev _qv_22))))
	(forall ((Lst) (Lst)) ((rev (qreva _qv_24 _qv_25))=(qreva (rev _qv_24) (rev _qv_25))))
	(forall ((Lst) (Lst)) ((rev (qreva _qv_24 _qv_25))=(qreva (rev _qv_25) (rev _qv_24))))

Simplified goal: (forall ((Lst) (Lst)) ((len (qreva x y))=(plus (len x) (len y))))


Base case:       ((len (qreva nil _v_26))=(plus (len nil) (len _v_26)))
{
  proven trivially
}
Inductive step:  ((len (qreva (cons _t_27 _t_28) _v_26))=(plus (len (cons _t_27 _t_28)) (len _v_26)))
{
  proven trivially
}

Proved
unsat
