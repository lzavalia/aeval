
The Knowledge Scheme currently contains the following lemmas:
	(forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
	(forall ((Nat)) (0<=(nat-to-int _qv_1)))
	(forall ((Lst) (Lst)) ((append _qv_2 _qv_3)=(append _qv_3 _qv_2)))
	(forall ((Lst) (Lst) (Lst)) ((append (append _qv_4 _qv_5) _qv_6)=(append _qv_4 (append _qv_5 _qv_6))))
	(forall ((Lst)) ((rev (rev _qv_7))=_qv_7))
	(forall ((Lst) (Lst)) ((zip _qv_8 _qv_9)=(zip _qv_9 _qv_8)))
	(forall ((ZLst) (ZLst)) ((zappend _qv_10 _qv_11)=(zappend _qv_11 _qv_10)))
	(forall ((ZLst) (ZLst) (ZLst)) ((zappend (zappend _qv_12 _qv_13) _qv_14)=(zappend _qv_12 (zappend _qv_13 _qv_14))))
	(forall ((ZLst)) ((zrev (zrev _qv_15))=_qv_15))
	(forall ((Nat)) ((nat-to-int (succ _qv_16))=(nat-to-int _qv_16)))
	(forall ((Lst)) ((nat-to-int (len _qv_17))=(nat-to-int _qv_17)))
	(forall ((Lst) (Lst)) ((rev (append _qv_18 _qv_19))=(append (rev _qv_18) (rev _qv_19))))
	(forall ((Lst) (Lst)) ((rev (append _qv_18 _qv_19))=(append (rev _qv_19) (rev _qv_18))))
	(forall ((ZLst) (ZLst)) ((zrev (zappend _qv_20 _qv_21))=(zappend (zrev _qv_20) (zrev _qv_21))))
	(forall ((ZLst) (ZLst)) ((zrev (zappend _qv_20 _qv_21))=(zappend (zrev _qv_21) (zrev _qv_20))))

Simplified goal: (forall ((Lst) (Lst)) (((len xs)=(len ys))->((zip (rev xs) (rev ys))=(zrev (zip xs ys)))))


Base case:       ((zip (rev nil) (rev _v_22))=(zrev (zip nil _v_22)))
{
  proven trivially
}
Inductive step:  ((zip (rev (cons _t_23 _t_24)) (rev _v_22))=(zrev (zip (cons _t_23 _t_24) _v_22)))
{
  {
    ====================
    | Assumptions [0]: ((rev nil)=nil)
    | Assumptions [1]: ((zrev znil)=znil)
    | Assumptions [2]: (forall ((Nat)) ((nat-to-int _qv_1)>=0))
    | Assumptions [3]: (forall ((Nat) (Nat)) (((nat-to-int _qv_2)=(nat-to-int _qv_3))->(_qv_2=_qv_3)))
    | Assumptions [4]: (forall ((Nat)) ((nat-to-int (succ _qv_4))=(1+(nat-to-int _qv_4))))
    | Assumptions [5]: (forall ((Lst)) ((append nil _qv_5)=_qv_5))
    | Assumptions [6]: (forall ((Nat) (Lst) (Lst)) ((append (cons _qv_6 _qv_7) _qv_8)=(cons _qv_6 (append _qv_7 _qv_8))))
    | Assumptions [7]: (forall ((Nat) (Lst)) ((len (cons _qv_9 _qv_10))=(succ (len _qv_10))))
    | Assumptions [8]: (forall ((Nat) (Lst)) ((rev (cons _qv_11 _qv_12))=(append (rev _qv_12) (cons _qv_11 nil))))
    | Assumptions [9]: (forall ((Lst)) ((zip nil _qv_13)=znil))
    | Assumptions [10]: (forall ((Lst)) ((zip _qv_14 nil)=znil))
    | Assumptions [11]: (forall ((Nat) (Lst) (Nat) (Lst)) ((zip (cons _qv_15 _qv_16) (cons _qv_17 _qv_18))=(zcons (mkpair _qv_15 _qv_17) (zip _qv_16 _qv_18))))
    | Assumptions [12]: (forall ((ZLst)) ((zappend znil _qv_19)=_qv_19))
    | Assumptions [13]: (forall ((Pair) (ZLst) (ZLst)) ((zappend (zcons _qv_20 _qv_21) _qv_22)=(zcons _qv_20 (zappend _qv_21 _qv_22))))
    | Assumptions [14]: (forall ((Pair) (ZLst)) ((zrev (zcons _qv_23 _qv_24))=(zappend (zrev _qv_24) (zcons _qv_23 znil))))
    | Assumptions [15]: (forall ((Lst)) (((len _t_24)=(len ys))->((zip (rev _t_24) (rev ys))=(zrev (zip _t_24 ys)))))
    | Assumptions [16]: ((len (cons _t_23 _t_24))=(len _v_22))
    | Assumptions [17]: ((nat-to-int (len nil))=0)
    | Assumptions [18]: ((succ (len _t_24))=(len _v_22))
    ====================
  }
  rewritten [8]: ((zip (append (rev _t_24) (cons _t_23 nil)) (rev _v_22))=(zrev (zip (cons _t_23 _t_24) _v_22)))
CURRENT SUBGOAL ((zip (rev (cons _t_23 _t_24)) (rev _v_22))=(zrev (zip (cons _t_23 _t_24) _v_22)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((zip (rev (cons _t_23 _t_24)) (rev _v_22))=(zrev (zip (cons _t_23 _t_24) _v_22)))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((zip (rev (cons _t_23 _t_24)) (rev _v_22))=(zrev (zip (cons _t_23 _t_24) _v_22)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_2 _qv_3)=(append _qv_3 _qv_2)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((zip (rev (cons _t_23 _t_24)) (rev _v_22))=(zrev (zip (cons _t_23 _t_24) _v_22)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_4 _qv_5) _qv_6)=(append _qv_4 (append _qv_5 _qv_6))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((zip (rev (cons _t_23 _t_24)) (rev _v_22))=(zrev (zip (cons _t_23 _t_24) _v_22)))
NOW TESTING (forall ((Lst)) ((rev (rev _qv_7))=_qv_7))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((zip (rev (cons _t_23 _t_24)) (rev _v_22))=(zrev (zip (cons _t_23 _t_24) _v_22)))
NOW TESTING (forall ((Lst) (Lst)) ((zip _qv_8 _qv_9)=(zip _qv_9 _qv_8)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((zip (rev (cons _t_23 _t_24)) (rev _v_22))=(zrev (zip (cons _t_23 _t_24) _v_22)))
NOW TESTING (forall ((ZLst) (ZLst)) ((zappend _qv_10 _qv_11)=(zappend _qv_11 _qv_10)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((zip (rev (cons _t_23 _t_24)) (rev _v_22))=(zrev (zip (cons _t_23 _t_24) _v_22)))
NOW TESTING (forall ((ZLst) (ZLst) (ZLst)) ((zappend (zappend _qv_12 _qv_13) _qv_14)=(zappend _qv_12 (zappend _qv_13 _qv_14))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((zip (rev (cons _t_23 _t_24)) (rev _v_22))=(zrev (zip (cons _t_23 _t_24) _v_22)))
NOW TESTING (forall ((ZLst)) ((zrev (zrev _qv_15))=_qv_15))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((zip (rev (cons _t_23 _t_24)) (rev _v_22))=(zrev (zip (cons _t_23 _t_24) _v_22)))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_16))=(nat-to-int _qv_16)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((zip (rev (cons _t_23 _t_24)) (rev _v_22))=(zrev (zip (cons _t_23 _t_24) _v_22)))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_17))=(nat-to-int _qv_17)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((zip (rev (cons _t_23 _t_24)) (rev _v_22))=(zrev (zip (cons _t_23 _t_24) _v_22)))
NOW TESTING (forall ((Lst) (Lst)) ((rev (append _qv_18 _qv_19))=(append (rev _qv_18) (rev _qv_19))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((zip (rev (cons _t_23 _t_24)) (rev _v_22))=(zrev (zip (cons _t_23 _t_24) _v_22)))
NOW TESTING (forall ((Lst) (Lst)) ((rev (append _qv_18 _qv_19))=(append (rev _qv_19) (rev _qv_18))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((zip (rev (cons _t_23 _t_24)) (rev _v_22))=(zrev (zip (cons _t_23 _t_24) _v_22)))
NOW TESTING (forall ((ZLst) (ZLst)) ((zrev (zappend _qv_20 _qv_21))=(zappend (zrev _qv_20) (zrev _qv_21))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((zip (rev (cons _t_23 _t_24)) (rev _v_22))=(zrev (zip (cons _t_23 _t_24) _v_22)))
NOW TESTING (forall ((ZLst) (ZLst)) ((zrev (zappend _qv_20 _qv_21))=(zappend (zrev _qv_21) (zrev _qv_20))))
USE ASSUMPTION FAILED

  backtrack to: ((zip (rev (cons _t_23 _t_24)) (rev _v_22))=(zrev (zip (cons _t_23 _t_24) _v_22)))
  rewritten [8]: ((zip (append (rev _t_24) (cons _t_23 nil)) (rev _v_22))=(zrev (zip (cons _t_23 _t_24) _v_22)))
CURRENT SUBGOAL ((zip (rev (cons _t_23 _t_24)) (rev _v_22))=(zrev (zip (cons _t_23 _t_24) _v_22)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((zip (rev (cons _t_23 _t_24)) (rev _v_22))=(zrev (zip (cons _t_23 _t_24) _v_22)))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((zip (rev (cons _t_23 _t_24)) (rev _v_22))=(zrev (zip (cons _t_23 _t_24) _v_22)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_2 _qv_3)=(append _qv_3 _qv_2)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((zip (rev (cons _t_23 _t_24)) (rev _v_22))=(zrev (zip (cons _t_23 _t_24) _v_22)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_4 _qv_5) _qv_6)=(append _qv_4 (append _qv_5 _qv_6))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((zip (rev (cons _t_23 _t_24)) (rev _v_22))=(zrev (zip (cons _t_23 _t_24) _v_22)))
NOW TESTING (forall ((Lst)) ((rev (rev _qv_7))=_qv_7))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((zip (rev (cons _t_23 _t_24)) (rev _v_22))=(zrev (zip (cons _t_23 _t_24) _v_22)))
NOW TESTING (forall ((Lst) (Lst)) ((zip _qv_8 _qv_9)=(zip _qv_9 _qv_8)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((zip (rev (cons _t_23 _t_24)) (rev _v_22))=(zrev (zip (cons _t_23 _t_24) _v_22)))
NOW TESTING (forall ((ZLst) (ZLst)) ((zappend _qv_10 _qv_11)=(zappend _qv_11 _qv_10)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((zip (rev (cons _t_23 _t_24)) (rev _v_22))=(zrev (zip (cons _t_23 _t_24) _v_22)))
NOW TESTING (forall ((ZLst) (ZLst) (ZLst)) ((zappend (zappend _qv_12 _qv_13) _qv_14)=(zappend _qv_12 (zappend _qv_13 _qv_14))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((zip (rev (cons _t_23 _t_24)) (rev _v_22))=(zrev (zip (cons _t_23 _t_24) _v_22)))
NOW TESTING (forall ((ZLst)) ((zrev (zrev _qv_15))=_qv_15))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((zip (rev (cons _t_23 _t_24)) (rev _v_22))=(zrev (zip (cons _t_23 _t_24) _v_22)))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_16))=(nat-to-int _qv_16)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((zip (rev (cons _t_23 _t_24)) (rev _v_22))=(zrev (zip (cons _t_23 _t_24) _v_22)))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_17))=(nat-to-int _qv_17)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((zip (rev (cons _t_23 _t_24)) (rev _v_22))=(zrev (zip (cons _t_23 _t_24) _v_22)))
NOW TESTING (forall ((Lst) (Lst)) ((rev (append _qv_18 _qv_19))=(append (rev _qv_18) (rev _qv_19))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((zip (rev (cons _t_23 _t_24)) (rev _v_22))=(zrev (zip (cons _t_23 _t_24) _v_22)))
NOW TESTING (forall ((Lst) (Lst)) ((rev (append _qv_18 _qv_19))=(append (rev _qv_19) (rev _qv_18))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((zip (rev (cons _t_23 _t_24)) (rev _v_22))=(zrev (zip (cons _t_23 _t_24) _v_22)))
NOW TESTING (forall ((ZLst) (ZLst)) ((zrev (zappend _qv_20 _qv_21))=(zappend (zrev _qv_20) (zrev _qv_21))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((zip (rev (cons _t_23 _t_24)) (rev _v_22))=(zrev (zip (cons _t_23 _t_24) _v_22)))
NOW TESTING (forall ((ZLst) (ZLst)) ((zrev (zappend _qv_20 _qv_21))=(zappend (zrev _qv_21) (zrev _qv_20))))
USE ASSUMPTION FAILED

  backtrack to: ((zip (rev (cons _t_23 _t_24)) (rev _v_22))=(zrev (zip (cons _t_23 _t_24) _v_22)))

Base case:       ((zip (rev _v_25) (rev nil))=(zrev (zip _v_25 nil)))
{
  proven trivially
}
Inductive step:  ((zip (rev _v_25) (rev (cons _t_26 _t_27)))=(zrev (zip _v_25 (cons _t_26 _t_27))))
{
  {
    ====================
    | Assumptions [0]: ((rev nil)=nil)
    | Assumptions [1]: ((zrev znil)=znil)
    | Assumptions [2]: (forall ((Nat)) ((nat-to-int _qv_1)>=0))
    | Assumptions [3]: (forall ((Nat) (Nat)) (((nat-to-int _qv_2)=(nat-to-int _qv_3))->(_qv_2=_qv_3)))
    | Assumptions [4]: (forall ((Nat)) ((nat-to-int (succ _qv_4))=(1+(nat-to-int _qv_4))))
    | Assumptions [5]: (forall ((Lst)) ((append nil _qv_5)=_qv_5))
    | Assumptions [6]: (forall ((Nat) (Lst) (Lst)) ((append (cons _qv_6 _qv_7) _qv_8)=(cons _qv_6 (append _qv_7 _qv_8))))
    | Assumptions [7]: (forall ((Nat) (Lst)) ((len (cons _qv_9 _qv_10))=(succ (len _qv_10))))
    | Assumptions [8]: (forall ((Nat) (Lst)) ((rev (cons _qv_11 _qv_12))=(append (rev _qv_12) (cons _qv_11 nil))))
    | Assumptions [9]: (forall ((Lst)) ((zip nil _qv_13)=znil))
    | Assumptions [10]: (forall ((Lst)) ((zip _qv_14 nil)=znil))
    | Assumptions [11]: (forall ((Nat) (Lst) (Nat) (Lst)) ((zip (cons _qv_15 _qv_16) (cons _qv_17 _qv_18))=(zcons (mkpair _qv_15 _qv_17) (zip _qv_16 _qv_18))))
    | Assumptions [12]: (forall ((ZLst)) ((zappend znil _qv_19)=_qv_19))
    | Assumptions [13]: (forall ((Pair) (ZLst) (ZLst)) ((zappend (zcons _qv_20 _qv_21) _qv_22)=(zcons _qv_20 (zappend _qv_21 _qv_22))))
    | Assumptions [14]: (forall ((Pair) (ZLst)) ((zrev (zcons _qv_23 _qv_24))=(zappend (zrev _qv_24) (zcons _qv_23 znil))))
    | Assumptions [15]: (forall ((Lst)) (((len _t_24)=(len ys))->((zip (rev _t_24) (rev ys))=(zrev (zip _t_24 ys)))))
    | Assumptions [16]: ((len (cons _t_23 _t_24))=(len _v_22))
    | Assumptions [17]: ((nat-to-int (len nil))=0)
    | Assumptions [18]: ((succ (len _t_24))=(len _v_22))
    | Assumptions [19]: (forall ((Lst)) (((len xs)=(len _t_27))->((zip (rev xs) (rev _t_27))=(zrev (zip xs _t_27)))))
    | Assumptions [20]: ((len _v_25)=(len (cons _t_26 _t_27)))
    | Assumptions [21]: ((len _v_25)=(succ (len _t_27)))
    | Assumptions [22]: ((succ (len _t_27))=(len (cons _t_26 _t_27)))
    | Assumptions [23]: ((len (cons _t_26 _t_27))=(succ (len _t_27)))
    ====================
  }
  rewritten [8]: ((zip (rev _v_25) (append (rev _t_27) (cons _t_26 nil)))=(zrev (zip _v_25 (cons _t_26 _t_27))))
CURRENT SUBGOAL ((zip (rev _v_25) (rev (cons _t_26 _t_27)))=(zrev (zip _v_25 (cons _t_26 _t_27))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((zip (rev _v_25) (rev (cons _t_26 _t_27)))=(zrev (zip _v_25 (cons _t_26 _t_27))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((zip (rev _v_25) (rev (cons _t_26 _t_27)))=(zrev (zip _v_25 (cons _t_26 _t_27))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_2 _qv_3)=(append _qv_3 _qv_2)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((zip (rev _v_25) (rev (cons _t_26 _t_27)))=(zrev (zip _v_25 (cons _t_26 _t_27))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_4 _qv_5) _qv_6)=(append _qv_4 (append _qv_5 _qv_6))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((zip (rev _v_25) (rev (cons _t_26 _t_27)))=(zrev (zip _v_25 (cons _t_26 _t_27))))
NOW TESTING (forall ((Lst)) ((rev (rev _qv_7))=_qv_7))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((zip (rev _v_25) (rev (cons _t_26 _t_27)))=(zrev (zip _v_25 (cons _t_26 _t_27))))
NOW TESTING (forall ((Lst) (Lst)) ((zip _qv_8 _qv_9)=(zip _qv_9 _qv_8)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((zip (rev _v_25) (rev (cons _t_26 _t_27)))=(zrev (zip _v_25 (cons _t_26 _t_27))))
NOW TESTING (forall ((ZLst) (ZLst)) ((zappend _qv_10 _qv_11)=(zappend _qv_11 _qv_10)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((zip (rev _v_25) (rev (cons _t_26 _t_27)))=(zrev (zip _v_25 (cons _t_26 _t_27))))
NOW TESTING (forall ((ZLst) (ZLst) (ZLst)) ((zappend (zappend _qv_12 _qv_13) _qv_14)=(zappend _qv_12 (zappend _qv_13 _qv_14))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((zip (rev _v_25) (rev (cons _t_26 _t_27)))=(zrev (zip _v_25 (cons _t_26 _t_27))))
NOW TESTING (forall ((ZLst)) ((zrev (zrev _qv_15))=_qv_15))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((zip (rev _v_25) (rev (cons _t_26 _t_27)))=(zrev (zip _v_25 (cons _t_26 _t_27))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_16))=(nat-to-int _qv_16)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((zip (rev _v_25) (rev (cons _t_26 _t_27)))=(zrev (zip _v_25 (cons _t_26 _t_27))))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_17))=(nat-to-int _qv_17)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((zip (rev _v_25) (rev (cons _t_26 _t_27)))=(zrev (zip _v_25 (cons _t_26 _t_27))))
NOW TESTING (forall ((Lst) (Lst)) ((rev (append _qv_18 _qv_19))=(append (rev _qv_18) (rev _qv_19))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((zip (rev _v_25) (rev (cons _t_26 _t_27)))=(zrev (zip _v_25 (cons _t_26 _t_27))))
NOW TESTING (forall ((Lst) (Lst)) ((rev (append _qv_18 _qv_19))=(append (rev _qv_19) (rev _qv_18))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((zip (rev _v_25) (rev (cons _t_26 _t_27)))=(zrev (zip _v_25 (cons _t_26 _t_27))))
NOW TESTING (forall ((ZLst) (ZLst)) ((zrev (zappend _qv_20 _qv_21))=(zappend (zrev _qv_20) (zrev _qv_21))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((zip (rev _v_25) (rev (cons _t_26 _t_27)))=(zrev (zip _v_25 (cons _t_26 _t_27))))
NOW TESTING (forall ((ZLst) (ZLst)) ((zrev (zappend _qv_20 _qv_21))=(zappend (zrev _qv_21) (zrev _qv_20))))
USE ASSUMPTION FAILED

  backtrack to: ((zip (rev _v_25) (rev (cons _t_26 _t_27)))=(zrev (zip _v_25 (cons _t_26 _t_27))))
  rewritten [8]: ((zip (rev _v_25) (append (rev _t_27) (cons _t_26 nil)))=(zrev (zip _v_25 (cons _t_26 _t_27))))
CURRENT SUBGOAL ((zip (rev _v_25) (rev (cons _t_26 _t_27)))=(zrev (zip _v_25 (cons _t_26 _t_27))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((zip (rev _v_25) (rev (cons _t_26 _t_27)))=(zrev (zip _v_25 (cons _t_26 _t_27))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((zip (rev _v_25) (rev (cons _t_26 _t_27)))=(zrev (zip _v_25 (cons _t_26 _t_27))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_2 _qv_3)=(append _qv_3 _qv_2)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((zip (rev _v_25) (rev (cons _t_26 _t_27)))=(zrev (zip _v_25 (cons _t_26 _t_27))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_4 _qv_5) _qv_6)=(append _qv_4 (append _qv_5 _qv_6))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((zip (rev _v_25) (rev (cons _t_26 _t_27)))=(zrev (zip _v_25 (cons _t_26 _t_27))))
NOW TESTING (forall ((Lst)) ((rev (rev _qv_7))=_qv_7))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((zip (rev _v_25) (rev (cons _t_26 _t_27)))=(zrev (zip _v_25 (cons _t_26 _t_27))))
NOW TESTING (forall ((Lst) (Lst)) ((zip _qv_8 _qv_9)=(zip _qv_9 _qv_8)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((zip (rev _v_25) (rev (cons _t_26 _t_27)))=(zrev (zip _v_25 (cons _t_26 _t_27))))
NOW TESTING (forall ((ZLst) (ZLst)) ((zappend _qv_10 _qv_11)=(zappend _qv_11 _qv_10)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((zip (rev _v_25) (rev (cons _t_26 _t_27)))=(zrev (zip _v_25 (cons _t_26 _t_27))))
NOW TESTING (forall ((ZLst) (ZLst) (ZLst)) ((zappend (zappend _qv_12 _qv_13) _qv_14)=(zappend _qv_12 (zappend _qv_13 _qv_14))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((zip (rev _v_25) (rev (cons _t_26 _t_27)))=(zrev (zip _v_25 (cons _t_26 _t_27))))
NOW TESTING (forall ((ZLst)) ((zrev (zrev _qv_15))=_qv_15))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((zip (rev _v_25) (rev (cons _t_26 _t_27)))=(zrev (zip _v_25 (cons _t_26 _t_27))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_16))=(nat-to-int _qv_16)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((zip (rev _v_25) (rev (cons _t_26 _t_27)))=(zrev (zip _v_25 (cons _t_26 _t_27))))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_17))=(nat-to-int _qv_17)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((zip (rev _v_25) (rev (cons _t_26 _t_27)))=(zrev (zip _v_25 (cons _t_26 _t_27))))
NOW TESTING (forall ((Lst) (Lst)) ((rev (append _qv_18 _qv_19))=(append (rev _qv_18) (rev _qv_19))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((zip (rev _v_25) (rev (cons _t_26 _t_27)))=(zrev (zip _v_25 (cons _t_26 _t_27))))
NOW TESTING (forall ((Lst) (Lst)) ((rev (append _qv_18 _qv_19))=(append (rev _qv_19) (rev _qv_18))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((zip (rev _v_25) (rev (cons _t_26 _t_27)))=(zrev (zip _v_25 (cons _t_26 _t_27))))
NOW TESTING (forall ((ZLst) (ZLst)) ((zrev (zappend _qv_20 _qv_21))=(zappend (zrev _qv_20) (zrev _qv_21))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((zip (rev _v_25) (rev (cons _t_26 _t_27)))=(zrev (zip _v_25 (cons _t_26 _t_27))))
NOW TESTING (forall ((ZLst) (ZLst)) ((zrev (zappend _qv_20 _qv_21))=(zappend (zrev _qv_21) (zrev _qv_20))))
USE ASSUMPTION FAILED

  backtrack to: ((zip (rev _v_25) (rev (cons _t_26 _t_27)))=(zrev (zip _v_25 (cons _t_26 _t_27))))
Unknown
sat
