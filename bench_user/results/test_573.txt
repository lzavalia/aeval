
The Knowledge Scheme currently contains the following lemmas:
	(forall ((Lst) (Lst)) ((append _qv_0 _qv_1)=(append _qv_1 _qv_0)))
	(forall ((Lst) (Lst) (Lst)) ((append (append _qv_2 _qv_3) _qv_4)=(append _qv_2 (append _qv_3 _qv_4))))
	(forall ((Lst)) ((rev (rev _qv_5))=_qv_5))
	(forall ((Lst) (Lst)) ((qreva _qv_6 _qv_7)=(qreva _qv_7 _qv_6)))
	(forall ((Lst) (Lst) (Lst)) ((qreva (qreva _qv_8 _qv_9) _qv_10)=(qreva _qv_8 (qreva _qv_9 _qv_10))))
	(forall ((Lst) (Lst) (Lst)) ((qreva _qv_11 (append _qv_12 _qv_13))=(append (qreva _qv_11 _qv_12) (qreva _qv_11 _qv_13))))
	(forall ((Lst) (Lst) (Lst)) ((append _qv_14 (qreva _qv_15 _qv_16))=(qreva (append _qv_14 _qv_15) (append _qv_14 _qv_16))))
	(forall ((Lst) (Lst)) ((rev (append _qv_17 _qv_18))=(append (rev _qv_17) (rev _qv_18))))
	(forall ((Lst) (Lst)) ((rev (append _qv_17 _qv_18))=(append (rev _qv_18) (rev _qv_17))))
	(forall ((Lst) (Lst)) ((rev (qreva _qv_19 _qv_20))=(qreva (rev _qv_19) (rev _qv_20))))
	(forall ((Lst) (Lst)) ((rev (qreva _qv_19 _qv_20))=(qreva (rev _qv_20) (rev _qv_19))))

Simplified goal: (forall ((Lst) (Lst)) ((rev (qreva x (rev y)))=(append y x)))


Base case:       ((rev (qreva nil (rev _v_21)))=(append _v_21 nil))
{
  {
    ====================
    | Assumptions [0]: ((rev nil)=nil)
    | Assumptions [1]: (forall ((Lst)) ((append nil _qv_1)=_qv_1))
    | Assumptions [2]: (forall ((Nat) (Lst) (Lst)) ((append (cons _qv_2 _qv_3) _qv_4)=(cons _qv_2 (append _qv_3 _qv_4))))
    | Assumptions [3]: (forall ((Nat) (Lst)) ((rev (cons _qv_5 _qv_6))=(append (rev _qv_6) (cons _qv_5 nil))))
    | Assumptions [4]: (forall ((Lst)) ((qreva nil _qv_7)=_qv_7))
    | Assumptions [5]: (forall ((Lst) (Lst) (Nat)) ((qreva (cons _qv_10 _qv_8) _qv_9)=(qreva _qv_8 (cons _qv_10 _qv_9))))
    | Assumptions [6]: (forall ((Lst) (Nat)) ((rev (append _qv_11 (cons _qv_12 nil)))=(cons _qv_12 (rev _qv_11))))
    | Assumptions [7]: (forall ((Lst) (Nat) (Lst)) ((append (append _qv_13 (cons _qv_14 nil)) _qv_15)=(append _qv_13 (cons _qv_14 _qv_15))))
    ====================
  }
  rewritten [4]: ((rev (rev _v_21))=(append _v_21 nil))

The Knowledge Scheme currently contains the following lemmas:
	(forall ((Lst) (Lst)) ((append _qv_22 _qv_23)=(append _qv_23 _qv_22)))
	(forall ((Lst) (Lst) (Lst)) ((append (append _qv_24 _qv_25) _qv_26)=(append _qv_24 (append _qv_25 _qv_26))))
	(forall ((Lst)) ((rev (rev _qv_27))=_qv_27))
	(forall ((Lst) (Lst)) ((qreva _qv_28 _qv_29)=(qreva _qv_29 _qv_28)))
	(forall ((Lst) (Lst) (Lst)) ((qreva (qreva _qv_30 _qv_31) _qv_32)=(qreva _qv_30 (qreva _qv_31 _qv_32))))
	(forall ((Lst) (Lst) (Lst)) ((qreva _qv_33 (append _qv_34 _qv_35))=(append (qreva _qv_33 _qv_34) (qreva _qv_33 _qv_35))))
	(forall ((Lst) (Lst) (Lst)) ((append _qv_36 (qreva _qv_37 _qv_38))=(qreva (append _qv_36 _qv_37) (append _qv_36 _qv_38))))
	(forall ((Lst) (Lst)) ((rev (append _qv_39 _qv_40))=(append (rev _qv_39) (rev _qv_40))))
	(forall ((Lst) (Lst)) ((rev (append _qv_39 _qv_40))=(append (rev _qv_40) (rev _qv_39))))
	(forall ((Lst) (Lst)) ((rev (qreva _qv_41 _qv_42))=(qreva (rev _qv_41) (rev _qv_42))))
	(forall ((Lst) (Lst)) ((rev (qreva _qv_41 _qv_42))=(qreva (rev _qv_42) (rev _qv_41))))

  proven by induction: ((rev (rev _v_21))=(append _v_21 nil))
}
Inductive step:  ((rev (qreva (cons _t_22 _t_23) (rev _v_21)))=(append _v_21 (cons _t_22 _t_23)))
{
  proven trivially
}

Proved
unsat
