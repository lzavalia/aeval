
The Knowledge Scheme currently contains the following lemmas:
	(forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
	(forall ((Nat) (Nat)) ((plus _qv_1 _qv_2)=(plus _qv_2 _qv_1)))
	(forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_3 _qv_4) _qv_5)=(plus _qv_3 (plus _qv_4 _qv_5))))
	(forall ((Nat) (Nat)) ((mult _qv_6 _qv_7)=(mult _qv_7 _qv_6)))
	(forall ((Nat) (Nat) (Nat)) ((mult (mult _qv_8 _qv_9) _qv_10)=(mult _qv_8 (mult _qv_9 _qv_10))))
	(forall ((Nat)) ((tri (tri _qv_11))=_qv_11))
	(forall ((Nat)) ((cubes (cubes _qv_12))=_qv_12))
	(forall ((Nat)) (0<=(nat-to-int _qv_13)))
	(forall ((Nat)) ((nat-to-int (succ _qv_14))=(nat-to-int _qv_14)))
	(forall ((Nat)) ((nat-to-int (tri _qv_15))=(nat-to-int _qv_15)))
	(forall ((Nat)) ((nat-to-int (cubes _qv_16))=(nat-to-int _qv_16)))
	(forall ((Nat) (Nat) (Nat)) ((mult _qv_17 (plus _qv_18 _qv_19))=(plus (mult _qv_17 _qv_18) (mult _qv_17 _qv_19))))
	(forall ((Nat) (Nat) (Nat)) ((plus _qv_20 (mult _qv_21 _qv_22))=(mult (plus _qv_20 _qv_21) (plus _qv_20 _qv_22))))
	(forall ((Nat) (Nat)) ((succ (plus _qv_23 _qv_24))=(plus (succ _qv_23) (succ _qv_24))))
	(forall ((Nat) (Nat)) ((succ (plus _qv_23 _qv_24))=(plus (succ _qv_24) (succ _qv_23))))
	(forall ((Nat) (Nat)) ((succ (mult _qv_25 _qv_26))=(mult (succ _qv_25) (succ _qv_26))))
	(forall ((Nat) (Nat)) ((succ (mult _qv_25 _qv_26))=(mult (succ _qv_26) (succ _qv_25))))
	(forall ((Nat) (Nat)) ((tri (plus _qv_27 _qv_28))=(plus (tri _qv_27) (tri _qv_28))))
	(forall ((Nat) (Nat)) ((tri (plus _qv_27 _qv_28))=(plus (tri _qv_28) (tri _qv_27))))
	(forall ((Nat) (Nat)) ((tri (mult _qv_29 _qv_30))=(mult (tri _qv_29) (tri _qv_30))))
	(forall ((Nat) (Nat)) ((tri (mult _qv_29 _qv_30))=(mult (tri _qv_30) (tri _qv_29))))
	(forall ((Nat) (Nat)) ((cubes (plus _qv_31 _qv_32))=(plus (cubes _qv_31) (cubes _qv_32))))
	(forall ((Nat) (Nat)) ((cubes (plus _qv_31 _qv_32))=(plus (cubes _qv_32) (cubes _qv_31))))
	(forall ((Nat) (Nat)) ((cubes (mult _qv_33 _qv_34))=(mult (cubes _qv_33) (cubes _qv_34))))
	(forall ((Nat) (Nat)) ((cubes (mult _qv_33 _qv_34))=(mult (cubes _qv_34) (cubes _qv_33))))

Simplified goal: (forall ((Nat) (Nat) (Nat)) ((plus (mult x y) (mult x z))=(mult x (plus y z))))


Base case:       ((plus (mult zero _v_35) (mult zero _v_36))=(mult zero (plus _v_35 _v_36)))
{
  proven trivially
}
Inductive step:  ((plus (mult (succ _t_37) _v_35) (mult (succ _t_37) _v_36))=(mult (succ _t_37) (plus _v_35 _v_36)))
{
  proven trivially
}

Proved
unsat
