
The Knowledge Scheme currently contains the following lemmas:
	(forall ((Lst) (Lst)) ((append _qv_0 _qv_1)=(append _qv_1 _qv_0)))
	(forall ((Lst) (Lst) (Lst)) ((append (append _qv_2 _qv_3) _qv_4)=(append _qv_2 (append _qv_3 _qv_4))))
	(forall ((Lst)) ((rev (rev _qv_5))=_qv_5))
	(forall ((Lst) (Lst)) ((rev (append _qv_6 _qv_7))=(append (rev _qv_6) (rev _qv_7))))
	(forall ((Lst) (Lst)) ((rev (append _qv_6 _qv_7))=(append (rev _qv_7) (rev _qv_6))))

Simplified goal: (forall ((Lst) (Lst)) ((rev (rev (append x y)))=(append (rev (rev x)) (rev (rev y)))))


Base case:       ((rev (rev (append nil _v_8)))=(append (rev (rev nil)) (rev (rev _v_8))))
{
  proven trivially
}
Inductive step:  ((rev (rev (append (cons _t_9 _t_10) _v_8)))=(append (rev (rev (cons _t_9 _t_10))) (rev (rev _v_8))))
{
  proven trivially
}

Proved
unsat
