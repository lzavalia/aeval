
The Knowledge Scheme currently contains the following lemmas:
	(forall ((Lst) (Lst)) ((append _qv_0 _qv_1)=(append _qv_1 _qv_0)))
	(forall ((Lst) (Lst) (Lst)) ((append (append _qv_2 _qv_3) _qv_4)=(append _qv_2 (append _qv_3 _qv_4))))
	(forall ((Lst)) (0<=(len _qv_5)))

Simplified goal: (forall ((Lst) INT) ((len (append x (cons y nil)))=(1+(len x))))


Base case:       ((len (append nil (cons _v_6 nil)))=(1+(len nil)))
{
  proven trivially
}
Inductive step:  ((len (append (cons _t_7 _t_8) (cons _v_6 nil)))=(1+(len (cons _t_7 _t_8))))
{
  proven trivially
}

Proved
unsat
