
The Knowledge Scheme currently contains the following lemmas:
	(forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
	(forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
	(forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
	(forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
	(forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
	(forall ((Nat)) (0<=(nat-to-int _qv_11)))
	(forall ((Nat)) ((nat-to-int (succ _qv_12))=(nat-to-int _qv_12)))
	(forall ((Lst)) ((nat-to-int (len _qv_13))=(nat-to-int _qv_13)))
	(forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_14) (succ _qv_15))))
	(forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_15) (succ _qv_14))))

Simplified goal: (forall ((Nat) (Lst)) ((len (rotate n x))=(len x)))


Base case:       ((len (rotate zero _v_16))=(len _v_16))
{
  proven trivially
}
Inductive step:  ((len (rotate (succ _t_17) _v_16))=(len _v_16))
{
  {
    ====================
    | Assumptions [0]: (forall ((Nat) (Lst)) ((len (cons _qv_1 _qv_2))=(succ (len _qv_2))))
    | Assumptions [1]: (forall ((Lst)) ((append nil _qv_3)=_qv_3))
    | Assumptions [2]: (forall ((Nat) (Lst) (Lst)) ((append (cons _qv_4 _qv_5) _qv_6)=(cons _qv_4 (append _qv_5 _qv_6))))
    | Assumptions [3]: (forall ((Nat)) ((rotate (succ _qv_8) nil)=nil))
    | Assumptions [4]: (forall ((Nat) (Nat) (Lst)) ((rotate (succ _qv_9) (cons _qv_10 _qv_11))=(rotate _qv_9 (append _qv_11 (cons _qv_10 nil)))))
    | Assumptions [5]: (forall ((Nat) (Nat)) ((plus (succ _qv_13) _qv_14)=(succ (plus _qv_13 _qv_14))))
    | Assumptions [6]: (forall ((Nat)) ((nat-to-int _qv_15)>=0))
    | Assumptions [7]: (forall ((Nat) (Nat)) (((nat-to-int _qv_16)=(nat-to-int _qv_17))->(_qv_16=_qv_17)))
    | Assumptions [8]: (forall ((Nat)) ((nat-to-int (succ _qv_18))=(1+(nat-to-int _qv_18))))
    | Assumptions [9]: (forall ((Nat) (Nat)) ((nat-to-int (plus _qv_19 _qv_20))=((nat-to-int _qv_19)+(nat-to-int _qv_20))))
    | Assumptions [10]: (forall ((Lst)) ((len (rotate _t_17 x))=(len x)))
    | Assumptions [11]: (forall ((Lst)) ((len x)=(len (rotate _t_17 x))))
    | Assumptions [12]: (forall ((Lst)) ((rotate (len nil) _qv_7)=_qv_7))
    | Assumptions [13]: (forall ((Nat)) ((plus (len nil) _qv_12)=_qv_12))
    | Assumptions [14]: ((nat-to-int (len nil))=0)
    | Assumptions [15]: ((nat-to-int (len (rotate _t_17 nil)))=0)
    | Assumptions [16]: ((nat-to-int (len (rotate _t_17 (rotate _t_17 nil))))=0)
    | Assumptions [17]: ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 nil)))))=0)
    ====================
  }
  rewritten [7]: ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len _v_16)))
  rewritten [11]: ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 _v_16))))
  rewritten [11]: ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 _v_16))))
  rewritten [10]: ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len _v_16)))
  rewritten [11]: ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
  rewritten [11]: ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
  rewritten [11]: ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
  Maximum recursion depth reached
CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_11)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_12))=(nat-to-int _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_13))=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_14) (succ _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_15) (succ _qv_14))))
USE ASSUMPTION FAILED

  backtrack to: ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
  rewritten [11]: ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len (rotate _t_17 _v_16))))
  Maximum recursion depth reached
CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_11)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_12))=(nat-to-int _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_13))=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_14) (succ _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_15) (succ _qv_14))))
USE ASSUMPTION FAILED

  backtrack to: ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
  rewritten [11]: ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
  Maximum recursion depth reached
CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_11)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_12))=(nat-to-int _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_13))=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_14) (succ _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_15) (succ _qv_14))))
USE ASSUMPTION FAILED

  backtrack to: ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
  rewritten [11]: ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len (rotate _t_17 _v_16))))
  Maximum recursion depth reached
CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_11)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_12))=(nat-to-int _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_13))=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_14) (succ _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_15) (succ _qv_14))))
USE ASSUMPTION FAILED

  backtrack to: ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_11)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_12))=(nat-to-int _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_13))=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_14) (succ _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_15) (succ _qv_14))))
USE ASSUMPTION FAILED

  backtrack to: ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
  rewritten [11]: ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
  rewritten [11]: ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len (rotate _t_17 _v_16))))
  Maximum recursion depth reached
CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_11)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_12))=(nat-to-int _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_13))=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_14) (succ _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_15) (succ _qv_14))))
USE ASSUMPTION FAILED

  backtrack to: ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
  rewritten [11]: ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))))=(nat-to-int (len _v_16)))
  Maximum recursion depth reached
CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_11)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_12))=(nat-to-int _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_13))=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_14) (succ _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_15) (succ _qv_14))))
USE ASSUMPTION FAILED

  backtrack to: ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
  rewritten [11]: ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len (rotate _t_17 _v_16))))
  Maximum recursion depth reached
CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_11)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_12))=(nat-to-int _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_13))=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_14) (succ _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_15) (succ _qv_14))))
USE ASSUMPTION FAILED

  backtrack to: ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
  rewritten [11]: ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))))=(nat-to-int (len _v_16)))
  Maximum recursion depth reached
CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_11)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_12))=(nat-to-int _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_13))=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_14) (succ _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_15) (succ _qv_14))))
USE ASSUMPTION FAILED

  backtrack to: ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_11)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_12))=(nat-to-int _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_13))=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_14) (succ _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_15) (succ _qv_14))))
USE ASSUMPTION FAILED

  backtrack to: ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
  rewritten [11]: ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
  rewritten [11]: ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
  Maximum recursion depth reached
CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_11)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_12))=(nat-to-int _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_13))=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_14) (succ _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_15) (succ _qv_14))))
USE ASSUMPTION FAILED

  backtrack to: ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
  rewritten [11]: ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len (rotate _t_17 _v_16))))
  Maximum recursion depth reached
CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_11)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_12))=(nat-to-int _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_13))=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_14) (succ _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_15) (succ _qv_14))))
USE ASSUMPTION FAILED

  backtrack to: ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
  rewritten [11]: ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
  Maximum recursion depth reached
CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_11)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_12))=(nat-to-int _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_13))=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_14) (succ _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_15) (succ _qv_14))))
USE ASSUMPTION FAILED

  backtrack to: ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
  rewritten [11]: ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len (rotate _t_17 _v_16))))
  Maximum recursion depth reached
CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_11)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_12))=(nat-to-int _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_13))=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_14) (succ _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_15) (succ _qv_14))))
USE ASSUMPTION FAILED

  backtrack to: ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_11)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_12))=(nat-to-int _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_13))=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_14) (succ _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_15) (succ _qv_14))))
USE ASSUMPTION FAILED

  backtrack to: ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
  rewritten [11]: ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
  rewritten [11]: ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len (rotate _t_17 _v_16))))
  Maximum recursion depth reached
CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_11)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_12))=(nat-to-int _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_13))=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_14) (succ _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_15) (succ _qv_14))))
USE ASSUMPTION FAILED

  backtrack to: ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
  rewritten [11]: ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))))=(nat-to-int (len _v_16)))
  Maximum recursion depth reached
CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_11)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_12))=(nat-to-int _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_13))=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_14) (succ _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_15) (succ _qv_14))))
USE ASSUMPTION FAILED

  backtrack to: ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
  rewritten [11]: ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len (rotate _t_17 _v_16))))
  Maximum recursion depth reached
CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_11)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_12))=(nat-to-int _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_13))=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_14) (succ _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_15) (succ _qv_14))))
USE ASSUMPTION FAILED

  backtrack to: ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
  rewritten [11]: ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))))=(nat-to-int (len _v_16)))
  Maximum recursion depth reached
CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_11)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_12))=(nat-to-int _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_13))=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_14) (succ _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_15) (succ _qv_14))))
USE ASSUMPTION FAILED

  backtrack to: ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_11)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_12))=(nat-to-int _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_13))=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_14) (succ _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_15) (succ _qv_14))))
USE ASSUMPTION FAILED

  backtrack to: ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_11)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_12))=(nat-to-int _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_13))=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_14) (succ _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_15) (succ _qv_14))))
USE ASSUMPTION FAILED

  backtrack to: ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len _v_16)))
  rewritten [11]: ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
  rewritten [11]: ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
  rewritten [11]: ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
  Maximum recursion depth reached
CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_11)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_12))=(nat-to-int _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_13))=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_14) (succ _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_15) (succ _qv_14))))
USE ASSUMPTION FAILED

  backtrack to: ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
  rewritten [11]: ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len (rotate _t_17 _v_16))))
  Maximum recursion depth reached
CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_11)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_12))=(nat-to-int _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_13))=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_14) (succ _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_15) (succ _qv_14))))
USE ASSUMPTION FAILED

  backtrack to: ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
  rewritten [11]: ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
  Maximum recursion depth reached
CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_11)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_12))=(nat-to-int _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_13))=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_14) (succ _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_15) (succ _qv_14))))
USE ASSUMPTION FAILED

  backtrack to: ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
  rewritten [11]: ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len (rotate _t_17 _v_16))))
  Maximum recursion depth reached
CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_11)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_12))=(nat-to-int _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_13))=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_14) (succ _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_15) (succ _qv_14))))
USE ASSUMPTION FAILED

  backtrack to: ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_11)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_12))=(nat-to-int _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_13))=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_14) (succ _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_15) (succ _qv_14))))
USE ASSUMPTION FAILED

  backtrack to: ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
  rewritten [11]: ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
  rewritten [11]: ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len (rotate _t_17 _v_16))))
  Maximum recursion depth reached
CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_11)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_12))=(nat-to-int _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_13))=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_14) (succ _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_15) (succ _qv_14))))
USE ASSUMPTION FAILED

  backtrack to: ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
  rewritten [11]: ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))))=(nat-to-int (len _v_16)))
  Maximum recursion depth reached
CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_11)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_12))=(nat-to-int _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_13))=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_14) (succ _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_15) (succ _qv_14))))
USE ASSUMPTION FAILED

  backtrack to: ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
  rewritten [11]: ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len (rotate _t_17 _v_16))))
  Maximum recursion depth reached
CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_11)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_12))=(nat-to-int _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_13))=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_14) (succ _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_15) (succ _qv_14))))
USE ASSUMPTION FAILED

  backtrack to: ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
  rewritten [11]: ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))))=(nat-to-int (len _v_16)))
  Maximum recursion depth reached
CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_11)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_12))=(nat-to-int _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_13))=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_14) (succ _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_15) (succ _qv_14))))
USE ASSUMPTION FAILED

  backtrack to: ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_11)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_12))=(nat-to-int _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_13))=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_14) (succ _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_15) (succ _qv_14))))
USE ASSUMPTION FAILED

  backtrack to: ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
  rewritten [11]: ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
  rewritten [11]: ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
  Maximum recursion depth reached
CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_11)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_12))=(nat-to-int _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_13))=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_14) (succ _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_15) (succ _qv_14))))
USE ASSUMPTION FAILED

  backtrack to: ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
  rewritten [11]: ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len (rotate _t_17 _v_16))))
  Maximum recursion depth reached
CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_11)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_12))=(nat-to-int _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_13))=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_14) (succ _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_15) (succ _qv_14))))
USE ASSUMPTION FAILED

  backtrack to: ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
  rewritten [11]: ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
  Maximum recursion depth reached
CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_11)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_12))=(nat-to-int _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_13))=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_14) (succ _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_15) (succ _qv_14))))
USE ASSUMPTION FAILED

  backtrack to: ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
  rewritten [11]: ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len (rotate _t_17 _v_16))))
  Maximum recursion depth reached
CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_11)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_12))=(nat-to-int _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_13))=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_14) (succ _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_15) (succ _qv_14))))
USE ASSUMPTION FAILED

  backtrack to: ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_11)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_12))=(nat-to-int _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_13))=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_14) (succ _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_15) (succ _qv_14))))
USE ASSUMPTION FAILED

  backtrack to: ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
  rewritten [11]: ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
  rewritten [11]: ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len (rotate _t_17 _v_16))))
  Maximum recursion depth reached
CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_11)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_12))=(nat-to-int _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_13))=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_14) (succ _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_15) (succ _qv_14))))
USE ASSUMPTION FAILED

  backtrack to: ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
  rewritten [11]: ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))))=(nat-to-int (len _v_16)))
  Maximum recursion depth reached
CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_11)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_12))=(nat-to-int _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_13))=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_14) (succ _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_15) (succ _qv_14))))
USE ASSUMPTION FAILED

  backtrack to: ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
  rewritten [11]: ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len (rotate _t_17 _v_16))))
  Maximum recursion depth reached
CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_11)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_12))=(nat-to-int _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_13))=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_14) (succ _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_15) (succ _qv_14))))
USE ASSUMPTION FAILED

  backtrack to: ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
  rewritten [11]: ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))))=(nat-to-int (len _v_16)))
  Maximum recursion depth reached
CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_11)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_12))=(nat-to-int _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_13))=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_14) (succ _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_15) (succ _qv_14))))
USE ASSUMPTION FAILED

  backtrack to: ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_11)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_12))=(nat-to-int _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_13))=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_14) (succ _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_15) (succ _qv_14))))
USE ASSUMPTION FAILED

  backtrack to: ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_11)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_12))=(nat-to-int _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_13))=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_14) (succ _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_15) (succ _qv_14))))
USE ASSUMPTION FAILED

  backtrack to: ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len _v_16)))
CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_11)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_12))=(nat-to-int _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_13))=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_14) (succ _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_15) (succ _qv_14))))
USE ASSUMPTION FAILED

  backtrack to: ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 _v_16))))
  rewritten [11]: ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
  sequence of rewrites only grows
CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_11)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_12))=(nat-to-int _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_13))=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_14) (succ _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_15) (succ _qv_14))))
USE ASSUMPTION FAILED

  backtrack to: ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 _v_16))))
  rewritten [11]: ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
  sequence of rewrites only grows
CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_11)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_12))=(nat-to-int _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_13))=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_14) (succ _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_15) (succ _qv_14))))
USE ASSUMPTION FAILED

  backtrack to: ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 _v_16))))
  rewritten [10]: ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len _v_16)))
  rewritten [11]: ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
  rewritten [11]: ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
  rewritten [11]: ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
  Maximum recursion depth reached
CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_11)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_12))=(nat-to-int _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_13))=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_14) (succ _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_15) (succ _qv_14))))
USE ASSUMPTION FAILED

  backtrack to: ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
  rewritten [11]: ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len (rotate _t_17 _v_16))))
  Maximum recursion depth reached
CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_11)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_12))=(nat-to-int _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_13))=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_14) (succ _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_15) (succ _qv_14))))
USE ASSUMPTION FAILED

  backtrack to: ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
  rewritten [11]: ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
  Maximum recursion depth reached
CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_11)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_12))=(nat-to-int _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_13))=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_14) (succ _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_15) (succ _qv_14))))
USE ASSUMPTION FAILED

  backtrack to: ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
  rewritten [11]: ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len (rotate _t_17 _v_16))))
  Maximum recursion depth reached
CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_11)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_12))=(nat-to-int _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_13))=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_14) (succ _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_15) (succ _qv_14))))
USE ASSUMPTION FAILED

  backtrack to: ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_11)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_12))=(nat-to-int _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_13))=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_14) (succ _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_15) (succ _qv_14))))
USE ASSUMPTION FAILED

  backtrack to: ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
  rewritten [11]: ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
  rewritten [11]: ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len (rotate _t_17 _v_16))))
  Maximum recursion depth reached
CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_11)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_12))=(nat-to-int _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_13))=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_14) (succ _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_15) (succ _qv_14))))
USE ASSUMPTION FAILED

  backtrack to: ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
  rewritten [11]: ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))))=(nat-to-int (len _v_16)))
  Maximum recursion depth reached
CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_11)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_12))=(nat-to-int _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_13))=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_14) (succ _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_15) (succ _qv_14))))
USE ASSUMPTION FAILED

  backtrack to: ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
  rewritten [11]: ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len (rotate _t_17 _v_16))))
  Maximum recursion depth reached
CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_11)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_12))=(nat-to-int _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_13))=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_14) (succ _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_15) (succ _qv_14))))
USE ASSUMPTION FAILED

  backtrack to: ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
  rewritten [11]: ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))))=(nat-to-int (len _v_16)))
  Maximum recursion depth reached
CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_11)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_12))=(nat-to-int _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_13))=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_14) (succ _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_15) (succ _qv_14))))
USE ASSUMPTION FAILED

  backtrack to: ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_11)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_12))=(nat-to-int _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_13))=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_14) (succ _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_15) (succ _qv_14))))
USE ASSUMPTION FAILED

  backtrack to: ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
  rewritten [11]: ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
  rewritten [11]: ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
  Maximum recursion depth reached
CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_11)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_12))=(nat-to-int _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_13))=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_14) (succ _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_15) (succ _qv_14))))
USE ASSUMPTION FAILED

  backtrack to: ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
  rewritten [11]: ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len (rotate _t_17 _v_16))))
  Maximum recursion depth reached
CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_11)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_12))=(nat-to-int _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_13))=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_14) (succ _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_15) (succ _qv_14))))
USE ASSUMPTION FAILED

  backtrack to: ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
  rewritten [11]: ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
  Maximum recursion depth reached
CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_11)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_12))=(nat-to-int _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_13))=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_14) (succ _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_15) (succ _qv_14))))
USE ASSUMPTION FAILED

  backtrack to: ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
  rewritten [11]: ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len (rotate _t_17 _v_16))))
  Maximum recursion depth reached
CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_11)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_12))=(nat-to-int _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_13))=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_14) (succ _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_15) (succ _qv_14))))
USE ASSUMPTION FAILED

  backtrack to: ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_11)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_12))=(nat-to-int _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_13))=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_14) (succ _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_15) (succ _qv_14))))
USE ASSUMPTION FAILED

  backtrack to: ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
  rewritten [11]: ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
  rewritten [11]: ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len (rotate _t_17 _v_16))))
  Maximum recursion depth reached
CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_11)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_12))=(nat-to-int _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_13))=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_14) (succ _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_15) (succ _qv_14))))
USE ASSUMPTION FAILED

  backtrack to: ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
  rewritten [11]: ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))))=(nat-to-int (len _v_16)))
  Maximum recursion depth reached
CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_11)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_12))=(nat-to-int _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_13))=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_14) (succ _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_15) (succ _qv_14))))
USE ASSUMPTION FAILED

  backtrack to: ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
  rewritten [11]: ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len (rotate _t_17 _v_16))))
  Maximum recursion depth reached
CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_11)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_12))=(nat-to-int _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_13))=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_14) (succ _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_15) (succ _qv_14))))
USE ASSUMPTION FAILED

  backtrack to: ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
  rewritten [11]: ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))))=(nat-to-int (len _v_16)))
  Maximum recursion depth reached
CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_11)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_12))=(nat-to-int _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_13))=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_14) (succ _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_15) (succ _qv_14))))
USE ASSUMPTION FAILED

  backtrack to: ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_11)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_12))=(nat-to-int _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_13))=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_14) (succ _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_15) (succ _qv_14))))
USE ASSUMPTION FAILED

  backtrack to: ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_11)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_12))=(nat-to-int _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_13))=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_14) (succ _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_15) (succ _qv_14))))
USE ASSUMPTION FAILED

  backtrack to: ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len _v_16)))
  rewritten [11]: ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
  rewritten [11]: ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
  rewritten [11]: ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
  Maximum recursion depth reached
CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_11)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_12))=(nat-to-int _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_13))=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_14) (succ _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_15) (succ _qv_14))))
USE ASSUMPTION FAILED

  backtrack to: ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
  rewritten [11]: ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len (rotate _t_17 _v_16))))
  Maximum recursion depth reached
CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_11)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_12))=(nat-to-int _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_13))=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_14) (succ _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_15) (succ _qv_14))))
USE ASSUMPTION FAILED

  backtrack to: ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
  rewritten [11]: ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
  Maximum recursion depth reached
CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_11)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_12))=(nat-to-int _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_13))=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_14) (succ _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_15) (succ _qv_14))))
USE ASSUMPTION FAILED

  backtrack to: ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
  rewritten [11]: ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len (rotate _t_17 _v_16))))
  Maximum recursion depth reached
CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_11)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_12))=(nat-to-int _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_13))=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_14) (succ _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_15) (succ _qv_14))))
USE ASSUMPTION FAILED

  backtrack to: ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_11)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_12))=(nat-to-int _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_13))=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_14) (succ _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_15) (succ _qv_14))))
USE ASSUMPTION FAILED

  backtrack to: ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
  rewritten [11]: ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
  rewritten [11]: ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len (rotate _t_17 _v_16))))
  Maximum recursion depth reached
CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_11)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_12))=(nat-to-int _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_13))=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_14) (succ _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_15) (succ _qv_14))))
USE ASSUMPTION FAILED

  backtrack to: ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
  rewritten [11]: ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))))=(nat-to-int (len _v_16)))
  Maximum recursion depth reached
CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_11)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_12))=(nat-to-int _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_13))=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_14) (succ _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_15) (succ _qv_14))))
USE ASSUMPTION FAILED

  backtrack to: ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
  rewritten [11]: ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len (rotate _t_17 _v_16))))
  Maximum recursion depth reached
CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_11)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_12))=(nat-to-int _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_13))=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_14) (succ _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_15) (succ _qv_14))))
USE ASSUMPTION FAILED

  backtrack to: ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
  rewritten [11]: ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))))=(nat-to-int (len _v_16)))
  Maximum recursion depth reached
CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_11)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_12))=(nat-to-int _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_13))=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_14) (succ _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_15) (succ _qv_14))))
USE ASSUMPTION FAILED

  backtrack to: ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_11)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_12))=(nat-to-int _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_13))=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_14) (succ _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_15) (succ _qv_14))))
USE ASSUMPTION FAILED

  backtrack to: ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
  rewritten [11]: ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
  rewritten [11]: ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
  Maximum recursion depth reached
CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_11)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_12))=(nat-to-int _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_13))=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_14) (succ _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_15) (succ _qv_14))))
USE ASSUMPTION FAILED

  backtrack to: ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
  rewritten [11]: ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len (rotate _t_17 _v_16))))
  Maximum recursion depth reached
CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_11)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_12))=(nat-to-int _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_13))=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_14) (succ _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_15) (succ _qv_14))))
USE ASSUMPTION FAILED

  backtrack to: ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
  rewritten [11]: ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
  Maximum recursion depth reached
CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_11)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_12))=(nat-to-int _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_13))=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_14) (succ _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_15) (succ _qv_14))))
USE ASSUMPTION FAILED

  backtrack to: ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
  rewritten [11]: ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len (rotate _t_17 _v_16))))
  Maximum recursion depth reached
CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_11)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_12))=(nat-to-int _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_13))=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_14) (succ _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_15) (succ _qv_14))))
USE ASSUMPTION FAILED

  backtrack to: ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_11)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_12))=(nat-to-int _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_13))=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_14) (succ _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_15) (succ _qv_14))))
USE ASSUMPTION FAILED

  backtrack to: ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
  rewritten [11]: ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
  rewritten [11]: ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len (rotate _t_17 _v_16))))
  Maximum recursion depth reached
CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_11)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_12))=(nat-to-int _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_13))=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_14) (succ _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_15) (succ _qv_14))))
USE ASSUMPTION FAILED

  backtrack to: ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
  rewritten [11]: ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))))=(nat-to-int (len _v_16)))
  Maximum recursion depth reached
CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_11)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_12))=(nat-to-int _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_13))=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_14) (succ _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_15) (succ _qv_14))))
USE ASSUMPTION FAILED

  backtrack to: ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
  rewritten [11]: ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len (rotate _t_17 _v_16))))
  Maximum recursion depth reached
CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_11)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_12))=(nat-to-int _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_13))=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_14) (succ _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_15) (succ _qv_14))))
USE ASSUMPTION FAILED

  backtrack to: ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
  rewritten [11]: ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))))=(nat-to-int (len _v_16)))
  Maximum recursion depth reached
CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_11)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_12))=(nat-to-int _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_13))=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_14) (succ _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_15) (succ _qv_14))))
USE ASSUMPTION FAILED

  backtrack to: ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_11)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_12))=(nat-to-int _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_13))=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_14) (succ _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_15) (succ _qv_14))))
USE ASSUMPTION FAILED

  backtrack to: ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_11)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_12))=(nat-to-int _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_13))=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_14) (succ _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_15) (succ _qv_14))))
USE ASSUMPTION FAILED

  backtrack to: ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len _v_16)))
CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_11)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_12))=(nat-to-int _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_13))=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_14) (succ _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_15) (succ _qv_14))))
USE ASSUMPTION FAILED

  backtrack to: ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 _v_16))))
  rewritten [11]: ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
  sequence of rewrites only grows
CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_11)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_12))=(nat-to-int _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_13))=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_14) (succ _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_15) (succ _qv_14))))
USE ASSUMPTION FAILED

  backtrack to: ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 _v_16))))
  rewritten [11]: ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
  sequence of rewrites only grows
CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_11)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_12))=(nat-to-int _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_13))=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_14) (succ _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_15) (succ _qv_14))))
USE ASSUMPTION FAILED

  backtrack to: ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 _v_16))))
CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_11)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_12))=(nat-to-int _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_13))=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_14) (succ _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_15) (succ _qv_14))))
USE ASSUMPTION FAILED

  backtrack to: ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 _v_16))))
  rewritten [11]: ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
  rewritten [11]: ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
  sequence of rewrites only grows
CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_11)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_12))=(nat-to-int _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_13))=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_14) (succ _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_15) (succ _qv_14))))
USE ASSUMPTION FAILED

  backtrack to: ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
  rewritten [11]: ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
  sequence of rewrites only grows
CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_11)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_12))=(nat-to-int _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_13))=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_14) (succ _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_15) (succ _qv_14))))
USE ASSUMPTION FAILED

  backtrack to: ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
  rewritten [11]: ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
  sequence of rewrites only grows
CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_11)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_12))=(nat-to-int _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_13))=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_14) (succ _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_15) (succ _qv_14))))
USE ASSUMPTION FAILED

  backtrack to: ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
  rewritten [11]: ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
  sequence of rewrites only grows
CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_11)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_12))=(nat-to-int _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_13))=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_14) (succ _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_15) (succ _qv_14))))
USE ASSUMPTION FAILED

  backtrack to: ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_11)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_12))=(nat-to-int _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_13))=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_14) (succ _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_15) (succ _qv_14))))
USE ASSUMPTION FAILED

  backtrack to: ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 _v_16))))
  rewritten [11]: ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 _v_16))))
  rewritten [10]: ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len _v_16)))
  rewritten [11]: ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
  rewritten [11]: ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
  rewritten [11]: ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
  Maximum recursion depth reached
CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_11)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_12))=(nat-to-int _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_13))=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_14) (succ _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_15) (succ _qv_14))))
USE ASSUMPTION FAILED

  backtrack to: ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
  rewritten [11]: ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len (rotate _t_17 _v_16))))
  Maximum recursion depth reached
CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_11)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_12))=(nat-to-int _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_13))=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_14) (succ _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_15) (succ _qv_14))))
USE ASSUMPTION FAILED

  backtrack to: ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
  rewritten [11]: ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
  Maximum recursion depth reached
CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_11)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_12))=(nat-to-int _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_13))=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_14) (succ _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_15) (succ _qv_14))))
USE ASSUMPTION FAILED

  backtrack to: ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
  rewritten [11]: ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len (rotate _t_17 _v_16))))
  Maximum recursion depth reached
CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_11)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_12))=(nat-to-int _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_13))=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_14) (succ _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_15) (succ _qv_14))))
USE ASSUMPTION FAILED

  backtrack to: ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_11)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_12))=(nat-to-int _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_13))=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_14) (succ _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_15) (succ _qv_14))))
USE ASSUMPTION FAILED

  backtrack to: ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
  rewritten [11]: ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
  rewritten [11]: ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len (rotate _t_17 _v_16))))
  Maximum recursion depth reached
CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_11)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_12))=(nat-to-int _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_13))=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_14) (succ _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_15) (succ _qv_14))))
USE ASSUMPTION FAILED

  backtrack to: ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
  rewritten [11]: ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))))=(nat-to-int (len _v_16)))
  Maximum recursion depth reached
CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_11)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_12))=(nat-to-int _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_13))=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_14) (succ _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_15) (succ _qv_14))))
USE ASSUMPTION FAILED

  backtrack to: ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
  rewritten [11]: ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len (rotate _t_17 _v_16))))
  Maximum recursion depth reached
CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_11)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_12))=(nat-to-int _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_13))=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_14) (succ _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_15) (succ _qv_14))))
USE ASSUMPTION FAILED

  backtrack to: ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
  rewritten [11]: ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))))=(nat-to-int (len _v_16)))
  Maximum recursion depth reached
CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_11)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_12))=(nat-to-int _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_13))=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_14) (succ _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_15) (succ _qv_14))))
USE ASSUMPTION FAILED

  backtrack to: ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_11)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_12))=(nat-to-int _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_13))=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_14) (succ _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_15) (succ _qv_14))))
USE ASSUMPTION FAILED

  backtrack to: ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
  rewritten [11]: ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
  rewritten [11]: ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
  Maximum recursion depth reached
CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_11)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_12))=(nat-to-int _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_13))=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_14) (succ _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_15) (succ _qv_14))))
USE ASSUMPTION FAILED

  backtrack to: ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
  rewritten [11]: ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len (rotate _t_17 _v_16))))
  Maximum recursion depth reached
CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_11)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_12))=(nat-to-int _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_13))=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_14) (succ _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_15) (succ _qv_14))))
USE ASSUMPTION FAILED

  backtrack to: ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
  rewritten [11]: ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
  Maximum recursion depth reached
CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_11)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_12))=(nat-to-int _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_13))=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_14) (succ _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_15) (succ _qv_14))))
USE ASSUMPTION FAILED

  backtrack to: ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
  rewritten [11]: ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len (rotate _t_17 _v_16))))
  Maximum recursion depth reached
CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_11)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_12))=(nat-to-int _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_13))=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_14) (succ _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_15) (succ _qv_14))))
USE ASSUMPTION FAILED

  backtrack to: ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_11)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_12))=(nat-to-int _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_13))=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_14) (succ _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_15) (succ _qv_14))))
USE ASSUMPTION FAILED

  backtrack to: ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
  rewritten [11]: ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
  rewritten [11]: ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len (rotate _t_17 _v_16))))
  Maximum recursion depth reached
CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_11)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_12))=(nat-to-int _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_13))=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_14) (succ _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_15) (succ _qv_14))))
USE ASSUMPTION FAILED

  backtrack to: ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
  rewritten [11]: ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))))=(nat-to-int (len _v_16)))
  Maximum recursion depth reached
CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_11)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_12))=(nat-to-int _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_13))=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_14) (succ _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_15) (succ _qv_14))))
USE ASSUMPTION FAILED

  backtrack to: ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
  rewritten [11]: ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len (rotate _t_17 _v_16))))
  Maximum recursion depth reached
CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_11)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_12))=(nat-to-int _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_13))=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_14) (succ _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_15) (succ _qv_14))))
USE ASSUMPTION FAILED

  backtrack to: ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
  rewritten [11]: ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))))=(nat-to-int (len _v_16)))
  Maximum recursion depth reached
CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_11)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_12))=(nat-to-int _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_13))=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_14) (succ _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_15) (succ _qv_14))))
USE ASSUMPTION FAILED

  backtrack to: ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_11)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_12))=(nat-to-int _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_13))=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_14) (succ _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_15) (succ _qv_14))))
USE ASSUMPTION FAILED

  backtrack to: ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_11)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_12))=(nat-to-int _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_13))=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_14) (succ _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_15) (succ _qv_14))))
USE ASSUMPTION FAILED

  backtrack to: ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len _v_16)))
  rewritten [11]: ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
  rewritten [11]: ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
  rewritten [11]: ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
  Maximum recursion depth reached
CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_11)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_12))=(nat-to-int _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_13))=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_14) (succ _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_15) (succ _qv_14))))
USE ASSUMPTION FAILED

  backtrack to: ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
  rewritten [11]: ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len (rotate _t_17 _v_16))))
  Maximum recursion depth reached
CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_11)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_12))=(nat-to-int _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_13))=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_14) (succ _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_15) (succ _qv_14))))
USE ASSUMPTION FAILED

  backtrack to: ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
  rewritten [11]: ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
  Maximum recursion depth reached
CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_11)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_12))=(nat-to-int _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_13))=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_14) (succ _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_15) (succ _qv_14))))
USE ASSUMPTION FAILED

  backtrack to: ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
  rewritten [11]: ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len (rotate _t_17 _v_16))))
  Maximum recursion depth reached
CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_11)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_12))=(nat-to-int _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_13))=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_14) (succ _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_15) (succ _qv_14))))
USE ASSUMPTION FAILED

  backtrack to: ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_11)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_12))=(nat-to-int _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_13))=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_14) (succ _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_15) (succ _qv_14))))
USE ASSUMPTION FAILED

  backtrack to: ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
  rewritten [11]: ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
  rewritten [11]: ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len (rotate _t_17 _v_16))))
  Maximum recursion depth reached
CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_11)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_12))=(nat-to-int _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_13))=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_14) (succ _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_15) (succ _qv_14))))
USE ASSUMPTION FAILED

  backtrack to: ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
  rewritten [11]: ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))))=(nat-to-int (len _v_16)))
  Maximum recursion depth reached
CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_11)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_12))=(nat-to-int _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_13))=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_14) (succ _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_15) (succ _qv_14))))
USE ASSUMPTION FAILED

  backtrack to: ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
  rewritten [11]: ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len (rotate _t_17 _v_16))))
  Maximum recursion depth reached
CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_11)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_12))=(nat-to-int _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_13))=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_14) (succ _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_15) (succ _qv_14))))
USE ASSUMPTION FAILED

  backtrack to: ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
  rewritten [11]: ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))))=(nat-to-int (len _v_16)))
  Maximum recursion depth reached
CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_11)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_12))=(nat-to-int _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_13))=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_14) (succ _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_15) (succ _qv_14))))
USE ASSUMPTION FAILED

  backtrack to: ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_11)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_12))=(nat-to-int _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_13))=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_14) (succ _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_15) (succ _qv_14))))
USE ASSUMPTION FAILED

  backtrack to: ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
  rewritten [11]: ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
  rewritten [11]: ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
  Maximum recursion depth reached
CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_11)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_12))=(nat-to-int _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_13))=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_14) (succ _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_15) (succ _qv_14))))
USE ASSUMPTION FAILED

  backtrack to: ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
  rewritten [11]: ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len (rotate _t_17 _v_16))))
  Maximum recursion depth reached
CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_11)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_12))=(nat-to-int _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_13))=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_14) (succ _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_15) (succ _qv_14))))
USE ASSUMPTION FAILED

  backtrack to: ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
  rewritten [11]: ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
  Maximum recursion depth reached
CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_11)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_12))=(nat-to-int _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_13))=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_14) (succ _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_15) (succ _qv_14))))
USE ASSUMPTION FAILED

  backtrack to: ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
  rewritten [11]: ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len (rotate _t_17 _v_16))))
  Maximum recursion depth reached
CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_11)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_12))=(nat-to-int _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_13))=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_14) (succ _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_15) (succ _qv_14))))
USE ASSUMPTION FAILED

  backtrack to: ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_11)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_12))=(nat-to-int _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_13))=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_14) (succ _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_15) (succ _qv_14))))
USE ASSUMPTION FAILED

  backtrack to: ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
  rewritten [11]: ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
  rewritten [11]: ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len (rotate _t_17 _v_16))))
  Maximum recursion depth reached
CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_11)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_12))=(nat-to-int _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_13))=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_14) (succ _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_15) (succ _qv_14))))
USE ASSUMPTION FAILED

  backtrack to: ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
  rewritten [11]: ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))))=(nat-to-int (len _v_16)))
  Maximum recursion depth reached
CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_11)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_12))=(nat-to-int _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_13))=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_14) (succ _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_15) (succ _qv_14))))
USE ASSUMPTION FAILED

  backtrack to: ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
  rewritten [11]: ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len (rotate _t_17 _v_16))))
  Maximum recursion depth reached
CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_11)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_12))=(nat-to-int _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_13))=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_14) (succ _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_15) (succ _qv_14))))
USE ASSUMPTION FAILED

  backtrack to: ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
  rewritten [11]: ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))))=(nat-to-int (len _v_16)))
  Maximum recursion depth reached
CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_11)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_12))=(nat-to-int _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_13))=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_14) (succ _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_15) (succ _qv_14))))
USE ASSUMPTION FAILED

  backtrack to: ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_11)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_12))=(nat-to-int _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_13))=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_14) (succ _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_15) (succ _qv_14))))
USE ASSUMPTION FAILED

  backtrack to: ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_11)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_12))=(nat-to-int _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_13))=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_14) (succ _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_15) (succ _qv_14))))
USE ASSUMPTION FAILED

  backtrack to: ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len _v_16)))
CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_11)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_12))=(nat-to-int _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_13))=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_14) (succ _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_15) (succ _qv_14))))
USE ASSUMPTION FAILED

  backtrack to: ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 _v_16))))
  rewritten [11]: ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
  sequence of rewrites only grows
CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_11)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_12))=(nat-to-int _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_13))=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_14) (succ _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_15) (succ _qv_14))))
USE ASSUMPTION FAILED

  backtrack to: ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 _v_16))))
  rewritten [11]: ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
  sequence of rewrites only grows
CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_11)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_12))=(nat-to-int _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_13))=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_14) (succ _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_15) (succ _qv_14))))
USE ASSUMPTION FAILED

  backtrack to: ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 _v_16))))
  rewritten [10]: ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len _v_16)))
  rewritten [11]: ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
  rewritten [11]: ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
  rewritten [11]: ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
  Maximum recursion depth reached
CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_11)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_12))=(nat-to-int _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_13))=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_14) (succ _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_15) (succ _qv_14))))
USE ASSUMPTION FAILED

  backtrack to: ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
  rewritten [11]: ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len (rotate _t_17 _v_16))))
  Maximum recursion depth reached
CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_11)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_12))=(nat-to-int _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_13))=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_14) (succ _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_15) (succ _qv_14))))
USE ASSUMPTION FAILED

  backtrack to: ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
  rewritten [11]: ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
  Maximum recursion depth reached
CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_11)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_12))=(nat-to-int _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_13))=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_14) (succ _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_15) (succ _qv_14))))
USE ASSUMPTION FAILED

  backtrack to: ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
  rewritten [11]: ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len (rotate _t_17 _v_16))))
  Maximum recursion depth reached
CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_11)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_12))=(nat-to-int _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_13))=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_14) (succ _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_15) (succ _qv_14))))
USE ASSUMPTION FAILED

  backtrack to: ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_11)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_12))=(nat-to-int _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_13))=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_14) (succ _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_15) (succ _qv_14))))
USE ASSUMPTION FAILED

  backtrack to: ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
  rewritten [11]: ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
  rewritten [11]: ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len (rotate _t_17 _v_16))))
  Maximum recursion depth reached
CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_11)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_12))=(nat-to-int _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_13))=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_14) (succ _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_15) (succ _qv_14))))
USE ASSUMPTION FAILED

  backtrack to: ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
  rewritten [11]: ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))))=(nat-to-int (len _v_16)))
  Maximum recursion depth reached
CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_11)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_12))=(nat-to-int _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_13))=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_14) (succ _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_15) (succ _qv_14))))
USE ASSUMPTION FAILED

  backtrack to: ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
  rewritten [11]: ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len (rotate _t_17 _v_16))))
  Maximum recursion depth reached
CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_11)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_12))=(nat-to-int _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_13))=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_14) (succ _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_15) (succ _qv_14))))
USE ASSUMPTION FAILED

  backtrack to: ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
  rewritten [11]: ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))))=(nat-to-int (len _v_16)))
  Maximum recursion depth reached
CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_11)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_12))=(nat-to-int _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_13))=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_14) (succ _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_15) (succ _qv_14))))
USE ASSUMPTION FAILED

  backtrack to: ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_11)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_12))=(nat-to-int _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_13))=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_14) (succ _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_15) (succ _qv_14))))
USE ASSUMPTION FAILED

  backtrack to: ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
  rewritten [11]: ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
  rewritten [11]: ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
  Maximum recursion depth reached
CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_11)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_12))=(nat-to-int _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_13))=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_14) (succ _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_15) (succ _qv_14))))
USE ASSUMPTION FAILED

  backtrack to: ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
  rewritten [11]: ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len (rotate _t_17 _v_16))))
  Maximum recursion depth reached
CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_11)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_12))=(nat-to-int _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_13))=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_14) (succ _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_15) (succ _qv_14))))
USE ASSUMPTION FAILED

  backtrack to: ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
  rewritten [11]: ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
  Maximum recursion depth reached
CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_11)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_12))=(nat-to-int _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_13))=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_14) (succ _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_15) (succ _qv_14))))
USE ASSUMPTION FAILED

  backtrack to: ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
  rewritten [11]: ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len (rotate _t_17 _v_16))))
  Maximum recursion depth reached
CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_11)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_12))=(nat-to-int _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_13))=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_14) (succ _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_15) (succ _qv_14))))
USE ASSUMPTION FAILED

  backtrack to: ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_11)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_12))=(nat-to-int _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_13))=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_14) (succ _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_15) (succ _qv_14))))
USE ASSUMPTION FAILED

  backtrack to: ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
  rewritten [11]: ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
  rewritten [11]: ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len (rotate _t_17 _v_16))))
  Maximum recursion depth reached
CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_11)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_12))=(nat-to-int _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_13))=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_14) (succ _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_15) (succ _qv_14))))
USE ASSUMPTION FAILED

  backtrack to: ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
  rewritten [11]: ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))))=(nat-to-int (len _v_16)))
  Maximum recursion depth reached
CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_11)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_12))=(nat-to-int _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_13))=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_14) (succ _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_15) (succ _qv_14))))
USE ASSUMPTION FAILED

  backtrack to: ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
  rewritten [11]: ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len (rotate _t_17 _v_16))))
  Maximum recursion depth reached
CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_11)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_12))=(nat-to-int _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_13))=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_14) (succ _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_15) (succ _qv_14))))
USE ASSUMPTION FAILED

  backtrack to: ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
  rewritten [11]: ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))))=(nat-to-int (len _v_16)))
  Maximum recursion depth reached
CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_11)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_12))=(nat-to-int _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_13))=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_14) (succ _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_15) (succ _qv_14))))
USE ASSUMPTION FAILED

  backtrack to: ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_11)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_12))=(nat-to-int _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_13))=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_14) (succ _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_15) (succ _qv_14))))
USE ASSUMPTION FAILED

  backtrack to: ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_11)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_12))=(nat-to-int _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_13))=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_14) (succ _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_15) (succ _qv_14))))
USE ASSUMPTION FAILED

  backtrack to: ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len _v_16)))
  rewritten [11]: ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
  rewritten [11]: ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
  rewritten [11]: ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
  Maximum recursion depth reached
CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_11)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_12))=(nat-to-int _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_13))=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_14) (succ _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_15) (succ _qv_14))))
USE ASSUMPTION FAILED

  backtrack to: ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
  rewritten [11]: ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len (rotate _t_17 _v_16))))
  Maximum recursion depth reached
CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_11)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_12))=(nat-to-int _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_13))=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_14) (succ _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_15) (succ _qv_14))))
USE ASSUMPTION FAILED

  backtrack to: ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
  rewritten [11]: ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
  Maximum recursion depth reached
CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_11)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_12))=(nat-to-int _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_13))=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_14) (succ _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_15) (succ _qv_14))))
USE ASSUMPTION FAILED

  backtrack to: ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
  rewritten [11]: ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len (rotate _t_17 _v_16))))
  Maximum recursion depth reached
CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_11)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_12))=(nat-to-int _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_13))=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_14) (succ _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_15) (succ _qv_14))))
USE ASSUMPTION FAILED

  backtrack to: ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_11)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_12))=(nat-to-int _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_13))=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_14) (succ _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_15) (succ _qv_14))))
USE ASSUMPTION FAILED

  backtrack to: ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
  rewritten [11]: ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
  rewritten [11]: ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len (rotate _t_17 _v_16))))
  Maximum recursion depth reached
CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_11)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_12))=(nat-to-int _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_13))=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_14) (succ _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_15) (succ _qv_14))))
USE ASSUMPTION FAILED

  backtrack to: ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
  rewritten [11]: ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))))=(nat-to-int (len _v_16)))
  Maximum recursion depth reached
CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_11)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_12))=(nat-to-int _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_13))=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_14) (succ _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_15) (succ _qv_14))))
USE ASSUMPTION FAILED

  backtrack to: ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
  rewritten [11]: ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len (rotate _t_17 _v_16))))
  Maximum recursion depth reached
CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_11)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_12))=(nat-to-int _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_13))=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_14) (succ _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_15) (succ _qv_14))))
USE ASSUMPTION FAILED

  backtrack to: ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
  rewritten [11]: ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))))=(nat-to-int (len _v_16)))
  Maximum recursion depth reached
CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_11)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_12))=(nat-to-int _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_13))=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_14) (succ _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_15) (succ _qv_14))))
USE ASSUMPTION FAILED

  backtrack to: ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_11)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_12))=(nat-to-int _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_13))=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_14) (succ _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_15) (succ _qv_14))))
USE ASSUMPTION FAILED

  backtrack to: ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
  rewritten [11]: ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
  rewritten [11]: ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
  Maximum recursion depth reached
CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_11)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_12))=(nat-to-int _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_13))=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_14) (succ _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_15) (succ _qv_14))))
USE ASSUMPTION FAILED

  backtrack to: ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
  rewritten [11]: ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len (rotate _t_17 _v_16))))
  Maximum recursion depth reached
CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_11)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_12))=(nat-to-int _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_13))=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_14) (succ _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_15) (succ _qv_14))))
USE ASSUMPTION FAILED

  backtrack to: ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
  rewritten [11]: ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
  Maximum recursion depth reached
CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_11)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_12))=(nat-to-int _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_13))=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_14) (succ _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_15) (succ _qv_14))))
USE ASSUMPTION FAILED

  backtrack to: ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
  rewritten [11]: ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len (rotate _t_17 _v_16))))
  Maximum recursion depth reached
CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_11)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_12))=(nat-to-int _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_13))=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_14) (succ _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_15) (succ _qv_14))))
USE ASSUMPTION FAILED

  backtrack to: ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_11)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_12))=(nat-to-int _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_13))=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_14) (succ _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_15) (succ _qv_14))))
USE ASSUMPTION FAILED

  backtrack to: ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
  rewritten [11]: ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
  rewritten [11]: ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len (rotate _t_17 _v_16))))
  Maximum recursion depth reached
CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_11)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_12))=(nat-to-int _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_13))=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_14) (succ _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_15) (succ _qv_14))))
USE ASSUMPTION FAILED

  backtrack to: ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
  rewritten [11]: ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))))=(nat-to-int (len _v_16)))
  Maximum recursion depth reached
CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_11)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_12))=(nat-to-int _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_13))=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_14) (succ _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_15) (succ _qv_14))))
USE ASSUMPTION FAILED

  backtrack to: ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
  rewritten [11]: ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len (rotate _t_17 _v_16))))
  Maximum recursion depth reached
CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_11)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_12))=(nat-to-int _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_13))=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_14) (succ _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_15) (succ _qv_14))))
USE ASSUMPTION FAILED

  backtrack to: ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
  rewritten [11]: ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))))=(nat-to-int (len _v_16)))
  Maximum recursion depth reached
CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_11)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_12))=(nat-to-int _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_13))=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_14) (succ _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_15) (succ _qv_14))))
USE ASSUMPTION FAILED

  backtrack to: ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_11)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_12))=(nat-to-int _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_13))=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_14) (succ _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_15) (succ _qv_14))))
USE ASSUMPTION FAILED

  backtrack to: ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_11)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_12))=(nat-to-int _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_13))=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_14) (succ _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_15) (succ _qv_14))))
USE ASSUMPTION FAILED

  backtrack to: ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len _v_16)))
CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_11)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_12))=(nat-to-int _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_13))=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_14) (succ _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_15) (succ _qv_14))))
USE ASSUMPTION FAILED

  backtrack to: ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 _v_16))))
  rewritten [11]: ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
  sequence of rewrites only grows
CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_11)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_12))=(nat-to-int _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_13))=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_14) (succ _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_15) (succ _qv_14))))
USE ASSUMPTION FAILED

  backtrack to: ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 _v_16))))
  rewritten [11]: ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
  sequence of rewrites only grows
CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_11)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_12))=(nat-to-int _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_13))=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_14) (succ _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_15) (succ _qv_14))))
USE ASSUMPTION FAILED

  backtrack to: ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 _v_16))))
CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_11)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_12))=(nat-to-int _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_13))=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_14) (succ _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_15) (succ _qv_14))))
USE ASSUMPTION FAILED

  backtrack to: ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 _v_16))))
  rewritten [11]: ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
  rewritten [11]: ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
  sequence of rewrites only grows
CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_11)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_12))=(nat-to-int _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_13))=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_14) (succ _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_15) (succ _qv_14))))
USE ASSUMPTION FAILED

  backtrack to: ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
  rewritten [11]: ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
  sequence of rewrites only grows
CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_11)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_12))=(nat-to-int _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_13))=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_14) (succ _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_15) (succ _qv_14))))
USE ASSUMPTION FAILED

  backtrack to: ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
  rewritten [11]: ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
  sequence of rewrites only grows
CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_11)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_12))=(nat-to-int _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_13))=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_14) (succ _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_15) (succ _qv_14))))
USE ASSUMPTION FAILED

  backtrack to: ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
  rewritten [11]: ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
  sequence of rewrites only grows
CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_11)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_12))=(nat-to-int _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_13))=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_14) (succ _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_15) (succ _qv_14))))
USE ASSUMPTION FAILED

  backtrack to: ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_11)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_12))=(nat-to-int _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_13))=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_14) (succ _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_15) (succ _qv_14))))
USE ASSUMPTION FAILED

  backtrack to: ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 _v_16))))
CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_11)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_12))=(nat-to-int _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_13))=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_14) (succ _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_15) (succ _qv_14))))
USE ASSUMPTION FAILED

  backtrack to: ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len _v_16)))
  rewritten [11]: ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len _v_16)))
  rewritten [11]: ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 _v_16))))
  rewritten [10]: ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 _v_16))))
  rewritten [11]: ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
  rewritten [11]: ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
  rewritten [11]: ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
  Maximum recursion depth reached
CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_11)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_12))=(nat-to-int _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_13))=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_14) (succ _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_15) (succ _qv_14))))
USE ASSUMPTION FAILED

  backtrack to: ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
  rewritten [11]: ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
  Maximum recursion depth reached
CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_11)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_12))=(nat-to-int _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_13))=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_14) (succ _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_15) (succ _qv_14))))
USE ASSUMPTION FAILED

  backtrack to: ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
  rewritten [11]: ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
  Maximum recursion depth reached
CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_11)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_12))=(nat-to-int _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_13))=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_14) (succ _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_15) (succ _qv_14))))
USE ASSUMPTION FAILED

  backtrack to: ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
  rewritten [11]: ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
  Maximum recursion depth reached
CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_11)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_12))=(nat-to-int _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_13))=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_14) (succ _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_15) (succ _qv_14))))
USE ASSUMPTION FAILED

  backtrack to: ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_11)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_12))=(nat-to-int _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_13))=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_14) (succ _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_15) (succ _qv_14))))
USE ASSUMPTION FAILED

  backtrack to: ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
  rewritten [11]: ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
  rewritten [11]: ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
  Maximum recursion depth reached
CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_11)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_12))=(nat-to-int _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_13))=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_14) (succ _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_15) (succ _qv_14))))
USE ASSUMPTION FAILED

  backtrack to: ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
  rewritten [11]: ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16)))))))
  Maximum recursion depth reached
CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_11)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_12))=(nat-to-int _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_13))=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_14) (succ _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_15) (succ _qv_14))))
USE ASSUMPTION FAILED

  backtrack to: ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
  rewritten [11]: ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
  Maximum recursion depth reached
CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_11)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_12))=(nat-to-int _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_13))=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_14) (succ _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_15) (succ _qv_14))))
USE ASSUMPTION FAILED

  backtrack to: ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
  rewritten [11]: ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16)))))))
  Maximum recursion depth reached
CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_11)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_12))=(nat-to-int _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_13))=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_14) (succ _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_15) (succ _qv_14))))
USE ASSUMPTION FAILED

  backtrack to: ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_11)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_12))=(nat-to-int _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_13))=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_14) (succ _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_15) (succ _qv_14))))
USE ASSUMPTION FAILED

  backtrack to: ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
  rewritten [11]: ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
  rewritten [11]: ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
  Maximum recursion depth reached
CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_11)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_12))=(nat-to-int _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_13))=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_14) (succ _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_15) (succ _qv_14))))
USE ASSUMPTION FAILED

  backtrack to: ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
  rewritten [11]: ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
  Maximum recursion depth reached
CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_11)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_12))=(nat-to-int _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_13))=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_14) (succ _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_15) (succ _qv_14))))
USE ASSUMPTION FAILED

  backtrack to: ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
  rewritten [11]: ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
  Maximum recursion depth reached
CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_11)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_12))=(nat-to-int _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_13))=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_14) (succ _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_15) (succ _qv_14))))
USE ASSUMPTION FAILED

  backtrack to: ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
  rewritten [11]: ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
  Maximum recursion depth reached
CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_11)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_12))=(nat-to-int _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_13))=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_14) (succ _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_15) (succ _qv_14))))
USE ASSUMPTION FAILED

  backtrack to: ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_11)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_12))=(nat-to-int _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_13))=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_14) (succ _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_15) (succ _qv_14))))
USE ASSUMPTION FAILED

  backtrack to: ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
  rewritten [11]: ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
  rewritten [11]: ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
  Maximum recursion depth reached
CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_11)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_12))=(nat-to-int _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_13))=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_14) (succ _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_15) (succ _qv_14))))
USE ASSUMPTION FAILED

  backtrack to: ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
  rewritten [11]: ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16)))))))
  Maximum recursion depth reached
CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_11)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_12))=(nat-to-int _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_13))=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_14) (succ _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_15) (succ _qv_14))))
USE ASSUMPTION FAILED

  backtrack to: ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
  rewritten [11]: ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
  Maximum recursion depth reached
CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_11)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_12))=(nat-to-int _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_13))=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_14) (succ _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_15) (succ _qv_14))))
USE ASSUMPTION FAILED

  backtrack to: ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
  rewritten [11]: ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16)))))))
  Maximum recursion depth reached
CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_11)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_12))=(nat-to-int _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_13))=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_14) (succ _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_15) (succ _qv_14))))
USE ASSUMPTION FAILED

  backtrack to: ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_11)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_12))=(nat-to-int _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_13))=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_14) (succ _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_15) (succ _qv_14))))
USE ASSUMPTION FAILED

  backtrack to: ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_11)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_12))=(nat-to-int _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_13))=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_14) (succ _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_15) (succ _qv_14))))
USE ASSUMPTION FAILED

  backtrack to: ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 _v_16))))
  rewritten [11]: ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
  rewritten [11]: ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
  rewritten [11]: ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
  Maximum recursion depth reached
CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_11)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_12))=(nat-to-int _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_13))=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_14) (succ _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_15) (succ _qv_14))))
USE ASSUMPTION FAILED

  backtrack to: ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
  rewritten [11]: ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
  Maximum recursion depth reached
CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_11)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_12))=(nat-to-int _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_13))=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_14) (succ _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_15) (succ _qv_14))))
USE ASSUMPTION FAILED

  backtrack to: ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
  rewritten [11]: ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
  Maximum recursion depth reached
CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_11)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_12))=(nat-to-int _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_13))=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_14) (succ _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_15) (succ _qv_14))))
USE ASSUMPTION FAILED

  backtrack to: ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
  rewritten [11]: ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
  Maximum recursion depth reached
CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_11)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_12))=(nat-to-int _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_13))=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_14) (succ _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_15) (succ _qv_14))))
USE ASSUMPTION FAILED

  backtrack to: ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_11)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_12))=(nat-to-int _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_13))=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_14) (succ _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_15) (succ _qv_14))))
USE ASSUMPTION FAILED

  backtrack to: ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
  rewritten [11]: ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
  rewritten [11]: ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
  Maximum recursion depth reached
CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_11)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_12))=(nat-to-int _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_13))=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_14) (succ _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_15) (succ _qv_14))))
USE ASSUMPTION FAILED

  backtrack to: ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
  rewritten [11]: ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16)))))))
  Maximum recursion depth reached
CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_11)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_12))=(nat-to-int _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_13))=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_14) (succ _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_15) (succ _qv_14))))
USE ASSUMPTION FAILED

  backtrack to: ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
  rewritten [11]: ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
  Maximum recursion depth reached
CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_11)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_12))=(nat-to-int _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_13))=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_14) (succ _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_15) (succ _qv_14))))
USE ASSUMPTION FAILED

  backtrack to: ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
  rewritten [11]: ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16)))))))
  Maximum recursion depth reached
CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_11)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_12))=(nat-to-int _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_13))=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_14) (succ _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_15) (succ _qv_14))))
USE ASSUMPTION FAILED

  backtrack to: ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_11)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_12))=(nat-to-int _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_13))=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_14) (succ _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_15) (succ _qv_14))))
USE ASSUMPTION FAILED

  backtrack to: ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
  rewritten [11]: ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
  rewritten [11]: ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
  Maximum recursion depth reached
CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_11)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_12))=(nat-to-int _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_13))=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_14) (succ _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_15) (succ _qv_14))))
USE ASSUMPTION FAILED

  backtrack to: ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
  rewritten [11]: ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
  Maximum recursion depth reached
CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_11)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_12))=(nat-to-int _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_13))=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_14) (succ _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_15) (succ _qv_14))))
USE ASSUMPTION FAILED

  backtrack to: ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
  rewritten [11]: ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
  Maximum recursion depth reached
CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_11)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_12))=(nat-to-int _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_13))=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_14) (succ _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_15) (succ _qv_14))))
USE ASSUMPTION FAILED

  backtrack to: ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
  rewritten [11]: ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
  Maximum recursion depth reached
CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_11)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_12))=(nat-to-int _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_13))=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_14) (succ _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_15) (succ _qv_14))))
USE ASSUMPTION FAILED

  backtrack to: ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_11)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_12))=(nat-to-int _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_13))=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_14) (succ _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_15) (succ _qv_14))))
USE ASSUMPTION FAILED

  backtrack to: ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
  rewritten [11]: ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
  rewritten [11]: ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
  Maximum recursion depth reached
CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_11)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_12))=(nat-to-int _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_13))=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_14) (succ _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_15) (succ _qv_14))))
USE ASSUMPTION FAILED

  backtrack to: ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
  rewritten [11]: ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16)))))))
  Maximum recursion depth reached
CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_11)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_12))=(nat-to-int _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_13))=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_14) (succ _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_15) (succ _qv_14))))
USE ASSUMPTION FAILED

  backtrack to: ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
  rewritten [11]: ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
  Maximum recursion depth reached
CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_11)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_12))=(nat-to-int _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_13))=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_14) (succ _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_15) (succ _qv_14))))
USE ASSUMPTION FAILED

  backtrack to: ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
  rewritten [11]: ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16)))))))
  Maximum recursion depth reached
CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_11)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_12))=(nat-to-int _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_13))=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_14) (succ _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_15) (succ _qv_14))))
USE ASSUMPTION FAILED

  backtrack to: ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_11)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_12))=(nat-to-int _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_13))=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_14) (succ _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_15) (succ _qv_14))))
USE ASSUMPTION FAILED

  backtrack to: ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_11)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_12))=(nat-to-int _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_13))=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_14) (succ _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_15) (succ _qv_14))))
USE ASSUMPTION FAILED

  backtrack to: ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 _v_16))))
CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_11)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_12))=(nat-to-int _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_13))=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_14) (succ _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_15) (succ _qv_14))))
USE ASSUMPTION FAILED

  backtrack to: ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 _v_16))))
  rewritten [11]: ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
  sequence of rewrites only grows
CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_11)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_12))=(nat-to-int _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_13))=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_14) (succ _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_15) (succ _qv_14))))
USE ASSUMPTION FAILED

  backtrack to: ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 _v_16))))
  rewritten [11]: ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
  sequence of rewrites only grows
CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_11)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_12))=(nat-to-int _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_13))=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_14) (succ _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_15) (succ _qv_14))))
USE ASSUMPTION FAILED

  backtrack to: ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 _v_16))))
  rewritten [10]: ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 _v_16))))
  rewritten [11]: ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
  rewritten [11]: ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
  rewritten [11]: ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
  Maximum recursion depth reached
CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_11)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_12))=(nat-to-int _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_13))=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_14) (succ _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_15) (succ _qv_14))))
USE ASSUMPTION FAILED

  backtrack to: ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
  rewritten [11]: ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
  Maximum recursion depth reached
CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_11)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_12))=(nat-to-int _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_13))=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_14) (succ _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_15) (succ _qv_14))))
USE ASSUMPTION FAILED

  backtrack to: ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
  rewritten [11]: ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
  Maximum recursion depth reached
CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_11)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_12))=(nat-to-int _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_13))=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_14) (succ _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_15) (succ _qv_14))))
USE ASSUMPTION FAILED

  backtrack to: ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
  rewritten [11]: ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
  Maximum recursion depth reached
CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_11)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_12))=(nat-to-int _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_13))=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_14) (succ _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_15) (succ _qv_14))))
USE ASSUMPTION FAILED

  backtrack to: ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_11)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_12))=(nat-to-int _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_13))=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_14) (succ _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_15) (succ _qv_14))))
USE ASSUMPTION FAILED

  backtrack to: ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
  rewritten [11]: ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
  rewritten [11]: ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
  Maximum recursion depth reached
CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_11)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_12))=(nat-to-int _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_13))=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_14) (succ _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_15) (succ _qv_14))))
USE ASSUMPTION FAILED

  backtrack to: ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
  rewritten [11]: ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16)))))))
  Maximum recursion depth reached
CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_11)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_12))=(nat-to-int _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_13))=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_14) (succ _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_15) (succ _qv_14))))
USE ASSUMPTION FAILED

  backtrack to: ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
  rewritten [11]: ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
  Maximum recursion depth reached
CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_11)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_12))=(nat-to-int _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_13))=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_14) (succ _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_15) (succ _qv_14))))
USE ASSUMPTION FAILED

  backtrack to: ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
  rewritten [11]: ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16)))))))
  Maximum recursion depth reached
CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_11)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_12))=(nat-to-int _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_13))=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_14) (succ _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_15) (succ _qv_14))))
USE ASSUMPTION FAILED

  backtrack to: ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_11)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_12))=(nat-to-int _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_13))=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_14) (succ _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_15) (succ _qv_14))))
USE ASSUMPTION FAILED

  backtrack to: ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
  rewritten [11]: ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
  rewritten [11]: ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
  Maximum recursion depth reached
CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_11)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_12))=(nat-to-int _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_13))=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_14) (succ _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_15) (succ _qv_14))))
USE ASSUMPTION FAILED

  backtrack to: ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
  rewritten [11]: ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
  Maximum recursion depth reached
CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_11)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_12))=(nat-to-int _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_13))=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_14) (succ _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_15) (succ _qv_14))))
USE ASSUMPTION FAILED

  backtrack to: ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
  rewritten [11]: ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
  Maximum recursion depth reached
CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_11)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_12))=(nat-to-int _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_13))=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_14) (succ _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_15) (succ _qv_14))))
USE ASSUMPTION FAILED

  backtrack to: ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
  rewritten [11]: ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
  Maximum recursion depth reached
CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_11)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_12))=(nat-to-int _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_13))=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_14) (succ _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_15) (succ _qv_14))))
USE ASSUMPTION FAILED

  backtrack to: ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_11)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_12))=(nat-to-int _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_13))=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_14) (succ _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_15) (succ _qv_14))))
USE ASSUMPTION FAILED

  backtrack to: ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
  rewritten [11]: ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
  rewritten [11]: ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
  Maximum recursion depth reached
CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_11)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_12))=(nat-to-int _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_13))=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_14) (succ _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_15) (succ _qv_14))))
USE ASSUMPTION FAILED

  backtrack to: ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
  rewritten [11]: ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16)))))))
  Maximum recursion depth reached
CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_11)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_12))=(nat-to-int _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_13))=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_14) (succ _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_15) (succ _qv_14))))
USE ASSUMPTION FAILED

  backtrack to: ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
  rewritten [11]: ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
  Maximum recursion depth reached
CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_11)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_12))=(nat-to-int _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_13))=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_14) (succ _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_15) (succ _qv_14))))
USE ASSUMPTION FAILED

  backtrack to: ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
  rewritten [11]: ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16)))))))
  Maximum recursion depth reached
CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_11)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_12))=(nat-to-int _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_13))=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_14) (succ _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_15) (succ _qv_14))))
USE ASSUMPTION FAILED

  backtrack to: ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_11)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_12))=(nat-to-int _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_13))=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_14) (succ _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_15) (succ _qv_14))))
USE ASSUMPTION FAILED

  backtrack to: ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_11)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_12))=(nat-to-int _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_13))=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_14) (succ _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_15) (succ _qv_14))))
USE ASSUMPTION FAILED

  backtrack to: ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 _v_16))))
  rewritten [11]: ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
  rewritten [11]: ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
  rewritten [11]: ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
  Maximum recursion depth reached
CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_11)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_12))=(nat-to-int _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_13))=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_14) (succ _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_15) (succ _qv_14))))
USE ASSUMPTION FAILED

  backtrack to: ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
  rewritten [11]: ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
  Maximum recursion depth reached
CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_11)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_12))=(nat-to-int _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_13))=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_14) (succ _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_15) (succ _qv_14))))
USE ASSUMPTION FAILED

  backtrack to: ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
  rewritten [11]: ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
  Maximum recursion depth reached
CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_11)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_12))=(nat-to-int _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_13))=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_14) (succ _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_15) (succ _qv_14))))
USE ASSUMPTION FAILED

  backtrack to: ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
  rewritten [11]: ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
  Maximum recursion depth reached
CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_11)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_12))=(nat-to-int _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_13))=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_14) (succ _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_15) (succ _qv_14))))
USE ASSUMPTION FAILED

  backtrack to: ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_11)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_12))=(nat-to-int _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_13))=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_14) (succ _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_15) (succ _qv_14))))
USE ASSUMPTION FAILED

  backtrack to: ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
  rewritten [11]: ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
  rewritten [11]: ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
  Maximum recursion depth reached
CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_11)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_12))=(nat-to-int _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_13))=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_14) (succ _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_15) (succ _qv_14))))
USE ASSUMPTION FAILED

  backtrack to: ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
  rewritten [11]: ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16)))))))
  Maximum recursion depth reached
CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_11)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_12))=(nat-to-int _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_13))=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_14) (succ _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_15) (succ _qv_14))))
USE ASSUMPTION FAILED

  backtrack to: ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
  rewritten [11]: ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
  Maximum recursion depth reached
CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_11)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_12))=(nat-to-int _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_13))=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_14) (succ _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_15) (succ _qv_14))))
USE ASSUMPTION FAILED

  backtrack to: ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
  rewritten [11]: ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16)))))))
  Maximum recursion depth reached
CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_11)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_12))=(nat-to-int _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_13))=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_14) (succ _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_15) (succ _qv_14))))
USE ASSUMPTION FAILED

  backtrack to: ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_11)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_12))=(nat-to-int _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_13))=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_14) (succ _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_15) (succ _qv_14))))
USE ASSUMPTION FAILED

  backtrack to: ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
  rewritten [11]: ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
  rewritten [11]: ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
  Maximum recursion depth reached
CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_11)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_12))=(nat-to-int _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_13))=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_14) (succ _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_15) (succ _qv_14))))
USE ASSUMPTION FAILED

  backtrack to: ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
  rewritten [11]: ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
  Maximum recursion depth reached
CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_11)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_12))=(nat-to-int _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_13))=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_14) (succ _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_15) (succ _qv_14))))
USE ASSUMPTION FAILED

  backtrack to: ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
  rewritten [11]: ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
  Maximum recursion depth reached
CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_11)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_12))=(nat-to-int _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_13))=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_14) (succ _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_15) (succ _qv_14))))
USE ASSUMPTION FAILED

  backtrack to: ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
  rewritten [11]: ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
  Maximum recursion depth reached
CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_11)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_12))=(nat-to-int _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_13))=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_14) (succ _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_15) (succ _qv_14))))
USE ASSUMPTION FAILED

  backtrack to: ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_11)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_12))=(nat-to-int _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_13))=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_14) (succ _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_15) (succ _qv_14))))
USE ASSUMPTION FAILED

  backtrack to: ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
  rewritten [11]: ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
  rewritten [11]: ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
  Maximum recursion depth reached
CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_11)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_12))=(nat-to-int _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_13))=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_14) (succ _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_15) (succ _qv_14))))
USE ASSUMPTION FAILED

  backtrack to: ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
  rewritten [11]: ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16)))))))
  Maximum recursion depth reached
CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_11)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_12))=(nat-to-int _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_13))=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_14) (succ _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_15) (succ _qv_14))))
USE ASSUMPTION FAILED

  backtrack to: ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
  rewritten [11]: ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
  Maximum recursion depth reached
CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_11)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_12))=(nat-to-int _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_13))=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_14) (succ _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_15) (succ _qv_14))))
USE ASSUMPTION FAILED

  backtrack to: ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
  rewritten [11]: ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16)))))))
  Maximum recursion depth reached
CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_11)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_12))=(nat-to-int _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_13))=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_14) (succ _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_15) (succ _qv_14))))
USE ASSUMPTION FAILED

  backtrack to: ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_11)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_12))=(nat-to-int _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_13))=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_14) (succ _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_15) (succ _qv_14))))
USE ASSUMPTION FAILED

  backtrack to: ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_11)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_12))=(nat-to-int _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_13))=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_14) (succ _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_15) (succ _qv_14))))
USE ASSUMPTION FAILED

  backtrack to: ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 _v_16))))
CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_11)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_12))=(nat-to-int _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_13))=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_14) (succ _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_15) (succ _qv_14))))
USE ASSUMPTION FAILED

  backtrack to: ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 _v_16))))
  rewritten [11]: ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
  sequence of rewrites only grows
CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_11)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_12))=(nat-to-int _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_13))=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_14) (succ _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_15) (succ _qv_14))))
USE ASSUMPTION FAILED

  backtrack to: ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 _v_16))))
  rewritten [11]: ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
  sequence of rewrites only grows
CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_11)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_12))=(nat-to-int _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_13))=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_14) (succ _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_15) (succ _qv_14))))
USE ASSUMPTION FAILED

  backtrack to: ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 _v_16))))
CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_11)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_12))=(nat-to-int _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_13))=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_14) (succ _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_15) (succ _qv_14))))
USE ASSUMPTION FAILED

  backtrack to: ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len _v_16)))
  rewritten [11]: ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
  rewritten [11]: ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
  sequence of rewrites only grows
CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_11)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_12))=(nat-to-int _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_13))=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_14) (succ _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_15) (succ _qv_14))))
USE ASSUMPTION FAILED

  backtrack to: ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
  rewritten [11]: ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
  sequence of rewrites only grows
CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_11)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_12))=(nat-to-int _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_13))=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_14) (succ _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_15) (succ _qv_14))))
USE ASSUMPTION FAILED

  backtrack to: ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
  rewritten [11]: ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
  sequence of rewrites only grows
CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_11)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_12))=(nat-to-int _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_13))=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_14) (succ _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_15) (succ _qv_14))))
USE ASSUMPTION FAILED

  backtrack to: ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
  rewritten [11]: ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
  sequence of rewrites only grows
CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_11)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_12))=(nat-to-int _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_13))=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_14) (succ _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_15) (succ _qv_14))))
USE ASSUMPTION FAILED

  backtrack to: ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_11)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_12))=(nat-to-int _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_13))=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_14) (succ _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_15) (succ _qv_14))))
USE ASSUMPTION FAILED

  backtrack to: ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len _v_16)))
  rewritten [11]: ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 _v_16))))
  rewritten [10]: ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 _v_16))))
  rewritten [11]: ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
  rewritten [11]: ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
  rewritten [11]: ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
  Maximum recursion depth reached
CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_11)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_12))=(nat-to-int _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_13))=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_14) (succ _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_15) (succ _qv_14))))
USE ASSUMPTION FAILED

  backtrack to: ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
  rewritten [11]: ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
  Maximum recursion depth reached
CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_11)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_12))=(nat-to-int _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_13))=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_14) (succ _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_15) (succ _qv_14))))
USE ASSUMPTION FAILED

  backtrack to: ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
  rewritten [11]: ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
  Maximum recursion depth reached
CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_11)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_12))=(nat-to-int _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_13))=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_14) (succ _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_15) (succ _qv_14))))
USE ASSUMPTION FAILED

  backtrack to: ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
  rewritten [11]: ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
  Maximum recursion depth reached
CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_11)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_12))=(nat-to-int _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_13))=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_14) (succ _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_15) (succ _qv_14))))
USE ASSUMPTION FAILED

  backtrack to: ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_11)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_12))=(nat-to-int _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_13))=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_14) (succ _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_15) (succ _qv_14))))
USE ASSUMPTION FAILED

  backtrack to: ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
  rewritten [11]: ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
  rewritten [11]: ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
  Maximum recursion depth reached
CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_11)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_12))=(nat-to-int _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_13))=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_14) (succ _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_15) (succ _qv_14))))
USE ASSUMPTION FAILED

  backtrack to: ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
  rewritten [11]: ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16)))))))
  Maximum recursion depth reached
CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_11)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_12))=(nat-to-int _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_13))=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_14) (succ _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_15) (succ _qv_14))))
USE ASSUMPTION FAILED

  backtrack to: ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
  rewritten [11]: ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
  Maximum recursion depth reached
CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_11)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_12))=(nat-to-int _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_13))=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_14) (succ _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_15) (succ _qv_14))))
USE ASSUMPTION FAILED

  backtrack to: ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
  rewritten [11]: ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16)))))))
  Maximum recursion depth reached
CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_11)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_12))=(nat-to-int _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_13))=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_14) (succ _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_15) (succ _qv_14))))
USE ASSUMPTION FAILED

  backtrack to: ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_11)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_12))=(nat-to-int _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_13))=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_14) (succ _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_15) (succ _qv_14))))
USE ASSUMPTION FAILED

  backtrack to: ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
  rewritten [11]: ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
  rewritten [11]: ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
  Maximum recursion depth reached
CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_11)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_12))=(nat-to-int _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_13))=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_14) (succ _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_15) (succ _qv_14))))
USE ASSUMPTION FAILED

  backtrack to: ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
  rewritten [11]: ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
  Maximum recursion depth reached
CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_11)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_12))=(nat-to-int _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_13))=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_14) (succ _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_15) (succ _qv_14))))
USE ASSUMPTION FAILED

  backtrack to: ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
  rewritten [11]: ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
  Maximum recursion depth reached
CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_11)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_12))=(nat-to-int _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_13))=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_14) (succ _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_15) (succ _qv_14))))
USE ASSUMPTION FAILED

  backtrack to: ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
  rewritten [11]: ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
  Maximum recursion depth reached
CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_11)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_12))=(nat-to-int _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_13))=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_14) (succ _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_15) (succ _qv_14))))
USE ASSUMPTION FAILED

  backtrack to: ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_11)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_12))=(nat-to-int _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_13))=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_14) (succ _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_15) (succ _qv_14))))
USE ASSUMPTION FAILED

  backtrack to: ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
  rewritten [11]: ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
  rewritten [11]: ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
  Maximum recursion depth reached
CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_11)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_12))=(nat-to-int _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_13))=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_14) (succ _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_15) (succ _qv_14))))
USE ASSUMPTION FAILED

  backtrack to: ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
  rewritten [11]: ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16)))))))
  Maximum recursion depth reached
CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_11)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_12))=(nat-to-int _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_13))=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_14) (succ _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_15) (succ _qv_14))))
USE ASSUMPTION FAILED

  backtrack to: ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
  rewritten [11]: ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
  Maximum recursion depth reached
CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_11)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_12))=(nat-to-int _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_13))=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_14) (succ _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_15) (succ _qv_14))))
USE ASSUMPTION FAILED

  backtrack to: ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
  rewritten [11]: ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16)))))))
  Maximum recursion depth reached
CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_11)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_12))=(nat-to-int _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_13))=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_14) (succ _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_15) (succ _qv_14))))
USE ASSUMPTION FAILED

  backtrack to: ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_11)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_12))=(nat-to-int _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_13))=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_14) (succ _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_15) (succ _qv_14))))
USE ASSUMPTION FAILED

  backtrack to: ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_11)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_12))=(nat-to-int _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_13))=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_14) (succ _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_15) (succ _qv_14))))
USE ASSUMPTION FAILED

  backtrack to: ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 _v_16))))
  rewritten [11]: ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
  rewritten [11]: ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
  rewritten [11]: ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
  Maximum recursion depth reached
CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_11)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_12))=(nat-to-int _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_13))=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_14) (succ _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_15) (succ _qv_14))))
USE ASSUMPTION FAILED

  backtrack to: ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
  rewritten [11]: ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
  Maximum recursion depth reached
CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_11)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_12))=(nat-to-int _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_13))=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_14) (succ _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_15) (succ _qv_14))))
USE ASSUMPTION FAILED

  backtrack to: ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
  rewritten [11]: ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
  Maximum recursion depth reached
CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_11)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_12))=(nat-to-int _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_13))=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_14) (succ _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_15) (succ _qv_14))))
USE ASSUMPTION FAILED

  backtrack to: ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
  rewritten [11]: ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
  Maximum recursion depth reached
CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_11)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_12))=(nat-to-int _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_13))=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_14) (succ _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_15) (succ _qv_14))))
USE ASSUMPTION FAILED

  backtrack to: ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_11)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_12))=(nat-to-int _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_13))=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_14) (succ _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_15) (succ _qv_14))))
USE ASSUMPTION FAILED

  backtrack to: ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
  rewritten [11]: ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
  rewritten [11]: ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
  Maximum recursion depth reached
CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_11)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_12))=(nat-to-int _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_13))=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_14) (succ _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_15) (succ _qv_14))))
USE ASSUMPTION FAILED

  backtrack to: ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
  rewritten [11]: ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16)))))))
  Maximum recursion depth reached
CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_11)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_12))=(nat-to-int _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_13))=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_14) (succ _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_15) (succ _qv_14))))
USE ASSUMPTION FAILED

  backtrack to: ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
  rewritten [11]: ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
  Maximum recursion depth reached
CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_11)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_12))=(nat-to-int _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_13))=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_14) (succ _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_15) (succ _qv_14))))
USE ASSUMPTION FAILED

  backtrack to: ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
  rewritten [11]: ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16)))))))
  Maximum recursion depth reached
CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_11)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_12))=(nat-to-int _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_13))=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_14) (succ _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_15) (succ _qv_14))))
USE ASSUMPTION FAILED

  backtrack to: ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_11)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_12))=(nat-to-int _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_13))=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_14) (succ _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_15) (succ _qv_14))))
USE ASSUMPTION FAILED

  backtrack to: ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
  rewritten [11]: ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
  rewritten [11]: ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
  Maximum recursion depth reached
CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_11)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_12))=(nat-to-int _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_13))=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_14) (succ _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_15) (succ _qv_14))))
USE ASSUMPTION FAILED

  backtrack to: ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
  rewritten [11]: ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
  Maximum recursion depth reached
CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_11)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_12))=(nat-to-int _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_13))=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_14) (succ _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_15) (succ _qv_14))))
USE ASSUMPTION FAILED

  backtrack to: ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
  rewritten [11]: ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
  Maximum recursion depth reached
CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_11)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_12))=(nat-to-int _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_13))=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_14) (succ _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_15) (succ _qv_14))))
USE ASSUMPTION FAILED

  backtrack to: ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
  rewritten [11]: ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
  Maximum recursion depth reached
CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_11)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_12))=(nat-to-int _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_13))=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_14) (succ _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_15) (succ _qv_14))))
USE ASSUMPTION FAILED

  backtrack to: ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_11)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_12))=(nat-to-int _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_13))=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_14) (succ _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_15) (succ _qv_14))))
USE ASSUMPTION FAILED

  backtrack to: ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
  rewritten [11]: ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
  rewritten [11]: ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
  Maximum recursion depth reached
CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_11)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_12))=(nat-to-int _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_13))=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_14) (succ _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_15) (succ _qv_14))))
USE ASSUMPTION FAILED

  backtrack to: ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
  rewritten [11]: ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16)))))))
  Maximum recursion depth reached
CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_11)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_12))=(nat-to-int _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_13))=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_14) (succ _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_15) (succ _qv_14))))
USE ASSUMPTION FAILED

  backtrack to: ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
  rewritten [11]: ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
  Maximum recursion depth reached
CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_11)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_12))=(nat-to-int _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_13))=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_14) (succ _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_15) (succ _qv_14))))
USE ASSUMPTION FAILED

  backtrack to: ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
  rewritten [11]: ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16)))))))
  Maximum recursion depth reached
CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_11)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_12))=(nat-to-int _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_13))=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_14) (succ _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_15) (succ _qv_14))))
USE ASSUMPTION FAILED

  backtrack to: ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_11)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_12))=(nat-to-int _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_13))=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_14) (succ _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_15) (succ _qv_14))))
USE ASSUMPTION FAILED

  backtrack to: ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_11)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_12))=(nat-to-int _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_13))=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_14) (succ _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_15) (succ _qv_14))))
USE ASSUMPTION FAILED

  backtrack to: ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 _v_16))))
CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_11)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_12))=(nat-to-int _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_13))=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_14) (succ _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_15) (succ _qv_14))))
USE ASSUMPTION FAILED

  backtrack to: ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 _v_16))))
  rewritten [11]: ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
  sequence of rewrites only grows
CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_11)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_12))=(nat-to-int _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_13))=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_14) (succ _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_15) (succ _qv_14))))
USE ASSUMPTION FAILED

  backtrack to: ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 _v_16))))
  rewritten [11]: ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
  sequence of rewrites only grows
CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_11)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_12))=(nat-to-int _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_13))=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_14) (succ _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_15) (succ _qv_14))))
USE ASSUMPTION FAILED

  backtrack to: ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 _v_16))))
  rewritten [10]: ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 _v_16))))
  rewritten [11]: ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
  rewritten [11]: ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
  rewritten [11]: ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
  Maximum recursion depth reached
CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_11)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_12))=(nat-to-int _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_13))=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_14) (succ _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_15) (succ _qv_14))))
USE ASSUMPTION FAILED

  backtrack to: ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
  rewritten [11]: ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
  Maximum recursion depth reached
CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_11)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_12))=(nat-to-int _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_13))=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_14) (succ _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_15) (succ _qv_14))))
USE ASSUMPTION FAILED

  backtrack to: ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
  rewritten [11]: ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
  Maximum recursion depth reached
CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_11)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_12))=(nat-to-int _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_13))=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_14) (succ _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_15) (succ _qv_14))))
USE ASSUMPTION FAILED

  backtrack to: ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
  rewritten [11]: ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
  Maximum recursion depth reached
CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_11)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_12))=(nat-to-int _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_13))=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_14) (succ _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_15) (succ _qv_14))))
USE ASSUMPTION FAILED

  backtrack to: ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_11)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_12))=(nat-to-int _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_13))=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_14) (succ _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_15) (succ _qv_14))))
USE ASSUMPTION FAILED

  backtrack to: ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
  rewritten [11]: ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
  rewritten [11]: ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
  Maximum recursion depth reached
CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_11)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_12))=(nat-to-int _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_13))=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_14) (succ _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_15) (succ _qv_14))))
USE ASSUMPTION FAILED

  backtrack to: ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
  rewritten [11]: ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16)))))))
  Maximum recursion depth reached
CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_11)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_12))=(nat-to-int _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_13))=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_14) (succ _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_15) (succ _qv_14))))
USE ASSUMPTION FAILED

  backtrack to: ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
  rewritten [11]: ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
  Maximum recursion depth reached
CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_11)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_12))=(nat-to-int _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_13))=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_14) (succ _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_15) (succ _qv_14))))
USE ASSUMPTION FAILED

  backtrack to: ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
  rewritten [11]: ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16)))))))
  Maximum recursion depth reached
CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_11)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_12))=(nat-to-int _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_13))=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_14) (succ _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_15) (succ _qv_14))))
USE ASSUMPTION FAILED

  backtrack to: ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_11)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_12))=(nat-to-int _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_13))=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_14) (succ _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_15) (succ _qv_14))))
USE ASSUMPTION FAILED

  backtrack to: ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
  rewritten [11]: ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
  rewritten [11]: ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
  Maximum recursion depth reached
CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_11)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_12))=(nat-to-int _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_13))=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_14) (succ _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_15) (succ _qv_14))))
USE ASSUMPTION FAILED

  backtrack to: ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
  rewritten [11]: ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
  Maximum recursion depth reached
CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_11)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_12))=(nat-to-int _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_13))=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_14) (succ _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_15) (succ _qv_14))))
USE ASSUMPTION FAILED

  backtrack to: ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
  rewritten [11]: ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
  Maximum recursion depth reached
CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_11)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_12))=(nat-to-int _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_13))=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_14) (succ _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_15) (succ _qv_14))))
USE ASSUMPTION FAILED

  backtrack to: ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
  rewritten [11]: ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
  Maximum recursion depth reached
CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_11)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_12))=(nat-to-int _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_13))=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_14) (succ _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_15) (succ _qv_14))))
USE ASSUMPTION FAILED

  backtrack to: ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_11)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_12))=(nat-to-int _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_13))=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_14) (succ _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_15) (succ _qv_14))))
USE ASSUMPTION FAILED

  backtrack to: ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
  rewritten [11]: ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
  rewritten [11]: ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
  Maximum recursion depth reached
CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_11)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_12))=(nat-to-int _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_13))=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_14) (succ _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_15) (succ _qv_14))))
USE ASSUMPTION FAILED

  backtrack to: ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
  rewritten [11]: ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16)))))))
  Maximum recursion depth reached
CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_11)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_12))=(nat-to-int _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_13))=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_14) (succ _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_15) (succ _qv_14))))
USE ASSUMPTION FAILED

  backtrack to: ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
  rewritten [11]: ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
  Maximum recursion depth reached
CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_11)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_12))=(nat-to-int _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_13))=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_14) (succ _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_15) (succ _qv_14))))
USE ASSUMPTION FAILED

  backtrack to: ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
  rewritten [11]: ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16)))))))
  Maximum recursion depth reached
CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_11)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_12))=(nat-to-int _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_13))=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_14) (succ _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_15) (succ _qv_14))))
USE ASSUMPTION FAILED

  backtrack to: ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_11)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_12))=(nat-to-int _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_13))=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_14) (succ _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_15) (succ _qv_14))))
USE ASSUMPTION FAILED

  backtrack to: ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_11)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_12))=(nat-to-int _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_13))=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_14) (succ _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_15) (succ _qv_14))))
USE ASSUMPTION FAILED

  backtrack to: ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 _v_16))))
  rewritten [11]: ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
  rewritten [11]: ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
  rewritten [11]: ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
  Maximum recursion depth reached
CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_11)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_12))=(nat-to-int _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_13))=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_14) (succ _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_15) (succ _qv_14))))
USE ASSUMPTION FAILED

  backtrack to: ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
  rewritten [11]: ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
  Maximum recursion depth reached
CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_11)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_12))=(nat-to-int _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_13))=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_14) (succ _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_15) (succ _qv_14))))
USE ASSUMPTION FAILED

  backtrack to: ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
  rewritten [11]: ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
  Maximum recursion depth reached
CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_11)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_12))=(nat-to-int _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_13))=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_14) (succ _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_15) (succ _qv_14))))
USE ASSUMPTION FAILED

  backtrack to: ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
  rewritten [11]: ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
  Maximum recursion depth reached
CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_11)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_12))=(nat-to-int _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_13))=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_14) (succ _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_15) (succ _qv_14))))
USE ASSUMPTION FAILED

  backtrack to: ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_11)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_12))=(nat-to-int _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_13))=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_14) (succ _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_15) (succ _qv_14))))
USE ASSUMPTION FAILED

  backtrack to: ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
  rewritten [11]: ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
  rewritten [11]: ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
  Maximum recursion depth reached
CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_11)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_12))=(nat-to-int _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_13))=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_14) (succ _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_15) (succ _qv_14))))
USE ASSUMPTION FAILED

  backtrack to: ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
  rewritten [11]: ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16)))))))
  Maximum recursion depth reached
CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_11)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_12))=(nat-to-int _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_13))=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_14) (succ _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_15) (succ _qv_14))))
USE ASSUMPTION FAILED

  backtrack to: ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
  rewritten [11]: ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
  Maximum recursion depth reached
CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_11)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_12))=(nat-to-int _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_13))=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_14) (succ _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_15) (succ _qv_14))))
USE ASSUMPTION FAILED

  backtrack to: ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
  rewritten [11]: ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16)))))))
  Maximum recursion depth reached
CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_11)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_12))=(nat-to-int _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_13))=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_14) (succ _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_15) (succ _qv_14))))
USE ASSUMPTION FAILED

  backtrack to: ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_11)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_12))=(nat-to-int _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_13))=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_14) (succ _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_15) (succ _qv_14))))
USE ASSUMPTION FAILED

  backtrack to: ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
  rewritten [11]: ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
  rewritten [11]: ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
  Maximum recursion depth reached
CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_11)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_12))=(nat-to-int _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_13))=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_14) (succ _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_15) (succ _qv_14))))
USE ASSUMPTION FAILED

  backtrack to: ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
  rewritten [11]: ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
  Maximum recursion depth reached
CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_11)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_12))=(nat-to-int _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_13))=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_14) (succ _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_15) (succ _qv_14))))
USE ASSUMPTION FAILED

  backtrack to: ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
  rewritten [11]: ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
  Maximum recursion depth reached
CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_11)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_12))=(nat-to-int _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_13))=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_14) (succ _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_15) (succ _qv_14))))
USE ASSUMPTION FAILED

  backtrack to: ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
  rewritten [11]: ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
  Maximum recursion depth reached
CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_11)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_12))=(nat-to-int _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_13))=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_14) (succ _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_15) (succ _qv_14))))
USE ASSUMPTION FAILED

  backtrack to: ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_11)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_12))=(nat-to-int _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_13))=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_14) (succ _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_15) (succ _qv_14))))
USE ASSUMPTION FAILED

  backtrack to: ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
  rewritten [11]: ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
  rewritten [11]: ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
  Maximum recursion depth reached
CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_11)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_12))=(nat-to-int _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_13))=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_14) (succ _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_15) (succ _qv_14))))
USE ASSUMPTION FAILED

  backtrack to: ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
  rewritten [11]: ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16)))))))
  Maximum recursion depth reached
CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_11)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_12))=(nat-to-int _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_13))=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_14) (succ _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_15) (succ _qv_14))))
USE ASSUMPTION FAILED

  backtrack to: ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
  rewritten [11]: ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
  Maximum recursion depth reached
CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_11)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_12))=(nat-to-int _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_13))=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_14) (succ _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_15) (succ _qv_14))))
USE ASSUMPTION FAILED

  backtrack to: ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
  rewritten [11]: ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16)))))))
  Maximum recursion depth reached
CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_11)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_12))=(nat-to-int _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_13))=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_14) (succ _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_15) (succ _qv_14))))
USE ASSUMPTION FAILED

  backtrack to: ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_11)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_12))=(nat-to-int _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_13))=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_14) (succ _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_15) (succ _qv_14))))
USE ASSUMPTION FAILED

  backtrack to: ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_11)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_12))=(nat-to-int _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_13))=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_14) (succ _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_15) (succ _qv_14))))
USE ASSUMPTION FAILED

  backtrack to: ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 _v_16))))
CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_11)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_12))=(nat-to-int _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_13))=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_14) (succ _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_15) (succ _qv_14))))
USE ASSUMPTION FAILED

  backtrack to: ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 _v_16))))
  rewritten [11]: ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
  sequence of rewrites only grows
CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_11)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_12))=(nat-to-int _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_13))=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_14) (succ _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_15) (succ _qv_14))))
USE ASSUMPTION FAILED

  backtrack to: ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 _v_16))))
  rewritten [11]: ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
  sequence of rewrites only grows
CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_11)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_12))=(nat-to-int _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_13))=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_14) (succ _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_15) (succ _qv_14))))
USE ASSUMPTION FAILED

  backtrack to: ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 _v_16))))
CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_11)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_12))=(nat-to-int _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_13))=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_14) (succ _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_15) (succ _qv_14))))
USE ASSUMPTION FAILED

  backtrack to: ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len _v_16)))
  rewritten [11]: ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
  rewritten [11]: ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
  sequence of rewrites only grows
CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_11)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_12))=(nat-to-int _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_13))=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_14) (succ _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_15) (succ _qv_14))))
USE ASSUMPTION FAILED

  backtrack to: ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
  rewritten [11]: ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
  sequence of rewrites only grows
CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_11)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_12))=(nat-to-int _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_13))=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_14) (succ _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_15) (succ _qv_14))))
USE ASSUMPTION FAILED

  backtrack to: ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
  rewritten [11]: ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
  sequence of rewrites only grows
CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_11)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_12))=(nat-to-int _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_13))=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_14) (succ _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_15) (succ _qv_14))))
USE ASSUMPTION FAILED

  backtrack to: ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
  rewritten [11]: ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
  sequence of rewrites only grows
CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_11)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_12))=(nat-to-int _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_13))=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_14) (succ _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_15) (succ _qv_14))))
USE ASSUMPTION FAILED

  backtrack to: ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_11)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_12))=(nat-to-int _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_13))=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_14) (succ _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_15) (succ _qv_14))))
USE ASSUMPTION FAILED

  backtrack to: ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len _v_16)))
CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_11)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_12))=(nat-to-int _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_13))=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_14) (succ _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_15) (succ _qv_14))))
USE ASSUMPTION FAILED

  backtrack to: ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len _v_16)))
  rewritten [11]: ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 _v_16))))
  rewritten [11]: ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 _v_16))))
  rewritten [10]: ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len _v_16)))
  rewritten [11]: ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
  rewritten [11]: ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
  rewritten [11]: ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
  Maximum recursion depth reached
CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_11)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_12))=(nat-to-int _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_13))=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_14) (succ _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_15) (succ _qv_14))))
USE ASSUMPTION FAILED

  backtrack to: ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
  rewritten [11]: ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len (rotate _t_17 _v_16))))
  Maximum recursion depth reached
CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_11)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_12))=(nat-to-int _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_13))=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_14) (succ _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_15) (succ _qv_14))))
USE ASSUMPTION FAILED

  backtrack to: ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
  rewritten [11]: ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
  Maximum recursion depth reached
CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_11)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_12))=(nat-to-int _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_13))=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_14) (succ _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_15) (succ _qv_14))))
USE ASSUMPTION FAILED

  backtrack to: ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
  rewritten [11]: ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len (rotate _t_17 _v_16))))
  Maximum recursion depth reached
CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_11)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_12))=(nat-to-int _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_13))=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_14) (succ _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_15) (succ _qv_14))))
USE ASSUMPTION FAILED

  backtrack to: ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_11)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_12))=(nat-to-int _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_13))=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_14) (succ _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_15) (succ _qv_14))))
USE ASSUMPTION FAILED

  backtrack to: ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
  rewritten [11]: ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
  rewritten [11]: ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len (rotate _t_17 _v_16))))
  Maximum recursion depth reached
CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_11)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_12))=(nat-to-int _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_13))=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_14) (succ _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_15) (succ _qv_14))))
USE ASSUMPTION FAILED

  backtrack to: ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
  rewritten [11]: ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))))=(nat-to-int (len _v_16)))
  Maximum recursion depth reached
CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_11)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_12))=(nat-to-int _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_13))=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_14) (succ _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_15) (succ _qv_14))))
USE ASSUMPTION FAILED

  backtrack to: ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
  rewritten [11]: ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len (rotate _t_17 _v_16))))
  Maximum recursion depth reached
CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_11)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_12))=(nat-to-int _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_13))=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_14) (succ _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_15) (succ _qv_14))))
USE ASSUMPTION FAILED

  backtrack to: ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
  rewritten [11]: ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))))=(nat-to-int (len _v_16)))
  Maximum recursion depth reached
CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_11)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_12))=(nat-to-int _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_13))=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_14) (succ _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_15) (succ _qv_14))))
USE ASSUMPTION FAILED

  backtrack to: ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_11)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_12))=(nat-to-int _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_13))=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_14) (succ _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_15) (succ _qv_14))))
USE ASSUMPTION FAILED

  backtrack to: ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
  rewritten [11]: ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
  rewritten [11]: ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
  Maximum recursion depth reached
CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_11)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_12))=(nat-to-int _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_13))=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_14) (succ _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_15) (succ _qv_14))))
USE ASSUMPTION FAILED

  backtrack to: ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
  rewritten [11]: ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len (rotate _t_17 _v_16))))
  Maximum recursion depth reached
CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_11)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_12))=(nat-to-int _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_13))=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_14) (succ _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_15) (succ _qv_14))))
USE ASSUMPTION FAILED

  backtrack to: ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
  rewritten [11]: ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
  Maximum recursion depth reached
CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_11)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_12))=(nat-to-int _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_13))=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_14) (succ _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_15) (succ _qv_14))))
USE ASSUMPTION FAILED

  backtrack to: ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
  rewritten [11]: ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len (rotate _t_17 _v_16))))
  Maximum recursion depth reached
CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_11)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_12))=(nat-to-int _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_13))=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_14) (succ _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_15) (succ _qv_14))))
USE ASSUMPTION FAILED

  backtrack to: ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_11)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_12))=(nat-to-int _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_13))=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_14) (succ _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_15) (succ _qv_14))))
USE ASSUMPTION FAILED

  backtrack to: ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
  rewritten [11]: ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
  rewritten [11]: ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len (rotate _t_17 _v_16))))
  Maximum recursion depth reached
CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_11)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_12))=(nat-to-int _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_13))=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_14) (succ _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_15) (succ _qv_14))))
USE ASSUMPTION FAILED

  backtrack to: ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
  rewritten [11]: ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))))=(nat-to-int (len _v_16)))
  Maximum recursion depth reached
CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_11)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_12))=(nat-to-int _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_13))=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_14) (succ _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_15) (succ _qv_14))))
USE ASSUMPTION FAILED

  backtrack to: ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
  rewritten [11]: ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len (rotate _t_17 _v_16))))
  Maximum recursion depth reached
CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_11)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_12))=(nat-to-int _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_13))=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_14) (succ _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_15) (succ _qv_14))))
USE ASSUMPTION FAILED

  backtrack to: ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
  rewritten [11]: ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))))=(nat-to-int (len _v_16)))
  Maximum recursion depth reached
CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_11)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_12))=(nat-to-int _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_13))=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_14) (succ _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_15) (succ _qv_14))))
USE ASSUMPTION FAILED

  backtrack to: ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_11)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_12))=(nat-to-int _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_13))=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_14) (succ _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_15) (succ _qv_14))))
USE ASSUMPTION FAILED

  backtrack to: ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_11)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_12))=(nat-to-int _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_13))=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_14) (succ _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_15) (succ _qv_14))))
USE ASSUMPTION FAILED

  backtrack to: ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len _v_16)))
  rewritten [11]: ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
  rewritten [11]: ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
  rewritten [11]: ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
  Maximum recursion depth reached
CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_11)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_12))=(nat-to-int _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_13))=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_14) (succ _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_15) (succ _qv_14))))
USE ASSUMPTION FAILED

  backtrack to: ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
  rewritten [11]: ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len (rotate _t_17 _v_16))))
  Maximum recursion depth reached
CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_11)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_12))=(nat-to-int _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_13))=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_14) (succ _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_15) (succ _qv_14))))
USE ASSUMPTION FAILED

  backtrack to: ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
  rewritten [11]: ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
  Maximum recursion depth reached
CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_11)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_12))=(nat-to-int _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_13))=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_14) (succ _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_15) (succ _qv_14))))
USE ASSUMPTION FAILED

  backtrack to: ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
  rewritten [11]: ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len (rotate _t_17 _v_16))))
  Maximum recursion depth reached
CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_11)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_12))=(nat-to-int _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_13))=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_14) (succ _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_15) (succ _qv_14))))
USE ASSUMPTION FAILED

  backtrack to: ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_11)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_12))=(nat-to-int _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_13))=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_14) (succ _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_15) (succ _qv_14))))
USE ASSUMPTION FAILED

  backtrack to: ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
  rewritten [11]: ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
  rewritten [11]: ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len (rotate _t_17 _v_16))))
  Maximum recursion depth reached
CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_11)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_12))=(nat-to-int _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_13))=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_14) (succ _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_15) (succ _qv_14))))
USE ASSUMPTION FAILED

  backtrack to: ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
  rewritten [11]: ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))))=(nat-to-int (len _v_16)))
  Maximum recursion depth reached
CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_11)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_12))=(nat-to-int _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_13))=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_14) (succ _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_15) (succ _qv_14))))
USE ASSUMPTION FAILED

  backtrack to: ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
  rewritten [11]: ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len (rotate _t_17 _v_16))))
  Maximum recursion depth reached
CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_11)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_12))=(nat-to-int _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_13))=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_14) (succ _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_15) (succ _qv_14))))
USE ASSUMPTION FAILED

  backtrack to: ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
  rewritten [11]: ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))))=(nat-to-int (len _v_16)))
  Maximum recursion depth reached
CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_11)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_12))=(nat-to-int _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_13))=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_14) (succ _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_15) (succ _qv_14))))
USE ASSUMPTION FAILED

  backtrack to: ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_11)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_12))=(nat-to-int _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_13))=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_14) (succ _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_15) (succ _qv_14))))
USE ASSUMPTION FAILED

  backtrack to: ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
  rewritten [11]: ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
  rewritten [11]: ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
  Maximum recursion depth reached
CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_11)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_12))=(nat-to-int _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_13))=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_14) (succ _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_15) (succ _qv_14))))
USE ASSUMPTION FAILED

  backtrack to: ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
  rewritten [11]: ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len (rotate _t_17 _v_16))))
  Maximum recursion depth reached
CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_11)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_12))=(nat-to-int _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_13))=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_14) (succ _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_15) (succ _qv_14))))
USE ASSUMPTION FAILED

  backtrack to: ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
  rewritten [11]: ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
  Maximum recursion depth reached
CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_11)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_12))=(nat-to-int _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_13))=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_14) (succ _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_15) (succ _qv_14))))
USE ASSUMPTION FAILED

  backtrack to: ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
  rewritten [11]: ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len (rotate _t_17 _v_16))))
  Maximum recursion depth reached
CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_11)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_12))=(nat-to-int _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_13))=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_14) (succ _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_15) (succ _qv_14))))
USE ASSUMPTION FAILED

  backtrack to: ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_11)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_12))=(nat-to-int _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_13))=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_14) (succ _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_15) (succ _qv_14))))
USE ASSUMPTION FAILED

  backtrack to: ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
  rewritten [11]: ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
  rewritten [11]: ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len (rotate _t_17 _v_16))))
  Maximum recursion depth reached
CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_11)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_12))=(nat-to-int _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_13))=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_14) (succ _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_15) (succ _qv_14))))
USE ASSUMPTION FAILED

  backtrack to: ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
  rewritten [11]: ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))))=(nat-to-int (len _v_16)))
  Maximum recursion depth reached
CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_11)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_12))=(nat-to-int _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_13))=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_14) (succ _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_15) (succ _qv_14))))
USE ASSUMPTION FAILED

  backtrack to: ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
  rewritten [11]: ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len (rotate _t_17 _v_16))))
  Maximum recursion depth reached
CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_11)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_12))=(nat-to-int _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_13))=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_14) (succ _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_15) (succ _qv_14))))
USE ASSUMPTION FAILED

  backtrack to: ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
  rewritten [11]: ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))))=(nat-to-int (len _v_16)))
  Maximum recursion depth reached
CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_11)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_12))=(nat-to-int _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_13))=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_14) (succ _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_15) (succ _qv_14))))
USE ASSUMPTION FAILED

  backtrack to: ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_11)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_12))=(nat-to-int _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_13))=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_14) (succ _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_15) (succ _qv_14))))
USE ASSUMPTION FAILED

  backtrack to: ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_11)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_12))=(nat-to-int _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_13))=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_14) (succ _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_15) (succ _qv_14))))
USE ASSUMPTION FAILED

  backtrack to: ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len _v_16)))
CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_11)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_12))=(nat-to-int _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_13))=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_14) (succ _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_15) (succ _qv_14))))
USE ASSUMPTION FAILED

  backtrack to: ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 _v_16))))
  rewritten [11]: ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
  sequence of rewrites only grows
CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_11)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_12))=(nat-to-int _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_13))=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_14) (succ _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_15) (succ _qv_14))))
USE ASSUMPTION FAILED

  backtrack to: ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 _v_16))))
  rewritten [11]: ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
  sequence of rewrites only grows
CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_11)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_12))=(nat-to-int _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_13))=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_14) (succ _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_15) (succ _qv_14))))
USE ASSUMPTION FAILED

  backtrack to: ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 _v_16))))
  rewritten [10]: ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len _v_16)))
  rewritten [11]: ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
  rewritten [11]: ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
  rewritten [11]: ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
  Maximum recursion depth reached
CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_11)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_12))=(nat-to-int _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_13))=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_14) (succ _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_15) (succ _qv_14))))
USE ASSUMPTION FAILED

  backtrack to: ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
  rewritten [11]: ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len (rotate _t_17 _v_16))))
  Maximum recursion depth reached
CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_11)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_12))=(nat-to-int _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_13))=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_14) (succ _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_15) (succ _qv_14))))
USE ASSUMPTION FAILED

  backtrack to: ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
  rewritten [11]: ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
  Maximum recursion depth reached
CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_11)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_12))=(nat-to-int _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_13))=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_14) (succ _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_15) (succ _qv_14))))
USE ASSUMPTION FAILED

  backtrack to: ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
  rewritten [11]: ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len (rotate _t_17 _v_16))))
  Maximum recursion depth reached
CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_11)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_12))=(nat-to-int _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_13))=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_14) (succ _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_15) (succ _qv_14))))
USE ASSUMPTION FAILED

  backtrack to: ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_11)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_12))=(nat-to-int _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_13))=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_14) (succ _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_15) (succ _qv_14))))
USE ASSUMPTION FAILED

  backtrack to: ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
  rewritten [11]: ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
  rewritten [11]: ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len (rotate _t_17 _v_16))))
  Maximum recursion depth reached
CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_11)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_12))=(nat-to-int _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_13))=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_14) (succ _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_15) (succ _qv_14))))
USE ASSUMPTION FAILED

  backtrack to: ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
  rewritten [11]: ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))))=(nat-to-int (len _v_16)))
  Maximum recursion depth reached
CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_11)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_12))=(nat-to-int _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_13))=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_14) (succ _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_15) (succ _qv_14))))
USE ASSUMPTION FAILED

  backtrack to: ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
  rewritten [11]: ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len (rotate _t_17 _v_16))))
  Maximum recursion depth reached
CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_11)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_12))=(nat-to-int _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_13))=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_14) (succ _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_15) (succ _qv_14))))
USE ASSUMPTION FAILED

  backtrack to: ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
  rewritten [11]: ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))))=(nat-to-int (len _v_16)))
  Maximum recursion depth reached
CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_11)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_12))=(nat-to-int _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_13))=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_14) (succ _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_15) (succ _qv_14))))
USE ASSUMPTION FAILED

  backtrack to: ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_11)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_12))=(nat-to-int _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_13))=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_14) (succ _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_15) (succ _qv_14))))
USE ASSUMPTION FAILED

  backtrack to: ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
  rewritten [11]: ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
  rewritten [11]: ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
  Maximum recursion depth reached
CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_11)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_12))=(nat-to-int _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_13))=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_14) (succ _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_15) (succ _qv_14))))
USE ASSUMPTION FAILED

  backtrack to: ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
  rewritten [11]: ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len (rotate _t_17 _v_16))))
  Maximum recursion depth reached
CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_11)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_12))=(nat-to-int _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_13))=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_14) (succ _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_15) (succ _qv_14))))
USE ASSUMPTION FAILED

  backtrack to: ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
  rewritten [11]: ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
  Maximum recursion depth reached
CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_11)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_12))=(nat-to-int _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_13))=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_14) (succ _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_15) (succ _qv_14))))
USE ASSUMPTION FAILED

  backtrack to: ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
  rewritten [11]: ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len (rotate _t_17 _v_16))))
  Maximum recursion depth reached
CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_11)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_12))=(nat-to-int _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_13))=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_14) (succ _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_15) (succ _qv_14))))
USE ASSUMPTION FAILED

  backtrack to: ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_11)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_12))=(nat-to-int _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_13))=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_14) (succ _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_15) (succ _qv_14))))
USE ASSUMPTION FAILED

  backtrack to: ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
  rewritten [11]: ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
  rewritten [11]: ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len (rotate _t_17 _v_16))))
  Maximum recursion depth reached
CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_11)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_12))=(nat-to-int _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_13))=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_14) (succ _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_15) (succ _qv_14))))
USE ASSUMPTION FAILED

  backtrack to: ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
  rewritten [11]: ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))))=(nat-to-int (len _v_16)))
  Maximum recursion depth reached
CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_11)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_12))=(nat-to-int _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_13))=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_14) (succ _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_15) (succ _qv_14))))
USE ASSUMPTION FAILED

  backtrack to: ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
  rewritten [11]: ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len (rotate _t_17 _v_16))))
  Maximum recursion depth reached
CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_11)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_12))=(nat-to-int _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_13))=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_14) (succ _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_15) (succ _qv_14))))
USE ASSUMPTION FAILED

  backtrack to: ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
  rewritten [11]: ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))))=(nat-to-int (len _v_16)))
  Maximum recursion depth reached
CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_11)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_12))=(nat-to-int _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_13))=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_14) (succ _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_15) (succ _qv_14))))
USE ASSUMPTION FAILED

  backtrack to: ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_11)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_12))=(nat-to-int _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_13))=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_14) (succ _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_15) (succ _qv_14))))
USE ASSUMPTION FAILED

  backtrack to: ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_11)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_12))=(nat-to-int _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_13))=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_14) (succ _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_15) (succ _qv_14))))
USE ASSUMPTION FAILED

  backtrack to: ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len _v_16)))
  rewritten [11]: ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
  rewritten [11]: ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
  rewritten [11]: ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
  Maximum recursion depth reached
CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_11)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_12))=(nat-to-int _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_13))=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_14) (succ _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_15) (succ _qv_14))))
USE ASSUMPTION FAILED

  backtrack to: ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
  rewritten [11]: ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len (rotate _t_17 _v_16))))
  Maximum recursion depth reached
CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_11)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_12))=(nat-to-int _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_13))=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_14) (succ _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_15) (succ _qv_14))))
USE ASSUMPTION FAILED

  backtrack to: ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
  rewritten [11]: ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
  Maximum recursion depth reached
CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_11)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_12))=(nat-to-int _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_13))=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_14) (succ _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_15) (succ _qv_14))))
USE ASSUMPTION FAILED

  backtrack to: ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
  rewritten [11]: ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len (rotate _t_17 _v_16))))
  Maximum recursion depth reached
CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_11)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_12))=(nat-to-int _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_13))=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_14) (succ _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_15) (succ _qv_14))))
USE ASSUMPTION FAILED

  backtrack to: ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_11)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_12))=(nat-to-int _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_13))=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_14) (succ _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_15) (succ _qv_14))))
USE ASSUMPTION FAILED

  backtrack to: ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
  rewritten [11]: ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
  rewritten [11]: ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len (rotate _t_17 _v_16))))
  Maximum recursion depth reached
CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_11)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_12))=(nat-to-int _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_13))=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_14) (succ _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_15) (succ _qv_14))))
USE ASSUMPTION FAILED

  backtrack to: ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
  rewritten [11]: ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))))=(nat-to-int (len _v_16)))
  Maximum recursion depth reached
CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_11)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_12))=(nat-to-int _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_13))=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_14) (succ _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_15) (succ _qv_14))))
USE ASSUMPTION FAILED

  backtrack to: ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
  rewritten [11]: ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len (rotate _t_17 _v_16))))
  Maximum recursion depth reached
CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_11)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_12))=(nat-to-int _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_13))=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_14) (succ _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_15) (succ _qv_14))))
USE ASSUMPTION FAILED

  backtrack to: ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
  rewritten [11]: ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))))=(nat-to-int (len _v_16)))
  Maximum recursion depth reached
CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_11)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_12))=(nat-to-int _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_13))=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_14) (succ _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_15) (succ _qv_14))))
USE ASSUMPTION FAILED

  backtrack to: ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_11)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_12))=(nat-to-int _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_13))=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_14) (succ _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_15) (succ _qv_14))))
USE ASSUMPTION FAILED

  backtrack to: ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
  rewritten [11]: ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
  rewritten [11]: ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
  Maximum recursion depth reached
CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_11)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_12))=(nat-to-int _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_13))=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_14) (succ _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_15) (succ _qv_14))))
USE ASSUMPTION FAILED

  backtrack to: ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
  rewritten [11]: ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len (rotate _t_17 _v_16))))
  Maximum recursion depth reached
CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_11)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_12))=(nat-to-int _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_13))=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_14) (succ _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_15) (succ _qv_14))))
USE ASSUMPTION FAILED

  backtrack to: ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
  rewritten [11]: ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
  Maximum recursion depth reached
CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_11)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_12))=(nat-to-int _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_13))=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_14) (succ _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_15) (succ _qv_14))))
USE ASSUMPTION FAILED

  backtrack to: ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
  rewritten [11]: ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len (rotate _t_17 _v_16))))
  Maximum recursion depth reached
CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_11)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_12))=(nat-to-int _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_13))=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_14) (succ _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_15) (succ _qv_14))))
USE ASSUMPTION FAILED

  backtrack to: ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_11)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_12))=(nat-to-int _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_13))=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_14) (succ _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_15) (succ _qv_14))))
USE ASSUMPTION FAILED

  backtrack to: ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
  rewritten [11]: ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
  rewritten [11]: ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len (rotate _t_17 _v_16))))
  Maximum recursion depth reached
CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_11)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_12))=(nat-to-int _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_13))=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_14) (succ _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_15) (succ _qv_14))))
USE ASSUMPTION FAILED

  backtrack to: ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
  rewritten [11]: ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))))=(nat-to-int (len _v_16)))
  Maximum recursion depth reached
CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_11)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_12))=(nat-to-int _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_13))=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_14) (succ _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_15) (succ _qv_14))))
USE ASSUMPTION FAILED

  backtrack to: ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
  rewritten [11]: ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len (rotate _t_17 _v_16))))
  Maximum recursion depth reached
CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_11)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_12))=(nat-to-int _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_13))=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_14) (succ _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_15) (succ _qv_14))))
USE ASSUMPTION FAILED

  backtrack to: ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
  rewritten [11]: ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))))=(nat-to-int (len _v_16)))
  Maximum recursion depth reached
CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_11)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_12))=(nat-to-int _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_13))=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_14) (succ _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_15) (succ _qv_14))))
USE ASSUMPTION FAILED

  backtrack to: ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_11)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_12))=(nat-to-int _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_13))=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_14) (succ _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_15) (succ _qv_14))))
USE ASSUMPTION FAILED

  backtrack to: ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_11)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_12))=(nat-to-int _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_13))=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_14) (succ _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_15) (succ _qv_14))))
USE ASSUMPTION FAILED

  backtrack to: ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len _v_16)))
CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_11)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_12))=(nat-to-int _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_13))=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_14) (succ _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_15) (succ _qv_14))))
USE ASSUMPTION FAILED

  backtrack to: ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 _v_16))))
  rewritten [11]: ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
  sequence of rewrites only grows
CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_11)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_12))=(nat-to-int _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_13))=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_14) (succ _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_15) (succ _qv_14))))
USE ASSUMPTION FAILED

  backtrack to: ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 _v_16))))
  rewritten [11]: ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
  sequence of rewrites only grows
CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_11)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_12))=(nat-to-int _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_13))=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_14) (succ _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_15) (succ _qv_14))))
USE ASSUMPTION FAILED

  backtrack to: ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 _v_16))))
CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_11)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_12))=(nat-to-int _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_13))=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_14) (succ _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_15) (succ _qv_14))))
USE ASSUMPTION FAILED

  backtrack to: ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 _v_16))))
  rewritten [11]: ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
  rewritten [11]: ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
  sequence of rewrites only grows
CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_11)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_12))=(nat-to-int _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_13))=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_14) (succ _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_15) (succ _qv_14))))
USE ASSUMPTION FAILED

  backtrack to: ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
  rewritten [11]: ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
  sequence of rewrites only grows
CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_11)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_12))=(nat-to-int _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_13))=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_14) (succ _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_15) (succ _qv_14))))
USE ASSUMPTION FAILED

  backtrack to: ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
  rewritten [11]: ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
  sequence of rewrites only grows
CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_11)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_12))=(nat-to-int _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_13))=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_14) (succ _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_15) (succ _qv_14))))
USE ASSUMPTION FAILED

  backtrack to: ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
  rewritten [11]: ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
  sequence of rewrites only grows
CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_11)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_12))=(nat-to-int _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_13))=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_14) (succ _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_15) (succ _qv_14))))
USE ASSUMPTION FAILED

  backtrack to: ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_11)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_12))=(nat-to-int _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_13))=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_14) (succ _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_15) (succ _qv_14))))
USE ASSUMPTION FAILED

  backtrack to: ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 _v_16))))
  rewritten [11]: ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 _v_16))))
  rewritten [10]: ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len _v_16)))
  rewritten [11]: ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
  rewritten [11]: ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
  rewritten [11]: ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
  Maximum recursion depth reached
CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_11)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_12))=(nat-to-int _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_13))=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_14) (succ _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_15) (succ _qv_14))))
USE ASSUMPTION FAILED

  backtrack to: ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
  rewritten [11]: ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len (rotate _t_17 _v_16))))
  Maximum recursion depth reached
CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_11)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_12))=(nat-to-int _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_13))=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_14) (succ _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_15) (succ _qv_14))))
USE ASSUMPTION FAILED

  backtrack to: ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
  rewritten [11]: ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
  Maximum recursion depth reached
CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_11)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_12))=(nat-to-int _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_13))=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_14) (succ _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_15) (succ _qv_14))))
USE ASSUMPTION FAILED

  backtrack to: ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
  rewritten [11]: ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len (rotate _t_17 _v_16))))
  Maximum recursion depth reached
CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_11)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_12))=(nat-to-int _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_13))=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_14) (succ _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_15) (succ _qv_14))))
USE ASSUMPTION FAILED

  backtrack to: ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_11)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_12))=(nat-to-int _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_13))=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_14) (succ _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_15) (succ _qv_14))))
USE ASSUMPTION FAILED

  backtrack to: ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
  rewritten [11]: ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
  rewritten [11]: ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len (rotate _t_17 _v_16))))
  Maximum recursion depth reached
CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_11)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_12))=(nat-to-int _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_13))=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_14) (succ _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_15) (succ _qv_14))))
USE ASSUMPTION FAILED

  backtrack to: ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
  rewritten [11]: ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))))=(nat-to-int (len _v_16)))
  Maximum recursion depth reached
CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_11)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_12))=(nat-to-int _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_13))=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_14) (succ _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_15) (succ _qv_14))))
USE ASSUMPTION FAILED

  backtrack to: ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
  rewritten [11]: ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len (rotate _t_17 _v_16))))
  Maximum recursion depth reached
CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_11)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_12))=(nat-to-int _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_13))=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_14) (succ _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_15) (succ _qv_14))))
USE ASSUMPTION FAILED

  backtrack to: ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
  rewritten [11]: ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))))=(nat-to-int (len _v_16)))
  Maximum recursion depth reached
CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_11)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_12))=(nat-to-int _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_13))=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_14) (succ _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_15) (succ _qv_14))))
USE ASSUMPTION FAILED

  backtrack to: ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_11)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_12))=(nat-to-int _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_13))=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_14) (succ _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_15) (succ _qv_14))))
USE ASSUMPTION FAILED

  backtrack to: ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
  rewritten [11]: ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
  rewritten [11]: ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
  Maximum recursion depth reached
CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_11)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_12))=(nat-to-int _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_13))=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_14) (succ _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_15) (succ _qv_14))))
USE ASSUMPTION FAILED

  backtrack to: ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
  rewritten [11]: ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len (rotate _t_17 _v_16))))
  Maximum recursion depth reached
CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_11)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_12))=(nat-to-int _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_13))=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_14) (succ _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_15) (succ _qv_14))))
USE ASSUMPTION FAILED

  backtrack to: ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
  rewritten [11]: ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
  Maximum recursion depth reached
CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_11)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_12))=(nat-to-int _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_13))=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_14) (succ _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_15) (succ _qv_14))))
USE ASSUMPTION FAILED

  backtrack to: ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
  rewritten [11]: ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len (rotate _t_17 _v_16))))
  Maximum recursion depth reached
CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_11)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_12))=(nat-to-int _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_13))=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_14) (succ _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_15) (succ _qv_14))))
USE ASSUMPTION FAILED

  backtrack to: ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_11)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_12))=(nat-to-int _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_13))=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_14) (succ _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_15) (succ _qv_14))))
USE ASSUMPTION FAILED

  backtrack to: ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
  rewritten [11]: ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
  rewritten [11]: ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len (rotate _t_17 _v_16))))
  Maximum recursion depth reached
CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_11)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_12))=(nat-to-int _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_13))=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_14) (succ _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_15) (succ _qv_14))))
USE ASSUMPTION FAILED

  backtrack to: ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
  rewritten [11]: ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))))=(nat-to-int (len _v_16)))
  Maximum recursion depth reached
CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_11)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_12))=(nat-to-int _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_13))=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_14) (succ _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_15) (succ _qv_14))))
USE ASSUMPTION FAILED

  backtrack to: ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
  rewritten [11]: ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len (rotate _t_17 _v_16))))
  Maximum recursion depth reached
CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_11)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_12))=(nat-to-int _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_13))=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_14) (succ _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_15) (succ _qv_14))))
USE ASSUMPTION FAILED

  backtrack to: ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
  rewritten [11]: ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))))=(nat-to-int (len _v_16)))
  Maximum recursion depth reached
CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_11)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_12))=(nat-to-int _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_13))=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_14) (succ _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_15) (succ _qv_14))))
USE ASSUMPTION FAILED

  backtrack to: ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_11)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_12))=(nat-to-int _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_13))=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_14) (succ _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_15) (succ _qv_14))))
USE ASSUMPTION FAILED

  backtrack to: ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_11)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_12))=(nat-to-int _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_13))=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_14) (succ _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_15) (succ _qv_14))))
USE ASSUMPTION FAILED

  backtrack to: ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len _v_16)))
  rewritten [11]: ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
  rewritten [11]: ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
  rewritten [11]: ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
  Maximum recursion depth reached
CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_11)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_12))=(nat-to-int _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_13))=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_14) (succ _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_15) (succ _qv_14))))
USE ASSUMPTION FAILED

  backtrack to: ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
  rewritten [11]: ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len (rotate _t_17 _v_16))))
  Maximum recursion depth reached
CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_11)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_12))=(nat-to-int _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_13))=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_14) (succ _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_15) (succ _qv_14))))
USE ASSUMPTION FAILED

  backtrack to: ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
  rewritten [11]: ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
  Maximum recursion depth reached
CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_11)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_12))=(nat-to-int _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_13))=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_14) (succ _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_15) (succ _qv_14))))
USE ASSUMPTION FAILED

  backtrack to: ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
  rewritten [11]: ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len (rotate _t_17 _v_16))))
  Maximum recursion depth reached
CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_11)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_12))=(nat-to-int _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_13))=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_14) (succ _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_15) (succ _qv_14))))
USE ASSUMPTION FAILED

  backtrack to: ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_11)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_12))=(nat-to-int _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_13))=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_14) (succ _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_15) (succ _qv_14))))
USE ASSUMPTION FAILED

  backtrack to: ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
  rewritten [11]: ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
  rewritten [11]: ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len (rotate _t_17 _v_16))))
  Maximum recursion depth reached
CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_11)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_12))=(nat-to-int _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_13))=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_14) (succ _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_15) (succ _qv_14))))
USE ASSUMPTION FAILED

  backtrack to: ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
  rewritten [11]: ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))))=(nat-to-int (len _v_16)))
  Maximum recursion depth reached
CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_11)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_12))=(nat-to-int _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_13))=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_14) (succ _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_15) (succ _qv_14))))
USE ASSUMPTION FAILED

  backtrack to: ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
  rewritten [11]: ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len (rotate _t_17 _v_16))))
  Maximum recursion depth reached
CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_11)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_12))=(nat-to-int _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_13))=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_14) (succ _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_15) (succ _qv_14))))
USE ASSUMPTION FAILED

  backtrack to: ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
  rewritten [11]: ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))))=(nat-to-int (len _v_16)))
  Maximum recursion depth reached
CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_11)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_12))=(nat-to-int _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_13))=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_14) (succ _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_15) (succ _qv_14))))
USE ASSUMPTION FAILED

  backtrack to: ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_11)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_12))=(nat-to-int _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_13))=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_14) (succ _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_15) (succ _qv_14))))
USE ASSUMPTION FAILED

  backtrack to: ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
  rewritten [11]: ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
  rewritten [11]: ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
  Maximum recursion depth reached
CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_11)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_12))=(nat-to-int _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_13))=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_14) (succ _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_15) (succ _qv_14))))
USE ASSUMPTION FAILED

  backtrack to: ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
  rewritten [11]: ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len (rotate _t_17 _v_16))))
  Maximum recursion depth reached
CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_11)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_12))=(nat-to-int _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_13))=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_14) (succ _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_15) (succ _qv_14))))
USE ASSUMPTION FAILED

  backtrack to: ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
  rewritten [11]: ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
  Maximum recursion depth reached
CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_11)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_12))=(nat-to-int _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_13))=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_14) (succ _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_15) (succ _qv_14))))
USE ASSUMPTION FAILED

  backtrack to: ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
  rewritten [11]: ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len (rotate _t_17 _v_16))))
  Maximum recursion depth reached
CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_11)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_12))=(nat-to-int _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_13))=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_14) (succ _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_15) (succ _qv_14))))
USE ASSUMPTION FAILED

  backtrack to: ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_11)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_12))=(nat-to-int _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_13))=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_14) (succ _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_15) (succ _qv_14))))
USE ASSUMPTION FAILED

  backtrack to: ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
  rewritten [11]: ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
  rewritten [11]: ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len (rotate _t_17 _v_16))))
  Maximum recursion depth reached
CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_11)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_12))=(nat-to-int _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_13))=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_14) (succ _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_15) (succ _qv_14))))
USE ASSUMPTION FAILED

  backtrack to: ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
  rewritten [11]: ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))))=(nat-to-int (len _v_16)))
  Maximum recursion depth reached
CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_11)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_12))=(nat-to-int _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_13))=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_14) (succ _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_15) (succ _qv_14))))
USE ASSUMPTION FAILED

  backtrack to: ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
  rewritten [11]: ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len (rotate _t_17 _v_16))))
  Maximum recursion depth reached
CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_11)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_12))=(nat-to-int _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_13))=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_14) (succ _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_15) (succ _qv_14))))
USE ASSUMPTION FAILED

  backtrack to: ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
  rewritten [11]: ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))))=(nat-to-int (len _v_16)))
  Maximum recursion depth reached
CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_11)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_12))=(nat-to-int _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_13))=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_14) (succ _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_15) (succ _qv_14))))
USE ASSUMPTION FAILED

  backtrack to: ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_11)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_12))=(nat-to-int _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_13))=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_14) (succ _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_15) (succ _qv_14))))
USE ASSUMPTION FAILED

  backtrack to: ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_11)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_12))=(nat-to-int _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_13))=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_14) (succ _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_15) (succ _qv_14))))
USE ASSUMPTION FAILED

  backtrack to: ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len _v_16)))
CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_11)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_12))=(nat-to-int _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_13))=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_14) (succ _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_15) (succ _qv_14))))
USE ASSUMPTION FAILED

  backtrack to: ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 _v_16))))
  rewritten [11]: ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
  sequence of rewrites only grows
CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_11)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_12))=(nat-to-int _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_13))=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_14) (succ _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_15) (succ _qv_14))))
USE ASSUMPTION FAILED

  backtrack to: ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 _v_16))))
  rewritten [11]: ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
  sequence of rewrites only grows
CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_11)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_12))=(nat-to-int _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_13))=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_14) (succ _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_15) (succ _qv_14))))
USE ASSUMPTION FAILED

  backtrack to: ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 _v_16))))
  rewritten [10]: ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len _v_16)))
  rewritten [11]: ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
  rewritten [11]: ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
  rewritten [11]: ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
  Maximum recursion depth reached
CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_11)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_12))=(nat-to-int _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_13))=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_14) (succ _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_15) (succ _qv_14))))
USE ASSUMPTION FAILED

  backtrack to: ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
  rewritten [11]: ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len (rotate _t_17 _v_16))))
  Maximum recursion depth reached
CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_11)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_12))=(nat-to-int _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_13))=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_14) (succ _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_15) (succ _qv_14))))
USE ASSUMPTION FAILED

  backtrack to: ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
  rewritten [11]: ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
  Maximum recursion depth reached
CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_11)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_12))=(nat-to-int _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_13))=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_14) (succ _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_15) (succ _qv_14))))
USE ASSUMPTION FAILED

  backtrack to: ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
  rewritten [11]: ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len (rotate _t_17 _v_16))))
  Maximum recursion depth reached
CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_11)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_12))=(nat-to-int _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_13))=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_14) (succ _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_15) (succ _qv_14))))
USE ASSUMPTION FAILED

  backtrack to: ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_11)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_12))=(nat-to-int _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_13))=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_14) (succ _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_15) (succ _qv_14))))
USE ASSUMPTION FAILED

  backtrack to: ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
  rewritten [11]: ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
  rewritten [11]: ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len (rotate _t_17 _v_16))))
  Maximum recursion depth reached
CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_11)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_12))=(nat-to-int _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_13))=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_14) (succ _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_15) (succ _qv_14))))
USE ASSUMPTION FAILED

  backtrack to: ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
  rewritten [11]: ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))))=(nat-to-int (len _v_16)))
  Maximum recursion depth reached
CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_11)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_12))=(nat-to-int _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_13))=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_14) (succ _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_15) (succ _qv_14))))
USE ASSUMPTION FAILED

  backtrack to: ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
  rewritten [11]: ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len (rotate _t_17 _v_16))))
  Maximum recursion depth reached
CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_11)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_12))=(nat-to-int _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_13))=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_14) (succ _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_15) (succ _qv_14))))
USE ASSUMPTION FAILED

  backtrack to: ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
  rewritten [11]: ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))))=(nat-to-int (len _v_16)))
  Maximum recursion depth reached
CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_11)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_12))=(nat-to-int _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_13))=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_14) (succ _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_15) (succ _qv_14))))
USE ASSUMPTION FAILED

  backtrack to: ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_11)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_12))=(nat-to-int _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_13))=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_14) (succ _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_15) (succ _qv_14))))
USE ASSUMPTION FAILED

  backtrack to: ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
  rewritten [11]: ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
  rewritten [11]: ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
  Maximum recursion depth reached
CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_11)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_12))=(nat-to-int _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_13))=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_14) (succ _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_15) (succ _qv_14))))
USE ASSUMPTION FAILED

  backtrack to: ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
  rewritten [11]: ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len (rotate _t_17 _v_16))))
  Maximum recursion depth reached
CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_11)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_12))=(nat-to-int _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_13))=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_14) (succ _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_15) (succ _qv_14))))
USE ASSUMPTION FAILED

  backtrack to: ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
  rewritten [11]: ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
  Maximum recursion depth reached
CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_11)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_12))=(nat-to-int _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_13))=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_14) (succ _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_15) (succ _qv_14))))
USE ASSUMPTION FAILED

  backtrack to: ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
  rewritten [11]: ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len (rotate _t_17 _v_16))))
  Maximum recursion depth reached
CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_11)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_12))=(nat-to-int _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_13))=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_14) (succ _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_15) (succ _qv_14))))
USE ASSUMPTION FAILED

  backtrack to: ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_11)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_12))=(nat-to-int _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_13))=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_14) (succ _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_15) (succ _qv_14))))
USE ASSUMPTION FAILED

  backtrack to: ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
  rewritten [11]: ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
  rewritten [11]: ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len (rotate _t_17 _v_16))))
  Maximum recursion depth reached
CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_11)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_12))=(nat-to-int _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_13))=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_14) (succ _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_15) (succ _qv_14))))
USE ASSUMPTION FAILED

  backtrack to: ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
  rewritten [11]: ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))))=(nat-to-int (len _v_16)))
  Maximum recursion depth reached
CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_11)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_12))=(nat-to-int _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_13))=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_14) (succ _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_15) (succ _qv_14))))
USE ASSUMPTION FAILED

  backtrack to: ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
  rewritten [11]: ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len (rotate _t_17 _v_16))))
  Maximum recursion depth reached
CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_11)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_12))=(nat-to-int _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_13))=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_14) (succ _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_15) (succ _qv_14))))
USE ASSUMPTION FAILED

  backtrack to: ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
  rewritten [11]: ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))))=(nat-to-int (len _v_16)))
  Maximum recursion depth reached
CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_11)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_12))=(nat-to-int _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_13))=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_14) (succ _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_15) (succ _qv_14))))
USE ASSUMPTION FAILED

  backtrack to: ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_11)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_12))=(nat-to-int _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_13))=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_14) (succ _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_15) (succ _qv_14))))
USE ASSUMPTION FAILED

  backtrack to: ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_11)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_12))=(nat-to-int _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_13))=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_14) (succ _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_15) (succ _qv_14))))
USE ASSUMPTION FAILED

  backtrack to: ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len _v_16)))
  rewritten [11]: ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
  rewritten [11]: ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
  rewritten [11]: ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
  Maximum recursion depth reached
CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_11)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_12))=(nat-to-int _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_13))=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_14) (succ _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_15) (succ _qv_14))))
USE ASSUMPTION FAILED

  backtrack to: ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
  rewritten [11]: ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len (rotate _t_17 _v_16))))
  Maximum recursion depth reached
CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_11)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_12))=(nat-to-int _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_13))=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_14) (succ _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_15) (succ _qv_14))))
USE ASSUMPTION FAILED

  backtrack to: ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
  rewritten [11]: ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
  Maximum recursion depth reached
CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_11)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_12))=(nat-to-int _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_13))=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_14) (succ _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_15) (succ _qv_14))))
USE ASSUMPTION FAILED

  backtrack to: ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
  rewritten [11]: ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len (rotate _t_17 _v_16))))
  Maximum recursion depth reached
CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_11)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_12))=(nat-to-int _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_13))=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_14) (succ _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_15) (succ _qv_14))))
USE ASSUMPTION FAILED

  backtrack to: ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_11)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_12))=(nat-to-int _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_13))=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_14) (succ _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_15) (succ _qv_14))))
USE ASSUMPTION FAILED

  backtrack to: ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
  rewritten [11]: ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
  rewritten [11]: ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len (rotate _t_17 _v_16))))
  Maximum recursion depth reached
CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_11)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_12))=(nat-to-int _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_13))=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_14) (succ _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_15) (succ _qv_14))))
USE ASSUMPTION FAILED

  backtrack to: ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
  rewritten [11]: ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))))=(nat-to-int (len _v_16)))
  Maximum recursion depth reached
CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_11)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_12))=(nat-to-int _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_13))=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_14) (succ _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_15) (succ _qv_14))))
USE ASSUMPTION FAILED

  backtrack to: ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
  rewritten [11]: ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len (rotate _t_17 _v_16))))
  Maximum recursion depth reached
CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_11)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_12))=(nat-to-int _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_13))=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_14) (succ _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_15) (succ _qv_14))))
USE ASSUMPTION FAILED

  backtrack to: ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
  rewritten [11]: ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))))=(nat-to-int (len _v_16)))
  Maximum recursion depth reached
CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_11)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_12))=(nat-to-int _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_13))=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_14) (succ _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_15) (succ _qv_14))))
USE ASSUMPTION FAILED

  backtrack to: ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_11)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_12))=(nat-to-int _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_13))=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_14) (succ _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_15) (succ _qv_14))))
USE ASSUMPTION FAILED

  backtrack to: ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
  rewritten [11]: ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
  rewritten [11]: ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
  Maximum recursion depth reached
CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_11)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_12))=(nat-to-int _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_13))=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_14) (succ _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_15) (succ _qv_14))))
USE ASSUMPTION FAILED

  backtrack to: ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
  rewritten [11]: ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len (rotate _t_17 _v_16))))
  Maximum recursion depth reached
CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_11)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_12))=(nat-to-int _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_13))=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_14) (succ _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_15) (succ _qv_14))))
USE ASSUMPTION FAILED

  backtrack to: ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
  rewritten [11]: ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
  Maximum recursion depth reached
CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_11)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_12))=(nat-to-int _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_13))=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_14) (succ _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_15) (succ _qv_14))))
USE ASSUMPTION FAILED

  backtrack to: ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
  rewritten [11]: ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len (rotate _t_17 _v_16))))
  Maximum recursion depth reached
CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_11)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_12))=(nat-to-int _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_13))=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_14) (succ _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_15) (succ _qv_14))))
USE ASSUMPTION FAILED

  backtrack to: ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_11)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_12))=(nat-to-int _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_13))=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_14) (succ _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_15) (succ _qv_14))))
USE ASSUMPTION FAILED

  backtrack to: ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
  rewritten [11]: ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
  rewritten [11]: ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len (rotate _t_17 _v_16))))
  Maximum recursion depth reached
CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_11)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_12))=(nat-to-int _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_13))=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_14) (succ _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_15) (succ _qv_14))))
USE ASSUMPTION FAILED

  backtrack to: ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
  rewritten [11]: ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))))=(nat-to-int (len _v_16)))
  Maximum recursion depth reached
CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_11)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_12))=(nat-to-int _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_13))=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_14) (succ _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_15) (succ _qv_14))))
USE ASSUMPTION FAILED

  backtrack to: ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
  rewritten [11]: ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len (rotate _t_17 _v_16))))
  Maximum recursion depth reached
CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_11)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_12))=(nat-to-int _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_13))=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_14) (succ _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_15) (succ _qv_14))))
USE ASSUMPTION FAILED

  backtrack to: ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
  rewritten [11]: ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))))=(nat-to-int (len _v_16)))
  Maximum recursion depth reached
CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_11)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_12))=(nat-to-int _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_13))=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_14) (succ _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_15) (succ _qv_14))))
USE ASSUMPTION FAILED

  backtrack to: ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_11)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_12))=(nat-to-int _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_13))=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_14) (succ _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_15) (succ _qv_14))))
USE ASSUMPTION FAILED

  backtrack to: ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_11)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_12))=(nat-to-int _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_13))=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_14) (succ _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_15) (succ _qv_14))))
USE ASSUMPTION FAILED

  backtrack to: ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len _v_16)))
CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_11)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_12))=(nat-to-int _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_13))=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_14) (succ _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_15) (succ _qv_14))))
USE ASSUMPTION FAILED

  backtrack to: ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 _v_16))))
  rewritten [11]: ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
  sequence of rewrites only grows
CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_11)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_12))=(nat-to-int _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_13))=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_14) (succ _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_15) (succ _qv_14))))
USE ASSUMPTION FAILED

  backtrack to: ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 _v_16))))
  rewritten [11]: ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
  sequence of rewrites only grows
CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_11)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_12))=(nat-to-int _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_13))=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_14) (succ _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_15) (succ _qv_14))))
USE ASSUMPTION FAILED

  backtrack to: ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 _v_16))))
CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_11)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_12))=(nat-to-int _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_13))=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_14) (succ _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_15) (succ _qv_14))))
USE ASSUMPTION FAILED

  backtrack to: ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 _v_16))))
  rewritten [11]: ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
  rewritten [11]: ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
  sequence of rewrites only grows
CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_11)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_12))=(nat-to-int _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_13))=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_14) (succ _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_15) (succ _qv_14))))
USE ASSUMPTION FAILED

  backtrack to: ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
  rewritten [11]: ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
  sequence of rewrites only grows
CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_11)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_12))=(nat-to-int _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_13))=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_14) (succ _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_15) (succ _qv_14))))
USE ASSUMPTION FAILED

  backtrack to: ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
  rewritten [11]: ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
  sequence of rewrites only grows
CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_11)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_12))=(nat-to-int _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_13))=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_14) (succ _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_15) (succ _qv_14))))
USE ASSUMPTION FAILED

  backtrack to: ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
  rewritten [11]: ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
  sequence of rewrites only grows
CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_11)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_12))=(nat-to-int _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_13))=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_14) (succ _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_15) (succ _qv_14))))
USE ASSUMPTION FAILED

  backtrack to: ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_11)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_12))=(nat-to-int _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_13))=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_14) (succ _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_15) (succ _qv_14))))
USE ASSUMPTION FAILED

  backtrack to: ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 _v_16))))
CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_11)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_12))=(nat-to-int _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_13))=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_14) (succ _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_15) (succ _qv_14))))
USE ASSUMPTION FAILED

  backtrack to: ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len _v_16)))
  rewritten [11]: ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len _v_16)))
  rewritten [11]: ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 _v_16))))
  rewritten [10]: ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 _v_16))))
  rewritten [11]: ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
  rewritten [11]: ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
  rewritten [11]: ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
  Maximum recursion depth reached
CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_11)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_12))=(nat-to-int _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_13))=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_14) (succ _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_15) (succ _qv_14))))
USE ASSUMPTION FAILED

  backtrack to: ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
  rewritten [11]: ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
  Maximum recursion depth reached
CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_11)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_12))=(nat-to-int _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_13))=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_14) (succ _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_15) (succ _qv_14))))
USE ASSUMPTION FAILED

  backtrack to: ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
  rewritten [11]: ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
  Maximum recursion depth reached
CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_11)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_12))=(nat-to-int _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_13))=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_14) (succ _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_15) (succ _qv_14))))
USE ASSUMPTION FAILED

  backtrack to: ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
  rewritten [11]: ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
  Maximum recursion depth reached
CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_11)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_12))=(nat-to-int _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_13))=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_14) (succ _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_15) (succ _qv_14))))
USE ASSUMPTION FAILED

  backtrack to: ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_11)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_12))=(nat-to-int _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_13))=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_14) (succ _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_15) (succ _qv_14))))
USE ASSUMPTION FAILED

  backtrack to: ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
  rewritten [11]: ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
  rewritten [11]: ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
  Maximum recursion depth reached
CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_11)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_12))=(nat-to-int _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_13))=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_14) (succ _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_15) (succ _qv_14))))
USE ASSUMPTION FAILED

  backtrack to: ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
  rewritten [11]: ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16)))))))
  Maximum recursion depth reached
CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_11)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_12))=(nat-to-int _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_13))=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_14) (succ _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_15) (succ _qv_14))))
USE ASSUMPTION FAILED

  backtrack to: ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
  rewritten [11]: ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
  Maximum recursion depth reached
CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_11)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_12))=(nat-to-int _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_13))=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_14) (succ _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_15) (succ _qv_14))))
USE ASSUMPTION FAILED

  backtrack to: ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
  rewritten [11]: ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16)))))))
  Maximum recursion depth reached
CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_11)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_12))=(nat-to-int _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_13))=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_14) (succ _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_15) (succ _qv_14))))
USE ASSUMPTION FAILED

  backtrack to: ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_11)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_12))=(nat-to-int _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_13))=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_14) (succ _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_15) (succ _qv_14))))
USE ASSUMPTION FAILED

  backtrack to: ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
  rewritten [11]: ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
  rewritten [11]: ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
  Maximum recursion depth reached
CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_11)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_12))=(nat-to-int _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_13))=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_14) (succ _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_15) (succ _qv_14))))
USE ASSUMPTION FAILED

  backtrack to: ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
  rewritten [11]: ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
  Maximum recursion depth reached
CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_11)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_12))=(nat-to-int _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_13))=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_14) (succ _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_15) (succ _qv_14))))
USE ASSUMPTION FAILED

  backtrack to: ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
  rewritten [11]: ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
  Maximum recursion depth reached
CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_11)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_12))=(nat-to-int _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_13))=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_14) (succ _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_15) (succ _qv_14))))
USE ASSUMPTION FAILED

  backtrack to: ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
  rewritten [11]: ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
  Maximum recursion depth reached
CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_11)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_12))=(nat-to-int _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_13))=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_14) (succ _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_15) (succ _qv_14))))
USE ASSUMPTION FAILED

  backtrack to: ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_11)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_12))=(nat-to-int _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_13))=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_14) (succ _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_15) (succ _qv_14))))
USE ASSUMPTION FAILED

  backtrack to: ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
  rewritten [11]: ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
  rewritten [11]: ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
  Maximum recursion depth reached
CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_11)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_12))=(nat-to-int _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_13))=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_14) (succ _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_15) (succ _qv_14))))
USE ASSUMPTION FAILED

  backtrack to: ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
  rewritten [11]: ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16)))))))
  Maximum recursion depth reached
CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_11)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_12))=(nat-to-int _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_13))=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_14) (succ _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_15) (succ _qv_14))))
USE ASSUMPTION FAILED

  backtrack to: ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
  rewritten [11]: ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
  Maximum recursion depth reached
CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_11)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_12))=(nat-to-int _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_13))=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_14) (succ _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_15) (succ _qv_14))))
USE ASSUMPTION FAILED

  backtrack to: ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
  rewritten [11]: ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16)))))))
  Maximum recursion depth reached
CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_11)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_12))=(nat-to-int _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_13))=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_14) (succ _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_15) (succ _qv_14))))
USE ASSUMPTION FAILED

  backtrack to: ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_11)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_12))=(nat-to-int _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_13))=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_14) (succ _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_15) (succ _qv_14))))
USE ASSUMPTION FAILED

  backtrack to: ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_11)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_12))=(nat-to-int _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_13))=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_14) (succ _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_15) (succ _qv_14))))
USE ASSUMPTION FAILED

  backtrack to: ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 _v_16))))
  rewritten [11]: ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
  rewritten [11]: ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
  rewritten [11]: ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
  Maximum recursion depth reached
CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_11)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_12))=(nat-to-int _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_13))=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_14) (succ _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_15) (succ _qv_14))))
USE ASSUMPTION FAILED

  backtrack to: ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
  rewritten [11]: ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
  Maximum recursion depth reached
CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_11)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_12))=(nat-to-int _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_13))=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_14) (succ _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_15) (succ _qv_14))))
USE ASSUMPTION FAILED

  backtrack to: ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
  rewritten [11]: ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
  Maximum recursion depth reached
CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_11)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_12))=(nat-to-int _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_13))=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_14) (succ _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_15) (succ _qv_14))))
USE ASSUMPTION FAILED

  backtrack to: ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
  rewritten [11]: ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
  Maximum recursion depth reached
CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_11)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_12))=(nat-to-int _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_13))=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_14) (succ _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_15) (succ _qv_14))))
USE ASSUMPTION FAILED

  backtrack to: ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_11)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_12))=(nat-to-int _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_13))=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_14) (succ _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_15) (succ _qv_14))))
USE ASSUMPTION FAILED

  backtrack to: ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
  rewritten [11]: ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
  rewritten [11]: ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
  Maximum recursion depth reached
CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_11)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_12))=(nat-to-int _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_13))=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_14) (succ _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_15) (succ _qv_14))))
USE ASSUMPTION FAILED

  backtrack to: ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
  rewritten [11]: ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16)))))))
  Maximum recursion depth reached
CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_11)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_12))=(nat-to-int _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_13))=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_14) (succ _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_15) (succ _qv_14))))
USE ASSUMPTION FAILED

  backtrack to: ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
  rewritten [11]: ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
  Maximum recursion depth reached
CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_11)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_12))=(nat-to-int _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_13))=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_14) (succ _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_15) (succ _qv_14))))
USE ASSUMPTION FAILED

  backtrack to: ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
  rewritten [11]: ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16)))))))
  Maximum recursion depth reached
CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_11)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_12))=(nat-to-int _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_13))=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_14) (succ _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_15) (succ _qv_14))))
USE ASSUMPTION FAILED

  backtrack to: ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_11)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_12))=(nat-to-int _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_13))=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_14) (succ _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_15) (succ _qv_14))))
USE ASSUMPTION FAILED

  backtrack to: ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
  rewritten [11]: ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
  rewritten [11]: ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
  Maximum recursion depth reached
CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_11)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_12))=(nat-to-int _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_13))=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_14) (succ _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_15) (succ _qv_14))))
USE ASSUMPTION FAILED

  backtrack to: ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
  rewritten [11]: ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
  Maximum recursion depth reached
CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_11)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_12))=(nat-to-int _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_13))=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_14) (succ _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_15) (succ _qv_14))))
USE ASSUMPTION FAILED

  backtrack to: ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
  rewritten [11]: ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
  Maximum recursion depth reached
CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_11)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_12))=(nat-to-int _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_13))=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_14) (succ _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_15) (succ _qv_14))))
USE ASSUMPTION FAILED

  backtrack to: ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
  rewritten [11]: ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
  Maximum recursion depth reached
CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_11)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_12))=(nat-to-int _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_13))=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_14) (succ _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_15) (succ _qv_14))))
USE ASSUMPTION FAILED

  backtrack to: ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_11)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_12))=(nat-to-int _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_13))=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_14) (succ _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_15) (succ _qv_14))))
USE ASSUMPTION FAILED

  backtrack to: ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
  rewritten [11]: ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
  rewritten [11]: ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
  Maximum recursion depth reached
CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_11)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_12))=(nat-to-int _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_13))=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_14) (succ _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_15) (succ _qv_14))))
USE ASSUMPTION FAILED

  backtrack to: ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
  rewritten [11]: ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16)))))))
  Maximum recursion depth reached
CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_11)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_12))=(nat-to-int _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_13))=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_14) (succ _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_15) (succ _qv_14))))
USE ASSUMPTION FAILED

  backtrack to: ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
  rewritten [11]: ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
  Maximum recursion depth reached
CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_11)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_12))=(nat-to-int _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_13))=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_14) (succ _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_15) (succ _qv_14))))
USE ASSUMPTION FAILED

  backtrack to: ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
  rewritten [11]: ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16)))))))
  Maximum recursion depth reached
CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_11)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_12))=(nat-to-int _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_13))=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_14) (succ _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_15) (succ _qv_14))))
USE ASSUMPTION FAILED

  backtrack to: ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_11)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_12))=(nat-to-int _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_13))=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_14) (succ _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_15) (succ _qv_14))))
USE ASSUMPTION FAILED

  backtrack to: ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_11)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_12))=(nat-to-int _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_13))=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_14) (succ _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_15) (succ _qv_14))))
USE ASSUMPTION FAILED

  backtrack to: ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 _v_16))))
CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_11)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_12))=(nat-to-int _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_13))=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_14) (succ _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_15) (succ _qv_14))))
USE ASSUMPTION FAILED

  backtrack to: ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 _v_16))))
  rewritten [11]: ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
  sequence of rewrites only grows
CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_11)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_12))=(nat-to-int _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_13))=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_14) (succ _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_15) (succ _qv_14))))
USE ASSUMPTION FAILED

  backtrack to: ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 _v_16))))
  rewritten [11]: ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
  sequence of rewrites only grows
CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_11)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_12))=(nat-to-int _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_13))=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_14) (succ _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_15) (succ _qv_14))))
USE ASSUMPTION FAILED

  backtrack to: ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 _v_16))))
  rewritten [10]: ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 _v_16))))
  rewritten [11]: ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
  rewritten [11]: ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
  rewritten [11]: ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
  Maximum recursion depth reached
CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_11)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_12))=(nat-to-int _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_13))=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_14) (succ _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_15) (succ _qv_14))))
USE ASSUMPTION FAILED

  backtrack to: ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
  rewritten [11]: ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
  Maximum recursion depth reached
CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_11)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_12))=(nat-to-int _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_13))=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_14) (succ _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_15) (succ _qv_14))))
USE ASSUMPTION FAILED

  backtrack to: ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
  rewritten [11]: ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
  Maximum recursion depth reached
CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_11)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_12))=(nat-to-int _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_13))=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_14) (succ _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_15) (succ _qv_14))))
USE ASSUMPTION FAILED

  backtrack to: ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
  rewritten [11]: ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
  Maximum recursion depth reached
CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_11)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_12))=(nat-to-int _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_13))=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_14) (succ _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_15) (succ _qv_14))))
USE ASSUMPTION FAILED

  backtrack to: ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_11)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_12))=(nat-to-int _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_13))=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_14) (succ _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_15) (succ _qv_14))))
USE ASSUMPTION FAILED

  backtrack to: ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
  rewritten [11]: ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
  rewritten [11]: ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
  Maximum recursion depth reached
CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_11)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_12))=(nat-to-int _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_13))=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_14) (succ _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_15) (succ _qv_14))))
USE ASSUMPTION FAILED

  backtrack to: ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
  rewritten [11]: ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16)))))))
  Maximum recursion depth reached
CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_11)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_12))=(nat-to-int _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_13))=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_14) (succ _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_15) (succ _qv_14))))
USE ASSUMPTION FAILED

  backtrack to: ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
  rewritten [11]: ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
  Maximum recursion depth reached
CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_11)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_12))=(nat-to-int _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_13))=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_14) (succ _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_15) (succ _qv_14))))
USE ASSUMPTION FAILED

  backtrack to: ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
  rewritten [11]: ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16)))))))
  Maximum recursion depth reached
CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_11)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_12))=(nat-to-int _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_13))=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_14) (succ _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_15) (succ _qv_14))))
USE ASSUMPTION FAILED

  backtrack to: ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_11)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_12))=(nat-to-int _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_13))=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_14) (succ _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_15) (succ _qv_14))))
USE ASSUMPTION FAILED

  backtrack to: ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
  rewritten [11]: ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
  rewritten [11]: ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
  Maximum recursion depth reached
CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_11)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_12))=(nat-to-int _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_13))=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_14) (succ _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_15) (succ _qv_14))))
USE ASSUMPTION FAILED

  backtrack to: ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
  rewritten [11]: ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
  Maximum recursion depth reached
CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_11)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_12))=(nat-to-int _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_13))=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_14) (succ _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_15) (succ _qv_14))))
USE ASSUMPTION FAILED

  backtrack to: ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
  rewritten [11]: ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
  Maximum recursion depth reached
CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_11)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_12))=(nat-to-int _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_13))=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_14) (succ _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_15) (succ _qv_14))))
USE ASSUMPTION FAILED

  backtrack to: ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
  rewritten [11]: ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
  Maximum recursion depth reached
CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_11)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_12))=(nat-to-int _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_13))=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_14) (succ _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_15) (succ _qv_14))))
USE ASSUMPTION FAILED

  backtrack to: ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_11)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_12))=(nat-to-int _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_13))=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_14) (succ _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_15) (succ _qv_14))))
USE ASSUMPTION FAILED

  backtrack to: ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
  rewritten [11]: ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
  rewritten [11]: ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
  Maximum recursion depth reached
CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_11)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_12))=(nat-to-int _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_13))=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_14) (succ _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_15) (succ _qv_14))))
USE ASSUMPTION FAILED

  backtrack to: ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
  rewritten [11]: ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16)))))))
  Maximum recursion depth reached
CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_11)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_12))=(nat-to-int _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_13))=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_14) (succ _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_15) (succ _qv_14))))
USE ASSUMPTION FAILED

  backtrack to: ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
  rewritten [11]: ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
  Maximum recursion depth reached
CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_11)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_12))=(nat-to-int _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_13))=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_14) (succ _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_15) (succ _qv_14))))
USE ASSUMPTION FAILED

  backtrack to: ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
  rewritten [11]: ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16)))))))
  Maximum recursion depth reached
CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_11)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_12))=(nat-to-int _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_13))=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_14) (succ _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_15) (succ _qv_14))))
USE ASSUMPTION FAILED

  backtrack to: ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_11)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_12))=(nat-to-int _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_13))=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_14) (succ _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_15) (succ _qv_14))))
USE ASSUMPTION FAILED

  backtrack to: ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_11)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_12))=(nat-to-int _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_13))=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_14) (succ _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_15) (succ _qv_14))))
USE ASSUMPTION FAILED

  backtrack to: ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 _v_16))))
  rewritten [11]: ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
  rewritten [11]: ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
  rewritten [11]: ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
  Maximum recursion depth reached
CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_11)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_12))=(nat-to-int _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_13))=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_14) (succ _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_15) (succ _qv_14))))
USE ASSUMPTION FAILED

  backtrack to: ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
  rewritten [11]: ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
  Maximum recursion depth reached
CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_11)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_12))=(nat-to-int _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_13))=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_14) (succ _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_15) (succ _qv_14))))
USE ASSUMPTION FAILED

  backtrack to: ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
  rewritten [11]: ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
  Maximum recursion depth reached
CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_11)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_12))=(nat-to-int _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_13))=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_14) (succ _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_15) (succ _qv_14))))
USE ASSUMPTION FAILED

  backtrack to: ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
  rewritten [11]: ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
  Maximum recursion depth reached
CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_11)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_12))=(nat-to-int _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_13))=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_14) (succ _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_15) (succ _qv_14))))
USE ASSUMPTION FAILED

  backtrack to: ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_11)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_12))=(nat-to-int _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_13))=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_14) (succ _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_15) (succ _qv_14))))
USE ASSUMPTION FAILED

  backtrack to: ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
  rewritten [11]: ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
  rewritten [11]: ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
  Maximum recursion depth reached
CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_11)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_12))=(nat-to-int _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_13))=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_14) (succ _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_15) (succ _qv_14))))
USE ASSUMPTION FAILED

  backtrack to: ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
  rewritten [11]: ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16)))))))
  Maximum recursion depth reached
CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_11)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_12))=(nat-to-int _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_13))=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_14) (succ _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_15) (succ _qv_14))))
USE ASSUMPTION FAILED

  backtrack to: ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
  rewritten [11]: ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
  Maximum recursion depth reached
CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_11)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_12))=(nat-to-int _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_13))=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_14) (succ _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_15) (succ _qv_14))))
USE ASSUMPTION FAILED

  backtrack to: ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
  rewritten [11]: ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16)))))))
  Maximum recursion depth reached
CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_11)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_12))=(nat-to-int _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_13))=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_14) (succ _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_15) (succ _qv_14))))
USE ASSUMPTION FAILED

  backtrack to: ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_11)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_12))=(nat-to-int _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_13))=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_14) (succ _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_15) (succ _qv_14))))
USE ASSUMPTION FAILED

  backtrack to: ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
  rewritten [11]: ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
  rewritten [11]: ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
  Maximum recursion depth reached
CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_11)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_12))=(nat-to-int _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_13))=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_14) (succ _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_15) (succ _qv_14))))
USE ASSUMPTION FAILED

  backtrack to: ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
  rewritten [11]: ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
  Maximum recursion depth reached
CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_11)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_12))=(nat-to-int _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_13))=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_14) (succ _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_15) (succ _qv_14))))
USE ASSUMPTION FAILED

  backtrack to: ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
  rewritten [11]: ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
  Maximum recursion depth reached
CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_11)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_12))=(nat-to-int _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_13))=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_14) (succ _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_15) (succ _qv_14))))
USE ASSUMPTION FAILED

  backtrack to: ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
  rewritten [11]: ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
  Maximum recursion depth reached
CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_11)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_12))=(nat-to-int _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_13))=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_14) (succ _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_15) (succ _qv_14))))
USE ASSUMPTION FAILED

  backtrack to: ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_11)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_12))=(nat-to-int _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_13))=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_14) (succ _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_15) (succ _qv_14))))
USE ASSUMPTION FAILED

  backtrack to: ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
  rewritten [11]: ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
  rewritten [11]: ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
  Maximum recursion depth reached
CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_11)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_12))=(nat-to-int _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_13))=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_14) (succ _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_15) (succ _qv_14))))
USE ASSUMPTION FAILED

  backtrack to: ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
  rewritten [11]: ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16)))))))
  Maximum recursion depth reached
CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_11)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_12))=(nat-to-int _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_13))=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_14) (succ _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_15) (succ _qv_14))))
USE ASSUMPTION FAILED

  backtrack to: ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
  rewritten [11]: ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
  Maximum recursion depth reached
CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_11)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_12))=(nat-to-int _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_13))=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_14) (succ _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_15) (succ _qv_14))))
USE ASSUMPTION FAILED

  backtrack to: ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
  rewritten [11]: ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16)))))))
  Maximum recursion depth reached
CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_11)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_12))=(nat-to-int _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_13))=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_14) (succ _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_15) (succ _qv_14))))
USE ASSUMPTION FAILED

  backtrack to: ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_11)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_12))=(nat-to-int _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_13))=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_14) (succ _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_15) (succ _qv_14))))
USE ASSUMPTION FAILED

  backtrack to: ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_11)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_12))=(nat-to-int _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_13))=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_14) (succ _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_15) (succ _qv_14))))
USE ASSUMPTION FAILED

  backtrack to: ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 _v_16))))
CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_11)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_12))=(nat-to-int _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_13))=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_14) (succ _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_15) (succ _qv_14))))
USE ASSUMPTION FAILED

  backtrack to: ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 _v_16))))
  rewritten [11]: ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
  sequence of rewrites only grows
CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_11)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_12))=(nat-to-int _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_13))=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_14) (succ _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_15) (succ _qv_14))))
USE ASSUMPTION FAILED

  backtrack to: ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 _v_16))))
  rewritten [11]: ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
  sequence of rewrites only grows
CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_11)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_12))=(nat-to-int _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_13))=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_14) (succ _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_15) (succ _qv_14))))
USE ASSUMPTION FAILED

  backtrack to: ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 _v_16))))
CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_11)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_12))=(nat-to-int _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_13))=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_14) (succ _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_15) (succ _qv_14))))
USE ASSUMPTION FAILED

  backtrack to: ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len _v_16)))
  rewritten [11]: ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
  rewritten [11]: ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
  sequence of rewrites only grows
CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_11)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_12))=(nat-to-int _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_13))=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_14) (succ _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_15) (succ _qv_14))))
USE ASSUMPTION FAILED

  backtrack to: ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
  rewritten [11]: ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
  sequence of rewrites only grows
CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_11)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_12))=(nat-to-int _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_13))=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_14) (succ _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_15) (succ _qv_14))))
USE ASSUMPTION FAILED

  backtrack to: ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
  rewritten [11]: ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
  sequence of rewrites only grows
CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_11)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_12))=(nat-to-int _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_13))=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_14) (succ _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_15) (succ _qv_14))))
USE ASSUMPTION FAILED

  backtrack to: ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
  rewritten [11]: ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
  sequence of rewrites only grows
CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_11)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_12))=(nat-to-int _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_13))=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_14) (succ _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_15) (succ _qv_14))))
USE ASSUMPTION FAILED

  backtrack to: ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_11)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_12))=(nat-to-int _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_13))=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_14) (succ _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_15) (succ _qv_14))))
USE ASSUMPTION FAILED

  backtrack to: ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len _v_16)))
  rewritten [11]: ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 _v_16))))
  rewritten [10]: ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 _v_16))))
  rewritten [11]: ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
  rewritten [11]: ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
  rewritten [11]: ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
  Maximum recursion depth reached
CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_11)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_12))=(nat-to-int _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_13))=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_14) (succ _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_15) (succ _qv_14))))
USE ASSUMPTION FAILED

  backtrack to: ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
  rewritten [11]: ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
  Maximum recursion depth reached
CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_11)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_12))=(nat-to-int _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_13))=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_14) (succ _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_15) (succ _qv_14))))
USE ASSUMPTION FAILED

  backtrack to: ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
  rewritten [11]: ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
  Maximum recursion depth reached
CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_11)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_12))=(nat-to-int _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_13))=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_14) (succ _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_15) (succ _qv_14))))
USE ASSUMPTION FAILED

  backtrack to: ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
  rewritten [11]: ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
  Maximum recursion depth reached
CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_11)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_12))=(nat-to-int _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_13))=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_14) (succ _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_15) (succ _qv_14))))
USE ASSUMPTION FAILED

  backtrack to: ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_11)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_12))=(nat-to-int _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_13))=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_14) (succ _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_15) (succ _qv_14))))
USE ASSUMPTION FAILED

  backtrack to: ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
  rewritten [11]: ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
  rewritten [11]: ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
  Maximum recursion depth reached
CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_11)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_12))=(nat-to-int _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_13))=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_14) (succ _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_15) (succ _qv_14))))
USE ASSUMPTION FAILED

  backtrack to: ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
  rewritten [11]: ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16)))))))
  Maximum recursion depth reached
CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_11)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_12))=(nat-to-int _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_13))=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_14) (succ _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_15) (succ _qv_14))))
USE ASSUMPTION FAILED

  backtrack to: ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
  rewritten [11]: ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
  Maximum recursion depth reached
CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_11)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_12))=(nat-to-int _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_13))=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_14) (succ _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_15) (succ _qv_14))))
USE ASSUMPTION FAILED

  backtrack to: ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
  rewritten [11]: ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16)))))))
  Maximum recursion depth reached
CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_11)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_12))=(nat-to-int _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_13))=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_14) (succ _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_15) (succ _qv_14))))
USE ASSUMPTION FAILED

  backtrack to: ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_11)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_12))=(nat-to-int _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_13))=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_14) (succ _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_15) (succ _qv_14))))
USE ASSUMPTION FAILED

  backtrack to: ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
  rewritten [11]: ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
  rewritten [11]: ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
  Maximum recursion depth reached
CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_11)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_12))=(nat-to-int _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_13))=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_14) (succ _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_15) (succ _qv_14))))
USE ASSUMPTION FAILED

  backtrack to: ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
  rewritten [11]: ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
  Maximum recursion depth reached
CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_11)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_12))=(nat-to-int _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_13))=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_14) (succ _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_15) (succ _qv_14))))
USE ASSUMPTION FAILED

  backtrack to: ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
  rewritten [11]: ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
  Maximum recursion depth reached
CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_11)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_12))=(nat-to-int _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_13))=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_14) (succ _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_15) (succ _qv_14))))
USE ASSUMPTION FAILED

  backtrack to: ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
  rewritten [11]: ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
  Maximum recursion depth reached
CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_11)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_12))=(nat-to-int _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_13))=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_14) (succ _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_15) (succ _qv_14))))
USE ASSUMPTION FAILED

  backtrack to: ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_11)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_12))=(nat-to-int _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_13))=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_14) (succ _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_15) (succ _qv_14))))
USE ASSUMPTION FAILED

  backtrack to: ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
  rewritten [11]: ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
  rewritten [11]: ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
  Maximum recursion depth reached
CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_11)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_12))=(nat-to-int _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_13))=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_14) (succ _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_15) (succ _qv_14))))
USE ASSUMPTION FAILED

  backtrack to: ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
  rewritten [11]: ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16)))))))
  Maximum recursion depth reached
CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_11)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_12))=(nat-to-int _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_13))=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_14) (succ _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_15) (succ _qv_14))))
USE ASSUMPTION FAILED

  backtrack to: ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
  rewritten [11]: ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
  Maximum recursion depth reached
CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_11)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_12))=(nat-to-int _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_13))=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_14) (succ _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_15) (succ _qv_14))))
USE ASSUMPTION FAILED

  backtrack to: ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
  rewritten [11]: ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16)))))))
  Maximum recursion depth reached
CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_11)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_12))=(nat-to-int _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_13))=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_14) (succ _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_15) (succ _qv_14))))
USE ASSUMPTION FAILED

  backtrack to: ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_11)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_12))=(nat-to-int _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_13))=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_14) (succ _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_15) (succ _qv_14))))
USE ASSUMPTION FAILED

  backtrack to: ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_11)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_12))=(nat-to-int _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_13))=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_14) (succ _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_15) (succ _qv_14))))
USE ASSUMPTION FAILED

  backtrack to: ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 _v_16))))
  rewritten [11]: ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
  rewritten [11]: ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
  rewritten [11]: ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
  Maximum recursion depth reached
CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_11)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_12))=(nat-to-int _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_13))=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_14) (succ _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_15) (succ _qv_14))))
USE ASSUMPTION FAILED

  backtrack to: ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
  rewritten [11]: ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
  Maximum recursion depth reached
CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_11)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_12))=(nat-to-int _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_13))=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_14) (succ _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_15) (succ _qv_14))))
USE ASSUMPTION FAILED

  backtrack to: ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
  rewritten [11]: ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
  Maximum recursion depth reached
CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_11)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_12))=(nat-to-int _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_13))=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_14) (succ _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_15) (succ _qv_14))))
USE ASSUMPTION FAILED

  backtrack to: ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
  rewritten [11]: ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
  Maximum recursion depth reached
CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_11)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_12))=(nat-to-int _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_13))=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_14) (succ _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_15) (succ _qv_14))))
USE ASSUMPTION FAILED

  backtrack to: ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_11)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_12))=(nat-to-int _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_13))=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_14) (succ _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_15) (succ _qv_14))))
USE ASSUMPTION FAILED

  backtrack to: ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
  rewritten [11]: ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
  rewritten [11]: ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
  Maximum recursion depth reached
CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_11)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_12))=(nat-to-int _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_13))=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_14) (succ _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_15) (succ _qv_14))))
USE ASSUMPTION FAILED

  backtrack to: ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
  rewritten [11]: ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16)))))))
  Maximum recursion depth reached
CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_11)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_12))=(nat-to-int _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_13))=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_14) (succ _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_15) (succ _qv_14))))
USE ASSUMPTION FAILED

  backtrack to: ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
  rewritten [11]: ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
  Maximum recursion depth reached
CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_11)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_12))=(nat-to-int _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_13))=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_14) (succ _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_15) (succ _qv_14))))
USE ASSUMPTION FAILED

  backtrack to: ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
  rewritten [11]: ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16)))))))
  Maximum recursion depth reached
CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_11)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_12))=(nat-to-int _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_13))=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_14) (succ _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_15) (succ _qv_14))))
USE ASSUMPTION FAILED

  backtrack to: ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_11)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_12))=(nat-to-int _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_13))=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_14) (succ _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_15) (succ _qv_14))))
USE ASSUMPTION FAILED

  backtrack to: ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
  rewritten [11]: ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
  rewritten [11]: ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
  Maximum recursion depth reached
CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_11)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_12))=(nat-to-int _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_13))=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_14) (succ _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_15) (succ _qv_14))))
USE ASSUMPTION FAILED

  backtrack to: ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
  rewritten [11]: ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
  Maximum recursion depth reached
CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_11)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_12))=(nat-to-int _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_13))=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_14) (succ _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_15) (succ _qv_14))))
USE ASSUMPTION FAILED

  backtrack to: ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
  rewritten [11]: ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
  Maximum recursion depth reached
CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_11)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_12))=(nat-to-int _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_13))=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_14) (succ _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_15) (succ _qv_14))))
USE ASSUMPTION FAILED

  backtrack to: ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
  rewritten [11]: ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
  Maximum recursion depth reached
CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_11)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_12))=(nat-to-int _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_13))=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_14) (succ _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_15) (succ _qv_14))))
USE ASSUMPTION FAILED

  backtrack to: ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_11)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_12))=(nat-to-int _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_13))=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_14) (succ _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_15) (succ _qv_14))))
USE ASSUMPTION FAILED

  backtrack to: ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
  rewritten [11]: ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
  rewritten [11]: ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
  Maximum recursion depth reached
CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_11)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_12))=(nat-to-int _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_13))=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_14) (succ _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_15) (succ _qv_14))))
USE ASSUMPTION FAILED

  backtrack to: ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
  rewritten [11]: ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16)))))))
  Maximum recursion depth reached
CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_11)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_12))=(nat-to-int _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_13))=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_14) (succ _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_15) (succ _qv_14))))
USE ASSUMPTION FAILED

  backtrack to: ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
  rewritten [11]: ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
  Maximum recursion depth reached
CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_11)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_12))=(nat-to-int _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_13))=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_14) (succ _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_15) (succ _qv_14))))
USE ASSUMPTION FAILED

  backtrack to: ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
  rewritten [11]: ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16)))))))
  Maximum recursion depth reached
CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_11)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_12))=(nat-to-int _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_13))=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_14) (succ _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_15) (succ _qv_14))))
USE ASSUMPTION FAILED

  backtrack to: ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_11)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_12))=(nat-to-int _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_13))=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_14) (succ _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_15) (succ _qv_14))))
USE ASSUMPTION FAILED

  backtrack to: ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_11)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_12))=(nat-to-int _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_13))=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_14) (succ _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_15) (succ _qv_14))))
USE ASSUMPTION FAILED

  backtrack to: ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 _v_16))))
CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_11)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_12))=(nat-to-int _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_13))=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_14) (succ _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_15) (succ _qv_14))))
USE ASSUMPTION FAILED

  backtrack to: ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 _v_16))))
  rewritten [11]: ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
  sequence of rewrites only grows
CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_11)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_12))=(nat-to-int _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_13))=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_14) (succ _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_15) (succ _qv_14))))
USE ASSUMPTION FAILED

  backtrack to: ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 _v_16))))
  rewritten [11]: ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
  sequence of rewrites only grows
CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_11)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_12))=(nat-to-int _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_13))=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_14) (succ _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_15) (succ _qv_14))))
USE ASSUMPTION FAILED

  backtrack to: ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 _v_16))))
  rewritten [10]: ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 _v_16))))
  rewritten [11]: ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
  rewritten [11]: ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
  rewritten [11]: ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
  Maximum recursion depth reached
CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_11)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_12))=(nat-to-int _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_13))=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_14) (succ _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_15) (succ _qv_14))))
USE ASSUMPTION FAILED

  backtrack to: ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
  rewritten [11]: ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
  Maximum recursion depth reached
CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_11)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_12))=(nat-to-int _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_13))=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_14) (succ _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_15) (succ _qv_14))))
USE ASSUMPTION FAILED

  backtrack to: ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
  rewritten [11]: ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
  Maximum recursion depth reached
CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_11)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_12))=(nat-to-int _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_13))=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_14) (succ _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_15) (succ _qv_14))))
USE ASSUMPTION FAILED

  backtrack to: ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
  rewritten [11]: ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
  Maximum recursion depth reached
CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_11)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_12))=(nat-to-int _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_13))=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_14) (succ _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_15) (succ _qv_14))))
USE ASSUMPTION FAILED

  backtrack to: ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_11)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_12))=(nat-to-int _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_13))=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_14) (succ _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_15) (succ _qv_14))))
USE ASSUMPTION FAILED

  backtrack to: ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
  rewritten [11]: ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
  rewritten [11]: ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
  Maximum recursion depth reached
CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_11)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_12))=(nat-to-int _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_13))=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_14) (succ _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_15) (succ _qv_14))))
USE ASSUMPTION FAILED

  backtrack to: ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
  rewritten [11]: ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16)))))))
  Maximum recursion depth reached
CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_11)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_12))=(nat-to-int _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_13))=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_14) (succ _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_15) (succ _qv_14))))
USE ASSUMPTION FAILED

  backtrack to: ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
  rewritten [11]: ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
  Maximum recursion depth reached
CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_11)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_12))=(nat-to-int _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_13))=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_14) (succ _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_15) (succ _qv_14))))
USE ASSUMPTION FAILED

  backtrack to: ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
  rewritten [11]: ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16)))))))
  Maximum recursion depth reached
CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_11)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_12))=(nat-to-int _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_13))=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_14) (succ _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_15) (succ _qv_14))))
USE ASSUMPTION FAILED

  backtrack to: ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_11)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_12))=(nat-to-int _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_13))=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_14) (succ _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_15) (succ _qv_14))))
USE ASSUMPTION FAILED

  backtrack to: ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
  rewritten [11]: ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
  rewritten [11]: ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
  Maximum recursion depth reached
CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_11)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_12))=(nat-to-int _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_13))=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_14) (succ _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_15) (succ _qv_14))))
USE ASSUMPTION FAILED

  backtrack to: ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
  rewritten [11]: ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
  Maximum recursion depth reached
CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_11)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_12))=(nat-to-int _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_13))=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_14) (succ _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_15) (succ _qv_14))))
USE ASSUMPTION FAILED

  backtrack to: ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
  rewritten [11]: ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
  Maximum recursion depth reached
CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_11)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_12))=(nat-to-int _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_13))=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_14) (succ _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_15) (succ _qv_14))))
USE ASSUMPTION FAILED

  backtrack to: ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
  rewritten [11]: ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
  Maximum recursion depth reached
CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_11)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_12))=(nat-to-int _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_13))=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_14) (succ _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_15) (succ _qv_14))))
USE ASSUMPTION FAILED

  backtrack to: ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_11)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_12))=(nat-to-int _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_13))=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_14) (succ _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_15) (succ _qv_14))))
USE ASSUMPTION FAILED

  backtrack to: ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
  rewritten [11]: ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
  rewritten [11]: ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
  Maximum recursion depth reached
CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_11)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_12))=(nat-to-int _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_13))=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_14) (succ _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_15) (succ _qv_14))))
USE ASSUMPTION FAILED

  backtrack to: ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
  rewritten [11]: ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16)))))))
  Maximum recursion depth reached
CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_11)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_12))=(nat-to-int _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_13))=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_14) (succ _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_15) (succ _qv_14))))
USE ASSUMPTION FAILED

  backtrack to: ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
  rewritten [11]: ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
  Maximum recursion depth reached
CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_11)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_12))=(nat-to-int _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_13))=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_14) (succ _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_15) (succ _qv_14))))
USE ASSUMPTION FAILED

  backtrack to: ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
  rewritten [11]: ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16)))))))
  Maximum recursion depth reached
CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_11)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_12))=(nat-to-int _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_13))=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_14) (succ _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_15) (succ _qv_14))))
USE ASSUMPTION FAILED

  backtrack to: ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_11)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_12))=(nat-to-int _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_13))=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_14) (succ _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_15) (succ _qv_14))))
USE ASSUMPTION FAILED

  backtrack to: ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_11)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_12))=(nat-to-int _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_13))=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_14) (succ _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_15) (succ _qv_14))))
USE ASSUMPTION FAILED

  backtrack to: ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 _v_16))))
  rewritten [11]: ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
  rewritten [11]: ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
  rewritten [11]: ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
  Maximum recursion depth reached
CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_11)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_12))=(nat-to-int _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_13))=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_14) (succ _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_15) (succ _qv_14))))
USE ASSUMPTION FAILED

  backtrack to: ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
  rewritten [11]: ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
  Maximum recursion depth reached
CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_11)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_12))=(nat-to-int _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_13))=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_14) (succ _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_15) (succ _qv_14))))
USE ASSUMPTION FAILED

  backtrack to: ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
  rewritten [11]: ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
  Maximum recursion depth reached
CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_11)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_12))=(nat-to-int _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_13))=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_14) (succ _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_15) (succ _qv_14))))
USE ASSUMPTION FAILED

  backtrack to: ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
  rewritten [11]: ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
  Maximum recursion depth reached
CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_11)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_12))=(nat-to-int _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_13))=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_14) (succ _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_15) (succ _qv_14))))
USE ASSUMPTION FAILED

  backtrack to: ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_11)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_12))=(nat-to-int _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_13))=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_14) (succ _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_15) (succ _qv_14))))
USE ASSUMPTION FAILED

  backtrack to: ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
  rewritten [11]: ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
  rewritten [11]: ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
  Maximum recursion depth reached
CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_11)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_12))=(nat-to-int _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_13))=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_14) (succ _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_15) (succ _qv_14))))
USE ASSUMPTION FAILED

  backtrack to: ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
  rewritten [11]: ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16)))))))
  Maximum recursion depth reached
CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_11)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_12))=(nat-to-int _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_13))=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_14) (succ _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_15) (succ _qv_14))))
USE ASSUMPTION FAILED

  backtrack to: ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
  rewritten [11]: ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
  Maximum recursion depth reached
CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_11)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_12))=(nat-to-int _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_13))=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_14) (succ _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_15) (succ _qv_14))))
USE ASSUMPTION FAILED

  backtrack to: ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
  rewritten [11]: ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16)))))))
  Maximum recursion depth reached
CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_11)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_12))=(nat-to-int _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_13))=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_14) (succ _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_15) (succ _qv_14))))
USE ASSUMPTION FAILED

  backtrack to: ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_11)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_12))=(nat-to-int _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_13))=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_14) (succ _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_15) (succ _qv_14))))
USE ASSUMPTION FAILED

  backtrack to: ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
  rewritten [11]: ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
  rewritten [11]: ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
  Maximum recursion depth reached
CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_11)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_12))=(nat-to-int _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_13))=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_14) (succ _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_15) (succ _qv_14))))
USE ASSUMPTION FAILED

  backtrack to: ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
  rewritten [11]: ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
  Maximum recursion depth reached
CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_11)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_12))=(nat-to-int _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_13))=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_14) (succ _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_15) (succ _qv_14))))
USE ASSUMPTION FAILED

  backtrack to: ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
  rewritten [11]: ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
  Maximum recursion depth reached
CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_11)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_12))=(nat-to-int _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_13))=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_14) (succ _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_15) (succ _qv_14))))
USE ASSUMPTION FAILED

  backtrack to: ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
  rewritten [11]: ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
  Maximum recursion depth reached
CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_11)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_12))=(nat-to-int _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_13))=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_14) (succ _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_15) (succ _qv_14))))
USE ASSUMPTION FAILED

  backtrack to: ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_11)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_12))=(nat-to-int _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_13))=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_14) (succ _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_15) (succ _qv_14))))
USE ASSUMPTION FAILED

  backtrack to: ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
  rewritten [11]: ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
  rewritten [11]: ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
  Maximum recursion depth reached
CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_11)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_12))=(nat-to-int _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_13))=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_14) (succ _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_15) (succ _qv_14))))
USE ASSUMPTION FAILED

  backtrack to: ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
  rewritten [11]: ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16)))))))
  Maximum recursion depth reached
CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_11)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_12))=(nat-to-int _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_13))=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_14) (succ _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_15) (succ _qv_14))))
USE ASSUMPTION FAILED

  backtrack to: ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
  rewritten [11]: ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
  Maximum recursion depth reached
CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_11)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_12))=(nat-to-int _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_13))=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_14) (succ _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_15) (succ _qv_14))))
USE ASSUMPTION FAILED

  backtrack to: ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
  rewritten [11]: ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16)))))))
  Maximum recursion depth reached
CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_11)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_12))=(nat-to-int _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_13))=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_14) (succ _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_15) (succ _qv_14))))
USE ASSUMPTION FAILED

  backtrack to: ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_11)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_12))=(nat-to-int _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_13))=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_14) (succ _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_15) (succ _qv_14))))
USE ASSUMPTION FAILED

  backtrack to: ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_11)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_12))=(nat-to-int _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_13))=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_14) (succ _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_15) (succ _qv_14))))
USE ASSUMPTION FAILED

  backtrack to: ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 _v_16))))
CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_11)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_12))=(nat-to-int _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_13))=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_14) (succ _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_15) (succ _qv_14))))
USE ASSUMPTION FAILED

  backtrack to: ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 _v_16))))
  rewritten [11]: ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
  sequence of rewrites only grows
CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_11)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_12))=(nat-to-int _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_13))=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_14) (succ _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_15) (succ _qv_14))))
USE ASSUMPTION FAILED

  backtrack to: ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 _v_16))))
  rewritten [11]: ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
  sequence of rewrites only grows
CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_11)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_12))=(nat-to-int _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_13))=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_14) (succ _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_15) (succ _qv_14))))
USE ASSUMPTION FAILED

  backtrack to: ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 _v_16))))
CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_11)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_12))=(nat-to-int _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_13))=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_14) (succ _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_15) (succ _qv_14))))
USE ASSUMPTION FAILED

  backtrack to: ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len _v_16)))
  rewritten [11]: ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
  rewritten [11]: ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
  sequence of rewrites only grows
CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_11)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_12))=(nat-to-int _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_13))=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_14) (succ _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_15) (succ _qv_14))))
USE ASSUMPTION FAILED

  backtrack to: ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
  rewritten [11]: ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
  sequence of rewrites only grows
CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_11)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_12))=(nat-to-int _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_13))=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_14) (succ _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_15) (succ _qv_14))))
USE ASSUMPTION FAILED

  backtrack to: ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
  rewritten [11]: ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
  sequence of rewrites only grows
CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_11)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_12))=(nat-to-int _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_13))=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_14) (succ _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_15) (succ _qv_14))))
USE ASSUMPTION FAILED

  backtrack to: ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
  rewritten [11]: ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
  sequence of rewrites only grows
CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_11)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_12))=(nat-to-int _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_13))=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_14) (succ _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_15) (succ _qv_14))))
USE ASSUMPTION FAILED

  backtrack to: ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_11)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_12))=(nat-to-int _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_13))=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_14) (succ _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_15) (succ _qv_14))))
USE ASSUMPTION FAILED

  backtrack to: ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len _v_16)))
CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_11)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_12))=(nat-to-int _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_13))=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_14) (succ _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_15) (succ _qv_14))))
USE ASSUMPTION FAILED

  backtrack to: ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len _v_16)))
CURRENT SUBGOAL ((len (rotate (succ _t_17) _v_16))=(len _v_16))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (rotate (succ _t_17) _v_16))=(len _v_16))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (rotate (succ _t_17) _v_16))=(len _v_16))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (rotate (succ _t_17) _v_16))=(len _v_16))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (rotate (succ _t_17) _v_16))=(len _v_16))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (rotate (succ _t_17) _v_16))=(len _v_16))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_11)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (rotate (succ _t_17) _v_16))=(len _v_16))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_12))=(nat-to-int _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (rotate (succ _t_17) _v_16))=(len _v_16))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_13))=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (rotate (succ _t_17) _v_16))=(len _v_16))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_14) (succ _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (rotate (succ _t_17) _v_16))=(len _v_16))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_15) (succ _qv_14))))
USE ASSUMPTION FAILED

  backtrack to: ((len (rotate (succ _t_17) _v_16))=(len _v_16))
  rewritten [11]: ((len (rotate (succ _t_17) _v_16))=(len (rotate _t_17 _v_16)))
  rewritten [7]: ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 _v_16))))
  rewritten [10]: ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len _v_16)))
  rewritten [11]: ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len _v_16)))
  rewritten [11]: ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 _v_16))))
  rewritten [11]: ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
  sequence of rewrites only grows
CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_11)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_12))=(nat-to-int _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_13))=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_14) (succ _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_15) (succ _qv_14))))
USE ASSUMPTION FAILED

  backtrack to: ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 _v_16))))
  rewritten [11]: ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
  sequence of rewrites only grows
CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_11)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_12))=(nat-to-int _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_13))=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_14) (succ _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_15) (succ _qv_14))))
USE ASSUMPTION FAILED

  backtrack to: ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 _v_16))))
  rewritten [11]: ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
  sequence of rewrites only grows
CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_11)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_12))=(nat-to-int _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_13))=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_14) (succ _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_15) (succ _qv_14))))
USE ASSUMPTION FAILED

  backtrack to: ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 _v_16))))
  rewritten [11]: ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
  sequence of rewrites only grows
CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_11)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_12))=(nat-to-int _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_13))=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_14) (succ _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_15) (succ _qv_14))))
USE ASSUMPTION FAILED

  backtrack to: ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 _v_16))))
CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_11)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_12))=(nat-to-int _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_13))=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_14) (succ _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_15) (succ _qv_14))))
USE ASSUMPTION FAILED

  backtrack to: ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len _v_16)))
  rewritten [11]: ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
  rewritten [11]: ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
  sequence of rewrites only grows
CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_11)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_12))=(nat-to-int _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_13))=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_14) (succ _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_15) (succ _qv_14))))
USE ASSUMPTION FAILED

  backtrack to: ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
  rewritten [11]: ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
  sequence of rewrites only grows
CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_11)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_12))=(nat-to-int _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_13))=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_14) (succ _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_15) (succ _qv_14))))
USE ASSUMPTION FAILED

  backtrack to: ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
  rewritten [11]: ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
  sequence of rewrites only grows
CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_11)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_12))=(nat-to-int _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_13))=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_14) (succ _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_15) (succ _qv_14))))
USE ASSUMPTION FAILED

  backtrack to: ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
  rewritten [11]: ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
  sequence of rewrites only grows
CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_11)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_12))=(nat-to-int _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_13))=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_14) (succ _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_15) (succ _qv_14))))
USE ASSUMPTION FAILED

  backtrack to: ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_11)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_12))=(nat-to-int _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_13))=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_14) (succ _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_15) (succ _qv_14))))
USE ASSUMPTION FAILED

  backtrack to: ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len _v_16)))
  rewritten [11]: ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 _v_16))))
  rewritten [11]: ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
  sequence of rewrites only grows
CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_11)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_12))=(nat-to-int _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_13))=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_14) (succ _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_15) (succ _qv_14))))
USE ASSUMPTION FAILED

  backtrack to: ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 _v_16))))
  rewritten [11]: ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
  sequence of rewrites only grows
CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_11)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_12))=(nat-to-int _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_13))=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_14) (succ _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_15) (succ _qv_14))))
USE ASSUMPTION FAILED

  backtrack to: ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 _v_16))))
  rewritten [11]: ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
  sequence of rewrites only grows
CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_11)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_12))=(nat-to-int _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_13))=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_14) (succ _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_15) (succ _qv_14))))
USE ASSUMPTION FAILED

  backtrack to: ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 _v_16))))
  rewritten [11]: ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
  sequence of rewrites only grows
CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_11)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_12))=(nat-to-int _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_13))=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_14) (succ _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_15) (succ _qv_14))))
USE ASSUMPTION FAILED

  backtrack to: ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 _v_16))))
CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_11)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_12))=(nat-to-int _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_13))=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_14) (succ _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_15) (succ _qv_14))))
USE ASSUMPTION FAILED

  backtrack to: ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len _v_16)))
  rewritten [11]: ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
  rewritten [11]: ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
  sequence of rewrites only grows
CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_11)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_12))=(nat-to-int _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_13))=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_14) (succ _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_15) (succ _qv_14))))
USE ASSUMPTION FAILED

  backtrack to: ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
  rewritten [11]: ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
  sequence of rewrites only grows
CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_11)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_12))=(nat-to-int _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_13))=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_14) (succ _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_15) (succ _qv_14))))
USE ASSUMPTION FAILED

  backtrack to: ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
  rewritten [11]: ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
  sequence of rewrites only grows
CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_11)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_12))=(nat-to-int _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_13))=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_14) (succ _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_15) (succ _qv_14))))
USE ASSUMPTION FAILED

  backtrack to: ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
  rewritten [11]: ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
  sequence of rewrites only grows
CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_11)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_12))=(nat-to-int _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_13))=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_14) (succ _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_15) (succ _qv_14))))
USE ASSUMPTION FAILED

  backtrack to: ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_11)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_12))=(nat-to-int _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_13))=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_14) (succ _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_15) (succ _qv_14))))
USE ASSUMPTION FAILED

  backtrack to: ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len _v_16)))
CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_11)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_12))=(nat-to-int _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_13))=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_14) (succ _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_15) (succ _qv_14))))
USE ASSUMPTION FAILED

  backtrack to: ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len _v_16)))
  rewritten [11]: ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len _v_16)))
  rewritten [11]: ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 _v_16))))
  rewritten [11]: ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
  sequence of rewrites only grows
CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_11)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_12))=(nat-to-int _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_13))=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_14) (succ _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_15) (succ _qv_14))))
USE ASSUMPTION FAILED

  backtrack to: ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 _v_16))))
  rewritten [11]: ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
  sequence of rewrites only grows
CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_11)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_12))=(nat-to-int _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_13))=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_14) (succ _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_15) (succ _qv_14))))
USE ASSUMPTION FAILED

  backtrack to: ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 _v_16))))
  rewritten [11]: ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
  sequence of rewrites only grows
CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_11)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_12))=(nat-to-int _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_13))=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_14) (succ _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_15) (succ _qv_14))))
USE ASSUMPTION FAILED

  backtrack to: ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 _v_16))))
  rewritten [11]: ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
  sequence of rewrites only grows
CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_11)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_12))=(nat-to-int _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_13))=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_14) (succ _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_15) (succ _qv_14))))
USE ASSUMPTION FAILED

  backtrack to: ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 _v_16))))
CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_11)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_12))=(nat-to-int _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_13))=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_14) (succ _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_15) (succ _qv_14))))
USE ASSUMPTION FAILED

  backtrack to: ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len _v_16)))
  rewritten [11]: ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
  rewritten [11]: ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
  sequence of rewrites only grows
CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_11)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_12))=(nat-to-int _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_13))=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_14) (succ _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_15) (succ _qv_14))))
USE ASSUMPTION FAILED

  backtrack to: ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
  rewritten [11]: ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
  sequence of rewrites only grows
CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_11)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_12))=(nat-to-int _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_13))=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_14) (succ _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_15) (succ _qv_14))))
USE ASSUMPTION FAILED

  backtrack to: ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
  rewritten [11]: ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
  sequence of rewrites only grows
CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_11)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_12))=(nat-to-int _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_13))=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_14) (succ _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_15) (succ _qv_14))))
USE ASSUMPTION FAILED

  backtrack to: ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
  rewritten [11]: ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
  sequence of rewrites only grows
CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_11)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_12))=(nat-to-int _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_13))=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_14) (succ _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_15) (succ _qv_14))))
USE ASSUMPTION FAILED

  backtrack to: ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_11)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_12))=(nat-to-int _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_13))=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_14) (succ _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_15) (succ _qv_14))))
USE ASSUMPTION FAILED

  backtrack to: ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len _v_16)))
  rewritten [11]: ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 _v_16))))
  rewritten [11]: ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
  sequence of rewrites only grows
CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_11)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_12))=(nat-to-int _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_13))=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_14) (succ _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_15) (succ _qv_14))))
USE ASSUMPTION FAILED

  backtrack to: ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 _v_16))))
  rewritten [11]: ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
  sequence of rewrites only grows
CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_11)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_12))=(nat-to-int _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_13))=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_14) (succ _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_15) (succ _qv_14))))
USE ASSUMPTION FAILED

  backtrack to: ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 _v_16))))
  rewritten [11]: ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
  sequence of rewrites only grows
CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_11)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_12))=(nat-to-int _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_13))=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_14) (succ _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_15) (succ _qv_14))))
USE ASSUMPTION FAILED

  backtrack to: ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 _v_16))))
  rewritten [11]: ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
  sequence of rewrites only grows
CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_11)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_12))=(nat-to-int _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_13))=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_14) (succ _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_15) (succ _qv_14))))
USE ASSUMPTION FAILED

  backtrack to: ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 _v_16))))
CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_11)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_12))=(nat-to-int _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_13))=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_14) (succ _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_15) (succ _qv_14))))
USE ASSUMPTION FAILED

  backtrack to: ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len _v_16)))
  rewritten [11]: ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
  rewritten [11]: ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
  sequence of rewrites only grows
CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_11)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_12))=(nat-to-int _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_13))=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_14) (succ _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_15) (succ _qv_14))))
USE ASSUMPTION FAILED

  backtrack to: ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
  rewritten [11]: ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
  sequence of rewrites only grows
CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_11)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_12))=(nat-to-int _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_13))=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_14) (succ _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_15) (succ _qv_14))))
USE ASSUMPTION FAILED

  backtrack to: ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
  rewritten [11]: ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
  sequence of rewrites only grows
CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_11)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_12))=(nat-to-int _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_13))=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_14) (succ _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_15) (succ _qv_14))))
USE ASSUMPTION FAILED

  backtrack to: ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
  rewritten [11]: ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
  sequence of rewrites only grows
CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_11)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_12))=(nat-to-int _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_13))=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_14) (succ _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_15) (succ _qv_14))))
USE ASSUMPTION FAILED

  backtrack to: ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_11)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_12))=(nat-to-int _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_13))=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_14) (succ _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_15) (succ _qv_14))))
USE ASSUMPTION FAILED

  backtrack to: ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len _v_16)))
CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_11)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_12))=(nat-to-int _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_13))=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_14) (succ _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_15) (succ _qv_14))))
USE ASSUMPTION FAILED

  backtrack to: ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len _v_16)))
CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_11)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_12))=(nat-to-int _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_13))=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_14) (succ _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_15) (succ _qv_14))))
USE ASSUMPTION FAILED

  backtrack to: ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 _v_16))))
  rewritten [11]: ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 _v_16))))
  rewritten [10]: ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len _v_16)))
  rewritten [10]: ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len _v_16)))
CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_11)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_12))=(nat-to-int _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_13))=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_14) (succ _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_15) (succ _qv_14))))
USE ASSUMPTION FAILED

  backtrack to: ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len _v_16)))
  rewritten [11]: ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
  rewritten [11]: ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
  rewritten [11]: ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
  Maximum recursion depth reached
CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_11)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_12))=(nat-to-int _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_13))=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_14) (succ _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_15) (succ _qv_14))))
USE ASSUMPTION FAILED

  backtrack to: ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
  rewritten [11]: ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len (rotate _t_17 _v_16))))
  Maximum recursion depth reached
CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_11)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_12))=(nat-to-int _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_13))=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_14) (succ _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_15) (succ _qv_14))))
USE ASSUMPTION FAILED

  backtrack to: ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
  rewritten [11]: ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
  Maximum recursion depth reached
CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_11)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_12))=(nat-to-int _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_13))=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_14) (succ _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_15) (succ _qv_14))))
USE ASSUMPTION FAILED

  backtrack to: ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
  rewritten [11]: ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len (rotate _t_17 _v_16))))
  Maximum recursion depth reached
CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_11)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_12))=(nat-to-int _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_13))=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_14) (succ _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_15) (succ _qv_14))))
USE ASSUMPTION FAILED

  backtrack to: ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_11)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_12))=(nat-to-int _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_13))=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_14) (succ _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_15) (succ _qv_14))))
USE ASSUMPTION FAILED

  backtrack to: ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
  rewritten [11]: ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
  rewritten [11]: ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len (rotate _t_17 _v_16))))
  Maximum recursion depth reached
CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_11)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_12))=(nat-to-int _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_13))=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_14) (succ _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_15) (succ _qv_14))))
USE ASSUMPTION FAILED

  backtrack to: ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
  rewritten [11]: ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))))=(nat-to-int (len _v_16)))
  Maximum recursion depth reached
CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_11)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_12))=(nat-to-int _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_13))=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_14) (succ _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_15) (succ _qv_14))))
USE ASSUMPTION FAILED

  backtrack to: ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
  rewritten [11]: ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len (rotate _t_17 _v_16))))
  Maximum recursion depth reached
CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_11)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_12))=(nat-to-int _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_13))=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_14) (succ _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_15) (succ _qv_14))))
USE ASSUMPTION FAILED

  backtrack to: ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
  rewritten [11]: ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))))=(nat-to-int (len _v_16)))
  Maximum recursion depth reached
CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_11)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_12))=(nat-to-int _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_13))=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_14) (succ _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_15) (succ _qv_14))))
USE ASSUMPTION FAILED

  backtrack to: ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_11)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_12))=(nat-to-int _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_13))=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_14) (succ _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_15) (succ _qv_14))))
USE ASSUMPTION FAILED

  backtrack to: ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
  rewritten [11]: ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
  rewritten [11]: ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
  Maximum recursion depth reached
CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_11)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_12))=(nat-to-int _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_13))=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_14) (succ _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_15) (succ _qv_14))))
USE ASSUMPTION FAILED

  backtrack to: ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
  rewritten [11]: ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len (rotate _t_17 _v_16))))
  Maximum recursion depth reached
CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_11)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_12))=(nat-to-int _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_13))=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_14) (succ _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_15) (succ _qv_14))))
USE ASSUMPTION FAILED

  backtrack to: ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
  rewritten [11]: ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
  Maximum recursion depth reached
CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_11)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_12))=(nat-to-int _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_13))=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_14) (succ _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_15) (succ _qv_14))))
USE ASSUMPTION FAILED

  backtrack to: ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
  rewritten [11]: ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len (rotate _t_17 _v_16))))
  Maximum recursion depth reached
CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_11)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_12))=(nat-to-int _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_13))=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_14) (succ _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_15) (succ _qv_14))))
USE ASSUMPTION FAILED

  backtrack to: ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_11)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_12))=(nat-to-int _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_13))=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_14) (succ _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_15) (succ _qv_14))))
USE ASSUMPTION FAILED

  backtrack to: ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
  rewritten [11]: ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
  rewritten [11]: ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len (rotate _t_17 _v_16))))
  Maximum recursion depth reached
CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_11)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_12))=(nat-to-int _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_13))=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_14) (succ _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_15) (succ _qv_14))))
USE ASSUMPTION FAILED

  backtrack to: ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
  rewritten [11]: ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))))=(nat-to-int (len _v_16)))
  Maximum recursion depth reached
CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_11)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_12))=(nat-to-int _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_13))=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_14) (succ _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_15) (succ _qv_14))))
USE ASSUMPTION FAILED

  backtrack to: ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
  rewritten [11]: ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len (rotate _t_17 _v_16))))
  Maximum recursion depth reached
CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_11)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_12))=(nat-to-int _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_13))=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_14) (succ _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_15) (succ _qv_14))))
USE ASSUMPTION FAILED

  backtrack to: ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
  rewritten [11]: ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))))=(nat-to-int (len _v_16)))
  Maximum recursion depth reached
CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_11)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_12))=(nat-to-int _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_13))=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_14) (succ _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_15) (succ _qv_14))))
USE ASSUMPTION FAILED

  backtrack to: ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_11)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_12))=(nat-to-int _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_13))=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_14) (succ _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_15) (succ _qv_14))))
USE ASSUMPTION FAILED

  backtrack to: ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_11)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_12))=(nat-to-int _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_13))=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_14) (succ _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_15) (succ _qv_14))))
USE ASSUMPTION FAILED

  backtrack to: ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len _v_16)))
  rewritten [10]: ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len _v_16)))
CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_11)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_12))=(nat-to-int _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_13))=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_14) (succ _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_15) (succ _qv_14))))
USE ASSUMPTION FAILED

  backtrack to: ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len _v_16)))
  rewritten [11]: ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
  rewritten [11]: ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
  rewritten [11]: ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
  Maximum recursion depth reached
CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_11)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_12))=(nat-to-int _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_13))=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_14) (succ _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_15) (succ _qv_14))))
USE ASSUMPTION FAILED

  backtrack to: ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
  rewritten [11]: ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len (rotate _t_17 _v_16))))
  Maximum recursion depth reached
CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_11)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_12))=(nat-to-int _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_13))=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_14) (succ _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_15) (succ _qv_14))))
USE ASSUMPTION FAILED

  backtrack to: ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
  rewritten [11]: ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
  Maximum recursion depth reached
CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_11)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_12))=(nat-to-int _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_13))=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_14) (succ _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_15) (succ _qv_14))))
USE ASSUMPTION FAILED

  backtrack to: ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
  rewritten [11]: ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len (rotate _t_17 _v_16))))
  Maximum recursion depth reached
CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_11)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_12))=(nat-to-int _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_13))=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_14) (succ _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_15) (succ _qv_14))))
USE ASSUMPTION FAILED

  backtrack to: ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_11)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_12))=(nat-to-int _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_13))=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_14) (succ _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_15) (succ _qv_14))))
USE ASSUMPTION FAILED

  backtrack to: ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
  rewritten [11]: ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
  rewritten [11]: ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len (rotate _t_17 _v_16))))
  Maximum recursion depth reached
CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_11)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_12))=(nat-to-int _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_13))=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_14) (succ _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_15) (succ _qv_14))))
USE ASSUMPTION FAILED

  backtrack to: ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
  rewritten [11]: ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))))=(nat-to-int (len _v_16)))
  Maximum recursion depth reached
CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_11)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_12))=(nat-to-int _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_13))=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_14) (succ _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_15) (succ _qv_14))))
USE ASSUMPTION FAILED

  backtrack to: ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
  rewritten [11]: ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len (rotate _t_17 _v_16))))
  Maximum recursion depth reached
CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_11)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_12))=(nat-to-int _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_13))=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_14) (succ _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_15) (succ _qv_14))))
USE ASSUMPTION FAILED

  backtrack to: ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
  rewritten [11]: ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))))=(nat-to-int (len _v_16)))
  Maximum recursion depth reached
CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_11)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_12))=(nat-to-int _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_13))=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_14) (succ _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_15) (succ _qv_14))))
USE ASSUMPTION FAILED

  backtrack to: ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_11)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_12))=(nat-to-int _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_13))=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_14) (succ _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_15) (succ _qv_14))))
USE ASSUMPTION FAILED

  backtrack to: ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
  rewritten [11]: ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
  rewritten [11]: ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
  Maximum recursion depth reached
CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_11)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_12))=(nat-to-int _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_13))=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_14) (succ _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_15) (succ _qv_14))))
USE ASSUMPTION FAILED

  backtrack to: ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
  rewritten [11]: ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len (rotate _t_17 _v_16))))
  Maximum recursion depth reached
CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_11)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_12))=(nat-to-int _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_13))=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_14) (succ _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_15) (succ _qv_14))))
USE ASSUMPTION FAILED

  backtrack to: ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
  rewritten [11]: ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
  Maximum recursion depth reached
CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_11)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_12))=(nat-to-int _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_13))=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_14) (succ _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_15) (succ _qv_14))))
USE ASSUMPTION FAILED

  backtrack to: ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
  rewritten [11]: ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len (rotate _t_17 _v_16))))
  Maximum recursion depth reached
CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_11)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_12))=(nat-to-int _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_13))=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_14) (succ _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_15) (succ _qv_14))))
USE ASSUMPTION FAILED

  backtrack to: ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_11)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_12))=(nat-to-int _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_13))=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_14) (succ _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_15) (succ _qv_14))))
USE ASSUMPTION FAILED

  backtrack to: ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
  rewritten [11]: ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
  rewritten [11]: ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len (rotate _t_17 _v_16))))
  Maximum recursion depth reached
CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_11)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_12))=(nat-to-int _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_13))=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_14) (succ _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_15) (succ _qv_14))))
USE ASSUMPTION FAILED

  backtrack to: ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
  rewritten [11]: ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))))=(nat-to-int (len _v_16)))
  Maximum recursion depth reached
CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_11)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_12))=(nat-to-int _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_13))=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_14) (succ _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_15) (succ _qv_14))))
USE ASSUMPTION FAILED

  backtrack to: ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
  rewritten [11]: ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len (rotate _t_17 _v_16))))
  Maximum recursion depth reached
CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_11)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_12))=(nat-to-int _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_13))=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_14) (succ _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_15) (succ _qv_14))))
USE ASSUMPTION FAILED

  backtrack to: ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
  rewritten [11]: ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))))=(nat-to-int (len _v_16)))
  Maximum recursion depth reached
CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_11)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_12))=(nat-to-int _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_13))=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_14) (succ _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_15) (succ _qv_14))))
USE ASSUMPTION FAILED

  backtrack to: ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_11)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_12))=(nat-to-int _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_13))=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_14) (succ _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_15) (succ _qv_14))))
USE ASSUMPTION FAILED

  backtrack to: ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_11)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_12))=(nat-to-int _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_13))=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_14) (succ _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_15) (succ _qv_14))))
USE ASSUMPTION FAILED

  backtrack to: ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len _v_16)))
CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_11)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_12))=(nat-to-int _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_13))=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_14) (succ _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_15) (succ _qv_14))))
USE ASSUMPTION FAILED

  backtrack to: ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 _v_16))))
  rewritten [11]: ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
  sequence of rewrites only grows
CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_11)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_12))=(nat-to-int _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_13))=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_14) (succ _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_15) (succ _qv_14))))
USE ASSUMPTION FAILED

  backtrack to: ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 _v_16))))
  rewritten [11]: ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
  sequence of rewrites only grows
CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_11)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_12))=(nat-to-int _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_13))=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_14) (succ _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_15) (succ _qv_14))))
USE ASSUMPTION FAILED

  backtrack to: ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 _v_16))))
  rewritten [10]: ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len _v_16)))
  rewritten [10]: ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len _v_16)))
CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_11)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_12))=(nat-to-int _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_13))=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_14) (succ _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_15) (succ _qv_14))))
USE ASSUMPTION FAILED

  backtrack to: ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len _v_16)))
  rewritten [11]: ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
  rewritten [11]: ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
  rewritten [11]: ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
  Maximum recursion depth reached
CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_11)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_12))=(nat-to-int _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_13))=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_14) (succ _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_15) (succ _qv_14))))
USE ASSUMPTION FAILED

  backtrack to: ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
  rewritten [11]: ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len (rotate _t_17 _v_16))))
  Maximum recursion depth reached
CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_11)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_12))=(nat-to-int _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_13))=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_14) (succ _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_15) (succ _qv_14))))
USE ASSUMPTION FAILED

  backtrack to: ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
  rewritten [11]: ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
  Maximum recursion depth reached
CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_11)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_12))=(nat-to-int _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_13))=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_14) (succ _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_15) (succ _qv_14))))
USE ASSUMPTION FAILED

  backtrack to: ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
  rewritten [11]: ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len (rotate _t_17 _v_16))))
  Maximum recursion depth reached
CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_11)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_12))=(nat-to-int _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_13))=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_14) (succ _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_15) (succ _qv_14))))
USE ASSUMPTION FAILED

  backtrack to: ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_11)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_12))=(nat-to-int _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_13))=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_14) (succ _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_15) (succ _qv_14))))
USE ASSUMPTION FAILED

  backtrack to: ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
  rewritten [11]: ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
  rewritten [11]: ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len (rotate _t_17 _v_16))))
  Maximum recursion depth reached
CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_11)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_12))=(nat-to-int _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_13))=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_14) (succ _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_15) (succ _qv_14))))
USE ASSUMPTION FAILED

  backtrack to: ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
  rewritten [11]: ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))))=(nat-to-int (len _v_16)))
  Maximum recursion depth reached
CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_11)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_12))=(nat-to-int _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_13))=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_14) (succ _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_15) (succ _qv_14))))
USE ASSUMPTION FAILED

  backtrack to: ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
  rewritten [11]: ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len (rotate _t_17 _v_16))))
  Maximum recursion depth reached
CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_11)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_12))=(nat-to-int _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_13))=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_14) (succ _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_15) (succ _qv_14))))
USE ASSUMPTION FAILED

  backtrack to: ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
  rewritten [11]: ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))))=(nat-to-int (len _v_16)))
  Maximum recursion depth reached
CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_11)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_12))=(nat-to-int _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_13))=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_14) (succ _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_15) (succ _qv_14))))
USE ASSUMPTION FAILED

  backtrack to: ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_11)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_12))=(nat-to-int _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_13))=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_14) (succ _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_15) (succ _qv_14))))
USE ASSUMPTION FAILED

  backtrack to: ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
  rewritten [11]: ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
  rewritten [11]: ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
  Maximum recursion depth reached
CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_11)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_12))=(nat-to-int _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_13))=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_14) (succ _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_15) (succ _qv_14))))
USE ASSUMPTION FAILED

  backtrack to: ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
  rewritten [11]: ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len (rotate _t_17 _v_16))))
  Maximum recursion depth reached
CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_11)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_12))=(nat-to-int _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_13))=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_14) (succ _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_15) (succ _qv_14))))
USE ASSUMPTION FAILED

  backtrack to: ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
  rewritten [11]: ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
  Maximum recursion depth reached
CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_11)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_12))=(nat-to-int _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_13))=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_14) (succ _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_15) (succ _qv_14))))
USE ASSUMPTION FAILED

  backtrack to: ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
  rewritten [11]: ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len (rotate _t_17 _v_16))))
  Maximum recursion depth reached
CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_11)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_12))=(nat-to-int _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_13))=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_14) (succ _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_15) (succ _qv_14))))
USE ASSUMPTION FAILED

  backtrack to: ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_11)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_12))=(nat-to-int _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_13))=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_14) (succ _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_15) (succ _qv_14))))
USE ASSUMPTION FAILED

  backtrack to: ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
  rewritten [11]: ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
  rewritten [11]: ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len (rotate _t_17 _v_16))))
  Maximum recursion depth reached
CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_11)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_12))=(nat-to-int _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_13))=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_14) (succ _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_15) (succ _qv_14))))
USE ASSUMPTION FAILED

  backtrack to: ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
  rewritten [11]: ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))))=(nat-to-int (len _v_16)))
  Maximum recursion depth reached
CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_11)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_12))=(nat-to-int _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_13))=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_14) (succ _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_15) (succ _qv_14))))
USE ASSUMPTION FAILED

  backtrack to: ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
  rewritten [11]: ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len (rotate _t_17 _v_16))))
  Maximum recursion depth reached
CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_11)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_12))=(nat-to-int _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_13))=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_14) (succ _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_15) (succ _qv_14))))
USE ASSUMPTION FAILED

  backtrack to: ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
  rewritten [11]: ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))))=(nat-to-int (len _v_16)))
  Maximum recursion depth reached
CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_11)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_12))=(nat-to-int _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_13))=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_14) (succ _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_15) (succ _qv_14))))
USE ASSUMPTION FAILED

  backtrack to: ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_11)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_12))=(nat-to-int _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_13))=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_14) (succ _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_15) (succ _qv_14))))
USE ASSUMPTION FAILED

  backtrack to: ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_11)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_12))=(nat-to-int _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_13))=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_14) (succ _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_15) (succ _qv_14))))
USE ASSUMPTION FAILED

  backtrack to: ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len _v_16)))
  rewritten [10]: ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len _v_16)))
CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_11)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_12))=(nat-to-int _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_13))=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_14) (succ _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_15) (succ _qv_14))))
USE ASSUMPTION FAILED

  backtrack to: ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len _v_16)))
  rewritten [11]: ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
  rewritten [11]: ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
  rewritten [11]: ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
  Maximum recursion depth reached
CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_11)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_12))=(nat-to-int _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_13))=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_14) (succ _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_15) (succ _qv_14))))
USE ASSUMPTION FAILED

  backtrack to: ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
  rewritten [11]: ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len (rotate _t_17 _v_16))))
  Maximum recursion depth reached
CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_11)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_12))=(nat-to-int _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_13))=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_14) (succ _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_15) (succ _qv_14))))
USE ASSUMPTION FAILED

  backtrack to: ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
  rewritten [11]: ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
  Maximum recursion depth reached
CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_11)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_12))=(nat-to-int _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_13))=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_14) (succ _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_15) (succ _qv_14))))
USE ASSUMPTION FAILED

  backtrack to: ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
  rewritten [11]: ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len (rotate _t_17 _v_16))))
  Maximum recursion depth reached
CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_11)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_12))=(nat-to-int _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_13))=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_14) (succ _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_15) (succ _qv_14))))
USE ASSUMPTION FAILED

  backtrack to: ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_11)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_12))=(nat-to-int _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_13))=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_14) (succ _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_15) (succ _qv_14))))
USE ASSUMPTION FAILED

  backtrack to: ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
  rewritten [11]: ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
  rewritten [11]: ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len (rotate _t_17 _v_16))))
  Maximum recursion depth reached
CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_11)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_12))=(nat-to-int _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_13))=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_14) (succ _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_15) (succ _qv_14))))
USE ASSUMPTION FAILED

  backtrack to: ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
  rewritten [11]: ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))))=(nat-to-int (len _v_16)))
  Maximum recursion depth reached
CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_11)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_12))=(nat-to-int _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_13))=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_14) (succ _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_15) (succ _qv_14))))
USE ASSUMPTION FAILED

  backtrack to: ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
  rewritten [11]: ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len (rotate _t_17 _v_16))))
  Maximum recursion depth reached
CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_11)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_12))=(nat-to-int _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_13))=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_14) (succ _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_15) (succ _qv_14))))
USE ASSUMPTION FAILED

  backtrack to: ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
  rewritten [11]: ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))))=(nat-to-int (len _v_16)))
  Maximum recursion depth reached
CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_11)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_12))=(nat-to-int _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_13))=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_14) (succ _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_15) (succ _qv_14))))
USE ASSUMPTION FAILED

  backtrack to: ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_11)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_12))=(nat-to-int _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_13))=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_14) (succ _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_15) (succ _qv_14))))
USE ASSUMPTION FAILED

  backtrack to: ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
  rewritten [11]: ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
  rewritten [11]: ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
  Maximum recursion depth reached
CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_11)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_12))=(nat-to-int _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_13))=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_14) (succ _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_15) (succ _qv_14))))
USE ASSUMPTION FAILED

  backtrack to: ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
  rewritten [11]: ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len (rotate _t_17 _v_16))))
  Maximum recursion depth reached
CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_11)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_12))=(nat-to-int _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_13))=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_14) (succ _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_15) (succ _qv_14))))
USE ASSUMPTION FAILED

  backtrack to: ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
  rewritten [11]: ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
  Maximum recursion depth reached
CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_11)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_12))=(nat-to-int _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_13))=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_14) (succ _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_15) (succ _qv_14))))
USE ASSUMPTION FAILED

  backtrack to: ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
  rewritten [11]: ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len (rotate _t_17 _v_16))))
  Maximum recursion depth reached
CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_11)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_12))=(nat-to-int _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_13))=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_14) (succ _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_15) (succ _qv_14))))
USE ASSUMPTION FAILED

  backtrack to: ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_11)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_12))=(nat-to-int _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_13))=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_14) (succ _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_15) (succ _qv_14))))
USE ASSUMPTION FAILED

  backtrack to: ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
  rewritten [11]: ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
  rewritten [11]: ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len (rotate _t_17 _v_16))))
  Maximum recursion depth reached
CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_11)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_12))=(nat-to-int _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_13))=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_14) (succ _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_15) (succ _qv_14))))
USE ASSUMPTION FAILED

  backtrack to: ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
  rewritten [11]: ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))))=(nat-to-int (len _v_16)))
  Maximum recursion depth reached
CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_11)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_12))=(nat-to-int _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_13))=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_14) (succ _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_15) (succ _qv_14))))
USE ASSUMPTION FAILED

  backtrack to: ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
  rewritten [11]: ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len (rotate _t_17 _v_16))))
  Maximum recursion depth reached
CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_11)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_12))=(nat-to-int _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_13))=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_14) (succ _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_15) (succ _qv_14))))
USE ASSUMPTION FAILED

  backtrack to: ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
  rewritten [11]: ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))))=(nat-to-int (len _v_16)))
  Maximum recursion depth reached
CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_11)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_12))=(nat-to-int _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_13))=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_14) (succ _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_15) (succ _qv_14))))
USE ASSUMPTION FAILED

  backtrack to: ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_11)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_12))=(nat-to-int _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_13))=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_14) (succ _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_15) (succ _qv_14))))
USE ASSUMPTION FAILED

  backtrack to: ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_11)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_12))=(nat-to-int _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_13))=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_14) (succ _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_15) (succ _qv_14))))
USE ASSUMPTION FAILED

  backtrack to: ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len _v_16)))
CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_11)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_12))=(nat-to-int _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_13))=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_14) (succ _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_15) (succ _qv_14))))
USE ASSUMPTION FAILED

  backtrack to: ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 _v_16))))
  rewritten [11]: ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
  sequence of rewrites only grows
CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_11)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_12))=(nat-to-int _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_13))=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_14) (succ _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_15) (succ _qv_14))))
USE ASSUMPTION FAILED

  backtrack to: ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 _v_16))))
  rewritten [11]: ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
  sequence of rewrites only grows
CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_11)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_12))=(nat-to-int _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_13))=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_14) (succ _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_15) (succ _qv_14))))
USE ASSUMPTION FAILED

  backtrack to: ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 _v_16))))
CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_11)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_12))=(nat-to-int _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_13))=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_14) (succ _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_15) (succ _qv_14))))
USE ASSUMPTION FAILED

  backtrack to: ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 _v_16))))
  rewritten [11]: ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
  rewritten [11]: ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
  sequence of rewrites only grows
CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_11)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_12))=(nat-to-int _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_13))=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_14) (succ _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_15) (succ _qv_14))))
USE ASSUMPTION FAILED

  backtrack to: ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
  rewritten [11]: ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
  sequence of rewrites only grows
CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_11)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_12))=(nat-to-int _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_13))=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_14) (succ _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_15) (succ _qv_14))))
USE ASSUMPTION FAILED

  backtrack to: ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
  rewritten [11]: ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
  sequence of rewrites only grows
CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_11)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_12))=(nat-to-int _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_13))=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_14) (succ _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_15) (succ _qv_14))))
USE ASSUMPTION FAILED

  backtrack to: ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
  rewritten [11]: ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
  sequence of rewrites only grows
CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_11)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_12))=(nat-to-int _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_13))=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_14) (succ _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_15) (succ _qv_14))))
USE ASSUMPTION FAILED

  backtrack to: ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_11)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_12))=(nat-to-int _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_13))=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_14) (succ _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_15) (succ _qv_14))))
USE ASSUMPTION FAILED

  backtrack to: ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 _v_16))))
  rewritten [10]: ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len _v_16)))
  rewritten [11]: ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len _v_16)))
  rewritten [11]: ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 _v_16))))
  rewritten [11]: ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
  sequence of rewrites only grows
CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_11)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_12))=(nat-to-int _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_13))=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_14) (succ _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_15) (succ _qv_14))))
USE ASSUMPTION FAILED

  backtrack to: ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 _v_16))))
  rewritten [11]: ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
  sequence of rewrites only grows
CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_11)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_12))=(nat-to-int _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_13))=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_14) (succ _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_15) (succ _qv_14))))
USE ASSUMPTION FAILED

  backtrack to: ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 _v_16))))
  rewritten [11]: ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
  sequence of rewrites only grows
CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_11)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_12))=(nat-to-int _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_13))=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_14) (succ _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_15) (succ _qv_14))))
USE ASSUMPTION FAILED

  backtrack to: ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 _v_16))))
  rewritten [11]: ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
  sequence of rewrites only grows
CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_11)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_12))=(nat-to-int _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_13))=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_14) (succ _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_15) (succ _qv_14))))
USE ASSUMPTION FAILED

  backtrack to: ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 _v_16))))
CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_11)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_12))=(nat-to-int _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_13))=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_14) (succ _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_15) (succ _qv_14))))
USE ASSUMPTION FAILED

  backtrack to: ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len _v_16)))
  rewritten [11]: ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
  rewritten [11]: ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
  sequence of rewrites only grows
CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_11)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_12))=(nat-to-int _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_13))=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_14) (succ _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_15) (succ _qv_14))))
USE ASSUMPTION FAILED

  backtrack to: ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
  rewritten [11]: ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
  sequence of rewrites only grows
CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_11)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_12))=(nat-to-int _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_13))=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_14) (succ _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_15) (succ _qv_14))))
USE ASSUMPTION FAILED

  backtrack to: ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
  rewritten [11]: ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
  sequence of rewrites only grows
CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_11)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_12))=(nat-to-int _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_13))=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_14) (succ _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_15) (succ _qv_14))))
USE ASSUMPTION FAILED

  backtrack to: ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
  rewritten [11]: ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
  sequence of rewrites only grows
CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_11)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_12))=(nat-to-int _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_13))=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_14) (succ _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_15) (succ _qv_14))))
USE ASSUMPTION FAILED

  backtrack to: ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_11)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_12))=(nat-to-int _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_13))=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_14) (succ _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_15) (succ _qv_14))))
USE ASSUMPTION FAILED

  backtrack to: ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len _v_16)))
  rewritten [11]: ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 _v_16))))
  rewritten [11]: ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
  sequence of rewrites only grows
CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_11)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_12))=(nat-to-int _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_13))=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_14) (succ _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_15) (succ _qv_14))))
USE ASSUMPTION FAILED

  backtrack to: ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 _v_16))))
  rewritten [11]: ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
  sequence of rewrites only grows
CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_11)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_12))=(nat-to-int _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_13))=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_14) (succ _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_15) (succ _qv_14))))
USE ASSUMPTION FAILED

  backtrack to: ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 _v_16))))
  rewritten [11]: ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
  sequence of rewrites only grows
CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_11)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_12))=(nat-to-int _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_13))=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_14) (succ _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_15) (succ _qv_14))))
USE ASSUMPTION FAILED

  backtrack to: ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 _v_16))))
  rewritten [11]: ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
  sequence of rewrites only grows
CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_11)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_12))=(nat-to-int _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_13))=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_14) (succ _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_15) (succ _qv_14))))
USE ASSUMPTION FAILED

  backtrack to: ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 _v_16))))
CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_11)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_12))=(nat-to-int _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_13))=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_14) (succ _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_15) (succ _qv_14))))
USE ASSUMPTION FAILED

  backtrack to: ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len _v_16)))
  rewritten [11]: ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
  rewritten [11]: ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
  sequence of rewrites only grows
CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_11)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_12))=(nat-to-int _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_13))=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_14) (succ _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_15) (succ _qv_14))))
USE ASSUMPTION FAILED

  backtrack to: ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
  rewritten [11]: ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
  sequence of rewrites only grows
CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_11)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_12))=(nat-to-int _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_13))=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_14) (succ _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_15) (succ _qv_14))))
USE ASSUMPTION FAILED

  backtrack to: ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
  rewritten [11]: ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
  sequence of rewrites only grows
CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_11)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_12))=(nat-to-int _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_13))=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_14) (succ _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_15) (succ _qv_14))))
USE ASSUMPTION FAILED

  backtrack to: ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
  rewritten [11]: ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
  sequence of rewrites only grows
CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_11)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_12))=(nat-to-int _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_13))=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_14) (succ _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_15) (succ _qv_14))))
USE ASSUMPTION FAILED

  backtrack to: ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_11)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_12))=(nat-to-int _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_13))=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_14) (succ _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_15) (succ _qv_14))))
USE ASSUMPTION FAILED

  backtrack to: ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len _v_16)))
CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_11)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_12))=(nat-to-int _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_13))=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_14) (succ _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_15) (succ _qv_14))))
USE ASSUMPTION FAILED

  backtrack to: ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len _v_16)))
  rewritten [11]: ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len _v_16)))
  rewritten [11]: ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 _v_16))))
  rewritten [11]: ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
  sequence of rewrites only grows
CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_11)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_12))=(nat-to-int _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_13))=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_14) (succ _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_15) (succ _qv_14))))
USE ASSUMPTION FAILED

  backtrack to: ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 _v_16))))
  rewritten [11]: ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
  sequence of rewrites only grows
CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_11)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_12))=(nat-to-int _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_13))=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_14) (succ _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_15) (succ _qv_14))))
USE ASSUMPTION FAILED

  backtrack to: ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 _v_16))))
  rewritten [11]: ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
  sequence of rewrites only grows
CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_11)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_12))=(nat-to-int _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_13))=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_14) (succ _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_15) (succ _qv_14))))
USE ASSUMPTION FAILED

  backtrack to: ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 _v_16))))
  rewritten [11]: ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
  sequence of rewrites only grows
CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_11)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_12))=(nat-to-int _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_13))=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_14) (succ _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_15) (succ _qv_14))))
USE ASSUMPTION FAILED

  backtrack to: ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 _v_16))))
CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_11)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_12))=(nat-to-int _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_13))=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_14) (succ _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_15) (succ _qv_14))))
USE ASSUMPTION FAILED

  backtrack to: ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len _v_16)))
  rewritten [11]: ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
  rewritten [11]: ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
  sequence of rewrites only grows
CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_11)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_12))=(nat-to-int _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_13))=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_14) (succ _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_15) (succ _qv_14))))
USE ASSUMPTION FAILED

  backtrack to: ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
  rewritten [11]: ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
  sequence of rewrites only grows
CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_11)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_12))=(nat-to-int _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_13))=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_14) (succ _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_15) (succ _qv_14))))
USE ASSUMPTION FAILED

  backtrack to: ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
  rewritten [11]: ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
  sequence of rewrites only grows
CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_11)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_12))=(nat-to-int _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_13))=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_14) (succ _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_15) (succ _qv_14))))
USE ASSUMPTION FAILED

  backtrack to: ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
  rewritten [11]: ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
  sequence of rewrites only grows
CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_11)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_12))=(nat-to-int _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_13))=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_14) (succ _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_15) (succ _qv_14))))
USE ASSUMPTION FAILED

  backtrack to: ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_11)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_12))=(nat-to-int _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_13))=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_14) (succ _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_15) (succ _qv_14))))
USE ASSUMPTION FAILED

  backtrack to: ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len _v_16)))
  rewritten [11]: ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 _v_16))))
  rewritten [11]: ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
  sequence of rewrites only grows
CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_11)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_12))=(nat-to-int _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_13))=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_14) (succ _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_15) (succ _qv_14))))
USE ASSUMPTION FAILED

  backtrack to: ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 _v_16))))
  rewritten [11]: ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
  sequence of rewrites only grows
CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_11)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_12))=(nat-to-int _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_13))=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_14) (succ _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_15) (succ _qv_14))))
USE ASSUMPTION FAILED

  backtrack to: ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 _v_16))))
  rewritten [11]: ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
  sequence of rewrites only grows
CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_11)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_12))=(nat-to-int _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_13))=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_14) (succ _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_15) (succ _qv_14))))
USE ASSUMPTION FAILED

  backtrack to: ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 _v_16))))
  rewritten [11]: ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
  sequence of rewrites only grows
CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_11)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_12))=(nat-to-int _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_13))=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_14) (succ _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_15) (succ _qv_14))))
USE ASSUMPTION FAILED

  backtrack to: ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 _v_16))))
CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_11)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_12))=(nat-to-int _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_13))=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_14) (succ _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_15) (succ _qv_14))))
USE ASSUMPTION FAILED

  backtrack to: ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len _v_16)))
  rewritten [11]: ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
  rewritten [11]: ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
  sequence of rewrites only grows
CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_11)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_12))=(nat-to-int _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_13))=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_14) (succ _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_15) (succ _qv_14))))
USE ASSUMPTION FAILED

  backtrack to: ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
  rewritten [11]: ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
  sequence of rewrites only grows
CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_11)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_12))=(nat-to-int _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_13))=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_14) (succ _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_15) (succ _qv_14))))
USE ASSUMPTION FAILED

  backtrack to: ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
  rewritten [11]: ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
  sequence of rewrites only grows
CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_11)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_12))=(nat-to-int _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_13))=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_14) (succ _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_15) (succ _qv_14))))
USE ASSUMPTION FAILED

  backtrack to: ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
  rewritten [11]: ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
  sequence of rewrites only grows
CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_11)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_12))=(nat-to-int _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_13))=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_14) (succ _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_15) (succ _qv_14))))
USE ASSUMPTION FAILED

  backtrack to: ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_11)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_12))=(nat-to-int _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_13))=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_14) (succ _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_15) (succ _qv_14))))
USE ASSUMPTION FAILED

  backtrack to: ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len _v_16)))
CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_11)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_12))=(nat-to-int _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_13))=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_14) (succ _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_15) (succ _qv_14))))
USE ASSUMPTION FAILED

  backtrack to: ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len _v_16)))
CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_11)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_12))=(nat-to-int _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_13))=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_14) (succ _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_15) (succ _qv_14))))
USE ASSUMPTION FAILED

  backtrack to: ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 _v_16))))
  rewritten [11]: ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 _v_16))))
  rewritten [10]: ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len _v_16)))
  rewritten [10]: ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len _v_16)))
CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_11)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_12))=(nat-to-int _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_13))=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_14) (succ _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_15) (succ _qv_14))))
USE ASSUMPTION FAILED

  backtrack to: ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len _v_16)))
  rewritten [11]: ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
  rewritten [11]: ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
  rewritten [11]: ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
  Maximum recursion depth reached
CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_11)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_12))=(nat-to-int _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_13))=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_14) (succ _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_15) (succ _qv_14))))
USE ASSUMPTION FAILED

  backtrack to: ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
  rewritten [11]: ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len (rotate _t_17 _v_16))))
  Maximum recursion depth reached
CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_11)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_12))=(nat-to-int _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_13))=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_14) (succ _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_15) (succ _qv_14))))
USE ASSUMPTION FAILED

  backtrack to: ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
  rewritten [11]: ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
  Maximum recursion depth reached
CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_11)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_12))=(nat-to-int _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_13))=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_14) (succ _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_15) (succ _qv_14))))
USE ASSUMPTION FAILED

  backtrack to: ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
  rewritten [11]: ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len (rotate _t_17 _v_16))))
  Maximum recursion depth reached
CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_11)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_12))=(nat-to-int _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_13))=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_14) (succ _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_15) (succ _qv_14))))
USE ASSUMPTION FAILED

  backtrack to: ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_11)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_12))=(nat-to-int _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_13))=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_14) (succ _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_15) (succ _qv_14))))
USE ASSUMPTION FAILED

  backtrack to: ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
  rewritten [11]: ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
  rewritten [11]: ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len (rotate _t_17 _v_16))))
  Maximum recursion depth reached
CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_11)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_12))=(nat-to-int _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_13))=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_14) (succ _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_15) (succ _qv_14))))
USE ASSUMPTION FAILED

  backtrack to: ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
  rewritten [11]: ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))))=(nat-to-int (len _v_16)))
  Maximum recursion depth reached
CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_11)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_12))=(nat-to-int _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_13))=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_14) (succ _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_15) (succ _qv_14))))
USE ASSUMPTION FAILED

  backtrack to: ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
  rewritten [11]: ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len (rotate _t_17 _v_16))))
  Maximum recursion depth reached
CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_11)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_12))=(nat-to-int _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_13))=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_14) (succ _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_15) (succ _qv_14))))
USE ASSUMPTION FAILED

  backtrack to: ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
  rewritten [11]: ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))))=(nat-to-int (len _v_16)))
  Maximum recursion depth reached
CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_11)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_12))=(nat-to-int _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_13))=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_14) (succ _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_15) (succ _qv_14))))
USE ASSUMPTION FAILED

  backtrack to: ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_11)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_12))=(nat-to-int _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_13))=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_14) (succ _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_15) (succ _qv_14))))
USE ASSUMPTION FAILED

  backtrack to: ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
  rewritten [11]: ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
  rewritten [11]: ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
  Maximum recursion depth reached
CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_11)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_12))=(nat-to-int _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_13))=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_14) (succ _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_15) (succ _qv_14))))
USE ASSUMPTION FAILED

  backtrack to: ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
  rewritten [11]: ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len (rotate _t_17 _v_16))))
  Maximum recursion depth reached
CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_11)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_12))=(nat-to-int _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_13))=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_14) (succ _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_15) (succ _qv_14))))
USE ASSUMPTION FAILED

  backtrack to: ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
  rewritten [11]: ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
  Maximum recursion depth reached
CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_11)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_12))=(nat-to-int _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_13))=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_14) (succ _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_15) (succ _qv_14))))
USE ASSUMPTION FAILED

  backtrack to: ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
  rewritten [11]: ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len (rotate _t_17 _v_16))))
  Maximum recursion depth reached
CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_11)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_12))=(nat-to-int _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_13))=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_14) (succ _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_15) (succ _qv_14))))
USE ASSUMPTION FAILED

  backtrack to: ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_11)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_12))=(nat-to-int _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_13))=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_14) (succ _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_15) (succ _qv_14))))
USE ASSUMPTION FAILED

  backtrack to: ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
  rewritten [11]: ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
  rewritten [11]: ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len (rotate _t_17 _v_16))))
  Maximum recursion depth reached
CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_11)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_12))=(nat-to-int _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_13))=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_14) (succ _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_15) (succ _qv_14))))
USE ASSUMPTION FAILED

  backtrack to: ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
  rewritten [11]: ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))))=(nat-to-int (len _v_16)))
  Maximum recursion depth reached
CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_11)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_12))=(nat-to-int _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_13))=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_14) (succ _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_15) (succ _qv_14))))
USE ASSUMPTION FAILED

  backtrack to: ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
  rewritten [11]: ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len (rotate _t_17 _v_16))))
  Maximum recursion depth reached
CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_11)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_12))=(nat-to-int _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_13))=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_14) (succ _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_15) (succ _qv_14))))
USE ASSUMPTION FAILED

  backtrack to: ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
  rewritten [11]: ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))))=(nat-to-int (len _v_16)))
  Maximum recursion depth reached
CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_11)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_12))=(nat-to-int _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_13))=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_14) (succ _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_15) (succ _qv_14))))
USE ASSUMPTION FAILED

  backtrack to: ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_11)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_12))=(nat-to-int _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_13))=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_14) (succ _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_15) (succ _qv_14))))
USE ASSUMPTION FAILED

  backtrack to: ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_11)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_12))=(nat-to-int _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_13))=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_14) (succ _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_15) (succ _qv_14))))
USE ASSUMPTION FAILED

  backtrack to: ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len _v_16)))
  rewritten [10]: ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len _v_16)))
CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_11)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_12))=(nat-to-int _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_13))=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_14) (succ _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_15) (succ _qv_14))))
USE ASSUMPTION FAILED

  backtrack to: ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len _v_16)))
  rewritten [11]: ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
  rewritten [11]: ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
  rewritten [11]: ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
  Maximum recursion depth reached
CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_11)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_12))=(nat-to-int _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_13))=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_14) (succ _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_15) (succ _qv_14))))
USE ASSUMPTION FAILED

  backtrack to: ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
  rewritten [11]: ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len (rotate _t_17 _v_16))))
  Maximum recursion depth reached
CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_11)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_12))=(nat-to-int _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_13))=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_14) (succ _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_15) (succ _qv_14))))
USE ASSUMPTION FAILED

  backtrack to: ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
  rewritten [11]: ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
  Maximum recursion depth reached
CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_11)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_12))=(nat-to-int _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_13))=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_14) (succ _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_15) (succ _qv_14))))
USE ASSUMPTION FAILED

  backtrack to: ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
  rewritten [11]: ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len (rotate _t_17 _v_16))))
  Maximum recursion depth reached
CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_11)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_12))=(nat-to-int _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_13))=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_14) (succ _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_15) (succ _qv_14))))
USE ASSUMPTION FAILED

  backtrack to: ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_11)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_12))=(nat-to-int _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_13))=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_14) (succ _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_15) (succ _qv_14))))
USE ASSUMPTION FAILED

  backtrack to: ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
  rewritten [11]: ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
  rewritten [11]: ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len (rotate _t_17 _v_16))))
  Maximum recursion depth reached
CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_11)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_12))=(nat-to-int _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_13))=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_14) (succ _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_15) (succ _qv_14))))
USE ASSUMPTION FAILED

  backtrack to: ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
  rewritten [11]: ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))))=(nat-to-int (len _v_16)))
  Maximum recursion depth reached
CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_11)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_12))=(nat-to-int _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_13))=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_14) (succ _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_15) (succ _qv_14))))
USE ASSUMPTION FAILED

  backtrack to: ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
  rewritten [11]: ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len (rotate _t_17 _v_16))))
  Maximum recursion depth reached
CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_11)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_12))=(nat-to-int _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_13))=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_14) (succ _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_15) (succ _qv_14))))
USE ASSUMPTION FAILED

  backtrack to: ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
  rewritten [11]: ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))))=(nat-to-int (len _v_16)))
  Maximum recursion depth reached
CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_11)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_12))=(nat-to-int _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_13))=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_14) (succ _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_15) (succ _qv_14))))
USE ASSUMPTION FAILED

  backtrack to: ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_11)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_12))=(nat-to-int _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_13))=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_14) (succ _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_15) (succ _qv_14))))
USE ASSUMPTION FAILED

  backtrack to: ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
  rewritten [11]: ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
  rewritten [11]: ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
  Maximum recursion depth reached
CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_11)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_12))=(nat-to-int _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_13))=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_14) (succ _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_15) (succ _qv_14))))
USE ASSUMPTION FAILED

  backtrack to: ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
  rewritten [11]: ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len (rotate _t_17 _v_16))))
  Maximum recursion depth reached
CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_11)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_12))=(nat-to-int _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_13))=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_14) (succ _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_15) (succ _qv_14))))
USE ASSUMPTION FAILED

  backtrack to: ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
  rewritten [11]: ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
  Maximum recursion depth reached
CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_11)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_12))=(nat-to-int _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_13))=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_14) (succ _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_15) (succ _qv_14))))
USE ASSUMPTION FAILED

  backtrack to: ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
  rewritten [11]: ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len (rotate _t_17 _v_16))))
  Maximum recursion depth reached
CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_11)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_12))=(nat-to-int _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_13))=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_14) (succ _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_15) (succ _qv_14))))
USE ASSUMPTION FAILED

  backtrack to: ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_11)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_12))=(nat-to-int _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_13))=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_14) (succ _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_15) (succ _qv_14))))
USE ASSUMPTION FAILED

  backtrack to: ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
  rewritten [11]: ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
  rewritten [11]: ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len (rotate _t_17 _v_16))))
  Maximum recursion depth reached
CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_11)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_12))=(nat-to-int _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_13))=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_14) (succ _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_15) (succ _qv_14))))
USE ASSUMPTION FAILED

  backtrack to: ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
  rewritten [11]: ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))))=(nat-to-int (len _v_16)))
  Maximum recursion depth reached
CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_11)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_12))=(nat-to-int _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_13))=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_14) (succ _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_15) (succ _qv_14))))
USE ASSUMPTION FAILED

  backtrack to: ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
  rewritten [11]: ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len (rotate _t_17 _v_16))))
  Maximum recursion depth reached
CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_11)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_12))=(nat-to-int _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_13))=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_14) (succ _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_15) (succ _qv_14))))
USE ASSUMPTION FAILED

  backtrack to: ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
  rewritten [11]: ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))))=(nat-to-int (len _v_16)))
  Maximum recursion depth reached
CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_11)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_12))=(nat-to-int _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_13))=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_14) (succ _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_15) (succ _qv_14))))
USE ASSUMPTION FAILED

  backtrack to: ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_11)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_12))=(nat-to-int _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_13))=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_14) (succ _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_15) (succ _qv_14))))
USE ASSUMPTION FAILED

  backtrack to: ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_11)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_12))=(nat-to-int _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_13))=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_14) (succ _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_15) (succ _qv_14))))
USE ASSUMPTION FAILED

  backtrack to: ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len _v_16)))
CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_11)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_12))=(nat-to-int _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_13))=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_14) (succ _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_15) (succ _qv_14))))
USE ASSUMPTION FAILED

  backtrack to: ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 _v_16))))
  rewritten [11]: ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
  sequence of rewrites only grows
CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_11)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_12))=(nat-to-int _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_13))=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_14) (succ _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_15) (succ _qv_14))))
USE ASSUMPTION FAILED

  backtrack to: ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 _v_16))))
  rewritten [11]: ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
  sequence of rewrites only grows
CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_11)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_12))=(nat-to-int _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_13))=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_14) (succ _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_15) (succ _qv_14))))
USE ASSUMPTION FAILED

  backtrack to: ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 _v_16))))
  rewritten [10]: ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len _v_16)))
  rewritten [10]: ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len _v_16)))
CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_11)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_12))=(nat-to-int _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_13))=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_14) (succ _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_15) (succ _qv_14))))
USE ASSUMPTION FAILED

  backtrack to: ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len _v_16)))
  rewritten [11]: ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
  rewritten [11]: ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
  rewritten [11]: ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
  Maximum recursion depth reached
CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_11)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_12))=(nat-to-int _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_13))=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_14) (succ _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_15) (succ _qv_14))))
USE ASSUMPTION FAILED

  backtrack to: ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
  rewritten [11]: ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len (rotate _t_17 _v_16))))
  Maximum recursion depth reached
CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_11)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_12))=(nat-to-int _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_13))=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_14) (succ _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_15) (succ _qv_14))))
USE ASSUMPTION FAILED

  backtrack to: ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
  rewritten [11]: ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
  Maximum recursion depth reached
CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_11)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_12))=(nat-to-int _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_13))=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_14) (succ _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_15) (succ _qv_14))))
USE ASSUMPTION FAILED

  backtrack to: ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
  rewritten [11]: ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len (rotate _t_17 _v_16))))
  Maximum recursion depth reached
CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_11)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_12))=(nat-to-int _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_13))=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_14) (succ _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_15) (succ _qv_14))))
USE ASSUMPTION FAILED

  backtrack to: ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_11)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_12))=(nat-to-int _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_13))=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_14) (succ _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_15) (succ _qv_14))))
USE ASSUMPTION FAILED

  backtrack to: ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
  rewritten [11]: ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
  rewritten [11]: ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len (rotate _t_17 _v_16))))
  Maximum recursion depth reached
CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_11)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_12))=(nat-to-int _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_13))=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_14) (succ _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_15) (succ _qv_14))))
USE ASSUMPTION FAILED

  backtrack to: ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
  rewritten [11]: ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))))=(nat-to-int (len _v_16)))
  Maximum recursion depth reached
CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_11)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_12))=(nat-to-int _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_13))=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_14) (succ _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_15) (succ _qv_14))))
USE ASSUMPTION FAILED

  backtrack to: ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
  rewritten [11]: ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len (rotate _t_17 _v_16))))
  Maximum recursion depth reached
CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_11)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_12))=(nat-to-int _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_13))=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_14) (succ _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_15) (succ _qv_14))))
USE ASSUMPTION FAILED

  backtrack to: ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
  rewritten [11]: ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))))=(nat-to-int (len _v_16)))
  Maximum recursion depth reached
CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_11)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_12))=(nat-to-int _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_13))=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_14) (succ _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_15) (succ _qv_14))))
USE ASSUMPTION FAILED

  backtrack to: ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_11)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_12))=(nat-to-int _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_13))=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_14) (succ _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_15) (succ _qv_14))))
USE ASSUMPTION FAILED

  backtrack to: ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
  rewritten [11]: ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
  rewritten [11]: ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
  Maximum recursion depth reached
CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_11)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_12))=(nat-to-int _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_13))=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_14) (succ _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_15) (succ _qv_14))))
USE ASSUMPTION FAILED

  backtrack to: ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
  rewritten [11]: ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len (rotate _t_17 _v_16))))
  Maximum recursion depth reached
CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_11)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_12))=(nat-to-int _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_13))=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_14) (succ _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_15) (succ _qv_14))))
USE ASSUMPTION FAILED

  backtrack to: ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
  rewritten [11]: ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
  Maximum recursion depth reached
CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_11)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_12))=(nat-to-int _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_13))=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_14) (succ _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_15) (succ _qv_14))))
USE ASSUMPTION FAILED

  backtrack to: ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
  rewritten [11]: ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len (rotate _t_17 _v_16))))
  Maximum recursion depth reached
CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_11)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_12))=(nat-to-int _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_13))=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_14) (succ _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_15) (succ _qv_14))))
USE ASSUMPTION FAILED

  backtrack to: ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_11)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_12))=(nat-to-int _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_13))=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_14) (succ _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_15) (succ _qv_14))))
USE ASSUMPTION FAILED

  backtrack to: ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
  rewritten [11]: ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
  rewritten [11]: ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len (rotate _t_17 _v_16))))
  Maximum recursion depth reached
CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_11)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_12))=(nat-to-int _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_13))=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_14) (succ _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_15) (succ _qv_14))))
USE ASSUMPTION FAILED

  backtrack to: ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
  rewritten [11]: ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))))=(nat-to-int (len _v_16)))
  Maximum recursion depth reached
CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_11)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_12))=(nat-to-int _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_13))=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_14) (succ _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_15) (succ _qv_14))))
USE ASSUMPTION FAILED

  backtrack to: ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
  rewritten [11]: ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len (rotate _t_17 _v_16))))
  Maximum recursion depth reached
CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_11)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_12))=(nat-to-int _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_13))=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_14) (succ _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_15) (succ _qv_14))))
USE ASSUMPTION FAILED

  backtrack to: ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
  rewritten [11]: ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))))=(nat-to-int (len _v_16)))
  Maximum recursion depth reached
CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_11)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_12))=(nat-to-int _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_13))=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_14) (succ _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_15) (succ _qv_14))))
USE ASSUMPTION FAILED

  backtrack to: ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_11)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_12))=(nat-to-int _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_13))=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_14) (succ _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_15) (succ _qv_14))))
USE ASSUMPTION FAILED

  backtrack to: ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_11)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_12))=(nat-to-int _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_13))=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_14) (succ _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_15) (succ _qv_14))))
USE ASSUMPTION FAILED

  backtrack to: ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len _v_16)))
  rewritten [10]: ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len _v_16)))
CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_11)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_12))=(nat-to-int _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_13))=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_14) (succ _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_15) (succ _qv_14))))
USE ASSUMPTION FAILED

  backtrack to: ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len _v_16)))
  rewritten [11]: ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
  rewritten [11]: ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
  rewritten [11]: ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
  Maximum recursion depth reached
CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_11)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_12))=(nat-to-int _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_13))=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_14) (succ _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_15) (succ _qv_14))))
USE ASSUMPTION FAILED

  backtrack to: ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
  rewritten [11]: ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len (rotate _t_17 _v_16))))
  Maximum recursion depth reached
CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_11)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_12))=(nat-to-int _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_13))=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_14) (succ _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_15) (succ _qv_14))))
USE ASSUMPTION FAILED

  backtrack to: ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
  rewritten [11]: ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
  Maximum recursion depth reached
CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_11)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_12))=(nat-to-int _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_13))=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_14) (succ _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_15) (succ _qv_14))))
USE ASSUMPTION FAILED

  backtrack to: ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
  rewritten [11]: ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len (rotate _t_17 _v_16))))
  Maximum recursion depth reached
CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_11)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_12))=(nat-to-int _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_13))=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_14) (succ _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_15) (succ _qv_14))))
USE ASSUMPTION FAILED

  backtrack to: ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_11)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_12))=(nat-to-int _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_13))=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_14) (succ _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_15) (succ _qv_14))))
USE ASSUMPTION FAILED

  backtrack to: ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
  rewritten [11]: ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
  rewritten [11]: ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len (rotate _t_17 _v_16))))
  Maximum recursion depth reached
CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_11)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_12))=(nat-to-int _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_13))=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_14) (succ _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_15) (succ _qv_14))))
USE ASSUMPTION FAILED

  backtrack to: ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
  rewritten [11]: ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))))=(nat-to-int (len _v_16)))
  Maximum recursion depth reached
CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_11)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_12))=(nat-to-int _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_13))=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_14) (succ _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_15) (succ _qv_14))))
USE ASSUMPTION FAILED

  backtrack to: ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
  rewritten [11]: ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len (rotate _t_17 _v_16))))
  Maximum recursion depth reached
CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_11)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_12))=(nat-to-int _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_13))=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_14) (succ _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_15) (succ _qv_14))))
USE ASSUMPTION FAILED

  backtrack to: ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
  rewritten [11]: ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))))=(nat-to-int (len _v_16)))
  Maximum recursion depth reached
CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_11)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_12))=(nat-to-int _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_13))=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_14) (succ _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_15) (succ _qv_14))))
USE ASSUMPTION FAILED

  backtrack to: ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_11)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_12))=(nat-to-int _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_13))=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_14) (succ _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_15) (succ _qv_14))))
USE ASSUMPTION FAILED

  backtrack to: ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
  rewritten [11]: ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
  rewritten [11]: ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
  Maximum recursion depth reached
CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_11)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_12))=(nat-to-int _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_13))=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_14) (succ _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_15) (succ _qv_14))))
USE ASSUMPTION FAILED

  backtrack to: ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
  rewritten [11]: ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len (rotate _t_17 _v_16))))
  Maximum recursion depth reached
CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_11)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_12))=(nat-to-int _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_13))=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_14) (succ _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_15) (succ _qv_14))))
USE ASSUMPTION FAILED

  backtrack to: ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
  rewritten [11]: ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
  Maximum recursion depth reached
CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_11)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_12))=(nat-to-int _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_13))=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_14) (succ _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_15) (succ _qv_14))))
USE ASSUMPTION FAILED

  backtrack to: ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
  rewritten [11]: ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len (rotate _t_17 _v_16))))
  Maximum recursion depth reached
CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_11)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_12))=(nat-to-int _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_13))=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_14) (succ _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_15) (succ _qv_14))))
USE ASSUMPTION FAILED

  backtrack to: ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_11)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_12))=(nat-to-int _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_13))=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_14) (succ _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_15) (succ _qv_14))))
USE ASSUMPTION FAILED

  backtrack to: ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
  rewritten [11]: ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
  rewritten [11]: ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len (rotate _t_17 _v_16))))
  Maximum recursion depth reached
CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_11)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_12))=(nat-to-int _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_13))=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_14) (succ _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_15) (succ _qv_14))))
USE ASSUMPTION FAILED

  backtrack to: ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
  rewritten [11]: ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))))=(nat-to-int (len _v_16)))
  Maximum recursion depth reached
CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_11)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_12))=(nat-to-int _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_13))=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_14) (succ _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_15) (succ _qv_14))))
USE ASSUMPTION FAILED

  backtrack to: ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
  rewritten [11]: ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len (rotate _t_17 _v_16))))
  Maximum recursion depth reached
CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_11)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_12))=(nat-to-int _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_13))=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_14) (succ _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_15) (succ _qv_14))))
USE ASSUMPTION FAILED

  backtrack to: ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
  rewritten [11]: ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))))=(nat-to-int (len _v_16)))
  Maximum recursion depth reached
CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_11)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_12))=(nat-to-int _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_13))=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_14) (succ _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_15) (succ _qv_14))))
USE ASSUMPTION FAILED

  backtrack to: ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16))))))=(nat-to-int (len _v_16)))
CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_11)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_12))=(nat-to-int _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_13))=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_14) (succ _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_15) (succ _qv_14))))
USE ASSUMPTION FAILED

  backtrack to: ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_11)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_12))=(nat-to-int _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_13))=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_14) (succ _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_15) (succ _qv_14))))
USE ASSUMPTION FAILED

  backtrack to: ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len _v_16)))
CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_11)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_12))=(nat-to-int _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_13))=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_14) (succ _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_15) (succ _qv_14))))
USE ASSUMPTION FAILED

  backtrack to: ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 _v_16))))
  rewritten [11]: ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
  sequence of rewrites only grows
CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_11)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_12))=(nat-to-int _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_13))=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_14) (succ _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_15) (succ _qv_14))))
USE ASSUMPTION FAILED

  backtrack to: ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 _v_16))))
  rewritten [11]: ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len (rotate _t_17 _v_16))))
  sequence of rewrites only grows
CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_11)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_12))=(nat-to-int _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_13))=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_14) (succ _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_15) (succ _qv_14))))
USE ASSUMPTION FAILED

  backtrack to: ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 _v_16))))
CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_11)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_12))=(nat-to-int _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_13))=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_14) (succ _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_15) (succ _qv_14))))
USE ASSUMPTION FAILED

  backtrack to: ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 _v_16))))
  rewritten [11]: ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
  rewritten [11]: ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
  sequence of rewrites only grows
CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_11)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_12))=(nat-to-int _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_13))=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_14) (succ _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_15) (succ _qv_14))))
USE ASSUMPTION FAILED

  backtrack to: ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
  rewritten [11]: ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
  sequence of rewrites only grows
CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_11)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_12))=(nat-to-int _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_13))=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_14) (succ _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_15) (succ _qv_14))))
USE ASSUMPTION FAILED

  backtrack to: ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
  rewritten [11]: ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
  sequence of rewrites only grows
CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_11)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_12))=(nat-to-int _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_13))=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_14) (succ _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_15) (succ _qv_14))))
USE ASSUMPTION FAILED

  backtrack to: ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
  rewritten [11]: ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 _v_16))))))
  sequence of rewrites only grows
CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_11)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_12))=(nat-to-int _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_13))=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_14) (succ _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_15) (succ _qv_14))))
USE ASSUMPTION FAILED

  backtrack to: ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_11)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_12))=(nat-to-int _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_13))=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_14) (succ _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_15) (succ _qv_14))))
USE ASSUMPTION FAILED

  backtrack to: ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 _v_16))))
CURRENT SUBGOAL ((len (rotate (succ _t_17) _v_16))=(len (rotate _t_17 _v_16)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (rotate (succ _t_17) _v_16))=(len (rotate _t_17 _v_16)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (rotate (succ _t_17) _v_16))=(len (rotate _t_17 _v_16)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (rotate (succ _t_17) _v_16))=(len (rotate _t_17 _v_16)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (rotate (succ _t_17) _v_16))=(len (rotate _t_17 _v_16)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (rotate (succ _t_17) _v_16))=(len (rotate _t_17 _v_16)))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_11)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (rotate (succ _t_17) _v_16))=(len (rotate _t_17 _v_16)))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_12))=(nat-to-int _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (rotate (succ _t_17) _v_16))=(len (rotate _t_17 _v_16)))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_13))=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (rotate (succ _t_17) _v_16))=(len (rotate _t_17 _v_16)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_14) (succ _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (rotate (succ _t_17) _v_16))=(len (rotate _t_17 _v_16)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_15) (succ _qv_14))))
USE ASSUMPTION FAILED

  backtrack to: ((len (rotate (succ _t_17) _v_16))=(len (rotate _t_17 _v_16)))
  rewritten [10]: ((len (rotate (succ _t_17) _v_16))=(len _v_16))
  rewritten [7]: ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len _v_16)))
  rewritten [11]: ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 _v_16))))
  rewritten [11]: ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 _v_16))))
  sequence of rewrites only grows
CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_11)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_12))=(nat-to-int _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_13))=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_14) (succ _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_15) (succ _qv_14))))
USE ASSUMPTION FAILED

  backtrack to: ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 _v_16))))
  rewritten [11]: ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
  sequence of rewrites only grows
CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_11)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_12))=(nat-to-int _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_13))=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_14) (succ _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_15) (succ _qv_14))))
USE ASSUMPTION FAILED

  backtrack to: ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 _v_16))))
  rewritten [11]: ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 _v_16))))
  sequence of rewrites only grows
CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_11)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_12))=(nat-to-int _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_13))=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_14) (succ _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_15) (succ _qv_14))))
USE ASSUMPTION FAILED

  backtrack to: ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 _v_16))))
  rewritten [11]: ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
  sequence of rewrites only grows
CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_11)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_12))=(nat-to-int _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_13))=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_14) (succ _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_15) (succ _qv_14))))
USE ASSUMPTION FAILED

  backtrack to: ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 _v_16))))
CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_11)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_12))=(nat-to-int _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_13))=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_14) (succ _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_15) (succ _qv_14))))
USE ASSUMPTION FAILED

  backtrack to: ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len _v_16)))
  rewritten [11]: ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len _v_16)))
  rewritten [11]: ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 _v_16))))
  sequence of rewrites only grows
CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_11)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_12))=(nat-to-int _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_13))=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_14) (succ _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_15) (succ _qv_14))))
USE ASSUMPTION FAILED

  backtrack to: ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len _v_16)))
  rewritten [11]: ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
  sequence of rewrites only grows
CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_11)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_12))=(nat-to-int _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_13))=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_14) (succ _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_15) (succ _qv_14))))
USE ASSUMPTION FAILED

  backtrack to: ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len _v_16)))
  rewritten [11]: ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 _v_16))))
  sequence of rewrites only grows
CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_11)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_12))=(nat-to-int _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_13))=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_14) (succ _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_15) (succ _qv_14))))
USE ASSUMPTION FAILED

  backtrack to: ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len _v_16)))
  rewritten [11]: ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
  sequence of rewrites only grows
CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_11)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_12))=(nat-to-int _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_13))=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_14) (succ _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_15) (succ _qv_14))))
USE ASSUMPTION FAILED

  backtrack to: ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len _v_16)))
CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_11)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_12))=(nat-to-int _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_13))=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_14) (succ _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_15) (succ _qv_14))))
USE ASSUMPTION FAILED

  backtrack to: ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len _v_16)))
  rewritten [11]: ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 _v_16))))
  rewritten [11]: ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 _v_16))))
  sequence of rewrites only grows
CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_11)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_12))=(nat-to-int _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_13))=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_14) (succ _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_15) (succ _qv_14))))
USE ASSUMPTION FAILED

  backtrack to: ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 _v_16))))
  rewritten [11]: ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
  sequence of rewrites only grows
CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_11)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_12))=(nat-to-int _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_13))=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_14) (succ _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_15) (succ _qv_14))))
USE ASSUMPTION FAILED

  backtrack to: ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 _v_16))))
  rewritten [11]: ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 _v_16))))
  sequence of rewrites only grows
CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_11)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_12))=(nat-to-int _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_13))=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_14) (succ _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_15) (succ _qv_14))))
USE ASSUMPTION FAILED

  backtrack to: ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 _v_16))))
  rewritten [11]: ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
  sequence of rewrites only grows
CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_11)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_12))=(nat-to-int _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_13))=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_14) (succ _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_15) (succ _qv_14))))
USE ASSUMPTION FAILED

  backtrack to: ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 _v_16))))
CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_11)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_12))=(nat-to-int _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_13))=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_14) (succ _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_15) (succ _qv_14))))
USE ASSUMPTION FAILED

  backtrack to: ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len _v_16)))
  rewritten [11]: ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len _v_16)))
  rewritten [11]: ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 _v_16))))
  sequence of rewrites only grows
CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_11)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_12))=(nat-to-int _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_13))=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_14) (succ _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_15) (succ _qv_14))))
USE ASSUMPTION FAILED

  backtrack to: ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len _v_16)))
  rewritten [11]: ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
  sequence of rewrites only grows
CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_11)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_12))=(nat-to-int _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_13))=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_14) (succ _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_15) (succ _qv_14))))
USE ASSUMPTION FAILED

  backtrack to: ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len _v_16)))
  rewritten [11]: ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 _v_16))))
  sequence of rewrites only grows
CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_11)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_12))=(nat-to-int _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_13))=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_14) (succ _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_15) (succ _qv_14))))
USE ASSUMPTION FAILED

  backtrack to: ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len _v_16)))
  rewritten [11]: ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
  sequence of rewrites only grows
CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_11)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_12))=(nat-to-int _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_13))=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_14) (succ _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_15) (succ _qv_14))))
USE ASSUMPTION FAILED

  backtrack to: ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len _v_16)))
CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_11)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_12))=(nat-to-int _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_13))=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_14) (succ _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_15) (succ _qv_14))))
USE ASSUMPTION FAILED

  backtrack to: ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len _v_16)))
CURRENT SUBGOAL ((len (rotate (succ _t_17) _v_16))=(len _v_16))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (rotate (succ _t_17) _v_16))=(len _v_16))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (rotate (succ _t_17) _v_16))=(len _v_16))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (rotate (succ _t_17) _v_16))=(len _v_16))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (rotate (succ _t_17) _v_16))=(len _v_16))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (rotate (succ _t_17) _v_16))=(len _v_16))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_11)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (rotate (succ _t_17) _v_16))=(len _v_16))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_12))=(nat-to-int _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (rotate (succ _t_17) _v_16))=(len _v_16))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_13))=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (rotate (succ _t_17) _v_16))=(len _v_16))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_14) (succ _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (rotate (succ _t_17) _v_16))=(len _v_16))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_15) (succ _qv_14))))
USE ASSUMPTION FAILED

  backtrack to: ((len (rotate (succ _t_17) _v_16))=(len _v_16))
  rewritten [11]: ((len (rotate _t_17 (rotate (succ _t_17) _v_16)))=(len _v_16))
  rewritten [7]: ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len _v_16)))
  rewritten [10]: ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len _v_16)))
  rewritten [11]: ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 _v_16))))
  rewritten [11]: ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 _v_16))))
  Maximum recursion depth reached
CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_11)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_12))=(nat-to-int _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_13))=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_14) (succ _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_15) (succ _qv_14))))
USE ASSUMPTION FAILED

  backtrack to: ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 _v_16))))
  rewritten [11]: ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
  Maximum recursion depth reached
CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_11)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_12))=(nat-to-int _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_13))=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_14) (succ _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_15) (succ _qv_14))))
USE ASSUMPTION FAILED

  backtrack to: ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 _v_16))))
  rewritten [11]: ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 _v_16))))
  Maximum recursion depth reached
CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_11)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_12))=(nat-to-int _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_13))=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_14) (succ _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_15) (succ _qv_14))))
USE ASSUMPTION FAILED

  backtrack to: ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 _v_16))))
  rewritten [11]: ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
  Maximum recursion depth reached
CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_11)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_12))=(nat-to-int _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_13))=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_14) (succ _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_15) (succ _qv_14))))
USE ASSUMPTION FAILED

  backtrack to: ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 _v_16))))
CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_11)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_12))=(nat-to-int _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_13))=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_14) (succ _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_15) (succ _qv_14))))
USE ASSUMPTION FAILED

  backtrack to: ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len _v_16)))
  rewritten [11]: ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 _v_16))))
  rewritten [11]: ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 _v_16))))
  Maximum recursion depth reached
CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_11)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_12))=(nat-to-int _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_13))=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_14) (succ _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_15) (succ _qv_14))))
USE ASSUMPTION FAILED

  backtrack to: ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 _v_16))))
  rewritten [11]: ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
  Maximum recursion depth reached
CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_11)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_12))=(nat-to-int _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_13))=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_14) (succ _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_15) (succ _qv_14))))
USE ASSUMPTION FAILED

  backtrack to: ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 _v_16))))
  rewritten [11]: ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 _v_16))))
  Maximum recursion depth reached
CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_11)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_12))=(nat-to-int _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_13))=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_14) (succ _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_15) (succ _qv_14))))
USE ASSUMPTION FAILED

  backtrack to: ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 _v_16))))
  rewritten [11]: ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
  Maximum recursion depth reached
CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_11)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_12))=(nat-to-int _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_13))=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_14) (succ _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_15) (succ _qv_14))))
USE ASSUMPTION FAILED

  backtrack to: ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 _v_16))))
CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_11)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_12))=(nat-to-int _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_13))=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_14) (succ _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_15) (succ _qv_14))))
USE ASSUMPTION FAILED

  backtrack to: ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len _v_16)))
CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_11)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_12))=(nat-to-int _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_13))=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_14) (succ _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_15) (succ _qv_14))))
USE ASSUMPTION FAILED

  backtrack to: ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len _v_16)))
  rewritten [11]: ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 _v_16))))
  sequence of rewrites only grows
CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_11)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_12))=(nat-to-int _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_13))=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_14) (succ _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_15) (succ _qv_14))))
USE ASSUMPTION FAILED

  backtrack to: ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len _v_16)))
  rewritten [11]: ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
  sequence of rewrites only grows
CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_11)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_12))=(nat-to-int _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_13))=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_14) (succ _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_15) (succ _qv_14))))
USE ASSUMPTION FAILED

  backtrack to: ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len _v_16)))
  rewritten [10]: ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len _v_16)))
  rewritten [11]: ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 _v_16))))
  rewritten [11]: ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 _v_16))))
  Maximum recursion depth reached
CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_11)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_12))=(nat-to-int _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_13))=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_14) (succ _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_15) (succ _qv_14))))
USE ASSUMPTION FAILED

  backtrack to: ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 _v_16))))
  rewritten [11]: ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
  Maximum recursion depth reached
CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_11)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_12))=(nat-to-int _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_13))=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_14) (succ _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_15) (succ _qv_14))))
USE ASSUMPTION FAILED

  backtrack to: ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 _v_16))))
  rewritten [11]: ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 _v_16))))
  Maximum recursion depth reached
CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_11)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_12))=(nat-to-int _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_13))=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_14) (succ _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_15) (succ _qv_14))))
USE ASSUMPTION FAILED

  backtrack to: ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 _v_16))))
  rewritten [11]: ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
  Maximum recursion depth reached
CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_11)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_12))=(nat-to-int _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_13))=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_14) (succ _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_15) (succ _qv_14))))
USE ASSUMPTION FAILED

  backtrack to: ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 _v_16))))
CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_11)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_12))=(nat-to-int _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_13))=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_14) (succ _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_15) (succ _qv_14))))
USE ASSUMPTION FAILED

  backtrack to: ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len _v_16)))
  rewritten [11]: ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 _v_16))))
  rewritten [11]: ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 _v_16))))
  Maximum recursion depth reached
CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_11)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_12))=(nat-to-int _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_13))=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_14) (succ _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_15) (succ _qv_14))))
USE ASSUMPTION FAILED

  backtrack to: ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 _v_16))))
  rewritten [11]: ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
  Maximum recursion depth reached
CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_11)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_12))=(nat-to-int _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_13))=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_14) (succ _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_15) (succ _qv_14))))
USE ASSUMPTION FAILED

  backtrack to: ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 _v_16))))
  rewritten [11]: ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 _v_16))))
  Maximum recursion depth reached
CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_11)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_12))=(nat-to-int _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_13))=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_14) (succ _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_15) (succ _qv_14))))
USE ASSUMPTION FAILED

  backtrack to: ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 _v_16))))
  rewritten [11]: ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 (rotate _t_17 _v_16)))))
  Maximum recursion depth reached
CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_11)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_12))=(nat-to-int _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_13))=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_14) (succ _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 _v_16))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_15) (succ _qv_14))))
USE ASSUMPTION FAILED

  backtrack to: ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len (rotate _t_17 _v_16))))
CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_11)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_12))=(nat-to-int _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_13))=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_14) (succ _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_15) (succ _qv_14))))
USE ASSUMPTION FAILED

  backtrack to: ((nat-to-int (len (rotate (succ _t_17) _v_16)))=(nat-to-int (len _v_16)))
CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_11)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_12))=(nat-to-int _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_13))=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_14) (succ _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_15) (succ _qv_14))))
USE ASSUMPTION FAILED

  backtrack to: ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len _v_16)))
  rewritten [11]: ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 _v_16))))
  sequence of rewrites only grows
CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_11)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_12))=(nat-to-int _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_13))=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_14) (succ _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_15) (succ _qv_14))))
USE ASSUMPTION FAILED

  backtrack to: ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len _v_16)))
  rewritten [11]: ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate (succ _t_17) _v_16)))))=(nat-to-int (len _v_16)))
  sequence of rewrites only grows
CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_11)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_12))=(nat-to-int _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_13))=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_14) (succ _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len _v_16)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_15) (succ _qv_14))))
USE ASSUMPTION FAILED

  backtrack to: ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len _v_16)))
CURRENT SUBGOAL ((len (rotate _t_17 (rotate (succ _t_17) _v_16)))=(len _v_16))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (rotate _t_17 (rotate (succ _t_17) _v_16)))=(len _v_16))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (rotate _t_17 (rotate (succ _t_17) _v_16)))=(len _v_16))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (rotate _t_17 (rotate (succ _t_17) _v_16)))=(len _v_16))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (rotate _t_17 (rotate (succ _t_17) _v_16)))=(len _v_16))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (rotate _t_17 (rotate (succ _t_17) _v_16)))=(len _v_16))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_11)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (rotate _t_17 (rotate (succ _t_17) _v_16)))=(len _v_16))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_12))=(nat-to-int _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (rotate _t_17 (rotate (succ _t_17) _v_16)))=(len _v_16))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_13))=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (rotate _t_17 (rotate (succ _t_17) _v_16)))=(len _v_16))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_14) (succ _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (rotate _t_17 (rotate (succ _t_17) _v_16)))=(len _v_16))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_15) (succ _qv_14))))
USE ASSUMPTION FAILED

  backtrack to: ((len (rotate _t_17 (rotate (succ _t_17) _v_16)))=(len _v_16))
  rewritten [11]: ((len (rotate _t_17 (rotate (succ _t_17) _v_16)))=(len (rotate _t_17 _v_16)))
  rewritten [7]: ((nat-to-int (len (rotate _t_17 (rotate (succ _t_17) _v_16))))=(nat-to-int (len (rotate _t_17 _v_16))))
  sequence of rewrites only grows
CURRENT SUBGOAL ((len (rotate _t_17 (rotate (succ _t_17) _v_16)))=(len (rotate _t_17 _v_16)))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (rotate _t_17 (rotate (succ _t_17) _v_16)))=(len (rotate _t_17 _v_16)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (rotate _t_17 (rotate (succ _t_17) _v_16)))=(len (rotate _t_17 _v_16)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (rotate _t_17 (rotate (succ _t_17) _v_16)))=(len (rotate _t_17 _v_16)))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (rotate _t_17 (rotate (succ _t_17) _v_16)))=(len (rotate _t_17 _v_16)))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (rotate _t_17 (rotate (succ _t_17) _v_16)))=(len (rotate _t_17 _v_16)))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_11)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (rotate _t_17 (rotate (succ _t_17) _v_16)))=(len (rotate _t_17 _v_16)))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_12))=(nat-to-int _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (rotate _t_17 (rotate (succ _t_17) _v_16)))=(len (rotate _t_17 _v_16)))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_13))=(nat-to-int _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (rotate _t_17 (rotate (succ _t_17) _v_16)))=(len (rotate _t_17 _v_16)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_14) (succ _qv_15))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((len (rotate _t_17 (rotate (succ _t_17) _v_16)))=(len (rotate _t_17 _v_16)))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_14 _qv_15))=(plus (succ _qv_15) (succ _qv_14))))
USE ASSUMPTION FAILED

  backtrack to: ((len (rotate _t_17 (rotate (succ _t_17) _v_16)))=(len (rotate _t_17 _v_16)))
  rewritten [11]: ((len (rotate _t_17 (rotate (succ _t_17) _v_16)))=(len (rotate _t_17 (rotate _t_17 _v_16))))
  sequence of rewrites only grows

The Knowledge Scheme currently contains the following lemmas:
	(forall ((Nat)) ((succ (succ _qv_18))=_qv_18))
	(forall ((Lst) (Lst)) ((append _qv_19 _qv_20)=(append _qv_20 _qv_19)))
	(forall ((Lst) (Lst) (Lst)) ((append (append _qv_21 _qv_22) _qv_23)=(append _qv_21 (append _qv_22 _qv_23))))
	(forall ((Nat) (Nat)) ((plus _qv_24 _qv_25)=(plus _qv_25 _qv_24)))
	(forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_26 _qv_27) _qv_28)=(plus _qv_26 (plus _qv_27 _qv_28))))
	(forall ((Nat)) (0<=(nat-to-int _qv_29)))
	(forall ((Nat)) ((nat-to-int (succ _qv_30))=(nat-to-int _qv_30)))
	(forall ((Lst)) ((nat-to-int (len _qv_31))=(nat-to-int _qv_31)))
	(forall ((Nat) (Nat)) ((succ (plus _qv_32 _qv_33))=(plus (succ _qv_32) (succ _qv_33))))
	(forall ((Nat) (Nat)) ((succ (plus _qv_32 _qv_33))=(plus (succ _qv_33) (succ _qv_32))))

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate zero (rotate (succ zero) _v_34)))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34)))))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_18))=_qv_18))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate zero (rotate (succ zero) _v_34)))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34)))))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_19 _qv_20)=(append _qv_20 _qv_19)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate zero (rotate (succ zero) _v_34)))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34)))))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_21 _qv_22) _qv_23)=(append _qv_21 (append _qv_22 _qv_23))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate zero (rotate (succ zero) _v_34)))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34)))))))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_24 _qv_25)=(plus _qv_25 _qv_24)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate zero (rotate (succ zero) _v_34)))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34)))))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_26 _qv_27) _qv_28)=(plus _qv_26 (plus _qv_27 _qv_28))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate zero (rotate (succ zero) _v_34)))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34)))))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_29)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate zero (rotate (succ zero) _v_34)))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34)))))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_30))=(nat-to-int _qv_30)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate zero (rotate (succ zero) _v_34)))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34)))))))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_31))=(nat-to-int _qv_31)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate zero (rotate (succ zero) _v_34)))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34)))))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_32 _qv_33))=(plus (succ _qv_32) (succ _qv_33))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate zero (rotate (succ zero) _v_34)))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34)))))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_32 _qv_33))=(plus (succ _qv_33) (succ _qv_32))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate zero (rotate (succ zero) _v_34)))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34)))))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_18))=_qv_18))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate zero (rotate (succ zero) _v_34)))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34)))))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_19 _qv_20)=(append _qv_20 _qv_19)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate zero (rotate (succ zero) _v_34)))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34)))))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_21 _qv_22) _qv_23)=(append _qv_21 (append _qv_22 _qv_23))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate zero (rotate (succ zero) _v_34)))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34)))))))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_24 _qv_25)=(plus _qv_25 _qv_24)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate zero (rotate (succ zero) _v_34)))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34)))))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_26 _qv_27) _qv_28)=(plus _qv_26 (plus _qv_27 _qv_28))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate zero (rotate (succ zero) _v_34)))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34)))))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_29)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate zero (rotate (succ zero) _v_34)))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34)))))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_30))=(nat-to-int _qv_30)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate zero (rotate (succ zero) _v_34)))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34)))))))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_31))=(nat-to-int _qv_31)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate zero (rotate (succ zero) _v_34)))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34)))))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_32 _qv_33))=(plus (succ _qv_32) (succ _qv_33))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate zero (rotate (succ zero) _v_34)))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34)))))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_32 _qv_33))=(plus (succ _qv_33) (succ _qv_32))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate zero (rotate (succ zero) _v_34)))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34)))))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_18))=_qv_18))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate zero (rotate (succ zero) _v_34)))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34)))))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_19 _qv_20)=(append _qv_20 _qv_19)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate zero (rotate (succ zero) _v_34)))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34)))))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_21 _qv_22) _qv_23)=(append _qv_21 (append _qv_22 _qv_23))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate zero (rotate (succ zero) _v_34)))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34)))))))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_24 _qv_25)=(plus _qv_25 _qv_24)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate zero (rotate (succ zero) _v_34)))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34)))))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_26 _qv_27) _qv_28)=(plus _qv_26 (plus _qv_27 _qv_28))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate zero (rotate (succ zero) _v_34)))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34)))))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_29)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate zero (rotate (succ zero) _v_34)))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34)))))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_30))=(nat-to-int _qv_30)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate zero (rotate (succ zero) _v_34)))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34)))))))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_31))=(nat-to-int _qv_31)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate zero (rotate (succ zero) _v_34)))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34)))))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_32 _qv_33))=(plus (succ _qv_32) (succ _qv_33))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate zero (rotate (succ zero) _v_34)))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34)))))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_32 _qv_33))=(plus (succ _qv_33) (succ _qv_32))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate zero (rotate (succ zero) _v_34)))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34)))))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_18))=_qv_18))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate zero (rotate (succ zero) _v_34)))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34)))))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_19 _qv_20)=(append _qv_20 _qv_19)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate zero (rotate (succ zero) _v_34)))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34)))))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_21 _qv_22) _qv_23)=(append _qv_21 (append _qv_22 _qv_23))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate zero (rotate (succ zero) _v_34)))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34)))))))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_24 _qv_25)=(plus _qv_25 _qv_24)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate zero (rotate (succ zero) _v_34)))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34)))))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_26 _qv_27) _qv_28)=(plus _qv_26 (plus _qv_27 _qv_28))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate zero (rotate (succ zero) _v_34)))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34)))))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_29)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate zero (rotate (succ zero) _v_34)))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34)))))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_30))=(nat-to-int _qv_30)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate zero (rotate (succ zero) _v_34)))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34)))))))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_31))=(nat-to-int _qv_31)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate zero (rotate (succ zero) _v_34)))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34)))))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_32 _qv_33))=(plus (succ _qv_32) (succ _qv_33))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate zero (rotate (succ zero) _v_34)))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34)))))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_32 _qv_33))=(plus (succ _qv_33) (succ _qv_32))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate zero (rotate (succ zero) _v_34))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34)))))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_18))=_qv_18))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate zero (rotate (succ zero) _v_34))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34)))))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_19 _qv_20)=(append _qv_20 _qv_19)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate zero (rotate (succ zero) _v_34))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34)))))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_21 _qv_22) _qv_23)=(append _qv_21 (append _qv_22 _qv_23))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate zero (rotate (succ zero) _v_34))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34)))))))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_24 _qv_25)=(plus _qv_25 _qv_24)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate zero (rotate (succ zero) _v_34))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34)))))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_26 _qv_27) _qv_28)=(plus _qv_26 (plus _qv_27 _qv_28))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate zero (rotate (succ zero) _v_34))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34)))))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_29)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate zero (rotate (succ zero) _v_34))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34)))))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_30))=(nat-to-int _qv_30)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate zero (rotate (succ zero) _v_34))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34)))))))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_31))=(nat-to-int _qv_31)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate zero (rotate (succ zero) _v_34))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34)))))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_32 _qv_33))=(plus (succ _qv_32) (succ _qv_33))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate zero (rotate (succ zero) _v_34))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34)))))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_32 _qv_33))=(plus (succ _qv_33) (succ _qv_32))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate zero (rotate (succ zero) _v_34))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34))))))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_18))=_qv_18))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate zero (rotate (succ zero) _v_34))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34))))))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_19 _qv_20)=(append _qv_20 _qv_19)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate zero (rotate (succ zero) _v_34))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34))))))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_21 _qv_22) _qv_23)=(append _qv_21 (append _qv_22 _qv_23))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate zero (rotate (succ zero) _v_34))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34))))))))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_24 _qv_25)=(plus _qv_25 _qv_24)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate zero (rotate (succ zero) _v_34))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34))))))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_26 _qv_27) _qv_28)=(plus _qv_26 (plus _qv_27 _qv_28))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate zero (rotate (succ zero) _v_34))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34))))))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_29)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate zero (rotate (succ zero) _v_34))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34))))))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_30))=(nat-to-int _qv_30)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate zero (rotate (succ zero) _v_34))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34))))))))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_31))=(nat-to-int _qv_31)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate zero (rotate (succ zero) _v_34))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34))))))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_32 _qv_33))=(plus (succ _qv_32) (succ _qv_33))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate zero (rotate (succ zero) _v_34))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34))))))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_32 _qv_33))=(plus (succ _qv_33) (succ _qv_32))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate zero (rotate (succ zero) _v_34))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34))))))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_18))=_qv_18))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate zero (rotate (succ zero) _v_34))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34))))))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_19 _qv_20)=(append _qv_20 _qv_19)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate zero (rotate (succ zero) _v_34))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34))))))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_21 _qv_22) _qv_23)=(append _qv_21 (append _qv_22 _qv_23))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate zero (rotate (succ zero) _v_34))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34))))))))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_24 _qv_25)=(plus _qv_25 _qv_24)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate zero (rotate (succ zero) _v_34))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34))))))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_26 _qv_27) _qv_28)=(plus _qv_26 (plus _qv_27 _qv_28))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate zero (rotate (succ zero) _v_34))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34))))))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_29)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate zero (rotate (succ zero) _v_34))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34))))))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_30))=(nat-to-int _qv_30)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate zero (rotate (succ zero) _v_34))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34))))))))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_31))=(nat-to-int _qv_31)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate zero (rotate (succ zero) _v_34))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34))))))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_32 _qv_33))=(plus (succ _qv_32) (succ _qv_33))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate zero (rotate (succ zero) _v_34))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34))))))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_32 _qv_33))=(plus (succ _qv_33) (succ _qv_32))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate zero (rotate (succ zero) _v_34))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34))))))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_18))=_qv_18))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate zero (rotate (succ zero) _v_34))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34))))))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_19 _qv_20)=(append _qv_20 _qv_19)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate zero (rotate (succ zero) _v_34))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34))))))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_21 _qv_22) _qv_23)=(append _qv_21 (append _qv_22 _qv_23))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate zero (rotate (succ zero) _v_34))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34))))))))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_24 _qv_25)=(plus _qv_25 _qv_24)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate zero (rotate (succ zero) _v_34))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34))))))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_26 _qv_27) _qv_28)=(plus _qv_26 (plus _qv_27 _qv_28))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate zero (rotate (succ zero) _v_34))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34))))))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_29)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate zero (rotate (succ zero) _v_34))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34))))))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_30))=(nat-to-int _qv_30)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate zero (rotate (succ zero) _v_34))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34))))))))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_31))=(nat-to-int _qv_31)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate zero (rotate (succ zero) _v_34))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34))))))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_32 _qv_33))=(plus (succ _qv_32) (succ _qv_33))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate zero (rotate (succ zero) _v_34))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34))))))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_32 _qv_33))=(plus (succ _qv_33) (succ _qv_32))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate zero (rotate (succ zero) _v_34))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34))))))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_18))=_qv_18))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate zero (rotate (succ zero) _v_34))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34))))))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_19 _qv_20)=(append _qv_20 _qv_19)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate zero (rotate (succ zero) _v_34))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34))))))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_21 _qv_22) _qv_23)=(append _qv_21 (append _qv_22 _qv_23))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate zero (rotate (succ zero) _v_34))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34))))))))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_24 _qv_25)=(plus _qv_25 _qv_24)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate zero (rotate (succ zero) _v_34))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34))))))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_26 _qv_27) _qv_28)=(plus _qv_26 (plus _qv_27 _qv_28))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate zero (rotate (succ zero) _v_34))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34))))))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_29)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate zero (rotate (succ zero) _v_34))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34))))))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_30))=(nat-to-int _qv_30)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate zero (rotate (succ zero) _v_34))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34))))))))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_31))=(nat-to-int _qv_31)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate zero (rotate (succ zero) _v_34))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34))))))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_32 _qv_33))=(plus (succ _qv_32) (succ _qv_33))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate zero (rotate (succ zero) _v_34))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34))))))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_32 _qv_33))=(plus (succ _qv_33) (succ _qv_32))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate zero (rotate (succ zero) _v_34))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34)))))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_18))=_qv_18))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate zero (rotate (succ zero) _v_34))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34)))))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_19 _qv_20)=(append _qv_20 _qv_19)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate zero (rotate (succ zero) _v_34))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34)))))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_21 _qv_22) _qv_23)=(append _qv_21 (append _qv_22 _qv_23))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate zero (rotate (succ zero) _v_34))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34)))))))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_24 _qv_25)=(plus _qv_25 _qv_24)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate zero (rotate (succ zero) _v_34))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34)))))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_26 _qv_27) _qv_28)=(plus _qv_26 (plus _qv_27 _qv_28))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate zero (rotate (succ zero) _v_34))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34)))))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_29)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate zero (rotate (succ zero) _v_34))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34)))))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_30))=(nat-to-int _qv_30)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate zero (rotate (succ zero) _v_34))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34)))))))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_31))=(nat-to-int _qv_31)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate zero (rotate (succ zero) _v_34))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34)))))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_32 _qv_33))=(plus (succ _qv_32) (succ _qv_33))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate zero (rotate (succ zero) _v_34))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34)))))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_32 _qv_33))=(plus (succ _qv_33) (succ _qv_32))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate zero (rotate (succ zero) _v_34)))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34)))))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_18))=_qv_18))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate zero (rotate (succ zero) _v_34)))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34)))))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_19 _qv_20)=(append _qv_20 _qv_19)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate zero (rotate (succ zero) _v_34)))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34)))))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_21 _qv_22) _qv_23)=(append _qv_21 (append _qv_22 _qv_23))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate zero (rotate (succ zero) _v_34)))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34)))))))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_24 _qv_25)=(plus _qv_25 _qv_24)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate zero (rotate (succ zero) _v_34)))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34)))))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_26 _qv_27) _qv_28)=(plus _qv_26 (plus _qv_27 _qv_28))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate zero (rotate (succ zero) _v_34)))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34)))))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_29)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate zero (rotate (succ zero) _v_34)))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34)))))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_30))=(nat-to-int _qv_30)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate zero (rotate (succ zero) _v_34)))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34)))))))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_31))=(nat-to-int _qv_31)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate zero (rotate (succ zero) _v_34)))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34)))))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_32 _qv_33))=(plus (succ _qv_32) (succ _qv_33))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate zero (rotate (succ zero) _v_34)))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34)))))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_32 _qv_33))=(plus (succ _qv_33) (succ _qv_32))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate zero (rotate (succ zero) _v_34)))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34)))))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_18))=_qv_18))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate zero (rotate (succ zero) _v_34)))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34)))))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_19 _qv_20)=(append _qv_20 _qv_19)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate zero (rotate (succ zero) _v_34)))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34)))))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_21 _qv_22) _qv_23)=(append _qv_21 (append _qv_22 _qv_23))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate zero (rotate (succ zero) _v_34)))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34)))))))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_24 _qv_25)=(plus _qv_25 _qv_24)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate zero (rotate (succ zero) _v_34)))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34)))))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_26 _qv_27) _qv_28)=(plus _qv_26 (plus _qv_27 _qv_28))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate zero (rotate (succ zero) _v_34)))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34)))))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_29)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate zero (rotate (succ zero) _v_34)))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34)))))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_30))=(nat-to-int _qv_30)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate zero (rotate (succ zero) _v_34)))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34)))))))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_31))=(nat-to-int _qv_31)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate zero (rotate (succ zero) _v_34)))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34)))))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_32 _qv_33))=(plus (succ _qv_32) (succ _qv_33))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate zero (rotate (succ zero) _v_34)))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34)))))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_32 _qv_33))=(plus (succ _qv_33) (succ _qv_32))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate zero (rotate (succ zero) _v_34)))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34)))))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_18))=_qv_18))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate zero (rotate (succ zero) _v_34)))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34)))))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_19 _qv_20)=(append _qv_20 _qv_19)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate zero (rotate (succ zero) _v_34)))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34)))))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_21 _qv_22) _qv_23)=(append _qv_21 (append _qv_22 _qv_23))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate zero (rotate (succ zero) _v_34)))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34)))))))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_24 _qv_25)=(plus _qv_25 _qv_24)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate zero (rotate (succ zero) _v_34)))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34)))))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_26 _qv_27) _qv_28)=(plus _qv_26 (plus _qv_27 _qv_28))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate zero (rotate (succ zero) _v_34)))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34)))))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_29)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate zero (rotate (succ zero) _v_34)))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34)))))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_30))=(nat-to-int _qv_30)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate zero (rotate (succ zero) _v_34)))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34)))))))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_31))=(nat-to-int _qv_31)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate zero (rotate (succ zero) _v_34)))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34)))))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_32 _qv_33))=(plus (succ _qv_32) (succ _qv_33))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate zero (rotate (succ zero) _v_34)))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34)))))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_32 _qv_33))=(plus (succ _qv_33) (succ _qv_32))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate zero (rotate (succ zero) _v_34)))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34)))))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_18))=_qv_18))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate zero (rotate (succ zero) _v_34)))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34)))))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_19 _qv_20)=(append _qv_20 _qv_19)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate zero (rotate (succ zero) _v_34)))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34)))))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_21 _qv_22) _qv_23)=(append _qv_21 (append _qv_22 _qv_23))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate zero (rotate (succ zero) _v_34)))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34)))))))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_24 _qv_25)=(plus _qv_25 _qv_24)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate zero (rotate (succ zero) _v_34)))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34)))))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_26 _qv_27) _qv_28)=(plus _qv_26 (plus _qv_27 _qv_28))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate zero (rotate (succ zero) _v_34)))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34)))))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_29)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate zero (rotate (succ zero) _v_34)))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34)))))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_30))=(nat-to-int _qv_30)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate zero (rotate (succ zero) _v_34)))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34)))))))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_31))=(nat-to-int _qv_31)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate zero (rotate (succ zero) _v_34)))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34)))))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_32 _qv_33))=(plus (succ _qv_32) (succ _qv_33))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate zero (rotate (succ zero) _v_34)))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34)))))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_32 _qv_33))=(plus (succ _qv_33) (succ _qv_32))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate zero (rotate (succ zero) _v_34))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34)))))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_18))=_qv_18))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate zero (rotate (succ zero) _v_34))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34)))))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_19 _qv_20)=(append _qv_20 _qv_19)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate zero (rotate (succ zero) _v_34))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34)))))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_21 _qv_22) _qv_23)=(append _qv_21 (append _qv_22 _qv_23))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate zero (rotate (succ zero) _v_34))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34)))))))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_24 _qv_25)=(plus _qv_25 _qv_24)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate zero (rotate (succ zero) _v_34))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34)))))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_26 _qv_27) _qv_28)=(plus _qv_26 (plus _qv_27 _qv_28))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate zero (rotate (succ zero) _v_34))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34)))))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_29)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate zero (rotate (succ zero) _v_34))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34)))))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_30))=(nat-to-int _qv_30)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate zero (rotate (succ zero) _v_34))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34)))))))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_31))=(nat-to-int _qv_31)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate zero (rotate (succ zero) _v_34))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34)))))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_32 _qv_33))=(plus (succ _qv_32) (succ _qv_33))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate zero (rotate (succ zero) _v_34))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34)))))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_32 _qv_33))=(plus (succ _qv_33) (succ _qv_32))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate zero (rotate (succ zero) _v_34))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34))))))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_18))=_qv_18))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate zero (rotate (succ zero) _v_34))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34))))))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_19 _qv_20)=(append _qv_20 _qv_19)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate zero (rotate (succ zero) _v_34))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34))))))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_21 _qv_22) _qv_23)=(append _qv_21 (append _qv_22 _qv_23))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate zero (rotate (succ zero) _v_34))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34))))))))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_24 _qv_25)=(plus _qv_25 _qv_24)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate zero (rotate (succ zero) _v_34))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34))))))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_26 _qv_27) _qv_28)=(plus _qv_26 (plus _qv_27 _qv_28))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate zero (rotate (succ zero) _v_34))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34))))))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_29)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate zero (rotate (succ zero) _v_34))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34))))))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_30))=(nat-to-int _qv_30)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate zero (rotate (succ zero) _v_34))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34))))))))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_31))=(nat-to-int _qv_31)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate zero (rotate (succ zero) _v_34))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34))))))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_32 _qv_33))=(plus (succ _qv_32) (succ _qv_33))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate zero (rotate (succ zero) _v_34))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34))))))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_32 _qv_33))=(plus (succ _qv_33) (succ _qv_32))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate zero (rotate (succ zero) _v_34))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34))))))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_18))=_qv_18))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate zero (rotate (succ zero) _v_34))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34))))))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_19 _qv_20)=(append _qv_20 _qv_19)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate zero (rotate (succ zero) _v_34))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34))))))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_21 _qv_22) _qv_23)=(append _qv_21 (append _qv_22 _qv_23))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate zero (rotate (succ zero) _v_34))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34))))))))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_24 _qv_25)=(plus _qv_25 _qv_24)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate zero (rotate (succ zero) _v_34))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34))))))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_26 _qv_27) _qv_28)=(plus _qv_26 (plus _qv_27 _qv_28))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate zero (rotate (succ zero) _v_34))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34))))))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_29)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate zero (rotate (succ zero) _v_34))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34))))))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_30))=(nat-to-int _qv_30)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate zero (rotate (succ zero) _v_34))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34))))))))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_31))=(nat-to-int _qv_31)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate zero (rotate (succ zero) _v_34))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34))))))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_32 _qv_33))=(plus (succ _qv_32) (succ _qv_33))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate zero (rotate (succ zero) _v_34))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34))))))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_32 _qv_33))=(plus (succ _qv_33) (succ _qv_32))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate zero (rotate (succ zero) _v_34))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34))))))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_18))=_qv_18))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate zero (rotate (succ zero) _v_34))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34))))))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_19 _qv_20)=(append _qv_20 _qv_19)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate zero (rotate (succ zero) _v_34))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34))))))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_21 _qv_22) _qv_23)=(append _qv_21 (append _qv_22 _qv_23))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate zero (rotate (succ zero) _v_34))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34))))))))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_24 _qv_25)=(plus _qv_25 _qv_24)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate zero (rotate (succ zero) _v_34))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34))))))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_26 _qv_27) _qv_28)=(plus _qv_26 (plus _qv_27 _qv_28))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate zero (rotate (succ zero) _v_34))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34))))))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_29)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate zero (rotate (succ zero) _v_34))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34))))))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_30))=(nat-to-int _qv_30)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate zero (rotate (succ zero) _v_34))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34))))))))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_31))=(nat-to-int _qv_31)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate zero (rotate (succ zero) _v_34))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34))))))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_32 _qv_33))=(plus (succ _qv_32) (succ _qv_33))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate zero (rotate (succ zero) _v_34))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34))))))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_32 _qv_33))=(plus (succ _qv_33) (succ _qv_32))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate zero (rotate (succ zero) _v_34))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34))))))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_18))=_qv_18))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate zero (rotate (succ zero) _v_34))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34))))))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_19 _qv_20)=(append _qv_20 _qv_19)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate zero (rotate (succ zero) _v_34))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34))))))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_21 _qv_22) _qv_23)=(append _qv_21 (append _qv_22 _qv_23))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate zero (rotate (succ zero) _v_34))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34))))))))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_24 _qv_25)=(plus _qv_25 _qv_24)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate zero (rotate (succ zero) _v_34))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34))))))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_26 _qv_27) _qv_28)=(plus _qv_26 (plus _qv_27 _qv_28))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate zero (rotate (succ zero) _v_34))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34))))))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_29)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate zero (rotate (succ zero) _v_34))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34))))))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_30))=(nat-to-int _qv_30)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate zero (rotate (succ zero) _v_34))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34))))))))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_31))=(nat-to-int _qv_31)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate zero (rotate (succ zero) _v_34))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34))))))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_32 _qv_33))=(plus (succ _qv_32) (succ _qv_33))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate zero (rotate (succ zero) _v_34))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34))))))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_32 _qv_33))=(plus (succ _qv_33) (succ _qv_32))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate zero (rotate (succ zero) _v_34))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34)))))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_18))=_qv_18))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate zero (rotate (succ zero) _v_34))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34)))))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_19 _qv_20)=(append _qv_20 _qv_19)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate zero (rotate (succ zero) _v_34))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34)))))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_21 _qv_22) _qv_23)=(append _qv_21 (append _qv_22 _qv_23))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate zero (rotate (succ zero) _v_34))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34)))))))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_24 _qv_25)=(plus _qv_25 _qv_24)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate zero (rotate (succ zero) _v_34))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34)))))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_26 _qv_27) _qv_28)=(plus _qv_26 (plus _qv_27 _qv_28))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate zero (rotate (succ zero) _v_34))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34)))))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_29)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate zero (rotate (succ zero) _v_34))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34)))))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_30))=(nat-to-int _qv_30)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate zero (rotate (succ zero) _v_34))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34)))))))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_31))=(nat-to-int _qv_31)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate zero (rotate (succ zero) _v_34))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34)))))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_32 _qv_33))=(plus (succ _qv_32) (succ _qv_33))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate zero (rotate (succ zero) _v_34))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34)))))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_32 _qv_33))=(plus (succ _qv_33) (succ _qv_32))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate zero (rotate (succ zero) _v_34))))=(nat-to-int (len (rotate _t_17 (rotate zero (rotate zero _v_34))))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_18))=_qv_18))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate zero (rotate (succ zero) _v_34))))=(nat-to-int (len (rotate _t_17 (rotate zero (rotate zero _v_34))))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_19 _qv_20)=(append _qv_20 _qv_19)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate zero (rotate (succ zero) _v_34))))=(nat-to-int (len (rotate _t_17 (rotate zero (rotate zero _v_34))))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_21 _qv_22) _qv_23)=(append _qv_21 (append _qv_22 _qv_23))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate zero (rotate (succ zero) _v_34))))=(nat-to-int (len (rotate _t_17 (rotate zero (rotate zero _v_34))))))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_24 _qv_25)=(plus _qv_25 _qv_24)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate zero (rotate (succ zero) _v_34))))=(nat-to-int (len (rotate _t_17 (rotate zero (rotate zero _v_34))))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_26 _qv_27) _qv_28)=(plus _qv_26 (plus _qv_27 _qv_28))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate zero (rotate (succ zero) _v_34))))=(nat-to-int (len (rotate _t_17 (rotate zero (rotate zero _v_34))))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_29)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate zero (rotate (succ zero) _v_34))))=(nat-to-int (len (rotate _t_17 (rotate zero (rotate zero _v_34))))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_30))=(nat-to-int _qv_30)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate zero (rotate (succ zero) _v_34))))=(nat-to-int (len (rotate _t_17 (rotate zero (rotate zero _v_34))))))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_31))=(nat-to-int _qv_31)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate zero (rotate (succ zero) _v_34))))=(nat-to-int (len (rotate _t_17 (rotate zero (rotate zero _v_34))))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_32 _qv_33))=(plus (succ _qv_32) (succ _qv_33))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate zero (rotate (succ zero) _v_34))))=(nat-to-int (len (rotate _t_17 (rotate zero (rotate zero _v_34))))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_32 _qv_33))=(plus (succ _qv_33) (succ _qv_32))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate zero (rotate (succ zero) _v_34)))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34)))))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_18))=_qv_18))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate zero (rotate (succ zero) _v_34)))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34)))))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_19 _qv_20)=(append _qv_20 _qv_19)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate zero (rotate (succ zero) _v_34)))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34)))))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_21 _qv_22) _qv_23)=(append _qv_21 (append _qv_22 _qv_23))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate zero (rotate (succ zero) _v_34)))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34)))))))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_24 _qv_25)=(plus _qv_25 _qv_24)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate zero (rotate (succ zero) _v_34)))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34)))))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_26 _qv_27) _qv_28)=(plus _qv_26 (plus _qv_27 _qv_28))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate zero (rotate (succ zero) _v_34)))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34)))))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_29)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate zero (rotate (succ zero) _v_34)))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34)))))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_30))=(nat-to-int _qv_30)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate zero (rotate (succ zero) _v_34)))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34)))))))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_31))=(nat-to-int _qv_31)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate zero (rotate (succ zero) _v_34)))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34)))))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_32 _qv_33))=(plus (succ _qv_32) (succ _qv_33))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate zero (rotate (succ zero) _v_34)))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34)))))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_32 _qv_33))=(plus (succ _qv_33) (succ _qv_32))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate zero (rotate (succ zero) _v_34)))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34)))))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_18))=_qv_18))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate zero (rotate (succ zero) _v_34)))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34)))))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_19 _qv_20)=(append _qv_20 _qv_19)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate zero (rotate (succ zero) _v_34)))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34)))))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_21 _qv_22) _qv_23)=(append _qv_21 (append _qv_22 _qv_23))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate zero (rotate (succ zero) _v_34)))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34)))))))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_24 _qv_25)=(plus _qv_25 _qv_24)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate zero (rotate (succ zero) _v_34)))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34)))))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_26 _qv_27) _qv_28)=(plus _qv_26 (plus _qv_27 _qv_28))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate zero (rotate (succ zero) _v_34)))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34)))))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_29)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate zero (rotate (succ zero) _v_34)))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34)))))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_30))=(nat-to-int _qv_30)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate zero (rotate (succ zero) _v_34)))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34)))))))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_31))=(nat-to-int _qv_31)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate zero (rotate (succ zero) _v_34)))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34)))))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_32 _qv_33))=(plus (succ _qv_32) (succ _qv_33))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate zero (rotate (succ zero) _v_34)))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34)))))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_32 _qv_33))=(plus (succ _qv_33) (succ _qv_32))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate zero (rotate (succ zero) _v_34)))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34)))))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_18))=_qv_18))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate zero (rotate (succ zero) _v_34)))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34)))))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_19 _qv_20)=(append _qv_20 _qv_19)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate zero (rotate (succ zero) _v_34)))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34)))))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_21 _qv_22) _qv_23)=(append _qv_21 (append _qv_22 _qv_23))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate zero (rotate (succ zero) _v_34)))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34)))))))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_24 _qv_25)=(plus _qv_25 _qv_24)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate zero (rotate (succ zero) _v_34)))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34)))))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_26 _qv_27) _qv_28)=(plus _qv_26 (plus _qv_27 _qv_28))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate zero (rotate (succ zero) _v_34)))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34)))))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_29)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate zero (rotate (succ zero) _v_34)))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34)))))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_30))=(nat-to-int _qv_30)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate zero (rotate (succ zero) _v_34)))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34)))))))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_31))=(nat-to-int _qv_31)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate zero (rotate (succ zero) _v_34)))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34)))))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_32 _qv_33))=(plus (succ _qv_32) (succ _qv_33))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate zero (rotate (succ zero) _v_34)))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34)))))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_32 _qv_33))=(plus (succ _qv_33) (succ _qv_32))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate zero (rotate (succ zero) _v_34)))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34)))))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_18))=_qv_18))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate zero (rotate (succ zero) _v_34)))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34)))))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_19 _qv_20)=(append _qv_20 _qv_19)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate zero (rotate (succ zero) _v_34)))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34)))))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_21 _qv_22) _qv_23)=(append _qv_21 (append _qv_22 _qv_23))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate zero (rotate (succ zero) _v_34)))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34)))))))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_24 _qv_25)=(plus _qv_25 _qv_24)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate zero (rotate (succ zero) _v_34)))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34)))))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_26 _qv_27) _qv_28)=(plus _qv_26 (plus _qv_27 _qv_28))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate zero (rotate (succ zero) _v_34)))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34)))))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_29)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate zero (rotate (succ zero) _v_34)))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34)))))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_30))=(nat-to-int _qv_30)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate zero (rotate (succ zero) _v_34)))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34)))))))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_31))=(nat-to-int _qv_31)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate zero (rotate (succ zero) _v_34)))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34)))))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_32 _qv_33))=(plus (succ _qv_32) (succ _qv_33))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate zero (rotate (succ zero) _v_34)))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34)))))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_32 _qv_33))=(plus (succ _qv_33) (succ _qv_32))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate zero (rotate (succ zero) _v_34))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34)))))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_18))=_qv_18))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate zero (rotate (succ zero) _v_34))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34)))))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_19 _qv_20)=(append _qv_20 _qv_19)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate zero (rotate (succ zero) _v_34))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34)))))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_21 _qv_22) _qv_23)=(append _qv_21 (append _qv_22 _qv_23))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate zero (rotate (succ zero) _v_34))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34)))))))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_24 _qv_25)=(plus _qv_25 _qv_24)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate zero (rotate (succ zero) _v_34))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34)))))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_26 _qv_27) _qv_28)=(plus _qv_26 (plus _qv_27 _qv_28))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate zero (rotate (succ zero) _v_34))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34)))))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_29)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate zero (rotate (succ zero) _v_34))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34)))))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_30))=(nat-to-int _qv_30)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate zero (rotate (succ zero) _v_34))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34)))))))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_31))=(nat-to-int _qv_31)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate zero (rotate (succ zero) _v_34))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34)))))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_32 _qv_33))=(plus (succ _qv_32) (succ _qv_33))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate zero (rotate (succ zero) _v_34))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34)))))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_32 _qv_33))=(plus (succ _qv_33) (succ _qv_32))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate zero (rotate (succ zero) _v_34))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34))))))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_18))=_qv_18))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate zero (rotate (succ zero) _v_34))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34))))))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_19 _qv_20)=(append _qv_20 _qv_19)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate zero (rotate (succ zero) _v_34))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34))))))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_21 _qv_22) _qv_23)=(append _qv_21 (append _qv_22 _qv_23))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate zero (rotate (succ zero) _v_34))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34))))))))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_24 _qv_25)=(plus _qv_25 _qv_24)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate zero (rotate (succ zero) _v_34))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34))))))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_26 _qv_27) _qv_28)=(plus _qv_26 (plus _qv_27 _qv_28))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate zero (rotate (succ zero) _v_34))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34))))))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_29)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate zero (rotate (succ zero) _v_34))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34))))))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_30))=(nat-to-int _qv_30)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate zero (rotate (succ zero) _v_34))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34))))))))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_31))=(nat-to-int _qv_31)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate zero (rotate (succ zero) _v_34))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34))))))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_32 _qv_33))=(plus (succ _qv_32) (succ _qv_33))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate zero (rotate (succ zero) _v_34))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34))))))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_32 _qv_33))=(plus (succ _qv_33) (succ _qv_32))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate zero (rotate (succ zero) _v_34))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34))))))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_18))=_qv_18))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate zero (rotate (succ zero) _v_34))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34))))))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_19 _qv_20)=(append _qv_20 _qv_19)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate zero (rotate (succ zero) _v_34))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34))))))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_21 _qv_22) _qv_23)=(append _qv_21 (append _qv_22 _qv_23))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate zero (rotate (succ zero) _v_34))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34))))))))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_24 _qv_25)=(plus _qv_25 _qv_24)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate zero (rotate (succ zero) _v_34))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34))))))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_26 _qv_27) _qv_28)=(plus _qv_26 (plus _qv_27 _qv_28))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate zero (rotate (succ zero) _v_34))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34))))))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_29)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate zero (rotate (succ zero) _v_34))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34))))))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_30))=(nat-to-int _qv_30)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate zero (rotate (succ zero) _v_34))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34))))))))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_31))=(nat-to-int _qv_31)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate zero (rotate (succ zero) _v_34))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34))))))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_32 _qv_33))=(plus (succ _qv_32) (succ _qv_33))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate zero (rotate (succ zero) _v_34))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34))))))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_32 _qv_33))=(plus (succ _qv_33) (succ _qv_32))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate zero (rotate (succ zero) _v_34))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34))))))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_18))=_qv_18))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate zero (rotate (succ zero) _v_34))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34))))))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_19 _qv_20)=(append _qv_20 _qv_19)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate zero (rotate (succ zero) _v_34))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34))))))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_21 _qv_22) _qv_23)=(append _qv_21 (append _qv_22 _qv_23))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate zero (rotate (succ zero) _v_34))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34))))))))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_24 _qv_25)=(plus _qv_25 _qv_24)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate zero (rotate (succ zero) _v_34))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34))))))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_26 _qv_27) _qv_28)=(plus _qv_26 (plus _qv_27 _qv_28))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate zero (rotate (succ zero) _v_34))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34))))))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_29)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate zero (rotate (succ zero) _v_34))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34))))))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_30))=(nat-to-int _qv_30)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate zero (rotate (succ zero) _v_34))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34))))))))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_31))=(nat-to-int _qv_31)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate zero (rotate (succ zero) _v_34))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34))))))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_32 _qv_33))=(plus (succ _qv_32) (succ _qv_33))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate zero (rotate (succ zero) _v_34))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34))))))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_32 _qv_33))=(plus (succ _qv_33) (succ _qv_32))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate zero (rotate (succ zero) _v_34))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34))))))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_18))=_qv_18))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate zero (rotate (succ zero) _v_34))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34))))))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_19 _qv_20)=(append _qv_20 _qv_19)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate zero (rotate (succ zero) _v_34))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34))))))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_21 _qv_22) _qv_23)=(append _qv_21 (append _qv_22 _qv_23))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate zero (rotate (succ zero) _v_34))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34))))))))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_24 _qv_25)=(plus _qv_25 _qv_24)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate zero (rotate (succ zero) _v_34))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34))))))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_26 _qv_27) _qv_28)=(plus _qv_26 (plus _qv_27 _qv_28))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate zero (rotate (succ zero) _v_34))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34))))))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_29)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate zero (rotate (succ zero) _v_34))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34))))))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_30))=(nat-to-int _qv_30)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate zero (rotate (succ zero) _v_34))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34))))))))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_31))=(nat-to-int _qv_31)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate zero (rotate (succ zero) _v_34))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34))))))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_32 _qv_33))=(plus (succ _qv_32) (succ _qv_33))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate zero (rotate (succ zero) _v_34))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34))))))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_32 _qv_33))=(plus (succ _qv_33) (succ _qv_32))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate zero (rotate (succ zero) _v_34))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34)))))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_18))=_qv_18))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate zero (rotate (succ zero) _v_34))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34)))))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_19 _qv_20)=(append _qv_20 _qv_19)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate zero (rotate (succ zero) _v_34))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34)))))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_21 _qv_22) _qv_23)=(append _qv_21 (append _qv_22 _qv_23))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate zero (rotate (succ zero) _v_34))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34)))))))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_24 _qv_25)=(plus _qv_25 _qv_24)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate zero (rotate (succ zero) _v_34))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34)))))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_26 _qv_27) _qv_28)=(plus _qv_26 (plus _qv_27 _qv_28))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate zero (rotate (succ zero) _v_34))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34)))))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_29)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate zero (rotate (succ zero) _v_34))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34)))))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_30))=(nat-to-int _qv_30)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate zero (rotate (succ zero) _v_34))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34)))))))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_31))=(nat-to-int _qv_31)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate zero (rotate (succ zero) _v_34))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34)))))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_32 _qv_33))=(plus (succ _qv_32) (succ _qv_33))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate zero (rotate (succ zero) _v_34))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34)))))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_32 _qv_33))=(plus (succ _qv_33) (succ _qv_32))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate zero (rotate (succ zero) _v_34)))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34)))))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_18))=_qv_18))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate zero (rotate (succ zero) _v_34)))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34)))))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_19 _qv_20)=(append _qv_20 _qv_19)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate zero (rotate (succ zero) _v_34)))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34)))))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_21 _qv_22) _qv_23)=(append _qv_21 (append _qv_22 _qv_23))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate zero (rotate (succ zero) _v_34)))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34)))))))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_24 _qv_25)=(plus _qv_25 _qv_24)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate zero (rotate (succ zero) _v_34)))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34)))))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_26 _qv_27) _qv_28)=(plus _qv_26 (plus _qv_27 _qv_28))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate zero (rotate (succ zero) _v_34)))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34)))))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_29)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate zero (rotate (succ zero) _v_34)))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34)))))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_30))=(nat-to-int _qv_30)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate zero (rotate (succ zero) _v_34)))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34)))))))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_31))=(nat-to-int _qv_31)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate zero (rotate (succ zero) _v_34)))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34)))))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_32 _qv_33))=(plus (succ _qv_32) (succ _qv_33))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate zero (rotate (succ zero) _v_34)))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34)))))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_32 _qv_33))=(plus (succ _qv_33) (succ _qv_32))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate zero (rotate (succ zero) _v_34)))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34)))))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_18))=_qv_18))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate zero (rotate (succ zero) _v_34)))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34)))))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_19 _qv_20)=(append _qv_20 _qv_19)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate zero (rotate (succ zero) _v_34)))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34)))))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_21 _qv_22) _qv_23)=(append _qv_21 (append _qv_22 _qv_23))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate zero (rotate (succ zero) _v_34)))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34)))))))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_24 _qv_25)=(plus _qv_25 _qv_24)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate zero (rotate (succ zero) _v_34)))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34)))))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_26 _qv_27) _qv_28)=(plus _qv_26 (plus _qv_27 _qv_28))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate zero (rotate (succ zero) _v_34)))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34)))))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_29)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate zero (rotate (succ zero) _v_34)))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34)))))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_30))=(nat-to-int _qv_30)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate zero (rotate (succ zero) _v_34)))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34)))))))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_31))=(nat-to-int _qv_31)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate zero (rotate (succ zero) _v_34)))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34)))))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_32 _qv_33))=(plus (succ _qv_32) (succ _qv_33))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate zero (rotate (succ zero) _v_34)))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34)))))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_32 _qv_33))=(plus (succ _qv_33) (succ _qv_32))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate zero (rotate (succ zero) _v_34)))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34)))))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_18))=_qv_18))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate zero (rotate (succ zero) _v_34)))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34)))))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_19 _qv_20)=(append _qv_20 _qv_19)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate zero (rotate (succ zero) _v_34)))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34)))))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_21 _qv_22) _qv_23)=(append _qv_21 (append _qv_22 _qv_23))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate zero (rotate (succ zero) _v_34)))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34)))))))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_24 _qv_25)=(plus _qv_25 _qv_24)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate zero (rotate (succ zero) _v_34)))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34)))))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_26 _qv_27) _qv_28)=(plus _qv_26 (plus _qv_27 _qv_28))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate zero (rotate (succ zero) _v_34)))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34)))))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_29)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate zero (rotate (succ zero) _v_34)))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34)))))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_30))=(nat-to-int _qv_30)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate zero (rotate (succ zero) _v_34)))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34)))))))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_31))=(nat-to-int _qv_31)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate zero (rotate (succ zero) _v_34)))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34)))))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_32 _qv_33))=(plus (succ _qv_32) (succ _qv_33))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate zero (rotate (succ zero) _v_34)))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34)))))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_32 _qv_33))=(plus (succ _qv_33) (succ _qv_32))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate zero (rotate (succ zero) _v_34)))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34)))))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_18))=_qv_18))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate zero (rotate (succ zero) _v_34)))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34)))))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_19 _qv_20)=(append _qv_20 _qv_19)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate zero (rotate (succ zero) _v_34)))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34)))))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_21 _qv_22) _qv_23)=(append _qv_21 (append _qv_22 _qv_23))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate zero (rotate (succ zero) _v_34)))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34)))))))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_24 _qv_25)=(plus _qv_25 _qv_24)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate zero (rotate (succ zero) _v_34)))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34)))))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_26 _qv_27) _qv_28)=(plus _qv_26 (plus _qv_27 _qv_28))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate zero (rotate (succ zero) _v_34)))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34)))))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_29)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate zero (rotate (succ zero) _v_34)))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34)))))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_30))=(nat-to-int _qv_30)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate zero (rotate (succ zero) _v_34)))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34)))))))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_31))=(nat-to-int _qv_31)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate zero (rotate (succ zero) _v_34)))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34)))))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_32 _qv_33))=(plus (succ _qv_32) (succ _qv_33))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate zero (rotate (succ zero) _v_34)))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34)))))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_32 _qv_33))=(plus (succ _qv_33) (succ _qv_32))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate zero (rotate (succ zero) _v_34))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34)))))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_18))=_qv_18))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate zero (rotate (succ zero) _v_34))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34)))))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_19 _qv_20)=(append _qv_20 _qv_19)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate zero (rotate (succ zero) _v_34))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34)))))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_21 _qv_22) _qv_23)=(append _qv_21 (append _qv_22 _qv_23))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate zero (rotate (succ zero) _v_34))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34)))))))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_24 _qv_25)=(plus _qv_25 _qv_24)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate zero (rotate (succ zero) _v_34))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34)))))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_26 _qv_27) _qv_28)=(plus _qv_26 (plus _qv_27 _qv_28))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate zero (rotate (succ zero) _v_34))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34)))))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_29)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate zero (rotate (succ zero) _v_34))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34)))))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_30))=(nat-to-int _qv_30)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate zero (rotate (succ zero) _v_34))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34)))))))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_31))=(nat-to-int _qv_31)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate zero (rotate (succ zero) _v_34))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34)))))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_32 _qv_33))=(plus (succ _qv_32) (succ _qv_33))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate zero (rotate (succ zero) _v_34))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34)))))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_32 _qv_33))=(plus (succ _qv_33) (succ _qv_32))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate zero (rotate (succ zero) _v_34))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34))))))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_18))=_qv_18))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate zero (rotate (succ zero) _v_34))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34))))))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_19 _qv_20)=(append _qv_20 _qv_19)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate zero (rotate (succ zero) _v_34))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34))))))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_21 _qv_22) _qv_23)=(append _qv_21 (append _qv_22 _qv_23))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate zero (rotate (succ zero) _v_34))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34))))))))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_24 _qv_25)=(plus _qv_25 _qv_24)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate zero (rotate (succ zero) _v_34))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34))))))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_26 _qv_27) _qv_28)=(plus _qv_26 (plus _qv_27 _qv_28))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate zero (rotate (succ zero) _v_34))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34))))))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_29)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate zero (rotate (succ zero) _v_34))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34))))))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_30))=(nat-to-int _qv_30)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate zero (rotate (succ zero) _v_34))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34))))))))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_31))=(nat-to-int _qv_31)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate zero (rotate (succ zero) _v_34))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34))))))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_32 _qv_33))=(plus (succ _qv_32) (succ _qv_33))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate zero (rotate (succ zero) _v_34))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34))))))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_32 _qv_33))=(plus (succ _qv_33) (succ _qv_32))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate zero (rotate (succ zero) _v_34))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34))))))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_18))=_qv_18))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate zero (rotate (succ zero) _v_34))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34))))))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_19 _qv_20)=(append _qv_20 _qv_19)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate zero (rotate (succ zero) _v_34))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34))))))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_21 _qv_22) _qv_23)=(append _qv_21 (append _qv_22 _qv_23))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate zero (rotate (succ zero) _v_34))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34))))))))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_24 _qv_25)=(plus _qv_25 _qv_24)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate zero (rotate (succ zero) _v_34))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34))))))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_26 _qv_27) _qv_28)=(plus _qv_26 (plus _qv_27 _qv_28))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate zero (rotate (succ zero) _v_34))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34))))))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_29)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate zero (rotate (succ zero) _v_34))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34))))))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_30))=(nat-to-int _qv_30)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate zero (rotate (succ zero) _v_34))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34))))))))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_31))=(nat-to-int _qv_31)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate zero (rotate (succ zero) _v_34))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34))))))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_32 _qv_33))=(plus (succ _qv_32) (succ _qv_33))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate zero (rotate (succ zero) _v_34))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34))))))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_32 _qv_33))=(plus (succ _qv_33) (succ _qv_32))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate zero (rotate (succ zero) _v_34))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34))))))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_18))=_qv_18))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate zero (rotate (succ zero) _v_34))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34))))))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_19 _qv_20)=(append _qv_20 _qv_19)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate zero (rotate (succ zero) _v_34))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34))))))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_21 _qv_22) _qv_23)=(append _qv_21 (append _qv_22 _qv_23))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate zero (rotate (succ zero) _v_34))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34))))))))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_24 _qv_25)=(plus _qv_25 _qv_24)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate zero (rotate (succ zero) _v_34))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34))))))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_26 _qv_27) _qv_28)=(plus _qv_26 (plus _qv_27 _qv_28))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate zero (rotate (succ zero) _v_34))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34))))))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_29)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate zero (rotate (succ zero) _v_34))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34))))))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_30))=(nat-to-int _qv_30)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate zero (rotate (succ zero) _v_34))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34))))))))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_31))=(nat-to-int _qv_31)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate zero (rotate (succ zero) _v_34))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34))))))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_32 _qv_33))=(plus (succ _qv_32) (succ _qv_33))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate zero (rotate (succ zero) _v_34))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34))))))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_32 _qv_33))=(plus (succ _qv_33) (succ _qv_32))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate zero (rotate (succ zero) _v_34))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34))))))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_18))=_qv_18))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate zero (rotate (succ zero) _v_34))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34))))))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_19 _qv_20)=(append _qv_20 _qv_19)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate zero (rotate (succ zero) _v_34))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34))))))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_21 _qv_22) _qv_23)=(append _qv_21 (append _qv_22 _qv_23))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate zero (rotate (succ zero) _v_34))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34))))))))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_24 _qv_25)=(plus _qv_25 _qv_24)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate zero (rotate (succ zero) _v_34))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34))))))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_26 _qv_27) _qv_28)=(plus _qv_26 (plus _qv_27 _qv_28))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate zero (rotate (succ zero) _v_34))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34))))))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_29)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate zero (rotate (succ zero) _v_34))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34))))))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_30))=(nat-to-int _qv_30)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate zero (rotate (succ zero) _v_34))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34))))))))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_31))=(nat-to-int _qv_31)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate zero (rotate (succ zero) _v_34))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34))))))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_32 _qv_33))=(plus (succ _qv_32) (succ _qv_33))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate zero (rotate (succ zero) _v_34))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34))))))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_32 _qv_33))=(plus (succ _qv_33) (succ _qv_32))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate zero (rotate (succ zero) _v_34))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34)))))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_18))=_qv_18))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate zero (rotate (succ zero) _v_34))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34)))))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_19 _qv_20)=(append _qv_20 _qv_19)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate zero (rotate (succ zero) _v_34))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34)))))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_21 _qv_22) _qv_23)=(append _qv_21 (append _qv_22 _qv_23))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate zero (rotate (succ zero) _v_34))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34)))))))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_24 _qv_25)=(plus _qv_25 _qv_24)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate zero (rotate (succ zero) _v_34))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34)))))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_26 _qv_27) _qv_28)=(plus _qv_26 (plus _qv_27 _qv_28))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate zero (rotate (succ zero) _v_34))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34)))))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_29)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate zero (rotate (succ zero) _v_34))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34)))))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_30))=(nat-to-int _qv_30)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate zero (rotate (succ zero) _v_34))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34)))))))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_31))=(nat-to-int _qv_31)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate zero (rotate (succ zero) _v_34))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34)))))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_32 _qv_33))=(plus (succ _qv_32) (succ _qv_33))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate zero (rotate (succ zero) _v_34))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34)))))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_32 _qv_33))=(plus (succ _qv_33) (succ _qv_32))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate zero (rotate (succ zero) _v_34))))=(nat-to-int (len (rotate _t_17 (rotate zero (rotate zero _v_34))))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_18))=_qv_18))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate zero (rotate (succ zero) _v_34))))=(nat-to-int (len (rotate _t_17 (rotate zero (rotate zero _v_34))))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_19 _qv_20)=(append _qv_20 _qv_19)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate zero (rotate (succ zero) _v_34))))=(nat-to-int (len (rotate _t_17 (rotate zero (rotate zero _v_34))))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_21 _qv_22) _qv_23)=(append _qv_21 (append _qv_22 _qv_23))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate zero (rotate (succ zero) _v_34))))=(nat-to-int (len (rotate _t_17 (rotate zero (rotate zero _v_34))))))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_24 _qv_25)=(plus _qv_25 _qv_24)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate zero (rotate (succ zero) _v_34))))=(nat-to-int (len (rotate _t_17 (rotate zero (rotate zero _v_34))))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_26 _qv_27) _qv_28)=(plus _qv_26 (plus _qv_27 _qv_28))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate zero (rotate (succ zero) _v_34))))=(nat-to-int (len (rotate _t_17 (rotate zero (rotate zero _v_34))))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_29)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate zero (rotate (succ zero) _v_34))))=(nat-to-int (len (rotate _t_17 (rotate zero (rotate zero _v_34))))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_30))=(nat-to-int _qv_30)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate zero (rotate (succ zero) _v_34))))=(nat-to-int (len (rotate _t_17 (rotate zero (rotate zero _v_34))))))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_31))=(nat-to-int _qv_31)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate zero (rotate (succ zero) _v_34))))=(nat-to-int (len (rotate _t_17 (rotate zero (rotate zero _v_34))))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_32 _qv_33))=(plus (succ _qv_32) (succ _qv_33))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate zero (rotate (succ zero) _v_34))))=(nat-to-int (len (rotate _t_17 (rotate zero (rotate zero _v_34))))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_32 _qv_33))=(plus (succ _qv_33) (succ _qv_32))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate zero (rotate (succ zero) _v_34)))))=(nat-to-int (len (rotate _t_17 (rotate zero (rotate zero _v_34))))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_18))=_qv_18))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate zero (rotate (succ zero) _v_34)))))=(nat-to-int (len (rotate _t_17 (rotate zero (rotate zero _v_34))))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_19 _qv_20)=(append _qv_20 _qv_19)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate zero (rotate (succ zero) _v_34)))))=(nat-to-int (len (rotate _t_17 (rotate zero (rotate zero _v_34))))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_21 _qv_22) _qv_23)=(append _qv_21 (append _qv_22 _qv_23))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate zero (rotate (succ zero) _v_34)))))=(nat-to-int (len (rotate _t_17 (rotate zero (rotate zero _v_34))))))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_24 _qv_25)=(plus _qv_25 _qv_24)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate zero (rotate (succ zero) _v_34)))))=(nat-to-int (len (rotate _t_17 (rotate zero (rotate zero _v_34))))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_26 _qv_27) _qv_28)=(plus _qv_26 (plus _qv_27 _qv_28))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate zero (rotate (succ zero) _v_34)))))=(nat-to-int (len (rotate _t_17 (rotate zero (rotate zero _v_34))))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_29)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate zero (rotate (succ zero) _v_34)))))=(nat-to-int (len (rotate _t_17 (rotate zero (rotate zero _v_34))))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_30))=(nat-to-int _qv_30)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate zero (rotate (succ zero) _v_34)))))=(nat-to-int (len (rotate _t_17 (rotate zero (rotate zero _v_34))))))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_31))=(nat-to-int _qv_31)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate zero (rotate (succ zero) _v_34)))))=(nat-to-int (len (rotate _t_17 (rotate zero (rotate zero _v_34))))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_32 _qv_33))=(plus (succ _qv_32) (succ _qv_33))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate zero (rotate (succ zero) _v_34)))))=(nat-to-int (len (rotate _t_17 (rotate zero (rotate zero _v_34))))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_32 _qv_33))=(plus (succ _qv_33) (succ _qv_32))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate zero (rotate (succ zero) _v_34)))))=(nat-to-int (len (rotate _t_17 (rotate zero (rotate zero _v_34))))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_18))=_qv_18))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate zero (rotate (succ zero) _v_34)))))=(nat-to-int (len (rotate _t_17 (rotate zero (rotate zero _v_34))))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_19 _qv_20)=(append _qv_20 _qv_19)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate zero (rotate (succ zero) _v_34)))))=(nat-to-int (len (rotate _t_17 (rotate zero (rotate zero _v_34))))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_21 _qv_22) _qv_23)=(append _qv_21 (append _qv_22 _qv_23))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate zero (rotate (succ zero) _v_34)))))=(nat-to-int (len (rotate _t_17 (rotate zero (rotate zero _v_34))))))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_24 _qv_25)=(plus _qv_25 _qv_24)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate zero (rotate (succ zero) _v_34)))))=(nat-to-int (len (rotate _t_17 (rotate zero (rotate zero _v_34))))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_26 _qv_27) _qv_28)=(plus _qv_26 (plus _qv_27 _qv_28))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate zero (rotate (succ zero) _v_34)))))=(nat-to-int (len (rotate _t_17 (rotate zero (rotate zero _v_34))))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_29)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate zero (rotate (succ zero) _v_34)))))=(nat-to-int (len (rotate _t_17 (rotate zero (rotate zero _v_34))))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_30))=(nat-to-int _qv_30)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate zero (rotate (succ zero) _v_34)))))=(nat-to-int (len (rotate _t_17 (rotate zero (rotate zero _v_34))))))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_31))=(nat-to-int _qv_31)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate zero (rotate (succ zero) _v_34)))))=(nat-to-int (len (rotate _t_17 (rotate zero (rotate zero _v_34))))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_32 _qv_33))=(plus (succ _qv_32) (succ _qv_33))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate zero (rotate (succ zero) _v_34)))))=(nat-to-int (len (rotate _t_17 (rotate zero (rotate zero _v_34))))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_32 _qv_33))=(plus (succ _qv_33) (succ _qv_32))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate zero (rotate (succ zero) _v_34)))))=(nat-to-int (len (rotate _t_17 (rotate zero (rotate zero _v_34))))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_18))=_qv_18))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate zero (rotate (succ zero) _v_34)))))=(nat-to-int (len (rotate _t_17 (rotate zero (rotate zero _v_34))))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_19 _qv_20)=(append _qv_20 _qv_19)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate zero (rotate (succ zero) _v_34)))))=(nat-to-int (len (rotate _t_17 (rotate zero (rotate zero _v_34))))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_21 _qv_22) _qv_23)=(append _qv_21 (append _qv_22 _qv_23))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate zero (rotate (succ zero) _v_34)))))=(nat-to-int (len (rotate _t_17 (rotate zero (rotate zero _v_34))))))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_24 _qv_25)=(plus _qv_25 _qv_24)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate zero (rotate (succ zero) _v_34)))))=(nat-to-int (len (rotate _t_17 (rotate zero (rotate zero _v_34))))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_26 _qv_27) _qv_28)=(plus _qv_26 (plus _qv_27 _qv_28))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate zero (rotate (succ zero) _v_34)))))=(nat-to-int (len (rotate _t_17 (rotate zero (rotate zero _v_34))))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_29)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate zero (rotate (succ zero) _v_34)))))=(nat-to-int (len (rotate _t_17 (rotate zero (rotate zero _v_34))))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_30))=(nat-to-int _qv_30)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate zero (rotate (succ zero) _v_34)))))=(nat-to-int (len (rotate _t_17 (rotate zero (rotate zero _v_34))))))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_31))=(nat-to-int _qv_31)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate zero (rotate (succ zero) _v_34)))))=(nat-to-int (len (rotate _t_17 (rotate zero (rotate zero _v_34))))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_32 _qv_33))=(plus (succ _qv_32) (succ _qv_33))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate zero (rotate (succ zero) _v_34)))))=(nat-to-int (len (rotate _t_17 (rotate zero (rotate zero _v_34))))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_32 _qv_33))=(plus (succ _qv_33) (succ _qv_32))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate zero (rotate (succ zero) _v_34)))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34)))))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_18))=_qv_18))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate zero (rotate (succ zero) _v_34)))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34)))))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_19 _qv_20)=(append _qv_20 _qv_19)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate zero (rotate (succ zero) _v_34)))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34)))))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_21 _qv_22) _qv_23)=(append _qv_21 (append _qv_22 _qv_23))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate zero (rotate (succ zero) _v_34)))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34)))))))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_24 _qv_25)=(plus _qv_25 _qv_24)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate zero (rotate (succ zero) _v_34)))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34)))))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_26 _qv_27) _qv_28)=(plus _qv_26 (plus _qv_27 _qv_28))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate zero (rotate (succ zero) _v_34)))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34)))))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_29)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate zero (rotate (succ zero) _v_34)))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34)))))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_30))=(nat-to-int _qv_30)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate zero (rotate (succ zero) _v_34)))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34)))))))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_31))=(nat-to-int _qv_31)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate zero (rotate (succ zero) _v_34)))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34)))))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_32 _qv_33))=(plus (succ _qv_32) (succ _qv_33))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate zero (rotate (succ zero) _v_34)))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34)))))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_32 _qv_33))=(plus (succ _qv_33) (succ _qv_32))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate zero (rotate (succ zero) _v_34)))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34)))))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_18))=_qv_18))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate zero (rotate (succ zero) _v_34)))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34)))))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_19 _qv_20)=(append _qv_20 _qv_19)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate zero (rotate (succ zero) _v_34)))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34)))))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_21 _qv_22) _qv_23)=(append _qv_21 (append _qv_22 _qv_23))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate zero (rotate (succ zero) _v_34)))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34)))))))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_24 _qv_25)=(plus _qv_25 _qv_24)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate zero (rotate (succ zero) _v_34)))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34)))))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_26 _qv_27) _qv_28)=(plus _qv_26 (plus _qv_27 _qv_28))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate zero (rotate (succ zero) _v_34)))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34)))))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_29)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate zero (rotate (succ zero) _v_34)))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34)))))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_30))=(nat-to-int _qv_30)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate zero (rotate (succ zero) _v_34)))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34)))))))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_31))=(nat-to-int _qv_31)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate zero (rotate (succ zero) _v_34)))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34)))))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_32 _qv_33))=(plus (succ _qv_32) (succ _qv_33))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate zero (rotate (succ zero) _v_34)))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34)))))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_32 _qv_33))=(plus (succ _qv_33) (succ _qv_32))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate zero (rotate (succ zero) _v_34)))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34)))))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_18))=_qv_18))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate zero (rotate (succ zero) _v_34)))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34)))))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_19 _qv_20)=(append _qv_20 _qv_19)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate zero (rotate (succ zero) _v_34)))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34)))))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_21 _qv_22) _qv_23)=(append _qv_21 (append _qv_22 _qv_23))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate zero (rotate (succ zero) _v_34)))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34)))))))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_24 _qv_25)=(plus _qv_25 _qv_24)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate zero (rotate (succ zero) _v_34)))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34)))))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_26 _qv_27) _qv_28)=(plus _qv_26 (plus _qv_27 _qv_28))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate zero (rotate (succ zero) _v_34)))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34)))))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_29)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate zero (rotate (succ zero) _v_34)))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34)))))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_30))=(nat-to-int _qv_30)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate zero (rotate (succ zero) _v_34)))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34)))))))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_31))=(nat-to-int _qv_31)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate zero (rotate (succ zero) _v_34)))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34)))))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_32 _qv_33))=(plus (succ _qv_32) (succ _qv_33))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate zero (rotate (succ zero) _v_34)))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34)))))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_32 _qv_33))=(plus (succ _qv_33) (succ _qv_32))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate zero (rotate (succ zero) _v_34)))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34)))))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_18))=_qv_18))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate zero (rotate (succ zero) _v_34)))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34)))))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_19 _qv_20)=(append _qv_20 _qv_19)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate zero (rotate (succ zero) _v_34)))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34)))))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_21 _qv_22) _qv_23)=(append _qv_21 (append _qv_22 _qv_23))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate zero (rotate (succ zero) _v_34)))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34)))))))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_24 _qv_25)=(plus _qv_25 _qv_24)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate zero (rotate (succ zero) _v_34)))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34)))))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_26 _qv_27) _qv_28)=(plus _qv_26 (plus _qv_27 _qv_28))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate zero (rotate (succ zero) _v_34)))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34)))))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_29)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate zero (rotate (succ zero) _v_34)))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34)))))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_30))=(nat-to-int _qv_30)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate zero (rotate (succ zero) _v_34)))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34)))))))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_31))=(nat-to-int _qv_31)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate zero (rotate (succ zero) _v_34)))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34)))))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_32 _qv_33))=(plus (succ _qv_32) (succ _qv_33))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate zero (rotate (succ zero) _v_34)))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34)))))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_32 _qv_33))=(plus (succ _qv_33) (succ _qv_32))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate zero (rotate (succ zero) _v_34))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34)))))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_18))=_qv_18))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate zero (rotate (succ zero) _v_34))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34)))))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_19 _qv_20)=(append _qv_20 _qv_19)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate zero (rotate (succ zero) _v_34))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34)))))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_21 _qv_22) _qv_23)=(append _qv_21 (append _qv_22 _qv_23))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate zero (rotate (succ zero) _v_34))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34)))))))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_24 _qv_25)=(plus _qv_25 _qv_24)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate zero (rotate (succ zero) _v_34))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34)))))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_26 _qv_27) _qv_28)=(plus _qv_26 (plus _qv_27 _qv_28))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate zero (rotate (succ zero) _v_34))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34)))))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_29)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate zero (rotate (succ zero) _v_34))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34)))))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_30))=(nat-to-int _qv_30)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate zero (rotate (succ zero) _v_34))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34)))))))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_31))=(nat-to-int _qv_31)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate zero (rotate (succ zero) _v_34))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34)))))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_32 _qv_33))=(plus (succ _qv_32) (succ _qv_33))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate zero (rotate (succ zero) _v_34))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34)))))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_32 _qv_33))=(plus (succ _qv_33) (succ _qv_32))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate zero (rotate (succ zero) _v_34))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34))))))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_18))=_qv_18))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate zero (rotate (succ zero) _v_34))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34))))))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_19 _qv_20)=(append _qv_20 _qv_19)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate zero (rotate (succ zero) _v_34))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34))))))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_21 _qv_22) _qv_23)=(append _qv_21 (append _qv_22 _qv_23))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate zero (rotate (succ zero) _v_34))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34))))))))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_24 _qv_25)=(plus _qv_25 _qv_24)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate zero (rotate (succ zero) _v_34))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34))))))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_26 _qv_27) _qv_28)=(plus _qv_26 (plus _qv_27 _qv_28))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate zero (rotate (succ zero) _v_34))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34))))))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_29)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate zero (rotate (succ zero) _v_34))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34))))))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_30))=(nat-to-int _qv_30)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate zero (rotate (succ zero) _v_34))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34))))))))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_31))=(nat-to-int _qv_31)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate zero (rotate (succ zero) _v_34))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34))))))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_32 _qv_33))=(plus (succ _qv_32) (succ _qv_33))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate zero (rotate (succ zero) _v_34))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34))))))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_32 _qv_33))=(plus (succ _qv_33) (succ _qv_32))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate zero (rotate (succ zero) _v_34))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34))))))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_18))=_qv_18))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate zero (rotate (succ zero) _v_34))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34))))))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_19 _qv_20)=(append _qv_20 _qv_19)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate zero (rotate (succ zero) _v_34))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34))))))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_21 _qv_22) _qv_23)=(append _qv_21 (append _qv_22 _qv_23))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate zero (rotate (succ zero) _v_34))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34))))))))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_24 _qv_25)=(plus _qv_25 _qv_24)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate zero (rotate (succ zero) _v_34))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34))))))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_26 _qv_27) _qv_28)=(plus _qv_26 (plus _qv_27 _qv_28))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate zero (rotate (succ zero) _v_34))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34))))))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_29)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate zero (rotate (succ zero) _v_34))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34))))))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_30))=(nat-to-int _qv_30)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate zero (rotate (succ zero) _v_34))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34))))))))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_31))=(nat-to-int _qv_31)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate zero (rotate (succ zero) _v_34))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34))))))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_32 _qv_33))=(plus (succ _qv_32) (succ _qv_33))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate zero (rotate (succ zero) _v_34))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34))))))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_32 _qv_33))=(plus (succ _qv_33) (succ _qv_32))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate zero (rotate (succ zero) _v_34))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34))))))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_18))=_qv_18))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate zero (rotate (succ zero) _v_34))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34))))))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_19 _qv_20)=(append _qv_20 _qv_19)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate zero (rotate (succ zero) _v_34))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34))))))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_21 _qv_22) _qv_23)=(append _qv_21 (append _qv_22 _qv_23))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate zero (rotate (succ zero) _v_34))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34))))))))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_24 _qv_25)=(plus _qv_25 _qv_24)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate zero (rotate (succ zero) _v_34))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34))))))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_26 _qv_27) _qv_28)=(plus _qv_26 (plus _qv_27 _qv_28))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate zero (rotate (succ zero) _v_34))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34))))))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_29)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate zero (rotate (succ zero) _v_34))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34))))))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_30))=(nat-to-int _qv_30)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate zero (rotate (succ zero) _v_34))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34))))))))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_31))=(nat-to-int _qv_31)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate zero (rotate (succ zero) _v_34))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34))))))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_32 _qv_33))=(plus (succ _qv_32) (succ _qv_33))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate zero (rotate (succ zero) _v_34))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34))))))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_32 _qv_33))=(plus (succ _qv_33) (succ _qv_32))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate zero (rotate (succ zero) _v_34))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34))))))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_18))=_qv_18))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate zero (rotate (succ zero) _v_34))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34))))))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_19 _qv_20)=(append _qv_20 _qv_19)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate zero (rotate (succ zero) _v_34))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34))))))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_21 _qv_22) _qv_23)=(append _qv_21 (append _qv_22 _qv_23))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate zero (rotate (succ zero) _v_34))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34))))))))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_24 _qv_25)=(plus _qv_25 _qv_24)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate zero (rotate (succ zero) _v_34))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34))))))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_26 _qv_27) _qv_28)=(plus _qv_26 (plus _qv_27 _qv_28))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate zero (rotate (succ zero) _v_34))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34))))))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_29)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate zero (rotate (succ zero) _v_34))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34))))))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_30))=(nat-to-int _qv_30)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate zero (rotate (succ zero) _v_34))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34))))))))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_31))=(nat-to-int _qv_31)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate zero (rotate (succ zero) _v_34))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34))))))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_32 _qv_33))=(plus (succ _qv_32) (succ _qv_33))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate zero (rotate (succ zero) _v_34))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34))))))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_32 _qv_33))=(plus (succ _qv_33) (succ _qv_32))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate zero (rotate (succ zero) _v_34))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34)))))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_18))=_qv_18))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate zero (rotate (succ zero) _v_34))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34)))))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_19 _qv_20)=(append _qv_20 _qv_19)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate zero (rotate (succ zero) _v_34))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34)))))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_21 _qv_22) _qv_23)=(append _qv_21 (append _qv_22 _qv_23))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate zero (rotate (succ zero) _v_34))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34)))))))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_24 _qv_25)=(plus _qv_25 _qv_24)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate zero (rotate (succ zero) _v_34))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34)))))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_26 _qv_27) _qv_28)=(plus _qv_26 (plus _qv_27 _qv_28))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate zero (rotate (succ zero) _v_34))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34)))))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_29)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate zero (rotate (succ zero) _v_34))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34)))))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_30))=(nat-to-int _qv_30)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate zero (rotate (succ zero) _v_34))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34)))))))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_31))=(nat-to-int _qv_31)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate zero (rotate (succ zero) _v_34))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34)))))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_32 _qv_33))=(plus (succ _qv_32) (succ _qv_33))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate zero (rotate (succ zero) _v_34))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34)))))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_32 _qv_33))=(plus (succ _qv_33) (succ _qv_32))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate zero (rotate (succ zero) _v_34)))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34)))))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_18))=_qv_18))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate zero (rotate (succ zero) _v_34)))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34)))))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_19 _qv_20)=(append _qv_20 _qv_19)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate zero (rotate (succ zero) _v_34)))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34)))))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_21 _qv_22) _qv_23)=(append _qv_21 (append _qv_22 _qv_23))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate zero (rotate (succ zero) _v_34)))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34)))))))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_24 _qv_25)=(plus _qv_25 _qv_24)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate zero (rotate (succ zero) _v_34)))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34)))))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_26 _qv_27) _qv_28)=(plus _qv_26 (plus _qv_27 _qv_28))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate zero (rotate (succ zero) _v_34)))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34)))))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_29)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate zero (rotate (succ zero) _v_34)))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34)))))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_30))=(nat-to-int _qv_30)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate zero (rotate (succ zero) _v_34)))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34)))))))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_31))=(nat-to-int _qv_31)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate zero (rotate (succ zero) _v_34)))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34)))))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_32 _qv_33))=(plus (succ _qv_32) (succ _qv_33))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate zero (rotate (succ zero) _v_34)))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34)))))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_32 _qv_33))=(plus (succ _qv_33) (succ _qv_32))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate zero (rotate (succ zero) _v_34)))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34)))))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_18))=_qv_18))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate zero (rotate (succ zero) _v_34)))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34)))))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_19 _qv_20)=(append _qv_20 _qv_19)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate zero (rotate (succ zero) _v_34)))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34)))))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_21 _qv_22) _qv_23)=(append _qv_21 (append _qv_22 _qv_23))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate zero (rotate (succ zero) _v_34)))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34)))))))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_24 _qv_25)=(plus _qv_25 _qv_24)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate zero (rotate (succ zero) _v_34)))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34)))))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_26 _qv_27) _qv_28)=(plus _qv_26 (plus _qv_27 _qv_28))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate zero (rotate (succ zero) _v_34)))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34)))))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_29)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate zero (rotate (succ zero) _v_34)))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34)))))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_30))=(nat-to-int _qv_30)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate zero (rotate (succ zero) _v_34)))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34)))))))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_31))=(nat-to-int _qv_31)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate zero (rotate (succ zero) _v_34)))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34)))))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_32 _qv_33))=(plus (succ _qv_32) (succ _qv_33))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate zero (rotate (succ zero) _v_34)))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34)))))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_32 _qv_33))=(plus (succ _qv_33) (succ _qv_32))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate zero (rotate (succ zero) _v_34)))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34)))))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_18))=_qv_18))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate zero (rotate (succ zero) _v_34)))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34)))))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_19 _qv_20)=(append _qv_20 _qv_19)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate zero (rotate (succ zero) _v_34)))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34)))))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_21 _qv_22) _qv_23)=(append _qv_21 (append _qv_22 _qv_23))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate zero (rotate (succ zero) _v_34)))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34)))))))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_24 _qv_25)=(plus _qv_25 _qv_24)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate zero (rotate (succ zero) _v_34)))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34)))))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_26 _qv_27) _qv_28)=(plus _qv_26 (plus _qv_27 _qv_28))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate zero (rotate (succ zero) _v_34)))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34)))))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_29)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate zero (rotate (succ zero) _v_34)))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34)))))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_30))=(nat-to-int _qv_30)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate zero (rotate (succ zero) _v_34)))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34)))))))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_31))=(nat-to-int _qv_31)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate zero (rotate (succ zero) _v_34)))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34)))))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_32 _qv_33))=(plus (succ _qv_32) (succ _qv_33))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate zero (rotate (succ zero) _v_34)))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34)))))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_32 _qv_33))=(plus (succ _qv_33) (succ _qv_32))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate zero (rotate (succ zero) _v_34)))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34)))))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_18))=_qv_18))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate zero (rotate (succ zero) _v_34)))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34)))))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_19 _qv_20)=(append _qv_20 _qv_19)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate zero (rotate (succ zero) _v_34)))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34)))))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_21 _qv_22) _qv_23)=(append _qv_21 (append _qv_22 _qv_23))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate zero (rotate (succ zero) _v_34)))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34)))))))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_24 _qv_25)=(plus _qv_25 _qv_24)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate zero (rotate (succ zero) _v_34)))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34)))))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_26 _qv_27) _qv_28)=(plus _qv_26 (plus _qv_27 _qv_28))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate zero (rotate (succ zero) _v_34)))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34)))))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_29)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate zero (rotate (succ zero) _v_34)))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34)))))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_30))=(nat-to-int _qv_30)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate zero (rotate (succ zero) _v_34)))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34)))))))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_31))=(nat-to-int _qv_31)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate zero (rotate (succ zero) _v_34)))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34)))))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_32 _qv_33))=(plus (succ _qv_32) (succ _qv_33))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate zero (rotate (succ zero) _v_34)))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34)))))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_32 _qv_33))=(plus (succ _qv_33) (succ _qv_32))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate zero (rotate (succ zero) _v_34))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34)))))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_18))=_qv_18))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate zero (rotate (succ zero) _v_34))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34)))))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_19 _qv_20)=(append _qv_20 _qv_19)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate zero (rotate (succ zero) _v_34))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34)))))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_21 _qv_22) _qv_23)=(append _qv_21 (append _qv_22 _qv_23))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate zero (rotate (succ zero) _v_34))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34)))))))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_24 _qv_25)=(plus _qv_25 _qv_24)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate zero (rotate (succ zero) _v_34))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34)))))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_26 _qv_27) _qv_28)=(plus _qv_26 (plus _qv_27 _qv_28))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate zero (rotate (succ zero) _v_34))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34)))))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_29)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate zero (rotate (succ zero) _v_34))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34)))))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_30))=(nat-to-int _qv_30)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate zero (rotate (succ zero) _v_34))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34)))))))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_31))=(nat-to-int _qv_31)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate zero (rotate (succ zero) _v_34))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34)))))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_32 _qv_33))=(plus (succ _qv_32) (succ _qv_33))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate zero (rotate (succ zero) _v_34))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34)))))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_32 _qv_33))=(plus (succ _qv_33) (succ _qv_32))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate zero (rotate (succ zero) _v_34))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34))))))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_18))=_qv_18))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate zero (rotate (succ zero) _v_34))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34))))))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_19 _qv_20)=(append _qv_20 _qv_19)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate zero (rotate (succ zero) _v_34))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34))))))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_21 _qv_22) _qv_23)=(append _qv_21 (append _qv_22 _qv_23))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate zero (rotate (succ zero) _v_34))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34))))))))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_24 _qv_25)=(plus _qv_25 _qv_24)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate zero (rotate (succ zero) _v_34))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34))))))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_26 _qv_27) _qv_28)=(plus _qv_26 (plus _qv_27 _qv_28))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate zero (rotate (succ zero) _v_34))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34))))))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_29)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate zero (rotate (succ zero) _v_34))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34))))))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_30))=(nat-to-int _qv_30)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate zero (rotate (succ zero) _v_34))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34))))))))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_31))=(nat-to-int _qv_31)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate zero (rotate (succ zero) _v_34))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34))))))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_32 _qv_33))=(plus (succ _qv_32) (succ _qv_33))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate zero (rotate (succ zero) _v_34))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34))))))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_32 _qv_33))=(plus (succ _qv_33) (succ _qv_32))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate zero (rotate (succ zero) _v_34))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34))))))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_18))=_qv_18))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate zero (rotate (succ zero) _v_34))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34))))))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_19 _qv_20)=(append _qv_20 _qv_19)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate zero (rotate (succ zero) _v_34))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34))))))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_21 _qv_22) _qv_23)=(append _qv_21 (append _qv_22 _qv_23))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate zero (rotate (succ zero) _v_34))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34))))))))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_24 _qv_25)=(plus _qv_25 _qv_24)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate zero (rotate (succ zero) _v_34))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34))))))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_26 _qv_27) _qv_28)=(plus _qv_26 (plus _qv_27 _qv_28))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate zero (rotate (succ zero) _v_34))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34))))))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_29)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate zero (rotate (succ zero) _v_34))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34))))))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_30))=(nat-to-int _qv_30)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate zero (rotate (succ zero) _v_34))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34))))))))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_31))=(nat-to-int _qv_31)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate zero (rotate (succ zero) _v_34))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34))))))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_32 _qv_33))=(plus (succ _qv_32) (succ _qv_33))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate zero (rotate (succ zero) _v_34))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34))))))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_32 _qv_33))=(plus (succ _qv_33) (succ _qv_32))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate zero (rotate (succ zero) _v_34))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34))))))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_18))=_qv_18))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate zero (rotate (succ zero) _v_34))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34))))))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_19 _qv_20)=(append _qv_20 _qv_19)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate zero (rotate (succ zero) _v_34))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34))))))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_21 _qv_22) _qv_23)=(append _qv_21 (append _qv_22 _qv_23))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate zero (rotate (succ zero) _v_34))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34))))))))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_24 _qv_25)=(plus _qv_25 _qv_24)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate zero (rotate (succ zero) _v_34))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34))))))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_26 _qv_27) _qv_28)=(plus _qv_26 (plus _qv_27 _qv_28))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate zero (rotate (succ zero) _v_34))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34))))))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_29)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate zero (rotate (succ zero) _v_34))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34))))))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_30))=(nat-to-int _qv_30)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate zero (rotate (succ zero) _v_34))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34))))))))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_31))=(nat-to-int _qv_31)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate zero (rotate (succ zero) _v_34))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34))))))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_32 _qv_33))=(plus (succ _qv_32) (succ _qv_33))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate zero (rotate (succ zero) _v_34))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34))))))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_32 _qv_33))=(plus (succ _qv_33) (succ _qv_32))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate zero (rotate (succ zero) _v_34))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34))))))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_18))=_qv_18))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate zero (rotate (succ zero) _v_34))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34))))))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_19 _qv_20)=(append _qv_20 _qv_19)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate zero (rotate (succ zero) _v_34))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34))))))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_21 _qv_22) _qv_23)=(append _qv_21 (append _qv_22 _qv_23))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate zero (rotate (succ zero) _v_34))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34))))))))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_24 _qv_25)=(plus _qv_25 _qv_24)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate zero (rotate (succ zero) _v_34))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34))))))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_26 _qv_27) _qv_28)=(plus _qv_26 (plus _qv_27 _qv_28))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate zero (rotate (succ zero) _v_34))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34))))))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_29)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate zero (rotate (succ zero) _v_34))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34))))))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_30))=(nat-to-int _qv_30)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate zero (rotate (succ zero) _v_34))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34))))))))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_31))=(nat-to-int _qv_31)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate zero (rotate (succ zero) _v_34))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34))))))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_32 _qv_33))=(plus (succ _qv_32) (succ _qv_33))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate zero (rotate (succ zero) _v_34))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34))))))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_32 _qv_33))=(plus (succ _qv_33) (succ _qv_32))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate zero (rotate (succ zero) _v_34))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34)))))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_18))=_qv_18))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate zero (rotate (succ zero) _v_34))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34)))))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_19 _qv_20)=(append _qv_20 _qv_19)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate zero (rotate (succ zero) _v_34))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34)))))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_21 _qv_22) _qv_23)=(append _qv_21 (append _qv_22 _qv_23))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate zero (rotate (succ zero) _v_34))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34)))))))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_24 _qv_25)=(plus _qv_25 _qv_24)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate zero (rotate (succ zero) _v_34))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34)))))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_26 _qv_27) _qv_28)=(plus _qv_26 (plus _qv_27 _qv_28))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate zero (rotate (succ zero) _v_34))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34)))))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_29)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate zero (rotate (succ zero) _v_34))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34)))))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_30))=(nat-to-int _qv_30)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate zero (rotate (succ zero) _v_34))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34)))))))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_31))=(nat-to-int _qv_31)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate zero (rotate (succ zero) _v_34))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34)))))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_32 _qv_33))=(plus (succ _qv_32) (succ _qv_33))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate zero (rotate (succ zero) _v_34))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34)))))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_32 _qv_33))=(plus (succ _qv_33) (succ _qv_32))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate zero (rotate (succ zero) _v_34))))=(nat-to-int (len (rotate _t_17 (rotate zero (rotate zero _v_34))))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_18))=_qv_18))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate zero (rotate (succ zero) _v_34))))=(nat-to-int (len (rotate _t_17 (rotate zero (rotate zero _v_34))))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_19 _qv_20)=(append _qv_20 _qv_19)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate zero (rotate (succ zero) _v_34))))=(nat-to-int (len (rotate _t_17 (rotate zero (rotate zero _v_34))))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_21 _qv_22) _qv_23)=(append _qv_21 (append _qv_22 _qv_23))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate zero (rotate (succ zero) _v_34))))=(nat-to-int (len (rotate _t_17 (rotate zero (rotate zero _v_34))))))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_24 _qv_25)=(plus _qv_25 _qv_24)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate zero (rotate (succ zero) _v_34))))=(nat-to-int (len (rotate _t_17 (rotate zero (rotate zero _v_34))))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_26 _qv_27) _qv_28)=(plus _qv_26 (plus _qv_27 _qv_28))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate zero (rotate (succ zero) _v_34))))=(nat-to-int (len (rotate _t_17 (rotate zero (rotate zero _v_34))))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_29)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate zero (rotate (succ zero) _v_34))))=(nat-to-int (len (rotate _t_17 (rotate zero (rotate zero _v_34))))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_30))=(nat-to-int _qv_30)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate zero (rotate (succ zero) _v_34))))=(nat-to-int (len (rotate _t_17 (rotate zero (rotate zero _v_34))))))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_31))=(nat-to-int _qv_31)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate zero (rotate (succ zero) _v_34))))=(nat-to-int (len (rotate _t_17 (rotate zero (rotate zero _v_34))))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_32 _qv_33))=(plus (succ _qv_32) (succ _qv_33))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate zero (rotate (succ zero) _v_34))))=(nat-to-int (len (rotate _t_17 (rotate zero (rotate zero _v_34))))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_32 _qv_33))=(plus (succ _qv_33) (succ _qv_32))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate zero (rotate (succ zero) _v_34)))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34)))))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_18))=_qv_18))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate zero (rotate (succ zero) _v_34)))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34)))))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_19 _qv_20)=(append _qv_20 _qv_19)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate zero (rotate (succ zero) _v_34)))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34)))))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_21 _qv_22) _qv_23)=(append _qv_21 (append _qv_22 _qv_23))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate zero (rotate (succ zero) _v_34)))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34)))))))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_24 _qv_25)=(plus _qv_25 _qv_24)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate zero (rotate (succ zero) _v_34)))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34)))))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_26 _qv_27) _qv_28)=(plus _qv_26 (plus _qv_27 _qv_28))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate zero (rotate (succ zero) _v_34)))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34)))))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_29)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate zero (rotate (succ zero) _v_34)))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34)))))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_30))=(nat-to-int _qv_30)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate zero (rotate (succ zero) _v_34)))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34)))))))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_31))=(nat-to-int _qv_31)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate zero (rotate (succ zero) _v_34)))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34)))))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_32 _qv_33))=(plus (succ _qv_32) (succ _qv_33))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate zero (rotate (succ zero) _v_34)))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34)))))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_32 _qv_33))=(plus (succ _qv_33) (succ _qv_32))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate zero (rotate (succ zero) _v_34)))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34)))))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_18))=_qv_18))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate zero (rotate (succ zero) _v_34)))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34)))))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_19 _qv_20)=(append _qv_20 _qv_19)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate zero (rotate (succ zero) _v_34)))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34)))))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_21 _qv_22) _qv_23)=(append _qv_21 (append _qv_22 _qv_23))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate zero (rotate (succ zero) _v_34)))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34)))))))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_24 _qv_25)=(plus _qv_25 _qv_24)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate zero (rotate (succ zero) _v_34)))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34)))))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_26 _qv_27) _qv_28)=(plus _qv_26 (plus _qv_27 _qv_28))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate zero (rotate (succ zero) _v_34)))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34)))))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_29)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate zero (rotate (succ zero) _v_34)))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34)))))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_30))=(nat-to-int _qv_30)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate zero (rotate (succ zero) _v_34)))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34)))))))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_31))=(nat-to-int _qv_31)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate zero (rotate (succ zero) _v_34)))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34)))))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_32 _qv_33))=(plus (succ _qv_32) (succ _qv_33))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate zero (rotate (succ zero) _v_34)))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34)))))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_32 _qv_33))=(plus (succ _qv_33) (succ _qv_32))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate zero (rotate (succ zero) _v_34)))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34)))))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_18))=_qv_18))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate zero (rotate (succ zero) _v_34)))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34)))))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_19 _qv_20)=(append _qv_20 _qv_19)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate zero (rotate (succ zero) _v_34)))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34)))))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_21 _qv_22) _qv_23)=(append _qv_21 (append _qv_22 _qv_23))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate zero (rotate (succ zero) _v_34)))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34)))))))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_24 _qv_25)=(plus _qv_25 _qv_24)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate zero (rotate (succ zero) _v_34)))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34)))))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_26 _qv_27) _qv_28)=(plus _qv_26 (plus _qv_27 _qv_28))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate zero (rotate (succ zero) _v_34)))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34)))))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_29)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate zero (rotate (succ zero) _v_34)))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34)))))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_30))=(nat-to-int _qv_30)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate zero (rotate (succ zero) _v_34)))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34)))))))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_31))=(nat-to-int _qv_31)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate zero (rotate (succ zero) _v_34)))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34)))))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_32 _qv_33))=(plus (succ _qv_32) (succ _qv_33))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate zero (rotate (succ zero) _v_34)))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34)))))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_32 _qv_33))=(plus (succ _qv_33) (succ _qv_32))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate zero (rotate (succ zero) _v_34)))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34)))))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_18))=_qv_18))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate zero (rotate (succ zero) _v_34)))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34)))))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_19 _qv_20)=(append _qv_20 _qv_19)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate zero (rotate (succ zero) _v_34)))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34)))))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_21 _qv_22) _qv_23)=(append _qv_21 (append _qv_22 _qv_23))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate zero (rotate (succ zero) _v_34)))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34)))))))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_24 _qv_25)=(plus _qv_25 _qv_24)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate zero (rotate (succ zero) _v_34)))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34)))))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_26 _qv_27) _qv_28)=(plus _qv_26 (plus _qv_27 _qv_28))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate zero (rotate (succ zero) _v_34)))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34)))))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_29)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate zero (rotate (succ zero) _v_34)))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34)))))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_30))=(nat-to-int _qv_30)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate zero (rotate (succ zero) _v_34)))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34)))))))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_31))=(nat-to-int _qv_31)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate zero (rotate (succ zero) _v_34)))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34)))))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_32 _qv_33))=(plus (succ _qv_32) (succ _qv_33))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate zero (rotate (succ zero) _v_34)))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34)))))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_32 _qv_33))=(plus (succ _qv_33) (succ _qv_32))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate zero (rotate (succ zero) _v_34))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34)))))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_18))=_qv_18))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate zero (rotate (succ zero) _v_34))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34)))))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_19 _qv_20)=(append _qv_20 _qv_19)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate zero (rotate (succ zero) _v_34))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34)))))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_21 _qv_22) _qv_23)=(append _qv_21 (append _qv_22 _qv_23))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate zero (rotate (succ zero) _v_34))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34)))))))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_24 _qv_25)=(plus _qv_25 _qv_24)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate zero (rotate (succ zero) _v_34))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34)))))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_26 _qv_27) _qv_28)=(plus _qv_26 (plus _qv_27 _qv_28))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate zero (rotate (succ zero) _v_34))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34)))))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_29)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate zero (rotate (succ zero) _v_34))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34)))))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_30))=(nat-to-int _qv_30)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate zero (rotate (succ zero) _v_34))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34)))))))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_31))=(nat-to-int _qv_31)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate zero (rotate (succ zero) _v_34))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34)))))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_32 _qv_33))=(plus (succ _qv_32) (succ _qv_33))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate zero (rotate (succ zero) _v_34))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34)))))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_32 _qv_33))=(plus (succ _qv_33) (succ _qv_32))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate zero (rotate (succ zero) _v_34))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34))))))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_18))=_qv_18))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate zero (rotate (succ zero) _v_34))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34))))))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_19 _qv_20)=(append _qv_20 _qv_19)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate zero (rotate (succ zero) _v_34))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34))))))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_21 _qv_22) _qv_23)=(append _qv_21 (append _qv_22 _qv_23))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate zero (rotate (succ zero) _v_34))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34))))))))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_24 _qv_25)=(plus _qv_25 _qv_24)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate zero (rotate (succ zero) _v_34))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34))))))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_26 _qv_27) _qv_28)=(plus _qv_26 (plus _qv_27 _qv_28))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate zero (rotate (succ zero) _v_34))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34))))))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_29)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate zero (rotate (succ zero) _v_34))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34))))))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_30))=(nat-to-int _qv_30)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate zero (rotate (succ zero) _v_34))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34))))))))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_31))=(nat-to-int _qv_31)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate zero (rotate (succ zero) _v_34))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34))))))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_32 _qv_33))=(plus (succ _qv_32) (succ _qv_33))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate zero (rotate (succ zero) _v_34))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34))))))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_32 _qv_33))=(plus (succ _qv_33) (succ _qv_32))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate zero (rotate (succ zero) _v_34))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34))))))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_18))=_qv_18))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate zero (rotate (succ zero) _v_34))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34))))))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_19 _qv_20)=(append _qv_20 _qv_19)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate zero (rotate (succ zero) _v_34))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34))))))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_21 _qv_22) _qv_23)=(append _qv_21 (append _qv_22 _qv_23))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate zero (rotate (succ zero) _v_34))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34))))))))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_24 _qv_25)=(plus _qv_25 _qv_24)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate zero (rotate (succ zero) _v_34))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34))))))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_26 _qv_27) _qv_28)=(plus _qv_26 (plus _qv_27 _qv_28))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate zero (rotate (succ zero) _v_34))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34))))))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_29)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate zero (rotate (succ zero) _v_34))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34))))))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_30))=(nat-to-int _qv_30)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate zero (rotate (succ zero) _v_34))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34))))))))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_31))=(nat-to-int _qv_31)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate zero (rotate (succ zero) _v_34))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34))))))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_32 _qv_33))=(plus (succ _qv_32) (succ _qv_33))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate zero (rotate (succ zero) _v_34))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34))))))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_32 _qv_33))=(plus (succ _qv_33) (succ _qv_32))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate zero (rotate (succ zero) _v_34))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34))))))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_18))=_qv_18))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate zero (rotate (succ zero) _v_34))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34))))))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_19 _qv_20)=(append _qv_20 _qv_19)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate zero (rotate (succ zero) _v_34))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34))))))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_21 _qv_22) _qv_23)=(append _qv_21 (append _qv_22 _qv_23))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate zero (rotate (succ zero) _v_34))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34))))))))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_24 _qv_25)=(plus _qv_25 _qv_24)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate zero (rotate (succ zero) _v_34))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34))))))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_26 _qv_27) _qv_28)=(plus _qv_26 (plus _qv_27 _qv_28))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate zero (rotate (succ zero) _v_34))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34))))))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_29)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate zero (rotate (succ zero) _v_34))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34))))))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_30))=(nat-to-int _qv_30)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate zero (rotate (succ zero) _v_34))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34))))))))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_31))=(nat-to-int _qv_31)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate zero (rotate (succ zero) _v_34))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34))))))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_32 _qv_33))=(plus (succ _qv_32) (succ _qv_33))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate zero (rotate (succ zero) _v_34))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34))))))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_32 _qv_33))=(plus (succ _qv_33) (succ _qv_32))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate zero (rotate (succ zero) _v_34))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34))))))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_18))=_qv_18))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate zero (rotate (succ zero) _v_34))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34))))))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_19 _qv_20)=(append _qv_20 _qv_19)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate zero (rotate (succ zero) _v_34))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34))))))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_21 _qv_22) _qv_23)=(append _qv_21 (append _qv_22 _qv_23))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate zero (rotate (succ zero) _v_34))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34))))))))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_24 _qv_25)=(plus _qv_25 _qv_24)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate zero (rotate (succ zero) _v_34))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34))))))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_26 _qv_27) _qv_28)=(plus _qv_26 (plus _qv_27 _qv_28))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate zero (rotate (succ zero) _v_34))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34))))))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_29)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate zero (rotate (succ zero) _v_34))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34))))))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_30))=(nat-to-int _qv_30)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate zero (rotate (succ zero) _v_34))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34))))))))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_31))=(nat-to-int _qv_31)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate zero (rotate (succ zero) _v_34))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34))))))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_32 _qv_33))=(plus (succ _qv_32) (succ _qv_33))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate zero (rotate (succ zero) _v_34))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34))))))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_32 _qv_33))=(plus (succ _qv_33) (succ _qv_32))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate zero (rotate (succ zero) _v_34))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34)))))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_18))=_qv_18))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate zero (rotate (succ zero) _v_34))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34)))))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_19 _qv_20)=(append _qv_20 _qv_19)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate zero (rotate (succ zero) _v_34))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34)))))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_21 _qv_22) _qv_23)=(append _qv_21 (append _qv_22 _qv_23))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate zero (rotate (succ zero) _v_34))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34)))))))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_24 _qv_25)=(plus _qv_25 _qv_24)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate zero (rotate (succ zero) _v_34))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34)))))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_26 _qv_27) _qv_28)=(plus _qv_26 (plus _qv_27 _qv_28))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate zero (rotate (succ zero) _v_34))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34)))))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_29)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate zero (rotate (succ zero) _v_34))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34)))))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_30))=(nat-to-int _qv_30)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate zero (rotate (succ zero) _v_34))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34)))))))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_31))=(nat-to-int _qv_31)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate zero (rotate (succ zero) _v_34))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34)))))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_32 _qv_33))=(plus (succ _qv_32) (succ _qv_33))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate zero (rotate (succ zero) _v_34))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34)))))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_32 _qv_33))=(plus (succ _qv_33) (succ _qv_32))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate zero (rotate (succ zero) _v_34)))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34)))))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_18))=_qv_18))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate zero (rotate (succ zero) _v_34)))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34)))))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_19 _qv_20)=(append _qv_20 _qv_19)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate zero (rotate (succ zero) _v_34)))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34)))))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_21 _qv_22) _qv_23)=(append _qv_21 (append _qv_22 _qv_23))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate zero (rotate (succ zero) _v_34)))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34)))))))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_24 _qv_25)=(plus _qv_25 _qv_24)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate zero (rotate (succ zero) _v_34)))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34)))))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_26 _qv_27) _qv_28)=(plus _qv_26 (plus _qv_27 _qv_28))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate zero (rotate (succ zero) _v_34)))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34)))))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_29)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate zero (rotate (succ zero) _v_34)))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34)))))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_30))=(nat-to-int _qv_30)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate zero (rotate (succ zero) _v_34)))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34)))))))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_31))=(nat-to-int _qv_31)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate zero (rotate (succ zero) _v_34)))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34)))))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_32 _qv_33))=(plus (succ _qv_32) (succ _qv_33))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate zero (rotate (succ zero) _v_34)))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34)))))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_32 _qv_33))=(plus (succ _qv_33) (succ _qv_32))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate zero (rotate (succ zero) _v_34)))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34)))))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_18))=_qv_18))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate zero (rotate (succ zero) _v_34)))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34)))))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_19 _qv_20)=(append _qv_20 _qv_19)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate zero (rotate (succ zero) _v_34)))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34)))))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_21 _qv_22) _qv_23)=(append _qv_21 (append _qv_22 _qv_23))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate zero (rotate (succ zero) _v_34)))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34)))))))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_24 _qv_25)=(plus _qv_25 _qv_24)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate zero (rotate (succ zero) _v_34)))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34)))))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_26 _qv_27) _qv_28)=(plus _qv_26 (plus _qv_27 _qv_28))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate zero (rotate (succ zero) _v_34)))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34)))))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_29)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate zero (rotate (succ zero) _v_34)))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34)))))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_30))=(nat-to-int _qv_30)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate zero (rotate (succ zero) _v_34)))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34)))))))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_31))=(nat-to-int _qv_31)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate zero (rotate (succ zero) _v_34)))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34)))))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_32 _qv_33))=(plus (succ _qv_32) (succ _qv_33))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate zero (rotate (succ zero) _v_34)))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34)))))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_32 _qv_33))=(plus (succ _qv_33) (succ _qv_32))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate zero (rotate (succ zero) _v_34)))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34)))))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_18))=_qv_18))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate zero (rotate (succ zero) _v_34)))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34)))))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_19 _qv_20)=(append _qv_20 _qv_19)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate zero (rotate (succ zero) _v_34)))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34)))))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_21 _qv_22) _qv_23)=(append _qv_21 (append _qv_22 _qv_23))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate zero (rotate (succ zero) _v_34)))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34)))))))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_24 _qv_25)=(plus _qv_25 _qv_24)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate zero (rotate (succ zero) _v_34)))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34)))))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_26 _qv_27) _qv_28)=(plus _qv_26 (plus _qv_27 _qv_28))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate zero (rotate (succ zero) _v_34)))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34)))))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_29)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate zero (rotate (succ zero) _v_34)))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34)))))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_30))=(nat-to-int _qv_30)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate zero (rotate (succ zero) _v_34)))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34)))))))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_31))=(nat-to-int _qv_31)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate zero (rotate (succ zero) _v_34)))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34)))))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_32 _qv_33))=(plus (succ _qv_32) (succ _qv_33))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate zero (rotate (succ zero) _v_34)))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34)))))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_32 _qv_33))=(plus (succ _qv_33) (succ _qv_32))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate zero (rotate (succ zero) _v_34)))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34)))))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_18))=_qv_18))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate zero (rotate (succ zero) _v_34)))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34)))))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_19 _qv_20)=(append _qv_20 _qv_19)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate zero (rotate (succ zero) _v_34)))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34)))))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_21 _qv_22) _qv_23)=(append _qv_21 (append _qv_22 _qv_23))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate zero (rotate (succ zero) _v_34)))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34)))))))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_24 _qv_25)=(plus _qv_25 _qv_24)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate zero (rotate (succ zero) _v_34)))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34)))))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_26 _qv_27) _qv_28)=(plus _qv_26 (plus _qv_27 _qv_28))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate zero (rotate (succ zero) _v_34)))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34)))))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_29)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate zero (rotate (succ zero) _v_34)))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34)))))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_30))=(nat-to-int _qv_30)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate zero (rotate (succ zero) _v_34)))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34)))))))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_31))=(nat-to-int _qv_31)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate zero (rotate (succ zero) _v_34)))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34)))))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_32 _qv_33))=(plus (succ _qv_32) (succ _qv_33))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate zero (rotate (succ zero) _v_34)))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34)))))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_32 _qv_33))=(plus (succ _qv_33) (succ _qv_32))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate zero (rotate (succ zero) _v_34))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34)))))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_18))=_qv_18))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate zero (rotate (succ zero) _v_34))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34)))))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_19 _qv_20)=(append _qv_20 _qv_19)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate zero (rotate (succ zero) _v_34))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34)))))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_21 _qv_22) _qv_23)=(append _qv_21 (append _qv_22 _qv_23))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate zero (rotate (succ zero) _v_34))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34)))))))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_24 _qv_25)=(plus _qv_25 _qv_24)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate zero (rotate (succ zero) _v_34))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34)))))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_26 _qv_27) _qv_28)=(plus _qv_26 (plus _qv_27 _qv_28))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate zero (rotate (succ zero) _v_34))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34)))))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_29)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate zero (rotate (succ zero) _v_34))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34)))))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_30))=(nat-to-int _qv_30)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate zero (rotate (succ zero) _v_34))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34)))))))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_31))=(nat-to-int _qv_31)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate zero (rotate (succ zero) _v_34))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34)))))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_32 _qv_33))=(plus (succ _qv_32) (succ _qv_33))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate zero (rotate (succ zero) _v_34))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34)))))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_32 _qv_33))=(plus (succ _qv_33) (succ _qv_32))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate zero (rotate (succ zero) _v_34))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34))))))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_18))=_qv_18))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate zero (rotate (succ zero) _v_34))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34))))))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_19 _qv_20)=(append _qv_20 _qv_19)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate zero (rotate (succ zero) _v_34))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34))))))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_21 _qv_22) _qv_23)=(append _qv_21 (append _qv_22 _qv_23))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate zero (rotate (succ zero) _v_34))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34))))))))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_24 _qv_25)=(plus _qv_25 _qv_24)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate zero (rotate (succ zero) _v_34))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34))))))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_26 _qv_27) _qv_28)=(plus _qv_26 (plus _qv_27 _qv_28))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate zero (rotate (succ zero) _v_34))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34))))))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_29)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate zero (rotate (succ zero) _v_34))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34))))))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_30))=(nat-to-int _qv_30)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate zero (rotate (succ zero) _v_34))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34))))))))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_31))=(nat-to-int _qv_31)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate zero (rotate (succ zero) _v_34))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34))))))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_32 _qv_33))=(plus (succ _qv_32) (succ _qv_33))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate zero (rotate (succ zero) _v_34))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34))))))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_32 _qv_33))=(plus (succ _qv_33) (succ _qv_32))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate zero (rotate (succ zero) _v_34))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34))))))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_18))=_qv_18))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate zero (rotate (succ zero) _v_34))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34))))))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_19 _qv_20)=(append _qv_20 _qv_19)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate zero (rotate (succ zero) _v_34))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34))))))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_21 _qv_22) _qv_23)=(append _qv_21 (append _qv_22 _qv_23))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate zero (rotate (succ zero) _v_34))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34))))))))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_24 _qv_25)=(plus _qv_25 _qv_24)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate zero (rotate (succ zero) _v_34))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34))))))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_26 _qv_27) _qv_28)=(plus _qv_26 (plus _qv_27 _qv_28))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate zero (rotate (succ zero) _v_34))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34))))))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_29)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate zero (rotate (succ zero) _v_34))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34))))))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_30))=(nat-to-int _qv_30)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate zero (rotate (succ zero) _v_34))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34))))))))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_31))=(nat-to-int _qv_31)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate zero (rotate (succ zero) _v_34))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34))))))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_32 _qv_33))=(plus (succ _qv_32) (succ _qv_33))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate zero (rotate (succ zero) _v_34))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34))))))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_32 _qv_33))=(plus (succ _qv_33) (succ _qv_32))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate zero (rotate (succ zero) _v_34))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34))))))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_18))=_qv_18))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate zero (rotate (succ zero) _v_34))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34))))))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_19 _qv_20)=(append _qv_20 _qv_19)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate zero (rotate (succ zero) _v_34))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34))))))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_21 _qv_22) _qv_23)=(append _qv_21 (append _qv_22 _qv_23))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate zero (rotate (succ zero) _v_34))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34))))))))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_24 _qv_25)=(plus _qv_25 _qv_24)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate zero (rotate (succ zero) _v_34))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34))))))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_26 _qv_27) _qv_28)=(plus _qv_26 (plus _qv_27 _qv_28))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate zero (rotate (succ zero) _v_34))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34))))))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_29)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate zero (rotate (succ zero) _v_34))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34))))))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_30))=(nat-to-int _qv_30)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate zero (rotate (succ zero) _v_34))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34))))))))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_31))=(nat-to-int _qv_31)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate zero (rotate (succ zero) _v_34))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34))))))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_32 _qv_33))=(plus (succ _qv_32) (succ _qv_33))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate zero (rotate (succ zero) _v_34))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34))))))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_32 _qv_33))=(plus (succ _qv_33) (succ _qv_32))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate zero (rotate (succ zero) _v_34))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34))))))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_18))=_qv_18))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate zero (rotate (succ zero) _v_34))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34))))))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_19 _qv_20)=(append _qv_20 _qv_19)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate zero (rotate (succ zero) _v_34))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34))))))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_21 _qv_22) _qv_23)=(append _qv_21 (append _qv_22 _qv_23))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate zero (rotate (succ zero) _v_34))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34))))))))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_24 _qv_25)=(plus _qv_25 _qv_24)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate zero (rotate (succ zero) _v_34))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34))))))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_26 _qv_27) _qv_28)=(plus _qv_26 (plus _qv_27 _qv_28))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate zero (rotate (succ zero) _v_34))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34))))))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_29)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate zero (rotate (succ zero) _v_34))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34))))))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_30))=(nat-to-int _qv_30)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate zero (rotate (succ zero) _v_34))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34))))))))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_31))=(nat-to-int _qv_31)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate zero (rotate (succ zero) _v_34))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34))))))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_32 _qv_33))=(plus (succ _qv_32) (succ _qv_33))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate zero (rotate (succ zero) _v_34))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34))))))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_32 _qv_33))=(plus (succ _qv_33) (succ _qv_32))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate zero (rotate (succ zero) _v_34))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34)))))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_18))=_qv_18))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate zero (rotate (succ zero) _v_34))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34)))))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_19 _qv_20)=(append _qv_20 _qv_19)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate zero (rotate (succ zero) _v_34))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34)))))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_21 _qv_22) _qv_23)=(append _qv_21 (append _qv_22 _qv_23))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate zero (rotate (succ zero) _v_34))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34)))))))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_24 _qv_25)=(plus _qv_25 _qv_24)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate zero (rotate (succ zero) _v_34))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34)))))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_26 _qv_27) _qv_28)=(plus _qv_26 (plus _qv_27 _qv_28))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate zero (rotate (succ zero) _v_34))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34)))))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_29)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate zero (rotate (succ zero) _v_34))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34)))))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_30))=(nat-to-int _qv_30)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate zero (rotate (succ zero) _v_34))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34)))))))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_31))=(nat-to-int _qv_31)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate zero (rotate (succ zero) _v_34))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34)))))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_32 _qv_33))=(plus (succ _qv_32) (succ _qv_33))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate zero (rotate (succ zero) _v_34))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34)))))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_32 _qv_33))=(plus (succ _qv_33) (succ _qv_32))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate zero (rotate (succ zero) _v_34))))=(nat-to-int (len (rotate _t_17 (rotate zero (rotate zero _v_34))))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_18))=_qv_18))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate zero (rotate (succ zero) _v_34))))=(nat-to-int (len (rotate _t_17 (rotate zero (rotate zero _v_34))))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_19 _qv_20)=(append _qv_20 _qv_19)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate zero (rotate (succ zero) _v_34))))=(nat-to-int (len (rotate _t_17 (rotate zero (rotate zero _v_34))))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_21 _qv_22) _qv_23)=(append _qv_21 (append _qv_22 _qv_23))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate zero (rotate (succ zero) _v_34))))=(nat-to-int (len (rotate _t_17 (rotate zero (rotate zero _v_34))))))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_24 _qv_25)=(plus _qv_25 _qv_24)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate zero (rotate (succ zero) _v_34))))=(nat-to-int (len (rotate _t_17 (rotate zero (rotate zero _v_34))))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_26 _qv_27) _qv_28)=(plus _qv_26 (plus _qv_27 _qv_28))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate zero (rotate (succ zero) _v_34))))=(nat-to-int (len (rotate _t_17 (rotate zero (rotate zero _v_34))))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_29)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate zero (rotate (succ zero) _v_34))))=(nat-to-int (len (rotate _t_17 (rotate zero (rotate zero _v_34))))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_30))=(nat-to-int _qv_30)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate zero (rotate (succ zero) _v_34))))=(nat-to-int (len (rotate _t_17 (rotate zero (rotate zero _v_34))))))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_31))=(nat-to-int _qv_31)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate zero (rotate (succ zero) _v_34))))=(nat-to-int (len (rotate _t_17 (rotate zero (rotate zero _v_34))))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_32 _qv_33))=(plus (succ _qv_32) (succ _qv_33))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate zero (rotate (succ zero) _v_34))))=(nat-to-int (len (rotate _t_17 (rotate zero (rotate zero _v_34))))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_32 _qv_33))=(plus (succ _qv_33) (succ _qv_32))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate zero (rotate (succ zero) _v_34)))))=(nat-to-int (len (rotate _t_17 (rotate zero (rotate zero _v_34))))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_18))=_qv_18))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate zero (rotate (succ zero) _v_34)))))=(nat-to-int (len (rotate _t_17 (rotate zero (rotate zero _v_34))))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_19 _qv_20)=(append _qv_20 _qv_19)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate zero (rotate (succ zero) _v_34)))))=(nat-to-int (len (rotate _t_17 (rotate zero (rotate zero _v_34))))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_21 _qv_22) _qv_23)=(append _qv_21 (append _qv_22 _qv_23))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate zero (rotate (succ zero) _v_34)))))=(nat-to-int (len (rotate _t_17 (rotate zero (rotate zero _v_34))))))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_24 _qv_25)=(plus _qv_25 _qv_24)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate zero (rotate (succ zero) _v_34)))))=(nat-to-int (len (rotate _t_17 (rotate zero (rotate zero _v_34))))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_26 _qv_27) _qv_28)=(plus _qv_26 (plus _qv_27 _qv_28))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate zero (rotate (succ zero) _v_34)))))=(nat-to-int (len (rotate _t_17 (rotate zero (rotate zero _v_34))))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_29)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate zero (rotate (succ zero) _v_34)))))=(nat-to-int (len (rotate _t_17 (rotate zero (rotate zero _v_34))))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_30))=(nat-to-int _qv_30)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate zero (rotate (succ zero) _v_34)))))=(nat-to-int (len (rotate _t_17 (rotate zero (rotate zero _v_34))))))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_31))=(nat-to-int _qv_31)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate zero (rotate (succ zero) _v_34)))))=(nat-to-int (len (rotate _t_17 (rotate zero (rotate zero _v_34))))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_32 _qv_33))=(plus (succ _qv_32) (succ _qv_33))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate zero (rotate (succ zero) _v_34)))))=(nat-to-int (len (rotate _t_17 (rotate zero (rotate zero _v_34))))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_32 _qv_33))=(plus (succ _qv_33) (succ _qv_32))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate zero (rotate (succ zero) _v_34)))))=(nat-to-int (len (rotate _t_17 (rotate zero (rotate zero _v_34))))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_18))=_qv_18))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate zero (rotate (succ zero) _v_34)))))=(nat-to-int (len (rotate _t_17 (rotate zero (rotate zero _v_34))))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_19 _qv_20)=(append _qv_20 _qv_19)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate zero (rotate (succ zero) _v_34)))))=(nat-to-int (len (rotate _t_17 (rotate zero (rotate zero _v_34))))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_21 _qv_22) _qv_23)=(append _qv_21 (append _qv_22 _qv_23))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate zero (rotate (succ zero) _v_34)))))=(nat-to-int (len (rotate _t_17 (rotate zero (rotate zero _v_34))))))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_24 _qv_25)=(plus _qv_25 _qv_24)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate zero (rotate (succ zero) _v_34)))))=(nat-to-int (len (rotate _t_17 (rotate zero (rotate zero _v_34))))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_26 _qv_27) _qv_28)=(plus _qv_26 (plus _qv_27 _qv_28))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate zero (rotate (succ zero) _v_34)))))=(nat-to-int (len (rotate _t_17 (rotate zero (rotate zero _v_34))))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_29)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate zero (rotate (succ zero) _v_34)))))=(nat-to-int (len (rotate _t_17 (rotate zero (rotate zero _v_34))))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_30))=(nat-to-int _qv_30)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate zero (rotate (succ zero) _v_34)))))=(nat-to-int (len (rotate _t_17 (rotate zero (rotate zero _v_34))))))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_31))=(nat-to-int _qv_31)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate zero (rotate (succ zero) _v_34)))))=(nat-to-int (len (rotate _t_17 (rotate zero (rotate zero _v_34))))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_32 _qv_33))=(plus (succ _qv_32) (succ _qv_33))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate zero (rotate (succ zero) _v_34)))))=(nat-to-int (len (rotate _t_17 (rotate zero (rotate zero _v_34))))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_32 _qv_33))=(plus (succ _qv_33) (succ _qv_32))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate zero (rotate (succ zero) _v_34)))))=(nat-to-int (len (rotate _t_17 (rotate zero (rotate zero _v_34))))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_18))=_qv_18))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate zero (rotate (succ zero) _v_34)))))=(nat-to-int (len (rotate _t_17 (rotate zero (rotate zero _v_34))))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_19 _qv_20)=(append _qv_20 _qv_19)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate zero (rotate (succ zero) _v_34)))))=(nat-to-int (len (rotate _t_17 (rotate zero (rotate zero _v_34))))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_21 _qv_22) _qv_23)=(append _qv_21 (append _qv_22 _qv_23))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate zero (rotate (succ zero) _v_34)))))=(nat-to-int (len (rotate _t_17 (rotate zero (rotate zero _v_34))))))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_24 _qv_25)=(plus _qv_25 _qv_24)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate zero (rotate (succ zero) _v_34)))))=(nat-to-int (len (rotate _t_17 (rotate zero (rotate zero _v_34))))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_26 _qv_27) _qv_28)=(plus _qv_26 (plus _qv_27 _qv_28))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate zero (rotate (succ zero) _v_34)))))=(nat-to-int (len (rotate _t_17 (rotate zero (rotate zero _v_34))))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_29)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate zero (rotate (succ zero) _v_34)))))=(nat-to-int (len (rotate _t_17 (rotate zero (rotate zero _v_34))))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_30))=(nat-to-int _qv_30)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate zero (rotate (succ zero) _v_34)))))=(nat-to-int (len (rotate _t_17 (rotate zero (rotate zero _v_34))))))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_31))=(nat-to-int _qv_31)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate zero (rotate (succ zero) _v_34)))))=(nat-to-int (len (rotate _t_17 (rotate zero (rotate zero _v_34))))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_32 _qv_33))=(plus (succ _qv_32) (succ _qv_33))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate zero (rotate (succ zero) _v_34)))))=(nat-to-int (len (rotate _t_17 (rotate zero (rotate zero _v_34))))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_32 _qv_33))=(plus (succ _qv_33) (succ _qv_32))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate zero (rotate (succ zero) _v_34)))))=(nat-to-int (len (rotate zero (rotate zero _v_34)))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_18))=_qv_18))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate zero (rotate (succ zero) _v_34)))))=(nat-to-int (len (rotate zero (rotate zero _v_34)))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_19 _qv_20)=(append _qv_20 _qv_19)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate zero (rotate (succ zero) _v_34)))))=(nat-to-int (len (rotate zero (rotate zero _v_34)))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_21 _qv_22) _qv_23)=(append _qv_21 (append _qv_22 _qv_23))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate zero (rotate (succ zero) _v_34)))))=(nat-to-int (len (rotate zero (rotate zero _v_34)))))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_24 _qv_25)=(plus _qv_25 _qv_24)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate zero (rotate (succ zero) _v_34)))))=(nat-to-int (len (rotate zero (rotate zero _v_34)))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_26 _qv_27) _qv_28)=(plus _qv_26 (plus _qv_27 _qv_28))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate zero (rotate (succ zero) _v_34)))))=(nat-to-int (len (rotate zero (rotate zero _v_34)))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_29)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate zero (rotate (succ zero) _v_34)))))=(nat-to-int (len (rotate zero (rotate zero _v_34)))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_30))=(nat-to-int _qv_30)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate zero (rotate (succ zero) _v_34)))))=(nat-to-int (len (rotate zero (rotate zero _v_34)))))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_31))=(nat-to-int _qv_31)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate zero (rotate (succ zero) _v_34)))))=(nat-to-int (len (rotate zero (rotate zero _v_34)))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_32 _qv_33))=(plus (succ _qv_32) (succ _qv_33))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate zero (rotate (succ zero) _v_34)))))=(nat-to-int (len (rotate zero (rotate zero _v_34)))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_32 _qv_33))=(plus (succ _qv_33) (succ _qv_32))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate zero (rotate (succ zero) _v_34))))))=(nat-to-int (len (rotate zero (rotate zero _v_34)))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_18))=_qv_18))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate zero (rotate (succ zero) _v_34))))))=(nat-to-int (len (rotate zero (rotate zero _v_34)))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_19 _qv_20)=(append _qv_20 _qv_19)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate zero (rotate (succ zero) _v_34))))))=(nat-to-int (len (rotate zero (rotate zero _v_34)))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_21 _qv_22) _qv_23)=(append _qv_21 (append _qv_22 _qv_23))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate zero (rotate (succ zero) _v_34))))))=(nat-to-int (len (rotate zero (rotate zero _v_34)))))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_24 _qv_25)=(plus _qv_25 _qv_24)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate zero (rotate (succ zero) _v_34))))))=(nat-to-int (len (rotate zero (rotate zero _v_34)))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_26 _qv_27) _qv_28)=(plus _qv_26 (plus _qv_27 _qv_28))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate zero (rotate (succ zero) _v_34))))))=(nat-to-int (len (rotate zero (rotate zero _v_34)))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_29)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate zero (rotate (succ zero) _v_34))))))=(nat-to-int (len (rotate zero (rotate zero _v_34)))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_30))=(nat-to-int _qv_30)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate zero (rotate (succ zero) _v_34))))))=(nat-to-int (len (rotate zero (rotate zero _v_34)))))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_31))=(nat-to-int _qv_31)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate zero (rotate (succ zero) _v_34))))))=(nat-to-int (len (rotate zero (rotate zero _v_34)))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_32 _qv_33))=(plus (succ _qv_32) (succ _qv_33))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate zero (rotate (succ zero) _v_34))))))=(nat-to-int (len (rotate zero (rotate zero _v_34)))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_32 _qv_33))=(plus (succ _qv_33) (succ _qv_32))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate zero (rotate (succ zero) _v_34))))))=(nat-to-int (len (rotate zero (rotate zero _v_34)))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_18))=_qv_18))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate zero (rotate (succ zero) _v_34))))))=(nat-to-int (len (rotate zero (rotate zero _v_34)))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_19 _qv_20)=(append _qv_20 _qv_19)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate zero (rotate (succ zero) _v_34))))))=(nat-to-int (len (rotate zero (rotate zero _v_34)))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_21 _qv_22) _qv_23)=(append _qv_21 (append _qv_22 _qv_23))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate zero (rotate (succ zero) _v_34))))))=(nat-to-int (len (rotate zero (rotate zero _v_34)))))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_24 _qv_25)=(plus _qv_25 _qv_24)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate zero (rotate (succ zero) _v_34))))))=(nat-to-int (len (rotate zero (rotate zero _v_34)))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_26 _qv_27) _qv_28)=(plus _qv_26 (plus _qv_27 _qv_28))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate zero (rotate (succ zero) _v_34))))))=(nat-to-int (len (rotate zero (rotate zero _v_34)))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_29)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate zero (rotate (succ zero) _v_34))))))=(nat-to-int (len (rotate zero (rotate zero _v_34)))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_30))=(nat-to-int _qv_30)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate zero (rotate (succ zero) _v_34))))))=(nat-to-int (len (rotate zero (rotate zero _v_34)))))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_31))=(nat-to-int _qv_31)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate zero (rotate (succ zero) _v_34))))))=(nat-to-int (len (rotate zero (rotate zero _v_34)))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_32 _qv_33))=(plus (succ _qv_32) (succ _qv_33))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate zero (rotate (succ zero) _v_34))))))=(nat-to-int (len (rotate zero (rotate zero _v_34)))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_32 _qv_33))=(plus (succ _qv_33) (succ _qv_32))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate zero (rotate (succ zero) _v_34))))))=(nat-to-int (len (rotate zero (rotate zero _v_34)))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_18))=_qv_18))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate zero (rotate (succ zero) _v_34))))))=(nat-to-int (len (rotate zero (rotate zero _v_34)))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_19 _qv_20)=(append _qv_20 _qv_19)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate zero (rotate (succ zero) _v_34))))))=(nat-to-int (len (rotate zero (rotate zero _v_34)))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_21 _qv_22) _qv_23)=(append _qv_21 (append _qv_22 _qv_23))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate zero (rotate (succ zero) _v_34))))))=(nat-to-int (len (rotate zero (rotate zero _v_34)))))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_24 _qv_25)=(plus _qv_25 _qv_24)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate zero (rotate (succ zero) _v_34))))))=(nat-to-int (len (rotate zero (rotate zero _v_34)))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_26 _qv_27) _qv_28)=(plus _qv_26 (plus _qv_27 _qv_28))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate zero (rotate (succ zero) _v_34))))))=(nat-to-int (len (rotate zero (rotate zero _v_34)))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_29)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate zero (rotate (succ zero) _v_34))))))=(nat-to-int (len (rotate zero (rotate zero _v_34)))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_30))=(nat-to-int _qv_30)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate zero (rotate (succ zero) _v_34))))))=(nat-to-int (len (rotate zero (rotate zero _v_34)))))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_31))=(nat-to-int _qv_31)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate zero (rotate (succ zero) _v_34))))))=(nat-to-int (len (rotate zero (rotate zero _v_34)))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_32 _qv_33))=(plus (succ _qv_32) (succ _qv_33))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate zero (rotate (succ zero) _v_34))))))=(nat-to-int (len (rotate zero (rotate zero _v_34)))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_32 _qv_33))=(plus (succ _qv_33) (succ _qv_32))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate zero (rotate (succ zero) _v_34))))))=(nat-to-int (len (rotate zero (rotate zero _v_34)))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_18))=_qv_18))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate zero (rotate (succ zero) _v_34))))))=(nat-to-int (len (rotate zero (rotate zero _v_34)))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_19 _qv_20)=(append _qv_20 _qv_19)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate zero (rotate (succ zero) _v_34))))))=(nat-to-int (len (rotate zero (rotate zero _v_34)))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_21 _qv_22) _qv_23)=(append _qv_21 (append _qv_22 _qv_23))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate zero (rotate (succ zero) _v_34))))))=(nat-to-int (len (rotate zero (rotate zero _v_34)))))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_24 _qv_25)=(plus _qv_25 _qv_24)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate zero (rotate (succ zero) _v_34))))))=(nat-to-int (len (rotate zero (rotate zero _v_34)))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_26 _qv_27) _qv_28)=(plus _qv_26 (plus _qv_27 _qv_28))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate zero (rotate (succ zero) _v_34))))))=(nat-to-int (len (rotate zero (rotate zero _v_34)))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_29)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate zero (rotate (succ zero) _v_34))))))=(nat-to-int (len (rotate zero (rotate zero _v_34)))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_30))=(nat-to-int _qv_30)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate zero (rotate (succ zero) _v_34))))))=(nat-to-int (len (rotate zero (rotate zero _v_34)))))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_31))=(nat-to-int _qv_31)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate zero (rotate (succ zero) _v_34))))))=(nat-to-int (len (rotate zero (rotate zero _v_34)))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_32 _qv_33))=(plus (succ _qv_32) (succ _qv_33))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate zero (rotate (succ zero) _v_34))))))=(nat-to-int (len (rotate zero (rotate zero _v_34)))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_32 _qv_33))=(plus (succ _qv_33) (succ _qv_32))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate zero (rotate (succ zero) _v_34)))))=(nat-to-int (len (rotate zero (rotate zero _v_34)))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_18))=_qv_18))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate zero (rotate (succ zero) _v_34)))))=(nat-to-int (len (rotate zero (rotate zero _v_34)))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_19 _qv_20)=(append _qv_20 _qv_19)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate zero (rotate (succ zero) _v_34)))))=(nat-to-int (len (rotate zero (rotate zero _v_34)))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_21 _qv_22) _qv_23)=(append _qv_21 (append _qv_22 _qv_23))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate zero (rotate (succ zero) _v_34)))))=(nat-to-int (len (rotate zero (rotate zero _v_34)))))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_24 _qv_25)=(plus _qv_25 _qv_24)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate zero (rotate (succ zero) _v_34)))))=(nat-to-int (len (rotate zero (rotate zero _v_34)))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_26 _qv_27) _qv_28)=(plus _qv_26 (plus _qv_27 _qv_28))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate zero (rotate (succ zero) _v_34)))))=(nat-to-int (len (rotate zero (rotate zero _v_34)))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_29)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate zero (rotate (succ zero) _v_34)))))=(nat-to-int (len (rotate zero (rotate zero _v_34)))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_30))=(nat-to-int _qv_30)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate zero (rotate (succ zero) _v_34)))))=(nat-to-int (len (rotate zero (rotate zero _v_34)))))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_31))=(nat-to-int _qv_31)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate zero (rotate (succ zero) _v_34)))))=(nat-to-int (len (rotate zero (rotate zero _v_34)))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_32 _qv_33))=(plus (succ _qv_32) (succ _qv_33))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate zero (rotate (succ zero) _v_34)))))=(nat-to-int (len (rotate zero (rotate zero _v_34)))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_32 _qv_33))=(plus (succ _qv_33) (succ _qv_32))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate zero (rotate (succ zero) _v_34)))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34)))))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_18))=_qv_18))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate zero (rotate (succ zero) _v_34)))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34)))))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_19 _qv_20)=(append _qv_20 _qv_19)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate zero (rotate (succ zero) _v_34)))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34)))))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_21 _qv_22) _qv_23)=(append _qv_21 (append _qv_22 _qv_23))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate zero (rotate (succ zero) _v_34)))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34)))))))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_24 _qv_25)=(plus _qv_25 _qv_24)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate zero (rotate (succ zero) _v_34)))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34)))))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_26 _qv_27) _qv_28)=(plus _qv_26 (plus _qv_27 _qv_28))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate zero (rotate (succ zero) _v_34)))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34)))))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_29)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate zero (rotate (succ zero) _v_34)))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34)))))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_30))=(nat-to-int _qv_30)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate zero (rotate (succ zero) _v_34)))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34)))))))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_31))=(nat-to-int _qv_31)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate zero (rotate (succ zero) _v_34)))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34)))))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_32 _qv_33))=(plus (succ _qv_32) (succ _qv_33))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate zero (rotate (succ zero) _v_34)))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34)))))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_32 _qv_33))=(plus (succ _qv_33) (succ _qv_32))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate zero (rotate (succ zero) _v_34)))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34)))))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_18))=_qv_18))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate zero (rotate (succ zero) _v_34)))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34)))))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_19 _qv_20)=(append _qv_20 _qv_19)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate zero (rotate (succ zero) _v_34)))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34)))))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_21 _qv_22) _qv_23)=(append _qv_21 (append _qv_22 _qv_23))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate zero (rotate (succ zero) _v_34)))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34)))))))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_24 _qv_25)=(plus _qv_25 _qv_24)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate zero (rotate (succ zero) _v_34)))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34)))))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_26 _qv_27) _qv_28)=(plus _qv_26 (plus _qv_27 _qv_28))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate zero (rotate (succ zero) _v_34)))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34)))))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_29)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate zero (rotate (succ zero) _v_34)))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34)))))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_30))=(nat-to-int _qv_30)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate zero (rotate (succ zero) _v_34)))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34)))))))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_31))=(nat-to-int _qv_31)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate zero (rotate (succ zero) _v_34)))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34)))))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_32 _qv_33))=(plus (succ _qv_32) (succ _qv_33))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate zero (rotate (succ zero) _v_34)))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34)))))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_32 _qv_33))=(plus (succ _qv_33) (succ _qv_32))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate zero (rotate (succ zero) _v_34)))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34)))))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_18))=_qv_18))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate zero (rotate (succ zero) _v_34)))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34)))))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_19 _qv_20)=(append _qv_20 _qv_19)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate zero (rotate (succ zero) _v_34)))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34)))))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_21 _qv_22) _qv_23)=(append _qv_21 (append _qv_22 _qv_23))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate zero (rotate (succ zero) _v_34)))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34)))))))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_24 _qv_25)=(plus _qv_25 _qv_24)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate zero (rotate (succ zero) _v_34)))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34)))))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_26 _qv_27) _qv_28)=(plus _qv_26 (plus _qv_27 _qv_28))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate zero (rotate (succ zero) _v_34)))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34)))))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_29)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate zero (rotate (succ zero) _v_34)))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34)))))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_30))=(nat-to-int _qv_30)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate zero (rotate (succ zero) _v_34)))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34)))))))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_31))=(nat-to-int _qv_31)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate zero (rotate (succ zero) _v_34)))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34)))))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_32 _qv_33))=(plus (succ _qv_32) (succ _qv_33))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate zero (rotate (succ zero) _v_34)))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34)))))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_32 _qv_33))=(plus (succ _qv_33) (succ _qv_32))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate zero (rotate (succ zero) _v_34)))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34)))))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_18))=_qv_18))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate zero (rotate (succ zero) _v_34)))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34)))))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_19 _qv_20)=(append _qv_20 _qv_19)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate zero (rotate (succ zero) _v_34)))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34)))))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_21 _qv_22) _qv_23)=(append _qv_21 (append _qv_22 _qv_23))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate zero (rotate (succ zero) _v_34)))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34)))))))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_24 _qv_25)=(plus _qv_25 _qv_24)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate zero (rotate (succ zero) _v_34)))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34)))))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_26 _qv_27) _qv_28)=(plus _qv_26 (plus _qv_27 _qv_28))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate zero (rotate (succ zero) _v_34)))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34)))))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_29)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate zero (rotate (succ zero) _v_34)))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34)))))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_30))=(nat-to-int _qv_30)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate zero (rotate (succ zero) _v_34)))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34)))))))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_31))=(nat-to-int _qv_31)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate zero (rotate (succ zero) _v_34)))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34)))))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_32 _qv_33))=(plus (succ _qv_32) (succ _qv_33))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate zero (rotate (succ zero) _v_34)))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34)))))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_32 _qv_33))=(plus (succ _qv_33) (succ _qv_32))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate zero (rotate (succ zero) _v_34))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34)))))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_18))=_qv_18))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate zero (rotate (succ zero) _v_34))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34)))))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_19 _qv_20)=(append _qv_20 _qv_19)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate zero (rotate (succ zero) _v_34))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34)))))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_21 _qv_22) _qv_23)=(append _qv_21 (append _qv_22 _qv_23))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate zero (rotate (succ zero) _v_34))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34)))))))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_24 _qv_25)=(plus _qv_25 _qv_24)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate zero (rotate (succ zero) _v_34))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34)))))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_26 _qv_27) _qv_28)=(plus _qv_26 (plus _qv_27 _qv_28))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate zero (rotate (succ zero) _v_34))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34)))))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_29)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate zero (rotate (succ zero) _v_34))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34)))))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_30))=(nat-to-int _qv_30)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate zero (rotate (succ zero) _v_34))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34)))))))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_31))=(nat-to-int _qv_31)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate zero (rotate (succ zero) _v_34))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34)))))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_32 _qv_33))=(plus (succ _qv_32) (succ _qv_33))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate zero (rotate (succ zero) _v_34))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34)))))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_32 _qv_33))=(plus (succ _qv_33) (succ _qv_32))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate zero (rotate (succ zero) _v_34))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34))))))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_18))=_qv_18))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate zero (rotate (succ zero) _v_34))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34))))))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_19 _qv_20)=(append _qv_20 _qv_19)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate zero (rotate (succ zero) _v_34))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34))))))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_21 _qv_22) _qv_23)=(append _qv_21 (append _qv_22 _qv_23))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate zero (rotate (succ zero) _v_34))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34))))))))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_24 _qv_25)=(plus _qv_25 _qv_24)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate zero (rotate (succ zero) _v_34))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34))))))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_26 _qv_27) _qv_28)=(plus _qv_26 (plus _qv_27 _qv_28))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate zero (rotate (succ zero) _v_34))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34))))))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_29)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate zero (rotate (succ zero) _v_34))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34))))))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_30))=(nat-to-int _qv_30)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate zero (rotate (succ zero) _v_34))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34))))))))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_31))=(nat-to-int _qv_31)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate zero (rotate (succ zero) _v_34))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34))))))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_32 _qv_33))=(plus (succ _qv_32) (succ _qv_33))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate zero (rotate (succ zero) _v_34))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34))))))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_32 _qv_33))=(plus (succ _qv_33) (succ _qv_32))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate zero (rotate (succ zero) _v_34))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34))))))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_18))=_qv_18))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate zero (rotate (succ zero) _v_34))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34))))))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_19 _qv_20)=(append _qv_20 _qv_19)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate zero (rotate (succ zero) _v_34))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34))))))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_21 _qv_22) _qv_23)=(append _qv_21 (append _qv_22 _qv_23))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate zero (rotate (succ zero) _v_34))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34))))))))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_24 _qv_25)=(plus _qv_25 _qv_24)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate zero (rotate (succ zero) _v_34))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34))))))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_26 _qv_27) _qv_28)=(plus _qv_26 (plus _qv_27 _qv_28))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate zero (rotate (succ zero) _v_34))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34))))))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_29)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate zero (rotate (succ zero) _v_34))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34))))))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_30))=(nat-to-int _qv_30)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate zero (rotate (succ zero) _v_34))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34))))))))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_31))=(nat-to-int _qv_31)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate zero (rotate (succ zero) _v_34))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34))))))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_32 _qv_33))=(plus (succ _qv_32) (succ _qv_33))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate zero (rotate (succ zero) _v_34))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34))))))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_32 _qv_33))=(plus (succ _qv_33) (succ _qv_32))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate zero (rotate (succ zero) _v_34))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34))))))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_18))=_qv_18))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate zero (rotate (succ zero) _v_34))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34))))))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_19 _qv_20)=(append _qv_20 _qv_19)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate zero (rotate (succ zero) _v_34))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34))))))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_21 _qv_22) _qv_23)=(append _qv_21 (append _qv_22 _qv_23))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate zero (rotate (succ zero) _v_34))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34))))))))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_24 _qv_25)=(plus _qv_25 _qv_24)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate zero (rotate (succ zero) _v_34))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34))))))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_26 _qv_27) _qv_28)=(plus _qv_26 (plus _qv_27 _qv_28))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate zero (rotate (succ zero) _v_34))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34))))))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_29)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate zero (rotate (succ zero) _v_34))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34))))))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_30))=(nat-to-int _qv_30)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate zero (rotate (succ zero) _v_34))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34))))))))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_31))=(nat-to-int _qv_31)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate zero (rotate (succ zero) _v_34))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34))))))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_32 _qv_33))=(plus (succ _qv_32) (succ _qv_33))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate zero (rotate (succ zero) _v_34))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34))))))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_32 _qv_33))=(plus (succ _qv_33) (succ _qv_32))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate zero (rotate (succ zero) _v_34))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34))))))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_18))=_qv_18))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate zero (rotate (succ zero) _v_34))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34))))))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_19 _qv_20)=(append _qv_20 _qv_19)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate zero (rotate (succ zero) _v_34))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34))))))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_21 _qv_22) _qv_23)=(append _qv_21 (append _qv_22 _qv_23))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate zero (rotate (succ zero) _v_34))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34))))))))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_24 _qv_25)=(plus _qv_25 _qv_24)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate zero (rotate (succ zero) _v_34))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34))))))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_26 _qv_27) _qv_28)=(plus _qv_26 (plus _qv_27 _qv_28))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate zero (rotate (succ zero) _v_34))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34))))))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_29)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate zero (rotate (succ zero) _v_34))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34))))))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_30))=(nat-to-int _qv_30)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate zero (rotate (succ zero) _v_34))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34))))))))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_31))=(nat-to-int _qv_31)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate zero (rotate (succ zero) _v_34))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34))))))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_32 _qv_33))=(plus (succ _qv_32) (succ _qv_33))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate zero (rotate (succ zero) _v_34))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34))))))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_32 _qv_33))=(plus (succ _qv_33) (succ _qv_32))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate zero (rotate (succ zero) _v_34))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34)))))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_18))=_qv_18))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate zero (rotate (succ zero) _v_34))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34)))))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_19 _qv_20)=(append _qv_20 _qv_19)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate zero (rotate (succ zero) _v_34))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34)))))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_21 _qv_22) _qv_23)=(append _qv_21 (append _qv_22 _qv_23))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate zero (rotate (succ zero) _v_34))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34)))))))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_24 _qv_25)=(plus _qv_25 _qv_24)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate zero (rotate (succ zero) _v_34))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34)))))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_26 _qv_27) _qv_28)=(plus _qv_26 (plus _qv_27 _qv_28))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate zero (rotate (succ zero) _v_34))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34)))))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_29)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate zero (rotate (succ zero) _v_34))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34)))))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_30))=(nat-to-int _qv_30)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate zero (rotate (succ zero) _v_34))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34)))))))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_31))=(nat-to-int _qv_31)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate zero (rotate (succ zero) _v_34))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34)))))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_32 _qv_33))=(plus (succ _qv_32) (succ _qv_33))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate zero (rotate (succ zero) _v_34))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34)))))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_32 _qv_33))=(plus (succ _qv_33) (succ _qv_32))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate zero (rotate (succ zero) _v_34)))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34)))))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_18))=_qv_18))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate zero (rotate (succ zero) _v_34)))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34)))))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_19 _qv_20)=(append _qv_20 _qv_19)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate zero (rotate (succ zero) _v_34)))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34)))))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_21 _qv_22) _qv_23)=(append _qv_21 (append _qv_22 _qv_23))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate zero (rotate (succ zero) _v_34)))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34)))))))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_24 _qv_25)=(plus _qv_25 _qv_24)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate zero (rotate (succ zero) _v_34)))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34)))))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_26 _qv_27) _qv_28)=(plus _qv_26 (plus _qv_27 _qv_28))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate zero (rotate (succ zero) _v_34)))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34)))))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_29)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate zero (rotate (succ zero) _v_34)))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34)))))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_30))=(nat-to-int _qv_30)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate zero (rotate (succ zero) _v_34)))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34)))))))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_31))=(nat-to-int _qv_31)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate zero (rotate (succ zero) _v_34)))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34)))))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_32 _qv_33))=(plus (succ _qv_32) (succ _qv_33))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate zero (rotate (succ zero) _v_34)))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34)))))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_32 _qv_33))=(plus (succ _qv_33) (succ _qv_32))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate zero (rotate (succ zero) _v_34)))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34)))))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_18))=_qv_18))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate zero (rotate (succ zero) _v_34)))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34)))))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_19 _qv_20)=(append _qv_20 _qv_19)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate zero (rotate (succ zero) _v_34)))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34)))))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_21 _qv_22) _qv_23)=(append _qv_21 (append _qv_22 _qv_23))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate zero (rotate (succ zero) _v_34)))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34)))))))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_24 _qv_25)=(plus _qv_25 _qv_24)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate zero (rotate (succ zero) _v_34)))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34)))))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_26 _qv_27) _qv_28)=(plus _qv_26 (plus _qv_27 _qv_28))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate zero (rotate (succ zero) _v_34)))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34)))))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_29)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate zero (rotate (succ zero) _v_34)))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34)))))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_30))=(nat-to-int _qv_30)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate zero (rotate (succ zero) _v_34)))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34)))))))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_31))=(nat-to-int _qv_31)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate zero (rotate (succ zero) _v_34)))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34)))))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_32 _qv_33))=(plus (succ _qv_32) (succ _qv_33))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate zero (rotate (succ zero) _v_34)))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34)))))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_32 _qv_33))=(plus (succ _qv_33) (succ _qv_32))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate zero (rotate (succ zero) _v_34)))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34)))))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_18))=_qv_18))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate zero (rotate (succ zero) _v_34)))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34)))))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_19 _qv_20)=(append _qv_20 _qv_19)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate zero (rotate (succ zero) _v_34)))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34)))))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_21 _qv_22) _qv_23)=(append _qv_21 (append _qv_22 _qv_23))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate zero (rotate (succ zero) _v_34)))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34)))))))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_24 _qv_25)=(plus _qv_25 _qv_24)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate zero (rotate (succ zero) _v_34)))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34)))))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_26 _qv_27) _qv_28)=(plus _qv_26 (plus _qv_27 _qv_28))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate zero (rotate (succ zero) _v_34)))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34)))))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_29)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate zero (rotate (succ zero) _v_34)))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34)))))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_30))=(nat-to-int _qv_30)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate zero (rotate (succ zero) _v_34)))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34)))))))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_31))=(nat-to-int _qv_31)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate zero (rotate (succ zero) _v_34)))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34)))))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_32 _qv_33))=(plus (succ _qv_32) (succ _qv_33))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate zero (rotate (succ zero) _v_34)))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34)))))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_32 _qv_33))=(plus (succ _qv_33) (succ _qv_32))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate zero (rotate (succ zero) _v_34)))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34)))))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_18))=_qv_18))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate zero (rotate (succ zero) _v_34)))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34)))))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_19 _qv_20)=(append _qv_20 _qv_19)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate zero (rotate (succ zero) _v_34)))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34)))))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_21 _qv_22) _qv_23)=(append _qv_21 (append _qv_22 _qv_23))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate zero (rotate (succ zero) _v_34)))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34)))))))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_24 _qv_25)=(plus _qv_25 _qv_24)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate zero (rotate (succ zero) _v_34)))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34)))))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_26 _qv_27) _qv_28)=(plus _qv_26 (plus _qv_27 _qv_28))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate zero (rotate (succ zero) _v_34)))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34)))))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_29)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate zero (rotate (succ zero) _v_34)))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34)))))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_30))=(nat-to-int _qv_30)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate zero (rotate (succ zero) _v_34)))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34)))))))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_31))=(nat-to-int _qv_31)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate zero (rotate (succ zero) _v_34)))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34)))))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_32 _qv_33))=(plus (succ _qv_32) (succ _qv_33))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate zero (rotate (succ zero) _v_34)))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34)))))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_32 _qv_33))=(plus (succ _qv_33) (succ _qv_32))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate zero (rotate (succ zero) _v_34))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34)))))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_18))=_qv_18))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate zero (rotate (succ zero) _v_34))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34)))))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_19 _qv_20)=(append _qv_20 _qv_19)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate zero (rotate (succ zero) _v_34))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34)))))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_21 _qv_22) _qv_23)=(append _qv_21 (append _qv_22 _qv_23))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate zero (rotate (succ zero) _v_34))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34)))))))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_24 _qv_25)=(plus _qv_25 _qv_24)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate zero (rotate (succ zero) _v_34))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34)))))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_26 _qv_27) _qv_28)=(plus _qv_26 (plus _qv_27 _qv_28))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate zero (rotate (succ zero) _v_34))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34)))))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_29)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate zero (rotate (succ zero) _v_34))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34)))))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_30))=(nat-to-int _qv_30)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate zero (rotate (succ zero) _v_34))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34)))))))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_31))=(nat-to-int _qv_31)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate zero (rotate (succ zero) _v_34))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34)))))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_32 _qv_33))=(plus (succ _qv_32) (succ _qv_33))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate zero (rotate (succ zero) _v_34))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34)))))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_32 _qv_33))=(plus (succ _qv_33) (succ _qv_32))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate zero (rotate (succ zero) _v_34))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34))))))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_18))=_qv_18))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate zero (rotate (succ zero) _v_34))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34))))))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_19 _qv_20)=(append _qv_20 _qv_19)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate zero (rotate (succ zero) _v_34))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34))))))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_21 _qv_22) _qv_23)=(append _qv_21 (append _qv_22 _qv_23))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate zero (rotate (succ zero) _v_34))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34))))))))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_24 _qv_25)=(plus _qv_25 _qv_24)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate zero (rotate (succ zero) _v_34))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34))))))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_26 _qv_27) _qv_28)=(plus _qv_26 (plus _qv_27 _qv_28))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate zero (rotate (succ zero) _v_34))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34))))))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_29)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate zero (rotate (succ zero) _v_34))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34))))))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_30))=(nat-to-int _qv_30)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate zero (rotate (succ zero) _v_34))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34))))))))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_31))=(nat-to-int _qv_31)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate zero (rotate (succ zero) _v_34))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34))))))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_32 _qv_33))=(plus (succ _qv_32) (succ _qv_33))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate zero (rotate (succ zero) _v_34))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34))))))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_32 _qv_33))=(plus (succ _qv_33) (succ _qv_32))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate zero (rotate (succ zero) _v_34))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34))))))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_18))=_qv_18))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate zero (rotate (succ zero) _v_34))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34))))))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_19 _qv_20)=(append _qv_20 _qv_19)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate zero (rotate (succ zero) _v_34))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34))))))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_21 _qv_22) _qv_23)=(append _qv_21 (append _qv_22 _qv_23))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate zero (rotate (succ zero) _v_34))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34))))))))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_24 _qv_25)=(plus _qv_25 _qv_24)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate zero (rotate (succ zero) _v_34))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34))))))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_26 _qv_27) _qv_28)=(plus _qv_26 (plus _qv_27 _qv_28))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate zero (rotate (succ zero) _v_34))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34))))))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_29)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate zero (rotate (succ zero) _v_34))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34))))))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_30))=(nat-to-int _qv_30)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate zero (rotate (succ zero) _v_34))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34))))))))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_31))=(nat-to-int _qv_31)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate zero (rotate (succ zero) _v_34))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34))))))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_32 _qv_33))=(plus (succ _qv_32) (succ _qv_33))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate zero (rotate (succ zero) _v_34))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34))))))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_32 _qv_33))=(plus (succ _qv_33) (succ _qv_32))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate zero (rotate (succ zero) _v_34))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34))))))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_18))=_qv_18))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate zero (rotate (succ zero) _v_34))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34))))))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_19 _qv_20)=(append _qv_20 _qv_19)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate zero (rotate (succ zero) _v_34))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34))))))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_21 _qv_22) _qv_23)=(append _qv_21 (append _qv_22 _qv_23))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate zero (rotate (succ zero) _v_34))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34))))))))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_24 _qv_25)=(plus _qv_25 _qv_24)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate zero (rotate (succ zero) _v_34))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34))))))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_26 _qv_27) _qv_28)=(plus _qv_26 (plus _qv_27 _qv_28))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate zero (rotate (succ zero) _v_34))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34))))))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_29)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate zero (rotate (succ zero) _v_34))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34))))))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_30))=(nat-to-int _qv_30)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate zero (rotate (succ zero) _v_34))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34))))))))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_31))=(nat-to-int _qv_31)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate zero (rotate (succ zero) _v_34))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34))))))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_32 _qv_33))=(plus (succ _qv_32) (succ _qv_33))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate zero (rotate (succ zero) _v_34))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34))))))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_32 _qv_33))=(plus (succ _qv_33) (succ _qv_32))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate zero (rotate (succ zero) _v_34))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34))))))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_18))=_qv_18))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate zero (rotate (succ zero) _v_34))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34))))))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_19 _qv_20)=(append _qv_20 _qv_19)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate zero (rotate (succ zero) _v_34))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34))))))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_21 _qv_22) _qv_23)=(append _qv_21 (append _qv_22 _qv_23))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate zero (rotate (succ zero) _v_34))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34))))))))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_24 _qv_25)=(plus _qv_25 _qv_24)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate zero (rotate (succ zero) _v_34))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34))))))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_26 _qv_27) _qv_28)=(plus _qv_26 (plus _qv_27 _qv_28))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate zero (rotate (succ zero) _v_34))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34))))))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_29)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate zero (rotate (succ zero) _v_34))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34))))))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_30))=(nat-to-int _qv_30)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate zero (rotate (succ zero) _v_34))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34))))))))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_31))=(nat-to-int _qv_31)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate zero (rotate (succ zero) _v_34))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34))))))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_32 _qv_33))=(plus (succ _qv_32) (succ _qv_33))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate zero (rotate (succ zero) _v_34))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34))))))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_32 _qv_33))=(plus (succ _qv_33) (succ _qv_32))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate zero (rotate (succ zero) _v_34))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34)))))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_18))=_qv_18))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate zero (rotate (succ zero) _v_34))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34)))))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_19 _qv_20)=(append _qv_20 _qv_19)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate zero (rotate (succ zero) _v_34))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34)))))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_21 _qv_22) _qv_23)=(append _qv_21 (append _qv_22 _qv_23))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate zero (rotate (succ zero) _v_34))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34)))))))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_24 _qv_25)=(plus _qv_25 _qv_24)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate zero (rotate (succ zero) _v_34))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34)))))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_26 _qv_27) _qv_28)=(plus _qv_26 (plus _qv_27 _qv_28))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate zero (rotate (succ zero) _v_34))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34)))))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_29)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate zero (rotate (succ zero) _v_34))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34)))))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_30))=(nat-to-int _qv_30)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate zero (rotate (succ zero) _v_34))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34)))))))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_31))=(nat-to-int _qv_31)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate zero (rotate (succ zero) _v_34))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34)))))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_32 _qv_33))=(plus (succ _qv_32) (succ _qv_33))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate zero (rotate (succ zero) _v_34))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34)))))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_32 _qv_33))=(plus (succ _qv_33) (succ _qv_32))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate zero (rotate (succ zero) _v_34))))=(nat-to-int (len (rotate _t_17 (rotate zero (rotate zero _v_34))))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_18))=_qv_18))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate zero (rotate (succ zero) _v_34))))=(nat-to-int (len (rotate _t_17 (rotate zero (rotate zero _v_34))))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_19 _qv_20)=(append _qv_20 _qv_19)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate zero (rotate (succ zero) _v_34))))=(nat-to-int (len (rotate _t_17 (rotate zero (rotate zero _v_34))))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_21 _qv_22) _qv_23)=(append _qv_21 (append _qv_22 _qv_23))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate zero (rotate (succ zero) _v_34))))=(nat-to-int (len (rotate _t_17 (rotate zero (rotate zero _v_34))))))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_24 _qv_25)=(plus _qv_25 _qv_24)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate zero (rotate (succ zero) _v_34))))=(nat-to-int (len (rotate _t_17 (rotate zero (rotate zero _v_34))))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_26 _qv_27) _qv_28)=(plus _qv_26 (plus _qv_27 _qv_28))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate zero (rotate (succ zero) _v_34))))=(nat-to-int (len (rotate _t_17 (rotate zero (rotate zero _v_34))))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_29)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate zero (rotate (succ zero) _v_34))))=(nat-to-int (len (rotate _t_17 (rotate zero (rotate zero _v_34))))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_30))=(nat-to-int _qv_30)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate zero (rotate (succ zero) _v_34))))=(nat-to-int (len (rotate _t_17 (rotate zero (rotate zero _v_34))))))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_31))=(nat-to-int _qv_31)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate zero (rotate (succ zero) _v_34))))=(nat-to-int (len (rotate _t_17 (rotate zero (rotate zero _v_34))))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_32 _qv_33))=(plus (succ _qv_32) (succ _qv_33))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate zero (rotate (succ zero) _v_34))))=(nat-to-int (len (rotate _t_17 (rotate zero (rotate zero _v_34))))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_32 _qv_33))=(plus (succ _qv_33) (succ _qv_32))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate zero (rotate (succ zero) _v_34)))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34)))))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_18))=_qv_18))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate zero (rotate (succ zero) _v_34)))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34)))))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_19 _qv_20)=(append _qv_20 _qv_19)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate zero (rotate (succ zero) _v_34)))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34)))))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_21 _qv_22) _qv_23)=(append _qv_21 (append _qv_22 _qv_23))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate zero (rotate (succ zero) _v_34)))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34)))))))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_24 _qv_25)=(plus _qv_25 _qv_24)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate zero (rotate (succ zero) _v_34)))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34)))))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_26 _qv_27) _qv_28)=(plus _qv_26 (plus _qv_27 _qv_28))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate zero (rotate (succ zero) _v_34)))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34)))))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_29)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate zero (rotate (succ zero) _v_34)))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34)))))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_30))=(nat-to-int _qv_30)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate zero (rotate (succ zero) _v_34)))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34)))))))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_31))=(nat-to-int _qv_31)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate zero (rotate (succ zero) _v_34)))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34)))))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_32 _qv_33))=(plus (succ _qv_32) (succ _qv_33))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate zero (rotate (succ zero) _v_34)))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34)))))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_32 _qv_33))=(plus (succ _qv_33) (succ _qv_32))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate zero (rotate (succ zero) _v_34)))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34)))))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_18))=_qv_18))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate zero (rotate (succ zero) _v_34)))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34)))))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_19 _qv_20)=(append _qv_20 _qv_19)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate zero (rotate (succ zero) _v_34)))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34)))))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_21 _qv_22) _qv_23)=(append _qv_21 (append _qv_22 _qv_23))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate zero (rotate (succ zero) _v_34)))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34)))))))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_24 _qv_25)=(plus _qv_25 _qv_24)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate zero (rotate (succ zero) _v_34)))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34)))))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_26 _qv_27) _qv_28)=(plus _qv_26 (plus _qv_27 _qv_28))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate zero (rotate (succ zero) _v_34)))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34)))))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_29)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate zero (rotate (succ zero) _v_34)))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34)))))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_30))=(nat-to-int _qv_30)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate zero (rotate (succ zero) _v_34)))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34)))))))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_31))=(nat-to-int _qv_31)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate zero (rotate (succ zero) _v_34)))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34)))))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_32 _qv_33))=(plus (succ _qv_32) (succ _qv_33))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate zero (rotate (succ zero) _v_34)))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34)))))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_32 _qv_33))=(plus (succ _qv_33) (succ _qv_32))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate zero (rotate (succ zero) _v_34)))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34)))))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_18))=_qv_18))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate zero (rotate (succ zero) _v_34)))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34)))))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_19 _qv_20)=(append _qv_20 _qv_19)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate zero (rotate (succ zero) _v_34)))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34)))))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_21 _qv_22) _qv_23)=(append _qv_21 (append _qv_22 _qv_23))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate zero (rotate (succ zero) _v_34)))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34)))))))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_24 _qv_25)=(plus _qv_25 _qv_24)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate zero (rotate (succ zero) _v_34)))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34)))))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_26 _qv_27) _qv_28)=(plus _qv_26 (plus _qv_27 _qv_28))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate zero (rotate (succ zero) _v_34)))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34)))))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_29)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate zero (rotate (succ zero) _v_34)))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34)))))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_30))=(nat-to-int _qv_30)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate zero (rotate (succ zero) _v_34)))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34)))))))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_31))=(nat-to-int _qv_31)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate zero (rotate (succ zero) _v_34)))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34)))))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_32 _qv_33))=(plus (succ _qv_32) (succ _qv_33))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate zero (rotate (succ zero) _v_34)))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34)))))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_32 _qv_33))=(plus (succ _qv_33) (succ _qv_32))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate zero (rotate (succ zero) _v_34)))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34)))))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_18))=_qv_18))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate zero (rotate (succ zero) _v_34)))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34)))))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_19 _qv_20)=(append _qv_20 _qv_19)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate zero (rotate (succ zero) _v_34)))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34)))))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_21 _qv_22) _qv_23)=(append _qv_21 (append _qv_22 _qv_23))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate zero (rotate (succ zero) _v_34)))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34)))))))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_24 _qv_25)=(plus _qv_25 _qv_24)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate zero (rotate (succ zero) _v_34)))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34)))))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_26 _qv_27) _qv_28)=(plus _qv_26 (plus _qv_27 _qv_28))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate zero (rotate (succ zero) _v_34)))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34)))))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_29)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate zero (rotate (succ zero) _v_34)))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34)))))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_30))=(nat-to-int _qv_30)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate zero (rotate (succ zero) _v_34)))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34)))))))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_31))=(nat-to-int _qv_31)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate zero (rotate (succ zero) _v_34)))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34)))))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_32 _qv_33))=(plus (succ _qv_32) (succ _qv_33))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate zero (rotate (succ zero) _v_34)))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34)))))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_32 _qv_33))=(plus (succ _qv_33) (succ _qv_32))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate zero (rotate (succ zero) _v_34))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34)))))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_18))=_qv_18))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate zero (rotate (succ zero) _v_34))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34)))))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_19 _qv_20)=(append _qv_20 _qv_19)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate zero (rotate (succ zero) _v_34))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34)))))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_21 _qv_22) _qv_23)=(append _qv_21 (append _qv_22 _qv_23))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate zero (rotate (succ zero) _v_34))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34)))))))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_24 _qv_25)=(plus _qv_25 _qv_24)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate zero (rotate (succ zero) _v_34))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34)))))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_26 _qv_27) _qv_28)=(plus _qv_26 (plus _qv_27 _qv_28))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate zero (rotate (succ zero) _v_34))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34)))))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_29)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate zero (rotate (succ zero) _v_34))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34)))))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_30))=(nat-to-int _qv_30)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate zero (rotate (succ zero) _v_34))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34)))))))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_31))=(nat-to-int _qv_31)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate zero (rotate (succ zero) _v_34))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34)))))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_32 _qv_33))=(plus (succ _qv_32) (succ _qv_33))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate zero (rotate (succ zero) _v_34))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34)))))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_32 _qv_33))=(plus (succ _qv_33) (succ _qv_32))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate zero (rotate (succ zero) _v_34))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34))))))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_18))=_qv_18))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate zero (rotate (succ zero) _v_34))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34))))))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_19 _qv_20)=(append _qv_20 _qv_19)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate zero (rotate (succ zero) _v_34))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34))))))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_21 _qv_22) _qv_23)=(append _qv_21 (append _qv_22 _qv_23))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate zero (rotate (succ zero) _v_34))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34))))))))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_24 _qv_25)=(plus _qv_25 _qv_24)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate zero (rotate (succ zero) _v_34))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34))))))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_26 _qv_27) _qv_28)=(plus _qv_26 (plus _qv_27 _qv_28))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate zero (rotate (succ zero) _v_34))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34))))))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_29)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate zero (rotate (succ zero) _v_34))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34))))))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_30))=(nat-to-int _qv_30)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate zero (rotate (succ zero) _v_34))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34))))))))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_31))=(nat-to-int _qv_31)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate zero (rotate (succ zero) _v_34))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34))))))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_32 _qv_33))=(plus (succ _qv_32) (succ _qv_33))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate zero (rotate (succ zero) _v_34))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34))))))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_32 _qv_33))=(plus (succ _qv_33) (succ _qv_32))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate zero (rotate (succ zero) _v_34))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34))))))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_18))=_qv_18))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate zero (rotate (succ zero) _v_34))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34))))))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_19 _qv_20)=(append _qv_20 _qv_19)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate zero (rotate (succ zero) _v_34))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34))))))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_21 _qv_22) _qv_23)=(append _qv_21 (append _qv_22 _qv_23))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate zero (rotate (succ zero) _v_34))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34))))))))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_24 _qv_25)=(plus _qv_25 _qv_24)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate zero (rotate (succ zero) _v_34))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34))))))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_26 _qv_27) _qv_28)=(plus _qv_26 (plus _qv_27 _qv_28))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate zero (rotate (succ zero) _v_34))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34))))))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_29)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate zero (rotate (succ zero) _v_34))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34))))))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_30))=(nat-to-int _qv_30)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate zero (rotate (succ zero) _v_34))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34))))))))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_31))=(nat-to-int _qv_31)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate zero (rotate (succ zero) _v_34))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34))))))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_32 _qv_33))=(plus (succ _qv_32) (succ _qv_33))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate zero (rotate (succ zero) _v_34))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34))))))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_32 _qv_33))=(plus (succ _qv_33) (succ _qv_32))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate zero (rotate (succ zero) _v_34))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34))))))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_18))=_qv_18))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate zero (rotate (succ zero) _v_34))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34))))))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_19 _qv_20)=(append _qv_20 _qv_19)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate zero (rotate (succ zero) _v_34))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34))))))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_21 _qv_22) _qv_23)=(append _qv_21 (append _qv_22 _qv_23))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate zero (rotate (succ zero) _v_34))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34))))))))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_24 _qv_25)=(plus _qv_25 _qv_24)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate zero (rotate (succ zero) _v_34))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34))))))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_26 _qv_27) _qv_28)=(plus _qv_26 (plus _qv_27 _qv_28))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate zero (rotate (succ zero) _v_34))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34))))))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_29)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate zero (rotate (succ zero) _v_34))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34))))))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_30))=(nat-to-int _qv_30)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate zero (rotate (succ zero) _v_34))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34))))))))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_31))=(nat-to-int _qv_31)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate zero (rotate (succ zero) _v_34))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34))))))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_32 _qv_33))=(plus (succ _qv_32) (succ _qv_33))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate zero (rotate (succ zero) _v_34))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34))))))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_32 _qv_33))=(plus (succ _qv_33) (succ _qv_32))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate zero (rotate (succ zero) _v_34))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34))))))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_18))=_qv_18))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate zero (rotate (succ zero) _v_34))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34))))))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_19 _qv_20)=(append _qv_20 _qv_19)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate zero (rotate (succ zero) _v_34))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34))))))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_21 _qv_22) _qv_23)=(append _qv_21 (append _qv_22 _qv_23))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate zero (rotate (succ zero) _v_34))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34))))))))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_24 _qv_25)=(plus _qv_25 _qv_24)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate zero (rotate (succ zero) _v_34))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34))))))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_26 _qv_27) _qv_28)=(plus _qv_26 (plus _qv_27 _qv_28))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate zero (rotate (succ zero) _v_34))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34))))))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_29)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate zero (rotate (succ zero) _v_34))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34))))))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_30))=(nat-to-int _qv_30)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate zero (rotate (succ zero) _v_34))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34))))))))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_31))=(nat-to-int _qv_31)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate zero (rotate (succ zero) _v_34))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34))))))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_32 _qv_33))=(plus (succ _qv_32) (succ _qv_33))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate zero (rotate (succ zero) _v_34))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34))))))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_32 _qv_33))=(plus (succ _qv_33) (succ _qv_32))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate zero (rotate (succ zero) _v_34))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34)))))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_18))=_qv_18))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate zero (rotate (succ zero) _v_34))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34)))))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_19 _qv_20)=(append _qv_20 _qv_19)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate zero (rotate (succ zero) _v_34))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34)))))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_21 _qv_22) _qv_23)=(append _qv_21 (append _qv_22 _qv_23))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate zero (rotate (succ zero) _v_34))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34)))))))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_24 _qv_25)=(plus _qv_25 _qv_24)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate zero (rotate (succ zero) _v_34))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34)))))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_26 _qv_27) _qv_28)=(plus _qv_26 (plus _qv_27 _qv_28))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate zero (rotate (succ zero) _v_34))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34)))))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_29)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate zero (rotate (succ zero) _v_34))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34)))))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_30))=(nat-to-int _qv_30)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate zero (rotate (succ zero) _v_34))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34)))))))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_31))=(nat-to-int _qv_31)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate zero (rotate (succ zero) _v_34))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34)))))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_32 _qv_33))=(plus (succ _qv_32) (succ _qv_33))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate zero (rotate (succ zero) _v_34))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34)))))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_32 _qv_33))=(plus (succ _qv_33) (succ _qv_32))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate zero (rotate (succ zero) _v_34)))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34)))))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_18))=_qv_18))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate zero (rotate (succ zero) _v_34)))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34)))))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_19 _qv_20)=(append _qv_20 _qv_19)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate zero (rotate (succ zero) _v_34)))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34)))))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_21 _qv_22) _qv_23)=(append _qv_21 (append _qv_22 _qv_23))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate zero (rotate (succ zero) _v_34)))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34)))))))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_24 _qv_25)=(plus _qv_25 _qv_24)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate zero (rotate (succ zero) _v_34)))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34)))))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_26 _qv_27) _qv_28)=(plus _qv_26 (plus _qv_27 _qv_28))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate zero (rotate (succ zero) _v_34)))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34)))))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_29)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate zero (rotate (succ zero) _v_34)))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34)))))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_30))=(nat-to-int _qv_30)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate zero (rotate (succ zero) _v_34)))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34)))))))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_31))=(nat-to-int _qv_31)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate zero (rotate (succ zero) _v_34)))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34)))))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_32 _qv_33))=(plus (succ _qv_32) (succ _qv_33))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate zero (rotate (succ zero) _v_34)))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34)))))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_32 _qv_33))=(plus (succ _qv_33) (succ _qv_32))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate zero (rotate (succ zero) _v_34)))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34)))))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_18))=_qv_18))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate zero (rotate (succ zero) _v_34)))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34)))))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_19 _qv_20)=(append _qv_20 _qv_19)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate zero (rotate (succ zero) _v_34)))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34)))))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_21 _qv_22) _qv_23)=(append _qv_21 (append _qv_22 _qv_23))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate zero (rotate (succ zero) _v_34)))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34)))))))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_24 _qv_25)=(plus _qv_25 _qv_24)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate zero (rotate (succ zero) _v_34)))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34)))))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_26 _qv_27) _qv_28)=(plus _qv_26 (plus _qv_27 _qv_28))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate zero (rotate (succ zero) _v_34)))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34)))))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_29)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate zero (rotate (succ zero) _v_34)))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34)))))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_30))=(nat-to-int _qv_30)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate zero (rotate (succ zero) _v_34)))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34)))))))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_31))=(nat-to-int _qv_31)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate zero (rotate (succ zero) _v_34)))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34)))))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_32 _qv_33))=(plus (succ _qv_32) (succ _qv_33))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate zero (rotate (succ zero) _v_34)))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34)))))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_32 _qv_33))=(plus (succ _qv_33) (succ _qv_32))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate zero (rotate (succ zero) _v_34)))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34)))))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_18))=_qv_18))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate zero (rotate (succ zero) _v_34)))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34)))))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_19 _qv_20)=(append _qv_20 _qv_19)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate zero (rotate (succ zero) _v_34)))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34)))))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_21 _qv_22) _qv_23)=(append _qv_21 (append _qv_22 _qv_23))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate zero (rotate (succ zero) _v_34)))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34)))))))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_24 _qv_25)=(plus _qv_25 _qv_24)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate zero (rotate (succ zero) _v_34)))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34)))))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_26 _qv_27) _qv_28)=(plus _qv_26 (plus _qv_27 _qv_28))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate zero (rotate (succ zero) _v_34)))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34)))))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_29)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate zero (rotate (succ zero) _v_34)))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34)))))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_30))=(nat-to-int _qv_30)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate zero (rotate (succ zero) _v_34)))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34)))))))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_31))=(nat-to-int _qv_31)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate zero (rotate (succ zero) _v_34)))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34)))))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_32 _qv_33))=(plus (succ _qv_32) (succ _qv_33))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate zero (rotate (succ zero) _v_34)))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34)))))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_32 _qv_33))=(plus (succ _qv_33) (succ _qv_32))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate zero (rotate (succ zero) _v_34)))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34)))))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_18))=_qv_18))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate zero (rotate (succ zero) _v_34)))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34)))))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_19 _qv_20)=(append _qv_20 _qv_19)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate zero (rotate (succ zero) _v_34)))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34)))))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_21 _qv_22) _qv_23)=(append _qv_21 (append _qv_22 _qv_23))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate zero (rotate (succ zero) _v_34)))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34)))))))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_24 _qv_25)=(plus _qv_25 _qv_24)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate zero (rotate (succ zero) _v_34)))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34)))))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_26 _qv_27) _qv_28)=(plus _qv_26 (plus _qv_27 _qv_28))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate zero (rotate (succ zero) _v_34)))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34)))))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_29)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate zero (rotate (succ zero) _v_34)))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34)))))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_30))=(nat-to-int _qv_30)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate zero (rotate (succ zero) _v_34)))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34)))))))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_31))=(nat-to-int _qv_31)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate zero (rotate (succ zero) _v_34)))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34)))))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_32 _qv_33))=(plus (succ _qv_32) (succ _qv_33))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate zero (rotate (succ zero) _v_34)))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34)))))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_32 _qv_33))=(plus (succ _qv_33) (succ _qv_32))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate zero (rotate (succ zero) _v_34))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34)))))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_18))=_qv_18))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate zero (rotate (succ zero) _v_34))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34)))))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_19 _qv_20)=(append _qv_20 _qv_19)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate zero (rotate (succ zero) _v_34))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34)))))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_21 _qv_22) _qv_23)=(append _qv_21 (append _qv_22 _qv_23))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate zero (rotate (succ zero) _v_34))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34)))))))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_24 _qv_25)=(plus _qv_25 _qv_24)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate zero (rotate (succ zero) _v_34))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34)))))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_26 _qv_27) _qv_28)=(plus _qv_26 (plus _qv_27 _qv_28))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate zero (rotate (succ zero) _v_34))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34)))))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_29)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate zero (rotate (succ zero) _v_34))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34)))))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_30))=(nat-to-int _qv_30)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate zero (rotate (succ zero) _v_34))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34)))))))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_31))=(nat-to-int _qv_31)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate zero (rotate (succ zero) _v_34))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34)))))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_32 _qv_33))=(plus (succ _qv_32) (succ _qv_33))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate zero (rotate (succ zero) _v_34))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34)))))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_32 _qv_33))=(plus (succ _qv_33) (succ _qv_32))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate zero (rotate (succ zero) _v_34))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34))))))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_18))=_qv_18))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate zero (rotate (succ zero) _v_34))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34))))))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_19 _qv_20)=(append _qv_20 _qv_19)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate zero (rotate (succ zero) _v_34))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34))))))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_21 _qv_22) _qv_23)=(append _qv_21 (append _qv_22 _qv_23))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate zero (rotate (succ zero) _v_34))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34))))))))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_24 _qv_25)=(plus _qv_25 _qv_24)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate zero (rotate (succ zero) _v_34))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34))))))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_26 _qv_27) _qv_28)=(plus _qv_26 (plus _qv_27 _qv_28))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate zero (rotate (succ zero) _v_34))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34))))))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_29)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate zero (rotate (succ zero) _v_34))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34))))))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_30))=(nat-to-int _qv_30)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate zero (rotate (succ zero) _v_34))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34))))))))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_31))=(nat-to-int _qv_31)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate zero (rotate (succ zero) _v_34))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34))))))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_32 _qv_33))=(plus (succ _qv_32) (succ _qv_33))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate zero (rotate (succ zero) _v_34))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34))))))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_32 _qv_33))=(plus (succ _qv_33) (succ _qv_32))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate zero (rotate (succ zero) _v_34))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34))))))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_18))=_qv_18))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate zero (rotate (succ zero) _v_34))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34))))))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_19 _qv_20)=(append _qv_20 _qv_19)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate zero (rotate (succ zero) _v_34))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34))))))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_21 _qv_22) _qv_23)=(append _qv_21 (append _qv_22 _qv_23))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate zero (rotate (succ zero) _v_34))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34))))))))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_24 _qv_25)=(plus _qv_25 _qv_24)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate zero (rotate (succ zero) _v_34))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34))))))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_26 _qv_27) _qv_28)=(plus _qv_26 (plus _qv_27 _qv_28))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate zero (rotate (succ zero) _v_34))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34))))))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_29)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate zero (rotate (succ zero) _v_34))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34))))))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_30))=(nat-to-int _qv_30)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate zero (rotate (succ zero) _v_34))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34))))))))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_31))=(nat-to-int _qv_31)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate zero (rotate (succ zero) _v_34))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34))))))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_32 _qv_33))=(plus (succ _qv_32) (succ _qv_33))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate zero (rotate (succ zero) _v_34))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34))))))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_32 _qv_33))=(plus (succ _qv_33) (succ _qv_32))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate zero (rotate (succ zero) _v_34))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34))))))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_18))=_qv_18))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate zero (rotate (succ zero) _v_34))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34))))))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_19 _qv_20)=(append _qv_20 _qv_19)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate zero (rotate (succ zero) _v_34))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34))))))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_21 _qv_22) _qv_23)=(append _qv_21 (append _qv_22 _qv_23))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate zero (rotate (succ zero) _v_34))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34))))))))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_24 _qv_25)=(plus _qv_25 _qv_24)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate zero (rotate (succ zero) _v_34))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34))))))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_26 _qv_27) _qv_28)=(plus _qv_26 (plus _qv_27 _qv_28))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate zero (rotate (succ zero) _v_34))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34))))))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_29)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate zero (rotate (succ zero) _v_34))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34))))))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_30))=(nat-to-int _qv_30)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate zero (rotate (succ zero) _v_34))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34))))))))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_31))=(nat-to-int _qv_31)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate zero (rotate (succ zero) _v_34))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34))))))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_32 _qv_33))=(plus (succ _qv_32) (succ _qv_33))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate zero (rotate (succ zero) _v_34))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34))))))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_32 _qv_33))=(plus (succ _qv_33) (succ _qv_32))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate zero (rotate (succ zero) _v_34))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34))))))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_18))=_qv_18))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate zero (rotate (succ zero) _v_34))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34))))))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_19 _qv_20)=(append _qv_20 _qv_19)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate zero (rotate (succ zero) _v_34))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34))))))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_21 _qv_22) _qv_23)=(append _qv_21 (append _qv_22 _qv_23))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate zero (rotate (succ zero) _v_34))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34))))))))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_24 _qv_25)=(plus _qv_25 _qv_24)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate zero (rotate (succ zero) _v_34))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34))))))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_26 _qv_27) _qv_28)=(plus _qv_26 (plus _qv_27 _qv_28))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate zero (rotate (succ zero) _v_34))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34))))))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_29)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate zero (rotate (succ zero) _v_34))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34))))))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_30))=(nat-to-int _qv_30)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate zero (rotate (succ zero) _v_34))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34))))))))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_31))=(nat-to-int _qv_31)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate zero (rotate (succ zero) _v_34))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34))))))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_32 _qv_33))=(plus (succ _qv_32) (succ _qv_33))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate zero (rotate (succ zero) _v_34))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34))))))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_32 _qv_33))=(plus (succ _qv_33) (succ _qv_32))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate zero (rotate (succ zero) _v_34))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34)))))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_18))=_qv_18))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate zero (rotate (succ zero) _v_34))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34)))))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_19 _qv_20)=(append _qv_20 _qv_19)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate zero (rotate (succ zero) _v_34))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34)))))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_21 _qv_22) _qv_23)=(append _qv_21 (append _qv_22 _qv_23))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate zero (rotate (succ zero) _v_34))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34)))))))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_24 _qv_25)=(plus _qv_25 _qv_24)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate zero (rotate (succ zero) _v_34))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34)))))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_26 _qv_27) _qv_28)=(plus _qv_26 (plus _qv_27 _qv_28))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate zero (rotate (succ zero) _v_34))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34)))))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_29)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate zero (rotate (succ zero) _v_34))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34)))))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_30))=(nat-to-int _qv_30)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate zero (rotate (succ zero) _v_34))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34)))))))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_31))=(nat-to-int _qv_31)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate zero (rotate (succ zero) _v_34))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34)))))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_32 _qv_33))=(plus (succ _qv_32) (succ _qv_33))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate zero (rotate (succ zero) _v_34))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34)))))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_32 _qv_33))=(plus (succ _qv_33) (succ _qv_32))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate zero (rotate (succ zero) _v_34))))=(nat-to-int (len (rotate _t_17 (rotate zero (rotate zero _v_34))))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_18))=_qv_18))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate zero (rotate (succ zero) _v_34))))=(nat-to-int (len (rotate _t_17 (rotate zero (rotate zero _v_34))))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_19 _qv_20)=(append _qv_20 _qv_19)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate zero (rotate (succ zero) _v_34))))=(nat-to-int (len (rotate _t_17 (rotate zero (rotate zero _v_34))))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_21 _qv_22) _qv_23)=(append _qv_21 (append _qv_22 _qv_23))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate zero (rotate (succ zero) _v_34))))=(nat-to-int (len (rotate _t_17 (rotate zero (rotate zero _v_34))))))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_24 _qv_25)=(plus _qv_25 _qv_24)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate zero (rotate (succ zero) _v_34))))=(nat-to-int (len (rotate _t_17 (rotate zero (rotate zero _v_34))))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_26 _qv_27) _qv_28)=(plus _qv_26 (plus _qv_27 _qv_28))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate zero (rotate (succ zero) _v_34))))=(nat-to-int (len (rotate _t_17 (rotate zero (rotate zero _v_34))))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_29)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate zero (rotate (succ zero) _v_34))))=(nat-to-int (len (rotate _t_17 (rotate zero (rotate zero _v_34))))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_30))=(nat-to-int _qv_30)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate zero (rotate (succ zero) _v_34))))=(nat-to-int (len (rotate _t_17 (rotate zero (rotate zero _v_34))))))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_31))=(nat-to-int _qv_31)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate zero (rotate (succ zero) _v_34))))=(nat-to-int (len (rotate _t_17 (rotate zero (rotate zero _v_34))))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_32 _qv_33))=(plus (succ _qv_32) (succ _qv_33))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate zero (rotate (succ zero) _v_34))))=(nat-to-int (len (rotate _t_17 (rotate zero (rotate zero _v_34))))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_32 _qv_33))=(plus (succ _qv_33) (succ _qv_32))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate zero (rotate (succ zero) _v_34)))))=(nat-to-int (len (rotate _t_17 (rotate zero (rotate zero _v_34))))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_18))=_qv_18))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate zero (rotate (succ zero) _v_34)))))=(nat-to-int (len (rotate _t_17 (rotate zero (rotate zero _v_34))))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_19 _qv_20)=(append _qv_20 _qv_19)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate zero (rotate (succ zero) _v_34)))))=(nat-to-int (len (rotate _t_17 (rotate zero (rotate zero _v_34))))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_21 _qv_22) _qv_23)=(append _qv_21 (append _qv_22 _qv_23))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate zero (rotate (succ zero) _v_34)))))=(nat-to-int (len (rotate _t_17 (rotate zero (rotate zero _v_34))))))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_24 _qv_25)=(plus _qv_25 _qv_24)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate zero (rotate (succ zero) _v_34)))))=(nat-to-int (len (rotate _t_17 (rotate zero (rotate zero _v_34))))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_26 _qv_27) _qv_28)=(plus _qv_26 (plus _qv_27 _qv_28))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate zero (rotate (succ zero) _v_34)))))=(nat-to-int (len (rotate _t_17 (rotate zero (rotate zero _v_34))))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_29)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate zero (rotate (succ zero) _v_34)))))=(nat-to-int (len (rotate _t_17 (rotate zero (rotate zero _v_34))))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_30))=(nat-to-int _qv_30)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate zero (rotate (succ zero) _v_34)))))=(nat-to-int (len (rotate _t_17 (rotate zero (rotate zero _v_34))))))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_31))=(nat-to-int _qv_31)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate zero (rotate (succ zero) _v_34)))))=(nat-to-int (len (rotate _t_17 (rotate zero (rotate zero _v_34))))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_32 _qv_33))=(plus (succ _qv_32) (succ _qv_33))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate zero (rotate (succ zero) _v_34)))))=(nat-to-int (len (rotate _t_17 (rotate zero (rotate zero _v_34))))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_32 _qv_33))=(plus (succ _qv_33) (succ _qv_32))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate zero (rotate (succ zero) _v_34)))))=(nat-to-int (len (rotate _t_17 (rotate zero (rotate zero _v_34))))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_18))=_qv_18))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate zero (rotate (succ zero) _v_34)))))=(nat-to-int (len (rotate _t_17 (rotate zero (rotate zero _v_34))))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_19 _qv_20)=(append _qv_20 _qv_19)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate zero (rotate (succ zero) _v_34)))))=(nat-to-int (len (rotate _t_17 (rotate zero (rotate zero _v_34))))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_21 _qv_22) _qv_23)=(append _qv_21 (append _qv_22 _qv_23))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate zero (rotate (succ zero) _v_34)))))=(nat-to-int (len (rotate _t_17 (rotate zero (rotate zero _v_34))))))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_24 _qv_25)=(plus _qv_25 _qv_24)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate zero (rotate (succ zero) _v_34)))))=(nat-to-int (len (rotate _t_17 (rotate zero (rotate zero _v_34))))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_26 _qv_27) _qv_28)=(plus _qv_26 (plus _qv_27 _qv_28))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate zero (rotate (succ zero) _v_34)))))=(nat-to-int (len (rotate _t_17 (rotate zero (rotate zero _v_34))))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_29)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate zero (rotate (succ zero) _v_34)))))=(nat-to-int (len (rotate _t_17 (rotate zero (rotate zero _v_34))))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_30))=(nat-to-int _qv_30)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate zero (rotate (succ zero) _v_34)))))=(nat-to-int (len (rotate _t_17 (rotate zero (rotate zero _v_34))))))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_31))=(nat-to-int _qv_31)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate zero (rotate (succ zero) _v_34)))))=(nat-to-int (len (rotate _t_17 (rotate zero (rotate zero _v_34))))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_32 _qv_33))=(plus (succ _qv_32) (succ _qv_33))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate zero (rotate (succ zero) _v_34)))))=(nat-to-int (len (rotate _t_17 (rotate zero (rotate zero _v_34))))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_32 _qv_33))=(plus (succ _qv_33) (succ _qv_32))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate zero (rotate (succ zero) _v_34)))))=(nat-to-int (len (rotate _t_17 (rotate zero (rotate zero _v_34))))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_18))=_qv_18))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate zero (rotate (succ zero) _v_34)))))=(nat-to-int (len (rotate _t_17 (rotate zero (rotate zero _v_34))))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_19 _qv_20)=(append _qv_20 _qv_19)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate zero (rotate (succ zero) _v_34)))))=(nat-to-int (len (rotate _t_17 (rotate zero (rotate zero _v_34))))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_21 _qv_22) _qv_23)=(append _qv_21 (append _qv_22 _qv_23))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate zero (rotate (succ zero) _v_34)))))=(nat-to-int (len (rotate _t_17 (rotate zero (rotate zero _v_34))))))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_24 _qv_25)=(plus _qv_25 _qv_24)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate zero (rotate (succ zero) _v_34)))))=(nat-to-int (len (rotate _t_17 (rotate zero (rotate zero _v_34))))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_26 _qv_27) _qv_28)=(plus _qv_26 (plus _qv_27 _qv_28))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate zero (rotate (succ zero) _v_34)))))=(nat-to-int (len (rotate _t_17 (rotate zero (rotate zero _v_34))))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_29)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate zero (rotate (succ zero) _v_34)))))=(nat-to-int (len (rotate _t_17 (rotate zero (rotate zero _v_34))))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_30))=(nat-to-int _qv_30)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate zero (rotate (succ zero) _v_34)))))=(nat-to-int (len (rotate _t_17 (rotate zero (rotate zero _v_34))))))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_31))=(nat-to-int _qv_31)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate zero (rotate (succ zero) _v_34)))))=(nat-to-int (len (rotate _t_17 (rotate zero (rotate zero _v_34))))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_32 _qv_33))=(plus (succ _qv_32) (succ _qv_33))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate zero (rotate (succ zero) _v_34)))))=(nat-to-int (len (rotate _t_17 (rotate zero (rotate zero _v_34))))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_32 _qv_33))=(plus (succ _qv_33) (succ _qv_32))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate zero (rotate (succ zero) _v_34)))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34)))))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_18))=_qv_18))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate zero (rotate (succ zero) _v_34)))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34)))))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_19 _qv_20)=(append _qv_20 _qv_19)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate zero (rotate (succ zero) _v_34)))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34)))))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_21 _qv_22) _qv_23)=(append _qv_21 (append _qv_22 _qv_23))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate zero (rotate (succ zero) _v_34)))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34)))))))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_24 _qv_25)=(plus _qv_25 _qv_24)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate zero (rotate (succ zero) _v_34)))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34)))))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_26 _qv_27) _qv_28)=(plus _qv_26 (plus _qv_27 _qv_28))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate zero (rotate (succ zero) _v_34)))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34)))))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_29)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate zero (rotate (succ zero) _v_34)))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34)))))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_30))=(nat-to-int _qv_30)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate zero (rotate (succ zero) _v_34)))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34)))))))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_31))=(nat-to-int _qv_31)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate zero (rotate (succ zero) _v_34)))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34)))))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_32 _qv_33))=(plus (succ _qv_32) (succ _qv_33))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate zero (rotate (succ zero) _v_34)))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34)))))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_32 _qv_33))=(plus (succ _qv_33) (succ _qv_32))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate zero (rotate (succ zero) _v_34)))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34)))))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_18))=_qv_18))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate zero (rotate (succ zero) _v_34)))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34)))))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_19 _qv_20)=(append _qv_20 _qv_19)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate zero (rotate (succ zero) _v_34)))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34)))))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_21 _qv_22) _qv_23)=(append _qv_21 (append _qv_22 _qv_23))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate zero (rotate (succ zero) _v_34)))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34)))))))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_24 _qv_25)=(plus _qv_25 _qv_24)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate zero (rotate (succ zero) _v_34)))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34)))))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_26 _qv_27) _qv_28)=(plus _qv_26 (plus _qv_27 _qv_28))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate zero (rotate (succ zero) _v_34)))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34)))))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_29)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate zero (rotate (succ zero) _v_34)))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34)))))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_30))=(nat-to-int _qv_30)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate zero (rotate (succ zero) _v_34)))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34)))))))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_31))=(nat-to-int _qv_31)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate zero (rotate (succ zero) _v_34)))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34)))))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_32 _qv_33))=(plus (succ _qv_32) (succ _qv_33))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate zero (rotate (succ zero) _v_34)))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34)))))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_32 _qv_33))=(plus (succ _qv_33) (succ _qv_32))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate zero (rotate (succ zero) _v_34)))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34)))))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_18))=_qv_18))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate zero (rotate (succ zero) _v_34)))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34)))))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_19 _qv_20)=(append _qv_20 _qv_19)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate zero (rotate (succ zero) _v_34)))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34)))))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_21 _qv_22) _qv_23)=(append _qv_21 (append _qv_22 _qv_23))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate zero (rotate (succ zero) _v_34)))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34)))))))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_24 _qv_25)=(plus _qv_25 _qv_24)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate zero (rotate (succ zero) _v_34)))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34)))))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_26 _qv_27) _qv_28)=(plus _qv_26 (plus _qv_27 _qv_28))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate zero (rotate (succ zero) _v_34)))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34)))))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_29)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate zero (rotate (succ zero) _v_34)))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34)))))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_30))=(nat-to-int _qv_30)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate zero (rotate (succ zero) _v_34)))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34)))))))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_31))=(nat-to-int _qv_31)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate zero (rotate (succ zero) _v_34)))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34)))))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_32 _qv_33))=(plus (succ _qv_32) (succ _qv_33))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate zero (rotate (succ zero) _v_34)))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34)))))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_32 _qv_33))=(plus (succ _qv_33) (succ _qv_32))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate zero (rotate (succ zero) _v_34)))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34)))))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_18))=_qv_18))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate zero (rotate (succ zero) _v_34)))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34)))))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_19 _qv_20)=(append _qv_20 _qv_19)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate zero (rotate (succ zero) _v_34)))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34)))))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_21 _qv_22) _qv_23)=(append _qv_21 (append _qv_22 _qv_23))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate zero (rotate (succ zero) _v_34)))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34)))))))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_24 _qv_25)=(plus _qv_25 _qv_24)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate zero (rotate (succ zero) _v_34)))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34)))))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_26 _qv_27) _qv_28)=(plus _qv_26 (plus _qv_27 _qv_28))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate zero (rotate (succ zero) _v_34)))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34)))))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_29)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate zero (rotate (succ zero) _v_34)))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34)))))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_30))=(nat-to-int _qv_30)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate zero (rotate (succ zero) _v_34)))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34)))))))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_31))=(nat-to-int _qv_31)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate zero (rotate (succ zero) _v_34)))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34)))))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_32 _qv_33))=(plus (succ _qv_32) (succ _qv_33))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate zero (rotate (succ zero) _v_34)))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34)))))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_32 _qv_33))=(plus (succ _qv_33) (succ _qv_32))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate zero (rotate (succ zero) _v_34))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34)))))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_18))=_qv_18))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate zero (rotate (succ zero) _v_34))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34)))))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_19 _qv_20)=(append _qv_20 _qv_19)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate zero (rotate (succ zero) _v_34))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34)))))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_21 _qv_22) _qv_23)=(append _qv_21 (append _qv_22 _qv_23))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate zero (rotate (succ zero) _v_34))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34)))))))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_24 _qv_25)=(plus _qv_25 _qv_24)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate zero (rotate (succ zero) _v_34))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34)))))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_26 _qv_27) _qv_28)=(plus _qv_26 (plus _qv_27 _qv_28))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate zero (rotate (succ zero) _v_34))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34)))))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_29)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate zero (rotate (succ zero) _v_34))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34)))))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_30))=(nat-to-int _qv_30)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate zero (rotate (succ zero) _v_34))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34)))))))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_31))=(nat-to-int _qv_31)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate zero (rotate (succ zero) _v_34))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34)))))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_32 _qv_33))=(plus (succ _qv_32) (succ _qv_33))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate zero (rotate (succ zero) _v_34))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34)))))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_32 _qv_33))=(plus (succ _qv_33) (succ _qv_32))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate zero (rotate (succ zero) _v_34))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34))))))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_18))=_qv_18))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate zero (rotate (succ zero) _v_34))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34))))))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_19 _qv_20)=(append _qv_20 _qv_19)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate zero (rotate (succ zero) _v_34))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34))))))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_21 _qv_22) _qv_23)=(append _qv_21 (append _qv_22 _qv_23))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate zero (rotate (succ zero) _v_34))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34))))))))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_24 _qv_25)=(plus _qv_25 _qv_24)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate zero (rotate (succ zero) _v_34))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34))))))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_26 _qv_27) _qv_28)=(plus _qv_26 (plus _qv_27 _qv_28))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate zero (rotate (succ zero) _v_34))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34))))))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_29)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate zero (rotate (succ zero) _v_34))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34))))))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_30))=(nat-to-int _qv_30)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate zero (rotate (succ zero) _v_34))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34))))))))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_31))=(nat-to-int _qv_31)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate zero (rotate (succ zero) _v_34))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34))))))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_32 _qv_33))=(plus (succ _qv_32) (succ _qv_33))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate zero (rotate (succ zero) _v_34))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34))))))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_32 _qv_33))=(plus (succ _qv_33) (succ _qv_32))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate zero (rotate (succ zero) _v_34))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34))))))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_18))=_qv_18))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate zero (rotate (succ zero) _v_34))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34))))))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_19 _qv_20)=(append _qv_20 _qv_19)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate zero (rotate (succ zero) _v_34))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34))))))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_21 _qv_22) _qv_23)=(append _qv_21 (append _qv_22 _qv_23))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate zero (rotate (succ zero) _v_34))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34))))))))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_24 _qv_25)=(plus _qv_25 _qv_24)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate zero (rotate (succ zero) _v_34))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34))))))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_26 _qv_27) _qv_28)=(plus _qv_26 (plus _qv_27 _qv_28))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate zero (rotate (succ zero) _v_34))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34))))))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_29)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate zero (rotate (succ zero) _v_34))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34))))))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_30))=(nat-to-int _qv_30)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate zero (rotate (succ zero) _v_34))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34))))))))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_31))=(nat-to-int _qv_31)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate zero (rotate (succ zero) _v_34))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34))))))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_32 _qv_33))=(plus (succ _qv_32) (succ _qv_33))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate zero (rotate (succ zero) _v_34))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34))))))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_32 _qv_33))=(plus (succ _qv_33) (succ _qv_32))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate zero (rotate (succ zero) _v_34))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34))))))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_18))=_qv_18))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate zero (rotate (succ zero) _v_34))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34))))))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_19 _qv_20)=(append _qv_20 _qv_19)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate zero (rotate (succ zero) _v_34))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34))))))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_21 _qv_22) _qv_23)=(append _qv_21 (append _qv_22 _qv_23))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate zero (rotate (succ zero) _v_34))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34))))))))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_24 _qv_25)=(plus _qv_25 _qv_24)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate zero (rotate (succ zero) _v_34))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34))))))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_26 _qv_27) _qv_28)=(plus _qv_26 (plus _qv_27 _qv_28))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate zero (rotate (succ zero) _v_34))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34))))))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_29)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate zero (rotate (succ zero) _v_34))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34))))))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_30))=(nat-to-int _qv_30)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate zero (rotate (succ zero) _v_34))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34))))))))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_31))=(nat-to-int _qv_31)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate zero (rotate (succ zero) _v_34))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34))))))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_32 _qv_33))=(plus (succ _qv_32) (succ _qv_33))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate zero (rotate (succ zero) _v_34))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34))))))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_32 _qv_33))=(plus (succ _qv_33) (succ _qv_32))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate zero (rotate (succ zero) _v_34))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34))))))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_18))=_qv_18))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate zero (rotate (succ zero) _v_34))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34))))))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_19 _qv_20)=(append _qv_20 _qv_19)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate zero (rotate (succ zero) _v_34))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34))))))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_21 _qv_22) _qv_23)=(append _qv_21 (append _qv_22 _qv_23))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate zero (rotate (succ zero) _v_34))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34))))))))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_24 _qv_25)=(plus _qv_25 _qv_24)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate zero (rotate (succ zero) _v_34))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34))))))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_26 _qv_27) _qv_28)=(plus _qv_26 (plus _qv_27 _qv_28))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate zero (rotate (succ zero) _v_34))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34))))))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_29)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate zero (rotate (succ zero) _v_34))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34))))))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_30))=(nat-to-int _qv_30)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate zero (rotate (succ zero) _v_34))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34))))))))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_31))=(nat-to-int _qv_31)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate zero (rotate (succ zero) _v_34))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34))))))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_32 _qv_33))=(plus (succ _qv_32) (succ _qv_33))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate zero (rotate (succ zero) _v_34))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34))))))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_32 _qv_33))=(plus (succ _qv_33) (succ _qv_32))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate zero (rotate (succ zero) _v_34))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34)))))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_18))=_qv_18))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate zero (rotate (succ zero) _v_34))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34)))))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_19 _qv_20)=(append _qv_20 _qv_19)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate zero (rotate (succ zero) _v_34))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34)))))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_21 _qv_22) _qv_23)=(append _qv_21 (append _qv_22 _qv_23))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate zero (rotate (succ zero) _v_34))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34)))))))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_24 _qv_25)=(plus _qv_25 _qv_24)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate zero (rotate (succ zero) _v_34))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34)))))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_26 _qv_27) _qv_28)=(plus _qv_26 (plus _qv_27 _qv_28))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate zero (rotate (succ zero) _v_34))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34)))))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_29)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate zero (rotate (succ zero) _v_34))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34)))))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_30))=(nat-to-int _qv_30)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate zero (rotate (succ zero) _v_34))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34)))))))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_31))=(nat-to-int _qv_31)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate zero (rotate (succ zero) _v_34))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34)))))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_32 _qv_33))=(plus (succ _qv_32) (succ _qv_33))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate zero (rotate (succ zero) _v_34))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34)))))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_32 _qv_33))=(plus (succ _qv_33) (succ _qv_32))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate zero (rotate (succ zero) _v_34)))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34)))))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_18))=_qv_18))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate zero (rotate (succ zero) _v_34)))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34)))))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_19 _qv_20)=(append _qv_20 _qv_19)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate zero (rotate (succ zero) _v_34)))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34)))))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_21 _qv_22) _qv_23)=(append _qv_21 (append _qv_22 _qv_23))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate zero (rotate (succ zero) _v_34)))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34)))))))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_24 _qv_25)=(plus _qv_25 _qv_24)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate zero (rotate (succ zero) _v_34)))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34)))))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_26 _qv_27) _qv_28)=(plus _qv_26 (plus _qv_27 _qv_28))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate zero (rotate (succ zero) _v_34)))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34)))))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_29)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate zero (rotate (succ zero) _v_34)))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34)))))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_30))=(nat-to-int _qv_30)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate zero (rotate (succ zero) _v_34)))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34)))))))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_31))=(nat-to-int _qv_31)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate zero (rotate (succ zero) _v_34)))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34)))))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_32 _qv_33))=(plus (succ _qv_32) (succ _qv_33))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate zero (rotate (succ zero) _v_34)))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34)))))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_32 _qv_33))=(plus (succ _qv_33) (succ _qv_32))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate zero (rotate (succ zero) _v_34)))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34)))))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_18))=_qv_18))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate zero (rotate (succ zero) _v_34)))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34)))))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_19 _qv_20)=(append _qv_20 _qv_19)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate zero (rotate (succ zero) _v_34)))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34)))))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_21 _qv_22) _qv_23)=(append _qv_21 (append _qv_22 _qv_23))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate zero (rotate (succ zero) _v_34)))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34)))))))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_24 _qv_25)=(plus _qv_25 _qv_24)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate zero (rotate (succ zero) _v_34)))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34)))))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_26 _qv_27) _qv_28)=(plus _qv_26 (plus _qv_27 _qv_28))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate zero (rotate (succ zero) _v_34)))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34)))))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_29)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate zero (rotate (succ zero) _v_34)))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34)))))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_30))=(nat-to-int _qv_30)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate zero (rotate (succ zero) _v_34)))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34)))))))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_31))=(nat-to-int _qv_31)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate zero (rotate (succ zero) _v_34)))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34)))))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_32 _qv_33))=(plus (succ _qv_32) (succ _qv_33))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate zero (rotate (succ zero) _v_34)))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34)))))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_32 _qv_33))=(plus (succ _qv_33) (succ _qv_32))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate zero (rotate (succ zero) _v_34)))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34)))))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_18))=_qv_18))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate zero (rotate (succ zero) _v_34)))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34)))))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_19 _qv_20)=(append _qv_20 _qv_19)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate zero (rotate (succ zero) _v_34)))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34)))))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_21 _qv_22) _qv_23)=(append _qv_21 (append _qv_22 _qv_23))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate zero (rotate (succ zero) _v_34)))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34)))))))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_24 _qv_25)=(plus _qv_25 _qv_24)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate zero (rotate (succ zero) _v_34)))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34)))))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_26 _qv_27) _qv_28)=(plus _qv_26 (plus _qv_27 _qv_28))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate zero (rotate (succ zero) _v_34)))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34)))))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_29)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate zero (rotate (succ zero) _v_34)))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34)))))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_30))=(nat-to-int _qv_30)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate zero (rotate (succ zero) _v_34)))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34)))))))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_31))=(nat-to-int _qv_31)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate zero (rotate (succ zero) _v_34)))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34)))))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_32 _qv_33))=(plus (succ _qv_32) (succ _qv_33))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate zero (rotate (succ zero) _v_34)))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34)))))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_32 _qv_33))=(plus (succ _qv_33) (succ _qv_32))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate zero (rotate (succ zero) _v_34)))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34)))))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_18))=_qv_18))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate zero (rotate (succ zero) _v_34)))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34)))))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_19 _qv_20)=(append _qv_20 _qv_19)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate zero (rotate (succ zero) _v_34)))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34)))))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_21 _qv_22) _qv_23)=(append _qv_21 (append _qv_22 _qv_23))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate zero (rotate (succ zero) _v_34)))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34)))))))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_24 _qv_25)=(plus _qv_25 _qv_24)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate zero (rotate (succ zero) _v_34)))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34)))))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_26 _qv_27) _qv_28)=(plus _qv_26 (plus _qv_27 _qv_28))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate zero (rotate (succ zero) _v_34)))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34)))))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_29)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate zero (rotate (succ zero) _v_34)))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34)))))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_30))=(nat-to-int _qv_30)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate zero (rotate (succ zero) _v_34)))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34)))))))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_31))=(nat-to-int _qv_31)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate zero (rotate (succ zero) _v_34)))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34)))))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_32 _qv_33))=(plus (succ _qv_32) (succ _qv_33))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate zero (rotate (succ zero) _v_34)))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34)))))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_32 _qv_33))=(plus (succ _qv_33) (succ _qv_32))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate zero (rotate (succ zero) _v_34))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34)))))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_18))=_qv_18))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate zero (rotate (succ zero) _v_34))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34)))))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_19 _qv_20)=(append _qv_20 _qv_19)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate zero (rotate (succ zero) _v_34))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34)))))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_21 _qv_22) _qv_23)=(append _qv_21 (append _qv_22 _qv_23))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate zero (rotate (succ zero) _v_34))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34)))))))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_24 _qv_25)=(plus _qv_25 _qv_24)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate zero (rotate (succ zero) _v_34))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34)))))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_26 _qv_27) _qv_28)=(plus _qv_26 (plus _qv_27 _qv_28))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate zero (rotate (succ zero) _v_34))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34)))))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_29)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate zero (rotate (succ zero) _v_34))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34)))))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_30))=(nat-to-int _qv_30)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate zero (rotate (succ zero) _v_34))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34)))))))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_31))=(nat-to-int _qv_31)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate zero (rotate (succ zero) _v_34))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34)))))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_32 _qv_33))=(plus (succ _qv_32) (succ _qv_33))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate zero (rotate (succ zero) _v_34))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34)))))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_32 _qv_33))=(plus (succ _qv_33) (succ _qv_32))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate zero (rotate (succ zero) _v_34))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34))))))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_18))=_qv_18))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate zero (rotate (succ zero) _v_34))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34))))))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_19 _qv_20)=(append _qv_20 _qv_19)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate zero (rotate (succ zero) _v_34))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34))))))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_21 _qv_22) _qv_23)=(append _qv_21 (append _qv_22 _qv_23))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate zero (rotate (succ zero) _v_34))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34))))))))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_24 _qv_25)=(plus _qv_25 _qv_24)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate zero (rotate (succ zero) _v_34))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34))))))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_26 _qv_27) _qv_28)=(plus _qv_26 (plus _qv_27 _qv_28))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate zero (rotate (succ zero) _v_34))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34))))))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_29)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate zero (rotate (succ zero) _v_34))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34))))))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_30))=(nat-to-int _qv_30)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate zero (rotate (succ zero) _v_34))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34))))))))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_31))=(nat-to-int _qv_31)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate zero (rotate (succ zero) _v_34))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34))))))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_32 _qv_33))=(plus (succ _qv_32) (succ _qv_33))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate zero (rotate (succ zero) _v_34))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34))))))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_32 _qv_33))=(plus (succ _qv_33) (succ _qv_32))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate zero (rotate (succ zero) _v_34))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34))))))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_18))=_qv_18))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate zero (rotate (succ zero) _v_34))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34))))))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_19 _qv_20)=(append _qv_20 _qv_19)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate zero (rotate (succ zero) _v_34))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34))))))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_21 _qv_22) _qv_23)=(append _qv_21 (append _qv_22 _qv_23))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate zero (rotate (succ zero) _v_34))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34))))))))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_24 _qv_25)=(plus _qv_25 _qv_24)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate zero (rotate (succ zero) _v_34))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34))))))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_26 _qv_27) _qv_28)=(plus _qv_26 (plus _qv_27 _qv_28))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate zero (rotate (succ zero) _v_34))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34))))))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_29)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate zero (rotate (succ zero) _v_34))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34))))))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_30))=(nat-to-int _qv_30)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate zero (rotate (succ zero) _v_34))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34))))))))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_31))=(nat-to-int _qv_31)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate zero (rotate (succ zero) _v_34))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34))))))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_32 _qv_33))=(plus (succ _qv_32) (succ _qv_33))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate zero (rotate (succ zero) _v_34))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34))))))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_32 _qv_33))=(plus (succ _qv_33) (succ _qv_32))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate zero (rotate (succ zero) _v_34))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34))))))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_18))=_qv_18))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate zero (rotate (succ zero) _v_34))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34))))))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_19 _qv_20)=(append _qv_20 _qv_19)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate zero (rotate (succ zero) _v_34))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34))))))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_21 _qv_22) _qv_23)=(append _qv_21 (append _qv_22 _qv_23))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate zero (rotate (succ zero) _v_34))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34))))))))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_24 _qv_25)=(plus _qv_25 _qv_24)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate zero (rotate (succ zero) _v_34))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34))))))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_26 _qv_27) _qv_28)=(plus _qv_26 (plus _qv_27 _qv_28))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate zero (rotate (succ zero) _v_34))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34))))))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_29)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate zero (rotate (succ zero) _v_34))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34))))))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_30))=(nat-to-int _qv_30)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate zero (rotate (succ zero) _v_34))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34))))))))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_31))=(nat-to-int _qv_31)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate zero (rotate (succ zero) _v_34))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34))))))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_32 _qv_33))=(plus (succ _qv_32) (succ _qv_33))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate zero (rotate (succ zero) _v_34))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34))))))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_32 _qv_33))=(plus (succ _qv_33) (succ _qv_32))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate zero (rotate (succ zero) _v_34))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34))))))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_18))=_qv_18))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate zero (rotate (succ zero) _v_34))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34))))))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_19 _qv_20)=(append _qv_20 _qv_19)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate zero (rotate (succ zero) _v_34))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34))))))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_21 _qv_22) _qv_23)=(append _qv_21 (append _qv_22 _qv_23))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate zero (rotate (succ zero) _v_34))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34))))))))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_24 _qv_25)=(plus _qv_25 _qv_24)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate zero (rotate (succ zero) _v_34))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34))))))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_26 _qv_27) _qv_28)=(plus _qv_26 (plus _qv_27 _qv_28))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate zero (rotate (succ zero) _v_34))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34))))))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_29)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate zero (rotate (succ zero) _v_34))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34))))))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_30))=(nat-to-int _qv_30)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate zero (rotate (succ zero) _v_34))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34))))))))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_31))=(nat-to-int _qv_31)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate zero (rotate (succ zero) _v_34))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34))))))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_32 _qv_33))=(plus (succ _qv_32) (succ _qv_33))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate zero (rotate (succ zero) _v_34))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34))))))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_32 _qv_33))=(plus (succ _qv_33) (succ _qv_32))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate zero (rotate (succ zero) _v_34))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34)))))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_18))=_qv_18))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate zero (rotate (succ zero) _v_34))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34)))))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_19 _qv_20)=(append _qv_20 _qv_19)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate zero (rotate (succ zero) _v_34))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34)))))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_21 _qv_22) _qv_23)=(append _qv_21 (append _qv_22 _qv_23))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate zero (rotate (succ zero) _v_34))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34)))))))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_24 _qv_25)=(plus _qv_25 _qv_24)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate zero (rotate (succ zero) _v_34))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34)))))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_26 _qv_27) _qv_28)=(plus _qv_26 (plus _qv_27 _qv_28))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate zero (rotate (succ zero) _v_34))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34)))))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_29)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate zero (rotate (succ zero) _v_34))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34)))))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_30))=(nat-to-int _qv_30)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate zero (rotate (succ zero) _v_34))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34)))))))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_31))=(nat-to-int _qv_31)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate zero (rotate (succ zero) _v_34))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34)))))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_32 _qv_33))=(plus (succ _qv_32) (succ _qv_33))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate zero (rotate (succ zero) _v_34))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34)))))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_32 _qv_33))=(plus (succ _qv_33) (succ _qv_32))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate zero (rotate (succ zero) _v_34))))=(nat-to-int (len (rotate _t_17 (rotate zero (rotate zero _v_34))))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_18))=_qv_18))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate zero (rotate (succ zero) _v_34))))=(nat-to-int (len (rotate _t_17 (rotate zero (rotate zero _v_34))))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_19 _qv_20)=(append _qv_20 _qv_19)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate zero (rotate (succ zero) _v_34))))=(nat-to-int (len (rotate _t_17 (rotate zero (rotate zero _v_34))))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_21 _qv_22) _qv_23)=(append _qv_21 (append _qv_22 _qv_23))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate zero (rotate (succ zero) _v_34))))=(nat-to-int (len (rotate _t_17 (rotate zero (rotate zero _v_34))))))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_24 _qv_25)=(plus _qv_25 _qv_24)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate zero (rotate (succ zero) _v_34))))=(nat-to-int (len (rotate _t_17 (rotate zero (rotate zero _v_34))))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_26 _qv_27) _qv_28)=(plus _qv_26 (plus _qv_27 _qv_28))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate zero (rotate (succ zero) _v_34))))=(nat-to-int (len (rotate _t_17 (rotate zero (rotate zero _v_34))))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_29)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate zero (rotate (succ zero) _v_34))))=(nat-to-int (len (rotate _t_17 (rotate zero (rotate zero _v_34))))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_30))=(nat-to-int _qv_30)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate zero (rotate (succ zero) _v_34))))=(nat-to-int (len (rotate _t_17 (rotate zero (rotate zero _v_34))))))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_31))=(nat-to-int _qv_31)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate zero (rotate (succ zero) _v_34))))=(nat-to-int (len (rotate _t_17 (rotate zero (rotate zero _v_34))))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_32 _qv_33))=(plus (succ _qv_32) (succ _qv_33))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate zero (rotate (succ zero) _v_34))))=(nat-to-int (len (rotate _t_17 (rotate zero (rotate zero _v_34))))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_32 _qv_33))=(plus (succ _qv_33) (succ _qv_32))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate zero (rotate (succ zero) _v_34)))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34)))))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_18))=_qv_18))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate zero (rotate (succ zero) _v_34)))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34)))))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_19 _qv_20)=(append _qv_20 _qv_19)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate zero (rotate (succ zero) _v_34)))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34)))))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_21 _qv_22) _qv_23)=(append _qv_21 (append _qv_22 _qv_23))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate zero (rotate (succ zero) _v_34)))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34)))))))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_24 _qv_25)=(plus _qv_25 _qv_24)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate zero (rotate (succ zero) _v_34)))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34)))))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_26 _qv_27) _qv_28)=(plus _qv_26 (plus _qv_27 _qv_28))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate zero (rotate (succ zero) _v_34)))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34)))))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_29)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate zero (rotate (succ zero) _v_34)))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34)))))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_30))=(nat-to-int _qv_30)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate zero (rotate (succ zero) _v_34)))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34)))))))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_31))=(nat-to-int _qv_31)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate zero (rotate (succ zero) _v_34)))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34)))))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_32 _qv_33))=(plus (succ _qv_32) (succ _qv_33))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate zero (rotate (succ zero) _v_34)))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34)))))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_32 _qv_33))=(plus (succ _qv_33) (succ _qv_32))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate zero (rotate (succ zero) _v_34)))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34)))))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_18))=_qv_18))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate zero (rotate (succ zero) _v_34)))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34)))))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_19 _qv_20)=(append _qv_20 _qv_19)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate zero (rotate (succ zero) _v_34)))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34)))))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_21 _qv_22) _qv_23)=(append _qv_21 (append _qv_22 _qv_23))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate zero (rotate (succ zero) _v_34)))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34)))))))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_24 _qv_25)=(plus _qv_25 _qv_24)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate zero (rotate (succ zero) _v_34)))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34)))))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_26 _qv_27) _qv_28)=(plus _qv_26 (plus _qv_27 _qv_28))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate zero (rotate (succ zero) _v_34)))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34)))))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_29)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate zero (rotate (succ zero) _v_34)))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34)))))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_30))=(nat-to-int _qv_30)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate zero (rotate (succ zero) _v_34)))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34)))))))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_31))=(nat-to-int _qv_31)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate zero (rotate (succ zero) _v_34)))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34)))))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_32 _qv_33))=(plus (succ _qv_32) (succ _qv_33))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate zero (rotate (succ zero) _v_34)))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34)))))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_32 _qv_33))=(plus (succ _qv_33) (succ _qv_32))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate zero (rotate (succ zero) _v_34)))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34)))))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_18))=_qv_18))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate zero (rotate (succ zero) _v_34)))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34)))))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_19 _qv_20)=(append _qv_20 _qv_19)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate zero (rotate (succ zero) _v_34)))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34)))))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_21 _qv_22) _qv_23)=(append _qv_21 (append _qv_22 _qv_23))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate zero (rotate (succ zero) _v_34)))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34)))))))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_24 _qv_25)=(plus _qv_25 _qv_24)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate zero (rotate (succ zero) _v_34)))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34)))))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_26 _qv_27) _qv_28)=(plus _qv_26 (plus _qv_27 _qv_28))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate zero (rotate (succ zero) _v_34)))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34)))))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_29)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate zero (rotate (succ zero) _v_34)))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34)))))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_30))=(nat-to-int _qv_30)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate zero (rotate (succ zero) _v_34)))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34)))))))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_31))=(nat-to-int _qv_31)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate zero (rotate (succ zero) _v_34)))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34)))))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_32 _qv_33))=(plus (succ _qv_32) (succ _qv_33))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate zero (rotate (succ zero) _v_34)))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34)))))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_32 _qv_33))=(plus (succ _qv_33) (succ _qv_32))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate zero (rotate (succ zero) _v_34)))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34)))))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_18))=_qv_18))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate zero (rotate (succ zero) _v_34)))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34)))))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_19 _qv_20)=(append _qv_20 _qv_19)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate zero (rotate (succ zero) _v_34)))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34)))))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_21 _qv_22) _qv_23)=(append _qv_21 (append _qv_22 _qv_23))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate zero (rotate (succ zero) _v_34)))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34)))))))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_24 _qv_25)=(plus _qv_25 _qv_24)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate zero (rotate (succ zero) _v_34)))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34)))))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_26 _qv_27) _qv_28)=(plus _qv_26 (plus _qv_27 _qv_28))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate zero (rotate (succ zero) _v_34)))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34)))))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_29)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate zero (rotate (succ zero) _v_34)))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34)))))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_30))=(nat-to-int _qv_30)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate zero (rotate (succ zero) _v_34)))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34)))))))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_31))=(nat-to-int _qv_31)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate zero (rotate (succ zero) _v_34)))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34)))))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_32 _qv_33))=(plus (succ _qv_32) (succ _qv_33))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate zero (rotate (succ zero) _v_34)))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34)))))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_32 _qv_33))=(plus (succ _qv_33) (succ _qv_32))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate zero (rotate (succ zero) _v_34))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34)))))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_18))=_qv_18))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate zero (rotate (succ zero) _v_34))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34)))))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_19 _qv_20)=(append _qv_20 _qv_19)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate zero (rotate (succ zero) _v_34))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34)))))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_21 _qv_22) _qv_23)=(append _qv_21 (append _qv_22 _qv_23))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate zero (rotate (succ zero) _v_34))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34)))))))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_24 _qv_25)=(plus _qv_25 _qv_24)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate zero (rotate (succ zero) _v_34))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34)))))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_26 _qv_27) _qv_28)=(plus _qv_26 (plus _qv_27 _qv_28))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate zero (rotate (succ zero) _v_34))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34)))))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_29)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate zero (rotate (succ zero) _v_34))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34)))))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_30))=(nat-to-int _qv_30)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate zero (rotate (succ zero) _v_34))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34)))))))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_31))=(nat-to-int _qv_31)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate zero (rotate (succ zero) _v_34))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34)))))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_32 _qv_33))=(plus (succ _qv_32) (succ _qv_33))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate zero (rotate (succ zero) _v_34))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34)))))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_32 _qv_33))=(plus (succ _qv_33) (succ _qv_32))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate zero (rotate (succ zero) _v_34))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34))))))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_18))=_qv_18))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate zero (rotate (succ zero) _v_34))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34))))))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_19 _qv_20)=(append _qv_20 _qv_19)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate zero (rotate (succ zero) _v_34))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34))))))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_21 _qv_22) _qv_23)=(append _qv_21 (append _qv_22 _qv_23))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate zero (rotate (succ zero) _v_34))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34))))))))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_24 _qv_25)=(plus _qv_25 _qv_24)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate zero (rotate (succ zero) _v_34))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34))))))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_26 _qv_27) _qv_28)=(plus _qv_26 (plus _qv_27 _qv_28))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate zero (rotate (succ zero) _v_34))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34))))))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_29)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate zero (rotate (succ zero) _v_34))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34))))))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_30))=(nat-to-int _qv_30)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate zero (rotate (succ zero) _v_34))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34))))))))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_31))=(nat-to-int _qv_31)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate zero (rotate (succ zero) _v_34))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34))))))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_32 _qv_33))=(plus (succ _qv_32) (succ _qv_33))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate zero (rotate (succ zero) _v_34))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34))))))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_32 _qv_33))=(plus (succ _qv_33) (succ _qv_32))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate zero (rotate (succ zero) _v_34))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34))))))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_18))=_qv_18))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate zero (rotate (succ zero) _v_34))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34))))))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_19 _qv_20)=(append _qv_20 _qv_19)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate zero (rotate (succ zero) _v_34))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34))))))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_21 _qv_22) _qv_23)=(append _qv_21 (append _qv_22 _qv_23))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate zero (rotate (succ zero) _v_34))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34))))))))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_24 _qv_25)=(plus _qv_25 _qv_24)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate zero (rotate (succ zero) _v_34))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34))))))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_26 _qv_27) _qv_28)=(plus _qv_26 (plus _qv_27 _qv_28))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate zero (rotate (succ zero) _v_34))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34))))))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_29)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate zero (rotate (succ zero) _v_34))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34))))))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_30))=(nat-to-int _qv_30)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate zero (rotate (succ zero) _v_34))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34))))))))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_31))=(nat-to-int _qv_31)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate zero (rotate (succ zero) _v_34))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34))))))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_32 _qv_33))=(plus (succ _qv_32) (succ _qv_33))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate zero (rotate (succ zero) _v_34))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34))))))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_32 _qv_33))=(plus (succ _qv_33) (succ _qv_32))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate zero (rotate (succ zero) _v_34))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34))))))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_18))=_qv_18))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate zero (rotate (succ zero) _v_34))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34))))))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_19 _qv_20)=(append _qv_20 _qv_19)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate zero (rotate (succ zero) _v_34))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34))))))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_21 _qv_22) _qv_23)=(append _qv_21 (append _qv_22 _qv_23))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate zero (rotate (succ zero) _v_34))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34))))))))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_24 _qv_25)=(plus _qv_25 _qv_24)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate zero (rotate (succ zero) _v_34))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34))))))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_26 _qv_27) _qv_28)=(plus _qv_26 (plus _qv_27 _qv_28))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate zero (rotate (succ zero) _v_34))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34))))))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_29)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate zero (rotate (succ zero) _v_34))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34))))))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_30))=(nat-to-int _qv_30)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate zero (rotate (succ zero) _v_34))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34))))))))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_31))=(nat-to-int _qv_31)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate zero (rotate (succ zero) _v_34))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34))))))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_32 _qv_33))=(plus (succ _qv_32) (succ _qv_33))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate zero (rotate (succ zero) _v_34))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34))))))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_32 _qv_33))=(plus (succ _qv_33) (succ _qv_32))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate zero (rotate (succ zero) _v_34))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34))))))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_18))=_qv_18))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate zero (rotate (succ zero) _v_34))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34))))))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_19 _qv_20)=(append _qv_20 _qv_19)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate zero (rotate (succ zero) _v_34))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34))))))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_21 _qv_22) _qv_23)=(append _qv_21 (append _qv_22 _qv_23))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate zero (rotate (succ zero) _v_34))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34))))))))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_24 _qv_25)=(plus _qv_25 _qv_24)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate zero (rotate (succ zero) _v_34))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34))))))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_26 _qv_27) _qv_28)=(plus _qv_26 (plus _qv_27 _qv_28))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate zero (rotate (succ zero) _v_34))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34))))))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_29)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate zero (rotate (succ zero) _v_34))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34))))))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_30))=(nat-to-int _qv_30)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate zero (rotate (succ zero) _v_34))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34))))))))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_31))=(nat-to-int _qv_31)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate zero (rotate (succ zero) _v_34))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34))))))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_32 _qv_33))=(plus (succ _qv_32) (succ _qv_33))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate zero (rotate (succ zero) _v_34))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34))))))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_32 _qv_33))=(plus (succ _qv_33) (succ _qv_32))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate zero (rotate (succ zero) _v_34))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34)))))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_18))=_qv_18))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate zero (rotate (succ zero) _v_34))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34)))))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_19 _qv_20)=(append _qv_20 _qv_19)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate zero (rotate (succ zero) _v_34))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34)))))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_21 _qv_22) _qv_23)=(append _qv_21 (append _qv_22 _qv_23))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate zero (rotate (succ zero) _v_34))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34)))))))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_24 _qv_25)=(plus _qv_25 _qv_24)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate zero (rotate (succ zero) _v_34))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34)))))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_26 _qv_27) _qv_28)=(plus _qv_26 (plus _qv_27 _qv_28))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate zero (rotate (succ zero) _v_34))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34)))))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_29)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate zero (rotate (succ zero) _v_34))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34)))))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_30))=(nat-to-int _qv_30)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate zero (rotate (succ zero) _v_34))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34)))))))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_31))=(nat-to-int _qv_31)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate zero (rotate (succ zero) _v_34))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34)))))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_32 _qv_33))=(plus (succ _qv_32) (succ _qv_33))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate zero (rotate (succ zero) _v_34))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34)))))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_32 _qv_33))=(plus (succ _qv_33) (succ _qv_32))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate zero (rotate (succ zero) _v_34)))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34)))))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_18))=_qv_18))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate zero (rotate (succ zero) _v_34)))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34)))))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_19 _qv_20)=(append _qv_20 _qv_19)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate zero (rotate (succ zero) _v_34)))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34)))))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_21 _qv_22) _qv_23)=(append _qv_21 (append _qv_22 _qv_23))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate zero (rotate (succ zero) _v_34)))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34)))))))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_24 _qv_25)=(plus _qv_25 _qv_24)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate zero (rotate (succ zero) _v_34)))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34)))))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_26 _qv_27) _qv_28)=(plus _qv_26 (plus _qv_27 _qv_28))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate zero (rotate (succ zero) _v_34)))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34)))))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_29)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate zero (rotate (succ zero) _v_34)))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34)))))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_30))=(nat-to-int _qv_30)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate zero (rotate (succ zero) _v_34)))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34)))))))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_31))=(nat-to-int _qv_31)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate zero (rotate (succ zero) _v_34)))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34)))))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_32 _qv_33))=(plus (succ _qv_32) (succ _qv_33))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate zero (rotate (succ zero) _v_34)))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34)))))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_32 _qv_33))=(plus (succ _qv_33) (succ _qv_32))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate zero (rotate (succ zero) _v_34)))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34)))))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_18))=_qv_18))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate zero (rotate (succ zero) _v_34)))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34)))))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_19 _qv_20)=(append _qv_20 _qv_19)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate zero (rotate (succ zero) _v_34)))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34)))))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_21 _qv_22) _qv_23)=(append _qv_21 (append _qv_22 _qv_23))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate zero (rotate (succ zero) _v_34)))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34)))))))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_24 _qv_25)=(plus _qv_25 _qv_24)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate zero (rotate (succ zero) _v_34)))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34)))))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_26 _qv_27) _qv_28)=(plus _qv_26 (plus _qv_27 _qv_28))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate zero (rotate (succ zero) _v_34)))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34)))))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_29)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate zero (rotate (succ zero) _v_34)))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34)))))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_30))=(nat-to-int _qv_30)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate zero (rotate (succ zero) _v_34)))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34)))))))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_31))=(nat-to-int _qv_31)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate zero (rotate (succ zero) _v_34)))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34)))))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_32 _qv_33))=(plus (succ _qv_32) (succ _qv_33))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate zero (rotate (succ zero) _v_34)))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34)))))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_32 _qv_33))=(plus (succ _qv_33) (succ _qv_32))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate zero (rotate (succ zero) _v_34)))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34)))))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_18))=_qv_18))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate zero (rotate (succ zero) _v_34)))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34)))))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_19 _qv_20)=(append _qv_20 _qv_19)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate zero (rotate (succ zero) _v_34)))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34)))))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_21 _qv_22) _qv_23)=(append _qv_21 (append _qv_22 _qv_23))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate zero (rotate (succ zero) _v_34)))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34)))))))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_24 _qv_25)=(plus _qv_25 _qv_24)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate zero (rotate (succ zero) _v_34)))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34)))))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_26 _qv_27) _qv_28)=(plus _qv_26 (plus _qv_27 _qv_28))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate zero (rotate (succ zero) _v_34)))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34)))))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_29)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate zero (rotate (succ zero) _v_34)))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34)))))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_30))=(nat-to-int _qv_30)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate zero (rotate (succ zero) _v_34)))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34)))))))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_31))=(nat-to-int _qv_31)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate zero (rotate (succ zero) _v_34)))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34)))))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_32 _qv_33))=(plus (succ _qv_32) (succ _qv_33))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate zero (rotate (succ zero) _v_34)))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34)))))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_32 _qv_33))=(plus (succ _qv_33) (succ _qv_32))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate zero (rotate (succ zero) _v_34)))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34)))))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_18))=_qv_18))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate zero (rotate (succ zero) _v_34)))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34)))))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_19 _qv_20)=(append _qv_20 _qv_19)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate zero (rotate (succ zero) _v_34)))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34)))))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_21 _qv_22) _qv_23)=(append _qv_21 (append _qv_22 _qv_23))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate zero (rotate (succ zero) _v_34)))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34)))))))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_24 _qv_25)=(plus _qv_25 _qv_24)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate zero (rotate (succ zero) _v_34)))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34)))))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_26 _qv_27) _qv_28)=(plus _qv_26 (plus _qv_27 _qv_28))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate zero (rotate (succ zero) _v_34)))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34)))))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_29)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate zero (rotate (succ zero) _v_34)))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34)))))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_30))=(nat-to-int _qv_30)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate zero (rotate (succ zero) _v_34)))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34)))))))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_31))=(nat-to-int _qv_31)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate zero (rotate (succ zero) _v_34)))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34)))))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_32 _qv_33))=(plus (succ _qv_32) (succ _qv_33))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate zero (rotate (succ zero) _v_34)))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34)))))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_32 _qv_33))=(plus (succ _qv_33) (succ _qv_32))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate zero (rotate (succ zero) _v_34))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34)))))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_18))=_qv_18))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate zero (rotate (succ zero) _v_34))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34)))))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_19 _qv_20)=(append _qv_20 _qv_19)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate zero (rotate (succ zero) _v_34))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34)))))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_21 _qv_22) _qv_23)=(append _qv_21 (append _qv_22 _qv_23))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate zero (rotate (succ zero) _v_34))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34)))))))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_24 _qv_25)=(plus _qv_25 _qv_24)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate zero (rotate (succ zero) _v_34))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34)))))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_26 _qv_27) _qv_28)=(plus _qv_26 (plus _qv_27 _qv_28))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate zero (rotate (succ zero) _v_34))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34)))))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_29)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate zero (rotate (succ zero) _v_34))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34)))))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_30))=(nat-to-int _qv_30)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate zero (rotate (succ zero) _v_34))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34)))))))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_31))=(nat-to-int _qv_31)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate zero (rotate (succ zero) _v_34))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34)))))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_32 _qv_33))=(plus (succ _qv_32) (succ _qv_33))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate zero (rotate (succ zero) _v_34))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34)))))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_32 _qv_33))=(plus (succ _qv_33) (succ _qv_32))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate zero (rotate (succ zero) _v_34))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34))))))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_18))=_qv_18))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate zero (rotate (succ zero) _v_34))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34))))))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_19 _qv_20)=(append _qv_20 _qv_19)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate zero (rotate (succ zero) _v_34))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34))))))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_21 _qv_22) _qv_23)=(append _qv_21 (append _qv_22 _qv_23))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate zero (rotate (succ zero) _v_34))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34))))))))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_24 _qv_25)=(plus _qv_25 _qv_24)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate zero (rotate (succ zero) _v_34))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34))))))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_26 _qv_27) _qv_28)=(plus _qv_26 (plus _qv_27 _qv_28))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate zero (rotate (succ zero) _v_34))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34))))))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_29)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate zero (rotate (succ zero) _v_34))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34))))))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_30))=(nat-to-int _qv_30)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate zero (rotate (succ zero) _v_34))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34))))))))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_31))=(nat-to-int _qv_31)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate zero (rotate (succ zero) _v_34))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34))))))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_32 _qv_33))=(plus (succ _qv_32) (succ _qv_33))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate zero (rotate (succ zero) _v_34))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34))))))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_32 _qv_33))=(plus (succ _qv_33) (succ _qv_32))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate zero (rotate (succ zero) _v_34))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34))))))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_18))=_qv_18))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate zero (rotate (succ zero) _v_34))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34))))))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_19 _qv_20)=(append _qv_20 _qv_19)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate zero (rotate (succ zero) _v_34))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34))))))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_21 _qv_22) _qv_23)=(append _qv_21 (append _qv_22 _qv_23))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate zero (rotate (succ zero) _v_34))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34))))))))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_24 _qv_25)=(plus _qv_25 _qv_24)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate zero (rotate (succ zero) _v_34))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34))))))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_26 _qv_27) _qv_28)=(plus _qv_26 (plus _qv_27 _qv_28))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate zero (rotate (succ zero) _v_34))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34))))))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_29)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate zero (rotate (succ zero) _v_34))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34))))))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_30))=(nat-to-int _qv_30)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate zero (rotate (succ zero) _v_34))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34))))))))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_31))=(nat-to-int _qv_31)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate zero (rotate (succ zero) _v_34))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34))))))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_32 _qv_33))=(plus (succ _qv_32) (succ _qv_33))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate zero (rotate (succ zero) _v_34))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34))))))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_32 _qv_33))=(plus (succ _qv_33) (succ _qv_32))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate zero (rotate (succ zero) _v_34))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34))))))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_18))=_qv_18))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate zero (rotate (succ zero) _v_34))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34))))))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_19 _qv_20)=(append _qv_20 _qv_19)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate zero (rotate (succ zero) _v_34))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34))))))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_21 _qv_22) _qv_23)=(append _qv_21 (append _qv_22 _qv_23))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate zero (rotate (succ zero) _v_34))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34))))))))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_24 _qv_25)=(plus _qv_25 _qv_24)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate zero (rotate (succ zero) _v_34))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34))))))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_26 _qv_27) _qv_28)=(plus _qv_26 (plus _qv_27 _qv_28))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate zero (rotate (succ zero) _v_34))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34))))))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_29)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate zero (rotate (succ zero) _v_34))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34))))))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_30))=(nat-to-int _qv_30)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate zero (rotate (succ zero) _v_34))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34))))))))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_31))=(nat-to-int _qv_31)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate zero (rotate (succ zero) _v_34))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34))))))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_32 _qv_33))=(plus (succ _qv_32) (succ _qv_33))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate zero (rotate (succ zero) _v_34))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34))))))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_32 _qv_33))=(plus (succ _qv_33) (succ _qv_32))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate zero (rotate (succ zero) _v_34))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34))))))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_18))=_qv_18))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate zero (rotate (succ zero) _v_34))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34))))))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_19 _qv_20)=(append _qv_20 _qv_19)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate zero (rotate (succ zero) _v_34))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34))))))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_21 _qv_22) _qv_23)=(append _qv_21 (append _qv_22 _qv_23))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate zero (rotate (succ zero) _v_34))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34))))))))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_24 _qv_25)=(plus _qv_25 _qv_24)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate zero (rotate (succ zero) _v_34))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34))))))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_26 _qv_27) _qv_28)=(plus _qv_26 (plus _qv_27 _qv_28))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate zero (rotate (succ zero) _v_34))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34))))))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_29)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate zero (rotate (succ zero) _v_34))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34))))))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_30))=(nat-to-int _qv_30)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate zero (rotate (succ zero) _v_34))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34))))))))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_31))=(nat-to-int _qv_31)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate zero (rotate (succ zero) _v_34))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34))))))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_32 _qv_33))=(plus (succ _qv_32) (succ _qv_33))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate zero (rotate (succ zero) _v_34))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34))))))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_32 _qv_33))=(plus (succ _qv_33) (succ _qv_32))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate zero (rotate (succ zero) _v_34))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34)))))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_18))=_qv_18))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate zero (rotate (succ zero) _v_34))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34)))))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_19 _qv_20)=(append _qv_20 _qv_19)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate zero (rotate (succ zero) _v_34))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34)))))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_21 _qv_22) _qv_23)=(append _qv_21 (append _qv_22 _qv_23))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate zero (rotate (succ zero) _v_34))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34)))))))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_24 _qv_25)=(plus _qv_25 _qv_24)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate zero (rotate (succ zero) _v_34))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34)))))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_26 _qv_27) _qv_28)=(plus _qv_26 (plus _qv_27 _qv_28))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate zero (rotate (succ zero) _v_34))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34)))))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_29)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate zero (rotate (succ zero) _v_34))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34)))))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_30))=(nat-to-int _qv_30)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate zero (rotate (succ zero) _v_34))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34)))))))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_31))=(nat-to-int _qv_31)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate zero (rotate (succ zero) _v_34))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34)))))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_32 _qv_33))=(plus (succ _qv_32) (succ _qv_33))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate zero (rotate (succ zero) _v_34))))=(nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate zero (rotate zero _v_34)))))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_32 _qv_33))=(plus (succ _qv_33) (succ _qv_32))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate zero (rotate (succ zero) _v_34))))=(nat-to-int (len (rotate _t_17 (rotate zero (rotate zero _v_34))))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_18))=_qv_18))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate zero (rotate (succ zero) _v_34))))=(nat-to-int (len (rotate _t_17 (rotate zero (rotate zero _v_34))))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_19 _qv_20)=(append _qv_20 _qv_19)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate zero (rotate (succ zero) _v_34))))=(nat-to-int (len (rotate _t_17 (rotate zero (rotate zero _v_34))))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_21 _qv_22) _qv_23)=(append _qv_21 (append _qv_22 _qv_23))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate zero (rotate (succ zero) _v_34))))=(nat-to-int (len (rotate _t_17 (rotate zero (rotate zero _v_34))))))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_24 _qv_25)=(plus _qv_25 _qv_24)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate zero (rotate (succ zero) _v_34))))=(nat-to-int (len (rotate _t_17 (rotate zero (rotate zero _v_34))))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_26 _qv_27) _qv_28)=(plus _qv_26 (plus _qv_27 _qv_28))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate zero (rotate (succ zero) _v_34))))=(nat-to-int (len (rotate _t_17 (rotate zero (rotate zero _v_34))))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_29)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate zero (rotate (succ zero) _v_34))))=(nat-to-int (len (rotate _t_17 (rotate zero (rotate zero _v_34))))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_30))=(nat-to-int _qv_30)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate zero (rotate (succ zero) _v_34))))=(nat-to-int (len (rotate _t_17 (rotate zero (rotate zero _v_34))))))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_31))=(nat-to-int _qv_31)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate zero (rotate (succ zero) _v_34))))=(nat-to-int (len (rotate _t_17 (rotate zero (rotate zero _v_34))))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_32 _qv_33))=(plus (succ _qv_32) (succ _qv_33))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate zero (rotate (succ zero) _v_34))))=(nat-to-int (len (rotate _t_17 (rotate zero (rotate zero _v_34))))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_32 _qv_33))=(plus (succ _qv_33) (succ _qv_32))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate zero (rotate (succ zero) _v_34)))))=(nat-to-int (len (rotate _t_17 (rotate zero (rotate zero _v_34))))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_18))=_qv_18))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate zero (rotate (succ zero) _v_34)))))=(nat-to-int (len (rotate _t_17 (rotate zero (rotate zero _v_34))))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_19 _qv_20)=(append _qv_20 _qv_19)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate zero (rotate (succ zero) _v_34)))))=(nat-to-int (len (rotate _t_17 (rotate zero (rotate zero _v_34))))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_21 _qv_22) _qv_23)=(append _qv_21 (append _qv_22 _qv_23))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate zero (rotate (succ zero) _v_34)))))=(nat-to-int (len (rotate _t_17 (rotate zero (rotate zero _v_34))))))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_24 _qv_25)=(plus _qv_25 _qv_24)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate zero (rotate (succ zero) _v_34)))))=(nat-to-int (len (rotate _t_17 (rotate zero (rotate zero _v_34))))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_26 _qv_27) _qv_28)=(plus _qv_26 (plus _qv_27 _qv_28))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate zero (rotate (succ zero) _v_34)))))=(nat-to-int (len (rotate _t_17 (rotate zero (rotate zero _v_34))))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_29)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate zero (rotate (succ zero) _v_34)))))=(nat-to-int (len (rotate _t_17 (rotate zero (rotate zero _v_34))))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_30))=(nat-to-int _qv_30)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate zero (rotate (succ zero) _v_34)))))=(nat-to-int (len (rotate _t_17 (rotate zero (rotate zero _v_34))))))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_31))=(nat-to-int _qv_31)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate zero (rotate (succ zero) _v_34)))))=(nat-to-int (len (rotate _t_17 (rotate zero (rotate zero _v_34))))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_32 _qv_33))=(plus (succ _qv_32) (succ _qv_33))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate zero (rotate (succ zero) _v_34)))))=(nat-to-int (len (rotate _t_17 (rotate zero (rotate zero _v_34))))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_32 _qv_33))=(plus (succ _qv_33) (succ _qv_32))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate zero (rotate (succ zero) _v_34)))))=(nat-to-int (len (rotate _t_17 (rotate zero (rotate zero _v_34))))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_18))=_qv_18))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate zero (rotate (succ zero) _v_34)))))=(nat-to-int (len (rotate _t_17 (rotate zero (rotate zero _v_34))))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_19 _qv_20)=(append _qv_20 _qv_19)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate zero (rotate (succ zero) _v_34)))))=(nat-to-int (len (rotate _t_17 (rotate zero (rotate zero _v_34))))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_21 _qv_22) _qv_23)=(append _qv_21 (append _qv_22 _qv_23))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate zero (rotate (succ zero) _v_34)))))=(nat-to-int (len (rotate _t_17 (rotate zero (rotate zero _v_34))))))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_24 _qv_25)=(plus _qv_25 _qv_24)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate zero (rotate (succ zero) _v_34)))))=(nat-to-int (len (rotate _t_17 (rotate zero (rotate zero _v_34))))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_26 _qv_27) _qv_28)=(plus _qv_26 (plus _qv_27 _qv_28))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate zero (rotate (succ zero) _v_34)))))=(nat-to-int (len (rotate _t_17 (rotate zero (rotate zero _v_34))))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_29)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate zero (rotate (succ zero) _v_34)))))=(nat-to-int (len (rotate _t_17 (rotate zero (rotate zero _v_34))))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_30))=(nat-to-int _qv_30)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate zero (rotate (succ zero) _v_34)))))=(nat-to-int (len (rotate _t_17 (rotate zero (rotate zero _v_34))))))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_31))=(nat-to-int _qv_31)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate zero (rotate (succ zero) _v_34)))))=(nat-to-int (len (rotate _t_17 (rotate zero (rotate zero _v_34))))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_32 _qv_33))=(plus (succ _qv_32) (succ _qv_33))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate zero (rotate (succ zero) _v_34)))))=(nat-to-int (len (rotate _t_17 (rotate zero (rotate zero _v_34))))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_32 _qv_33))=(plus (succ _qv_33) (succ _qv_32))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate zero (rotate (succ zero) _v_34)))))=(nat-to-int (len (rotate _t_17 (rotate zero (rotate zero _v_34))))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_18))=_qv_18))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate zero (rotate (succ zero) _v_34)))))=(nat-to-int (len (rotate _t_17 (rotate zero (rotate zero _v_34))))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_19 _qv_20)=(append _qv_20 _qv_19)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate zero (rotate (succ zero) _v_34)))))=(nat-to-int (len (rotate _t_17 (rotate zero (rotate zero _v_34))))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_21 _qv_22) _qv_23)=(append _qv_21 (append _qv_22 _qv_23))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate zero (rotate (succ zero) _v_34)))))=(nat-to-int (len (rotate _t_17 (rotate zero (rotate zero _v_34))))))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_24 _qv_25)=(plus _qv_25 _qv_24)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate zero (rotate (succ zero) _v_34)))))=(nat-to-int (len (rotate _t_17 (rotate zero (rotate zero _v_34))))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_26 _qv_27) _qv_28)=(plus _qv_26 (plus _qv_27 _qv_28))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate zero (rotate (succ zero) _v_34)))))=(nat-to-int (len (rotate _t_17 (rotate zero (rotate zero _v_34))))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_29)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate zero (rotate (succ zero) _v_34)))))=(nat-to-int (len (rotate _t_17 (rotate zero (rotate zero _v_34))))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_30))=(nat-to-int _qv_30)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate zero (rotate (succ zero) _v_34)))))=(nat-to-int (len (rotate _t_17 (rotate zero (rotate zero _v_34))))))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_31))=(nat-to-int _qv_31)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate zero (rotate (succ zero) _v_34)))))=(nat-to-int (len (rotate _t_17 (rotate zero (rotate zero _v_34))))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_32 _qv_33))=(plus (succ _qv_32) (succ _qv_33))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate zero (rotate (succ zero) _v_34)))))=(nat-to-int (len (rotate _t_17 (rotate zero (rotate zero _v_34))))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_32 _qv_33))=(plus (succ _qv_33) (succ _qv_32))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate zero (rotate (succ zero) _v_34)))))=(nat-to-int (len (rotate zero (rotate zero _v_34)))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_18))=_qv_18))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate zero (rotate (succ zero) _v_34)))))=(nat-to-int (len (rotate zero (rotate zero _v_34)))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_19 _qv_20)=(append _qv_20 _qv_19)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate zero (rotate (succ zero) _v_34)))))=(nat-to-int (len (rotate zero (rotate zero _v_34)))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_21 _qv_22) _qv_23)=(append _qv_21 (append _qv_22 _qv_23))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate zero (rotate (succ zero) _v_34)))))=(nat-to-int (len (rotate zero (rotate zero _v_34)))))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_24 _qv_25)=(plus _qv_25 _qv_24)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate zero (rotate (succ zero) _v_34)))))=(nat-to-int (len (rotate zero (rotate zero _v_34)))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_26 _qv_27) _qv_28)=(plus _qv_26 (plus _qv_27 _qv_28))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate zero (rotate (succ zero) _v_34)))))=(nat-to-int (len (rotate zero (rotate zero _v_34)))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_29)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate zero (rotate (succ zero) _v_34)))))=(nat-to-int (len (rotate zero (rotate zero _v_34)))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_30))=(nat-to-int _qv_30)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate zero (rotate (succ zero) _v_34)))))=(nat-to-int (len (rotate zero (rotate zero _v_34)))))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_31))=(nat-to-int _qv_31)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate zero (rotate (succ zero) _v_34)))))=(nat-to-int (len (rotate zero (rotate zero _v_34)))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_32 _qv_33))=(plus (succ _qv_32) (succ _qv_33))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate zero (rotate (succ zero) _v_34)))))=(nat-to-int (len (rotate zero (rotate zero _v_34)))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_32 _qv_33))=(plus (succ _qv_33) (succ _qv_32))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate zero (rotate (succ zero) _v_34))))))=(nat-to-int (len (rotate zero (rotate zero _v_34)))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_18))=_qv_18))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate zero (rotate (succ zero) _v_34))))))=(nat-to-int (len (rotate zero (rotate zero _v_34)))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_19 _qv_20)=(append _qv_20 _qv_19)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate zero (rotate (succ zero) _v_34))))))=(nat-to-int (len (rotate zero (rotate zero _v_34)))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_21 _qv_22) _qv_23)=(append _qv_21 (append _qv_22 _qv_23))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate zero (rotate (succ zero) _v_34))))))=(nat-to-int (len (rotate zero (rotate zero _v_34)))))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_24 _qv_25)=(plus _qv_25 _qv_24)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate zero (rotate (succ zero) _v_34))))))=(nat-to-int (len (rotate zero (rotate zero _v_34)))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_26 _qv_27) _qv_28)=(plus _qv_26 (plus _qv_27 _qv_28))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate zero (rotate (succ zero) _v_34))))))=(nat-to-int (len (rotate zero (rotate zero _v_34)))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_29)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate zero (rotate (succ zero) _v_34))))))=(nat-to-int (len (rotate zero (rotate zero _v_34)))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_30))=(nat-to-int _qv_30)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate zero (rotate (succ zero) _v_34))))))=(nat-to-int (len (rotate zero (rotate zero _v_34)))))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_31))=(nat-to-int _qv_31)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate zero (rotate (succ zero) _v_34))))))=(nat-to-int (len (rotate zero (rotate zero _v_34)))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_32 _qv_33))=(plus (succ _qv_32) (succ _qv_33))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate zero (rotate (succ zero) _v_34))))))=(nat-to-int (len (rotate zero (rotate zero _v_34)))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_32 _qv_33))=(plus (succ _qv_33) (succ _qv_32))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate zero (rotate (succ zero) _v_34))))))=(nat-to-int (len (rotate zero (rotate zero _v_34)))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_18))=_qv_18))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate zero (rotate (succ zero) _v_34))))))=(nat-to-int (len (rotate zero (rotate zero _v_34)))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_19 _qv_20)=(append _qv_20 _qv_19)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate zero (rotate (succ zero) _v_34))))))=(nat-to-int (len (rotate zero (rotate zero _v_34)))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_21 _qv_22) _qv_23)=(append _qv_21 (append _qv_22 _qv_23))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate zero (rotate (succ zero) _v_34))))))=(nat-to-int (len (rotate zero (rotate zero _v_34)))))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_24 _qv_25)=(plus _qv_25 _qv_24)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate zero (rotate (succ zero) _v_34))))))=(nat-to-int (len (rotate zero (rotate zero _v_34)))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_26 _qv_27) _qv_28)=(plus _qv_26 (plus _qv_27 _qv_28))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate zero (rotate (succ zero) _v_34))))))=(nat-to-int (len (rotate zero (rotate zero _v_34)))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_29)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate zero (rotate (succ zero) _v_34))))))=(nat-to-int (len (rotate zero (rotate zero _v_34)))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_30))=(nat-to-int _qv_30)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate zero (rotate (succ zero) _v_34))))))=(nat-to-int (len (rotate zero (rotate zero _v_34)))))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_31))=(nat-to-int _qv_31)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate zero (rotate (succ zero) _v_34))))))=(nat-to-int (len (rotate zero (rotate zero _v_34)))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_32 _qv_33))=(plus (succ _qv_32) (succ _qv_33))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate zero (rotate (succ zero) _v_34))))))=(nat-to-int (len (rotate zero (rotate zero _v_34)))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_32 _qv_33))=(plus (succ _qv_33) (succ _qv_32))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate zero (rotate (succ zero) _v_34))))))=(nat-to-int (len (rotate zero (rotate zero _v_34)))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_18))=_qv_18))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate zero (rotate (succ zero) _v_34))))))=(nat-to-int (len (rotate zero (rotate zero _v_34)))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_19 _qv_20)=(append _qv_20 _qv_19)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate zero (rotate (succ zero) _v_34))))))=(nat-to-int (len (rotate zero (rotate zero _v_34)))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_21 _qv_22) _qv_23)=(append _qv_21 (append _qv_22 _qv_23))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate zero (rotate (succ zero) _v_34))))))=(nat-to-int (len (rotate zero (rotate zero _v_34)))))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_24 _qv_25)=(plus _qv_25 _qv_24)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate zero (rotate (succ zero) _v_34))))))=(nat-to-int (len (rotate zero (rotate zero _v_34)))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_26 _qv_27) _qv_28)=(plus _qv_26 (plus _qv_27 _qv_28))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate zero (rotate (succ zero) _v_34))))))=(nat-to-int (len (rotate zero (rotate zero _v_34)))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_29)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate zero (rotate (succ zero) _v_34))))))=(nat-to-int (len (rotate zero (rotate zero _v_34)))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_30))=(nat-to-int _qv_30)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate zero (rotate (succ zero) _v_34))))))=(nat-to-int (len (rotate zero (rotate zero _v_34)))))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_31))=(nat-to-int _qv_31)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate zero (rotate (succ zero) _v_34))))))=(nat-to-int (len (rotate zero (rotate zero _v_34)))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_32 _qv_33))=(plus (succ _qv_32) (succ _qv_33))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate zero (rotate (succ zero) _v_34))))))=(nat-to-int (len (rotate zero (rotate zero _v_34)))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_32 _qv_33))=(plus (succ _qv_33) (succ _qv_32))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate zero (rotate (succ zero) _v_34))))))=(nat-to-int (len (rotate zero (rotate zero _v_34)))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_18))=_qv_18))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate zero (rotate (succ zero) _v_34))))))=(nat-to-int (len (rotate zero (rotate zero _v_34)))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_19 _qv_20)=(append _qv_20 _qv_19)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate zero (rotate (succ zero) _v_34))))))=(nat-to-int (len (rotate zero (rotate zero _v_34)))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_21 _qv_22) _qv_23)=(append _qv_21 (append _qv_22 _qv_23))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate zero (rotate (succ zero) _v_34))))))=(nat-to-int (len (rotate zero (rotate zero _v_34)))))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_24 _qv_25)=(plus _qv_25 _qv_24)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate zero (rotate (succ zero) _v_34))))))=(nat-to-int (len (rotate zero (rotate zero _v_34)))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_26 _qv_27) _qv_28)=(plus _qv_26 (plus _qv_27 _qv_28))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate zero (rotate (succ zero) _v_34))))))=(nat-to-int (len (rotate zero (rotate zero _v_34)))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_29)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate zero (rotate (succ zero) _v_34))))))=(nat-to-int (len (rotate zero (rotate zero _v_34)))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_30))=(nat-to-int _qv_30)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate zero (rotate (succ zero) _v_34))))))=(nat-to-int (len (rotate zero (rotate zero _v_34)))))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_31))=(nat-to-int _qv_31)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate zero (rotate (succ zero) _v_34))))))=(nat-to-int (len (rotate zero (rotate zero _v_34)))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_32 _qv_33))=(plus (succ _qv_32) (succ _qv_33))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate zero (rotate (succ zero) _v_34))))))=(nat-to-int (len (rotate zero (rotate zero _v_34)))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_32 _qv_33))=(plus (succ _qv_33) (succ _qv_32))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate zero (rotate (succ zero) _v_34)))))=(nat-to-int (len (rotate zero (rotate zero _v_34)))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_18))=_qv_18))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate zero (rotate (succ zero) _v_34)))))=(nat-to-int (len (rotate zero (rotate zero _v_34)))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_19 _qv_20)=(append _qv_20 _qv_19)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate zero (rotate (succ zero) _v_34)))))=(nat-to-int (len (rotate zero (rotate zero _v_34)))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_21 _qv_22) _qv_23)=(append _qv_21 (append _qv_22 _qv_23))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate zero (rotate (succ zero) _v_34)))))=(nat-to-int (len (rotate zero (rotate zero _v_34)))))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_24 _qv_25)=(plus _qv_25 _qv_24)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate zero (rotate (succ zero) _v_34)))))=(nat-to-int (len (rotate zero (rotate zero _v_34)))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_26 _qv_27) _qv_28)=(plus _qv_26 (plus _qv_27 _qv_28))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate zero (rotate (succ zero) _v_34)))))=(nat-to-int (len (rotate zero (rotate zero _v_34)))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_29)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate zero (rotate (succ zero) _v_34)))))=(nat-to-int (len (rotate zero (rotate zero _v_34)))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_30))=(nat-to-int _qv_30)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate zero (rotate (succ zero) _v_34)))))=(nat-to-int (len (rotate zero (rotate zero _v_34)))))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_31))=(nat-to-int _qv_31)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate zero (rotate (succ zero) _v_34)))))=(nat-to-int (len (rotate zero (rotate zero _v_34)))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_32 _qv_33))=(plus (succ _qv_32) (succ _qv_33))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate zero (rotate (succ zero) _v_34)))))=(nat-to-int (len (rotate zero (rotate zero _v_34)))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_32 _qv_33))=(plus (succ _qv_33) (succ _qv_32))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate zero (rotate (succ zero) _v_34))))=(nat-to-int (len (rotate zero (rotate zero _v_34)))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_18))=_qv_18))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate zero (rotate (succ zero) _v_34))))=(nat-to-int (len (rotate zero (rotate zero _v_34)))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_19 _qv_20)=(append _qv_20 _qv_19)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate zero (rotate (succ zero) _v_34))))=(nat-to-int (len (rotate zero (rotate zero _v_34)))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_21 _qv_22) _qv_23)=(append _qv_21 (append _qv_22 _qv_23))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate zero (rotate (succ zero) _v_34))))=(nat-to-int (len (rotate zero (rotate zero _v_34)))))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_24 _qv_25)=(plus _qv_25 _qv_24)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate zero (rotate (succ zero) _v_34))))=(nat-to-int (len (rotate zero (rotate zero _v_34)))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_26 _qv_27) _qv_28)=(plus _qv_26 (plus _qv_27 _qv_28))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate zero (rotate (succ zero) _v_34))))=(nat-to-int (len (rotate zero (rotate zero _v_34)))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_29)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate zero (rotate (succ zero) _v_34))))=(nat-to-int (len (rotate zero (rotate zero _v_34)))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_30))=(nat-to-int _qv_30)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate zero (rotate (succ zero) _v_34))))=(nat-to-int (len (rotate zero (rotate zero _v_34)))))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_31))=(nat-to-int _qv_31)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate zero (rotate (succ zero) _v_34))))=(nat-to-int (len (rotate zero (rotate zero _v_34)))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_32 _qv_33))=(plus (succ _qv_32) (succ _qv_33))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate zero (rotate (succ zero) _v_34))))=(nat-to-int (len (rotate zero (rotate zero _v_34)))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_32 _qv_33))=(plus (succ _qv_33) (succ _qv_32))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate zero (rotate (succ zero) _v_34))))))=(nat-to-int (len (rotate _t_17 (rotate zero (rotate zero _v_34))))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_18))=_qv_18))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate zero (rotate (succ zero) _v_34))))))=(nat-to-int (len (rotate _t_17 (rotate zero (rotate zero _v_34))))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_19 _qv_20)=(append _qv_20 _qv_19)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate zero (rotate (succ zero) _v_34))))))=(nat-to-int (len (rotate _t_17 (rotate zero (rotate zero _v_34))))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_21 _qv_22) _qv_23)=(append _qv_21 (append _qv_22 _qv_23))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate zero (rotate (succ zero) _v_34))))))=(nat-to-int (len (rotate _t_17 (rotate zero (rotate zero _v_34))))))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_24 _qv_25)=(plus _qv_25 _qv_24)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate zero (rotate (succ zero) _v_34))))))=(nat-to-int (len (rotate _t_17 (rotate zero (rotate zero _v_34))))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_26 _qv_27) _qv_28)=(plus _qv_26 (plus _qv_27 _qv_28))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate zero (rotate (succ zero) _v_34))))))=(nat-to-int (len (rotate _t_17 (rotate zero (rotate zero _v_34))))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_29)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate zero (rotate (succ zero) _v_34))))))=(nat-to-int (len (rotate _t_17 (rotate zero (rotate zero _v_34))))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_30))=(nat-to-int _qv_30)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate zero (rotate (succ zero) _v_34))))))=(nat-to-int (len (rotate _t_17 (rotate zero (rotate zero _v_34))))))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_31))=(nat-to-int _qv_31)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate zero (rotate (succ zero) _v_34))))))=(nat-to-int (len (rotate _t_17 (rotate zero (rotate zero _v_34))))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_32 _qv_33))=(plus (succ _qv_32) (succ _qv_33))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate zero (rotate (succ zero) _v_34))))))=(nat-to-int (len (rotate _t_17 (rotate zero (rotate zero _v_34))))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_32 _qv_33))=(plus (succ _qv_33) (succ _qv_32))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate zero (rotate (succ zero) _v_34))))))=(nat-to-int (len (rotate _t_17 (rotate zero (rotate zero _v_34))))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_18))=_qv_18))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate zero (rotate (succ zero) _v_34))))))=(nat-to-int (len (rotate _t_17 (rotate zero (rotate zero _v_34))))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_19 _qv_20)=(append _qv_20 _qv_19)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate zero (rotate (succ zero) _v_34))))))=(nat-to-int (len (rotate _t_17 (rotate zero (rotate zero _v_34))))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_21 _qv_22) _qv_23)=(append _qv_21 (append _qv_22 _qv_23))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate zero (rotate (succ zero) _v_34))))))=(nat-to-int (len (rotate _t_17 (rotate zero (rotate zero _v_34))))))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_24 _qv_25)=(plus _qv_25 _qv_24)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate zero (rotate (succ zero) _v_34))))))=(nat-to-int (len (rotate _t_17 (rotate zero (rotate zero _v_34))))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_26 _qv_27) _qv_28)=(plus _qv_26 (plus _qv_27 _qv_28))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate zero (rotate (succ zero) _v_34))))))=(nat-to-int (len (rotate _t_17 (rotate zero (rotate zero _v_34))))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_29)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate zero (rotate (succ zero) _v_34))))))=(nat-to-int (len (rotate _t_17 (rotate zero (rotate zero _v_34))))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_30))=(nat-to-int _qv_30)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate zero (rotate (succ zero) _v_34))))))=(nat-to-int (len (rotate _t_17 (rotate zero (rotate zero _v_34))))))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_31))=(nat-to-int _qv_31)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate zero (rotate (succ zero) _v_34))))))=(nat-to-int (len (rotate _t_17 (rotate zero (rotate zero _v_34))))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_32 _qv_33))=(plus (succ _qv_32) (succ _qv_33))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate zero (rotate (succ zero) _v_34))))))=(nat-to-int (len (rotate _t_17 (rotate zero (rotate zero _v_34))))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_32 _qv_33))=(plus (succ _qv_33) (succ _qv_32))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate zero (rotate (succ zero) _v_34))))))=(nat-to-int (len (rotate _t_17 (rotate zero (rotate zero _v_34))))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_18))=_qv_18))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate zero (rotate (succ zero) _v_34))))))=(nat-to-int (len (rotate _t_17 (rotate zero (rotate zero _v_34))))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_19 _qv_20)=(append _qv_20 _qv_19)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate zero (rotate (succ zero) _v_34))))))=(nat-to-int (len (rotate _t_17 (rotate zero (rotate zero _v_34))))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_21 _qv_22) _qv_23)=(append _qv_21 (append _qv_22 _qv_23))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate zero (rotate (succ zero) _v_34))))))=(nat-to-int (len (rotate _t_17 (rotate zero (rotate zero _v_34))))))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_24 _qv_25)=(plus _qv_25 _qv_24)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate zero (rotate (succ zero) _v_34))))))=(nat-to-int (len (rotate _t_17 (rotate zero (rotate zero _v_34))))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_26 _qv_27) _qv_28)=(plus _qv_26 (plus _qv_27 _qv_28))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate zero (rotate (succ zero) _v_34))))))=(nat-to-int (len (rotate _t_17 (rotate zero (rotate zero _v_34))))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_29)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate zero (rotate (succ zero) _v_34))))))=(nat-to-int (len (rotate _t_17 (rotate zero (rotate zero _v_34))))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_30))=(nat-to-int _qv_30)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate zero (rotate (succ zero) _v_34))))))=(nat-to-int (len (rotate _t_17 (rotate zero (rotate zero _v_34))))))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_31))=(nat-to-int _qv_31)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate zero (rotate (succ zero) _v_34))))))=(nat-to-int (len (rotate _t_17 (rotate zero (rotate zero _v_34))))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_32 _qv_33))=(plus (succ _qv_32) (succ _qv_33))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate zero (rotate (succ zero) _v_34))))))=(nat-to-int (len (rotate _t_17 (rotate zero (rotate zero _v_34))))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_32 _qv_33))=(plus (succ _qv_33) (succ _qv_32))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate zero (rotate (succ zero) _v_34))))))=(nat-to-int (len (rotate _t_17 (rotate zero (rotate zero _v_34))))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_18))=_qv_18))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate zero (rotate (succ zero) _v_34))))))=(nat-to-int (len (rotate _t_17 (rotate zero (rotate zero _v_34))))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_19 _qv_20)=(append _qv_20 _qv_19)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate zero (rotate (succ zero) _v_34))))))=(nat-to-int (len (rotate _t_17 (rotate zero (rotate zero _v_34))))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_21 _qv_22) _qv_23)=(append _qv_21 (append _qv_22 _qv_23))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate zero (rotate (succ zero) _v_34))))))=(nat-to-int (len (rotate _t_17 (rotate zero (rotate zero _v_34))))))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_24 _qv_25)=(plus _qv_25 _qv_24)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate zero (rotate (succ zero) _v_34))))))=(nat-to-int (len (rotate _t_17 (rotate zero (rotate zero _v_34))))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_26 _qv_27) _qv_28)=(plus _qv_26 (plus _qv_27 _qv_28))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate zero (rotate (succ zero) _v_34))))))=(nat-to-int (len (rotate _t_17 (rotate zero (rotate zero _v_34))))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_29)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate zero (rotate (succ zero) _v_34))))))=(nat-to-int (len (rotate _t_17 (rotate zero (rotate zero _v_34))))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_30))=(nat-to-int _qv_30)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate zero (rotate (succ zero) _v_34))))))=(nat-to-int (len (rotate _t_17 (rotate zero (rotate zero _v_34))))))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_31))=(nat-to-int _qv_31)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate zero (rotate (succ zero) _v_34))))))=(nat-to-int (len (rotate _t_17 (rotate zero (rotate zero _v_34))))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_32 _qv_33))=(plus (succ _qv_32) (succ _qv_33))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate zero (rotate (succ zero) _v_34))))))=(nat-to-int (len (rotate _t_17 (rotate zero (rotate zero _v_34))))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_32 _qv_33))=(plus (succ _qv_33) (succ _qv_32))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate zero (rotate (succ zero) _v_34))))))=(nat-to-int (len (rotate zero (rotate zero _v_34)))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_18))=_qv_18))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate zero (rotate (succ zero) _v_34))))))=(nat-to-int (len (rotate zero (rotate zero _v_34)))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_19 _qv_20)=(append _qv_20 _qv_19)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate zero (rotate (succ zero) _v_34))))))=(nat-to-int (len (rotate zero (rotate zero _v_34)))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_21 _qv_22) _qv_23)=(append _qv_21 (append _qv_22 _qv_23))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate zero (rotate (succ zero) _v_34))))))=(nat-to-int (len (rotate zero (rotate zero _v_34)))))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_24 _qv_25)=(plus _qv_25 _qv_24)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate zero (rotate (succ zero) _v_34))))))=(nat-to-int (len (rotate zero (rotate zero _v_34)))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_26 _qv_27) _qv_28)=(plus _qv_26 (plus _qv_27 _qv_28))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate zero (rotate (succ zero) _v_34))))))=(nat-to-int (len (rotate zero (rotate zero _v_34)))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_29)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate zero (rotate (succ zero) _v_34))))))=(nat-to-int (len (rotate zero (rotate zero _v_34)))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_30))=(nat-to-int _qv_30)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate zero (rotate (succ zero) _v_34))))))=(nat-to-int (len (rotate zero (rotate zero _v_34)))))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_31))=(nat-to-int _qv_31)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate zero (rotate (succ zero) _v_34))))))=(nat-to-int (len (rotate zero (rotate zero _v_34)))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_32 _qv_33))=(plus (succ _qv_32) (succ _qv_33))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate zero (rotate (succ zero) _v_34))))))=(nat-to-int (len (rotate zero (rotate zero _v_34)))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_32 _qv_33))=(plus (succ _qv_33) (succ _qv_32))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate zero (rotate (succ zero) _v_34)))))))=(nat-to-int (len (rotate zero (rotate zero _v_34)))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_18))=_qv_18))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate zero (rotate (succ zero) _v_34)))))))=(nat-to-int (len (rotate zero (rotate zero _v_34)))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_19 _qv_20)=(append _qv_20 _qv_19)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate zero (rotate (succ zero) _v_34)))))))=(nat-to-int (len (rotate zero (rotate zero _v_34)))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_21 _qv_22) _qv_23)=(append _qv_21 (append _qv_22 _qv_23))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate zero (rotate (succ zero) _v_34)))))))=(nat-to-int (len (rotate zero (rotate zero _v_34)))))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_24 _qv_25)=(plus _qv_25 _qv_24)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate zero (rotate (succ zero) _v_34)))))))=(nat-to-int (len (rotate zero (rotate zero _v_34)))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_26 _qv_27) _qv_28)=(plus _qv_26 (plus _qv_27 _qv_28))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate zero (rotate (succ zero) _v_34)))))))=(nat-to-int (len (rotate zero (rotate zero _v_34)))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_29)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate zero (rotate (succ zero) _v_34)))))))=(nat-to-int (len (rotate zero (rotate zero _v_34)))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_30))=(nat-to-int _qv_30)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate zero (rotate (succ zero) _v_34)))))))=(nat-to-int (len (rotate zero (rotate zero _v_34)))))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_31))=(nat-to-int _qv_31)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate zero (rotate (succ zero) _v_34)))))))=(nat-to-int (len (rotate zero (rotate zero _v_34)))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_32 _qv_33))=(plus (succ _qv_32) (succ _qv_33))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate zero (rotate (succ zero) _v_34)))))))=(nat-to-int (len (rotate zero (rotate zero _v_34)))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_32 _qv_33))=(plus (succ _qv_33) (succ _qv_32))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate zero (rotate (succ zero) _v_34)))))))=(nat-to-int (len (rotate zero (rotate zero _v_34)))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_18))=_qv_18))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate zero (rotate (succ zero) _v_34)))))))=(nat-to-int (len (rotate zero (rotate zero _v_34)))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_19 _qv_20)=(append _qv_20 _qv_19)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate zero (rotate (succ zero) _v_34)))))))=(nat-to-int (len (rotate zero (rotate zero _v_34)))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_21 _qv_22) _qv_23)=(append _qv_21 (append _qv_22 _qv_23))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate zero (rotate (succ zero) _v_34)))))))=(nat-to-int (len (rotate zero (rotate zero _v_34)))))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_24 _qv_25)=(plus _qv_25 _qv_24)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate zero (rotate (succ zero) _v_34)))))))=(nat-to-int (len (rotate zero (rotate zero _v_34)))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_26 _qv_27) _qv_28)=(plus _qv_26 (plus _qv_27 _qv_28))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate zero (rotate (succ zero) _v_34)))))))=(nat-to-int (len (rotate zero (rotate zero _v_34)))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_29)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate zero (rotate (succ zero) _v_34)))))))=(nat-to-int (len (rotate zero (rotate zero _v_34)))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_30))=(nat-to-int _qv_30)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate zero (rotate (succ zero) _v_34)))))))=(nat-to-int (len (rotate zero (rotate zero _v_34)))))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_31))=(nat-to-int _qv_31)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate zero (rotate (succ zero) _v_34)))))))=(nat-to-int (len (rotate zero (rotate zero _v_34)))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_32 _qv_33))=(plus (succ _qv_32) (succ _qv_33))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate zero (rotate (succ zero) _v_34)))))))=(nat-to-int (len (rotate zero (rotate zero _v_34)))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_32 _qv_33))=(plus (succ _qv_33) (succ _qv_32))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate zero (rotate (succ zero) _v_34)))))))=(nat-to-int (len (rotate zero (rotate zero _v_34)))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_18))=_qv_18))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate zero (rotate (succ zero) _v_34)))))))=(nat-to-int (len (rotate zero (rotate zero _v_34)))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_19 _qv_20)=(append _qv_20 _qv_19)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate zero (rotate (succ zero) _v_34)))))))=(nat-to-int (len (rotate zero (rotate zero _v_34)))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_21 _qv_22) _qv_23)=(append _qv_21 (append _qv_22 _qv_23))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate zero (rotate (succ zero) _v_34)))))))=(nat-to-int (len (rotate zero (rotate zero _v_34)))))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_24 _qv_25)=(plus _qv_25 _qv_24)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate zero (rotate (succ zero) _v_34)))))))=(nat-to-int (len (rotate zero (rotate zero _v_34)))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_26 _qv_27) _qv_28)=(plus _qv_26 (plus _qv_27 _qv_28))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate zero (rotate (succ zero) _v_34)))))))=(nat-to-int (len (rotate zero (rotate zero _v_34)))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_29)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate zero (rotate (succ zero) _v_34)))))))=(nat-to-int (len (rotate zero (rotate zero _v_34)))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_30))=(nat-to-int _qv_30)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate zero (rotate (succ zero) _v_34)))))))=(nat-to-int (len (rotate zero (rotate zero _v_34)))))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_31))=(nat-to-int _qv_31)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate zero (rotate (succ zero) _v_34)))))))=(nat-to-int (len (rotate zero (rotate zero _v_34)))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_32 _qv_33))=(plus (succ _qv_32) (succ _qv_33))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate zero (rotate (succ zero) _v_34)))))))=(nat-to-int (len (rotate zero (rotate zero _v_34)))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_32 _qv_33))=(plus (succ _qv_33) (succ _qv_32))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate zero (rotate (succ zero) _v_34)))))))=(nat-to-int (len (rotate zero (rotate zero _v_34)))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_18))=_qv_18))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate zero (rotate (succ zero) _v_34)))))))=(nat-to-int (len (rotate zero (rotate zero _v_34)))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_19 _qv_20)=(append _qv_20 _qv_19)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate zero (rotate (succ zero) _v_34)))))))=(nat-to-int (len (rotate zero (rotate zero _v_34)))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_21 _qv_22) _qv_23)=(append _qv_21 (append _qv_22 _qv_23))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate zero (rotate (succ zero) _v_34)))))))=(nat-to-int (len (rotate zero (rotate zero _v_34)))))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_24 _qv_25)=(plus _qv_25 _qv_24)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate zero (rotate (succ zero) _v_34)))))))=(nat-to-int (len (rotate zero (rotate zero _v_34)))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_26 _qv_27) _qv_28)=(plus _qv_26 (plus _qv_27 _qv_28))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate zero (rotate (succ zero) _v_34)))))))=(nat-to-int (len (rotate zero (rotate zero _v_34)))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_29)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate zero (rotate (succ zero) _v_34)))))))=(nat-to-int (len (rotate zero (rotate zero _v_34)))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_30))=(nat-to-int _qv_30)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate zero (rotate (succ zero) _v_34)))))))=(nat-to-int (len (rotate zero (rotate zero _v_34)))))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_31))=(nat-to-int _qv_31)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate zero (rotate (succ zero) _v_34)))))))=(nat-to-int (len (rotate zero (rotate zero _v_34)))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_32 _qv_33))=(plus (succ _qv_32) (succ _qv_33))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate zero (rotate (succ zero) _v_34)))))))=(nat-to-int (len (rotate zero (rotate zero _v_34)))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_32 _qv_33))=(plus (succ _qv_33) (succ _qv_32))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate zero (rotate (succ zero) _v_34))))))=(nat-to-int (len (rotate zero (rotate zero _v_34)))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_18))=_qv_18))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate zero (rotate (succ zero) _v_34))))))=(nat-to-int (len (rotate zero (rotate zero _v_34)))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_19 _qv_20)=(append _qv_20 _qv_19)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate zero (rotate (succ zero) _v_34))))))=(nat-to-int (len (rotate zero (rotate zero _v_34)))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_21 _qv_22) _qv_23)=(append _qv_21 (append _qv_22 _qv_23))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate zero (rotate (succ zero) _v_34))))))=(nat-to-int (len (rotate zero (rotate zero _v_34)))))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_24 _qv_25)=(plus _qv_25 _qv_24)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate zero (rotate (succ zero) _v_34))))))=(nat-to-int (len (rotate zero (rotate zero _v_34)))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_26 _qv_27) _qv_28)=(plus _qv_26 (plus _qv_27 _qv_28))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate zero (rotate (succ zero) _v_34))))))=(nat-to-int (len (rotate zero (rotate zero _v_34)))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_29)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate zero (rotate (succ zero) _v_34))))))=(nat-to-int (len (rotate zero (rotate zero _v_34)))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_30))=(nat-to-int _qv_30)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate zero (rotate (succ zero) _v_34))))))=(nat-to-int (len (rotate zero (rotate zero _v_34)))))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_31))=(nat-to-int _qv_31)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate zero (rotate (succ zero) _v_34))))))=(nat-to-int (len (rotate zero (rotate zero _v_34)))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_32 _qv_33))=(plus (succ _qv_32) (succ _qv_33))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate zero (rotate (succ zero) _v_34))))))=(nat-to-int (len (rotate zero (rotate zero _v_34)))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_32 _qv_33))=(plus (succ _qv_33) (succ _qv_32))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate zero (rotate (succ zero) _v_34))))))=(nat-to-int (len (rotate _t_17 (rotate zero (rotate zero _v_34))))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_18))=_qv_18))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate zero (rotate (succ zero) _v_34))))))=(nat-to-int (len (rotate _t_17 (rotate zero (rotate zero _v_34))))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_19 _qv_20)=(append _qv_20 _qv_19)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate zero (rotate (succ zero) _v_34))))))=(nat-to-int (len (rotate _t_17 (rotate zero (rotate zero _v_34))))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_21 _qv_22) _qv_23)=(append _qv_21 (append _qv_22 _qv_23))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate zero (rotate (succ zero) _v_34))))))=(nat-to-int (len (rotate _t_17 (rotate zero (rotate zero _v_34))))))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_24 _qv_25)=(plus _qv_25 _qv_24)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate zero (rotate (succ zero) _v_34))))))=(nat-to-int (len (rotate _t_17 (rotate zero (rotate zero _v_34))))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_26 _qv_27) _qv_28)=(plus _qv_26 (plus _qv_27 _qv_28))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate zero (rotate (succ zero) _v_34))))))=(nat-to-int (len (rotate _t_17 (rotate zero (rotate zero _v_34))))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_29)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate zero (rotate (succ zero) _v_34))))))=(nat-to-int (len (rotate _t_17 (rotate zero (rotate zero _v_34))))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_30))=(nat-to-int _qv_30)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate zero (rotate (succ zero) _v_34))))))=(nat-to-int (len (rotate _t_17 (rotate zero (rotate zero _v_34))))))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_31))=(nat-to-int _qv_31)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate zero (rotate (succ zero) _v_34))))))=(nat-to-int (len (rotate _t_17 (rotate zero (rotate zero _v_34))))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_32 _qv_33))=(plus (succ _qv_32) (succ _qv_33))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate zero (rotate (succ zero) _v_34))))))=(nat-to-int (len (rotate _t_17 (rotate zero (rotate zero _v_34))))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_32 _qv_33))=(plus (succ _qv_33) (succ _qv_32))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate zero (rotate (succ zero) _v_34))))))=(nat-to-int (len (rotate _t_17 (rotate zero (rotate zero _v_34))))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_18))=_qv_18))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate zero (rotate (succ zero) _v_34))))))=(nat-to-int (len (rotate _t_17 (rotate zero (rotate zero _v_34))))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_19 _qv_20)=(append _qv_20 _qv_19)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate zero (rotate (succ zero) _v_34))))))=(nat-to-int (len (rotate _t_17 (rotate zero (rotate zero _v_34))))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_21 _qv_22) _qv_23)=(append _qv_21 (append _qv_22 _qv_23))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate zero (rotate (succ zero) _v_34))))))=(nat-to-int (len (rotate _t_17 (rotate zero (rotate zero _v_34))))))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_24 _qv_25)=(plus _qv_25 _qv_24)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate zero (rotate (succ zero) _v_34))))))=(nat-to-int (len (rotate _t_17 (rotate zero (rotate zero _v_34))))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_26 _qv_27) _qv_28)=(plus _qv_26 (plus _qv_27 _qv_28))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate zero (rotate (succ zero) _v_34))))))=(nat-to-int (len (rotate _t_17 (rotate zero (rotate zero _v_34))))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_29)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate zero (rotate (succ zero) _v_34))))))=(nat-to-int (len (rotate _t_17 (rotate zero (rotate zero _v_34))))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_30))=(nat-to-int _qv_30)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate zero (rotate (succ zero) _v_34))))))=(nat-to-int (len (rotate _t_17 (rotate zero (rotate zero _v_34))))))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_31))=(nat-to-int _qv_31)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate zero (rotate (succ zero) _v_34))))))=(nat-to-int (len (rotate _t_17 (rotate zero (rotate zero _v_34))))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_32 _qv_33))=(plus (succ _qv_32) (succ _qv_33))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate zero (rotate (succ zero) _v_34))))))=(nat-to-int (len (rotate _t_17 (rotate zero (rotate zero _v_34))))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_32 _qv_33))=(plus (succ _qv_33) (succ _qv_32))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate zero (rotate (succ zero) _v_34))))))=(nat-to-int (len (rotate _t_17 (rotate zero (rotate zero _v_34))))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_18))=_qv_18))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate zero (rotate (succ zero) _v_34))))))=(nat-to-int (len (rotate _t_17 (rotate zero (rotate zero _v_34))))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_19 _qv_20)=(append _qv_20 _qv_19)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate zero (rotate (succ zero) _v_34))))))=(nat-to-int (len (rotate _t_17 (rotate zero (rotate zero _v_34))))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_21 _qv_22) _qv_23)=(append _qv_21 (append _qv_22 _qv_23))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate zero (rotate (succ zero) _v_34))))))=(nat-to-int (len (rotate _t_17 (rotate zero (rotate zero _v_34))))))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_24 _qv_25)=(plus _qv_25 _qv_24)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate zero (rotate (succ zero) _v_34))))))=(nat-to-int (len (rotate _t_17 (rotate zero (rotate zero _v_34))))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_26 _qv_27) _qv_28)=(plus _qv_26 (plus _qv_27 _qv_28))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate zero (rotate (succ zero) _v_34))))))=(nat-to-int (len (rotate _t_17 (rotate zero (rotate zero _v_34))))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_29)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate zero (rotate (succ zero) _v_34))))))=(nat-to-int (len (rotate _t_17 (rotate zero (rotate zero _v_34))))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_30))=(nat-to-int _qv_30)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate zero (rotate (succ zero) _v_34))))))=(nat-to-int (len (rotate _t_17 (rotate zero (rotate zero _v_34))))))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_31))=(nat-to-int _qv_31)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate zero (rotate (succ zero) _v_34))))))=(nat-to-int (len (rotate _t_17 (rotate zero (rotate zero _v_34))))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_32 _qv_33))=(plus (succ _qv_32) (succ _qv_33))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate zero (rotate (succ zero) _v_34))))))=(nat-to-int (len (rotate _t_17 (rotate zero (rotate zero _v_34))))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_32 _qv_33))=(plus (succ _qv_33) (succ _qv_32))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate zero (rotate (succ zero) _v_34))))))=(nat-to-int (len (rotate _t_17 (rotate zero (rotate zero _v_34))))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_18))=_qv_18))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate zero (rotate (succ zero) _v_34))))))=(nat-to-int (len (rotate _t_17 (rotate zero (rotate zero _v_34))))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_19 _qv_20)=(append _qv_20 _qv_19)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate zero (rotate (succ zero) _v_34))))))=(nat-to-int (len (rotate _t_17 (rotate zero (rotate zero _v_34))))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_21 _qv_22) _qv_23)=(append _qv_21 (append _qv_22 _qv_23))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate zero (rotate (succ zero) _v_34))))))=(nat-to-int (len (rotate _t_17 (rotate zero (rotate zero _v_34))))))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_24 _qv_25)=(plus _qv_25 _qv_24)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate zero (rotate (succ zero) _v_34))))))=(nat-to-int (len (rotate _t_17 (rotate zero (rotate zero _v_34))))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_26 _qv_27) _qv_28)=(plus _qv_26 (plus _qv_27 _qv_28))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate zero (rotate (succ zero) _v_34))))))=(nat-to-int (len (rotate _t_17 (rotate zero (rotate zero _v_34))))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_29)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate zero (rotate (succ zero) _v_34))))))=(nat-to-int (len (rotate _t_17 (rotate zero (rotate zero _v_34))))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_30))=(nat-to-int _qv_30)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate zero (rotate (succ zero) _v_34))))))=(nat-to-int (len (rotate _t_17 (rotate zero (rotate zero _v_34))))))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_31))=(nat-to-int _qv_31)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate zero (rotate (succ zero) _v_34))))))=(nat-to-int (len (rotate _t_17 (rotate zero (rotate zero _v_34))))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_32 _qv_33))=(plus (succ _qv_32) (succ _qv_33))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate zero (rotate (succ zero) _v_34))))))=(nat-to-int (len (rotate _t_17 (rotate zero (rotate zero _v_34))))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_32 _qv_33))=(plus (succ _qv_33) (succ _qv_32))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate zero (rotate (succ zero) _v_34))))))=(nat-to-int (len (rotate zero (rotate zero _v_34)))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_18))=_qv_18))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate zero (rotate (succ zero) _v_34))))))=(nat-to-int (len (rotate zero (rotate zero _v_34)))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_19 _qv_20)=(append _qv_20 _qv_19)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate zero (rotate (succ zero) _v_34))))))=(nat-to-int (len (rotate zero (rotate zero _v_34)))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_21 _qv_22) _qv_23)=(append _qv_21 (append _qv_22 _qv_23))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate zero (rotate (succ zero) _v_34))))))=(nat-to-int (len (rotate zero (rotate zero _v_34)))))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_24 _qv_25)=(plus _qv_25 _qv_24)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate zero (rotate (succ zero) _v_34))))))=(nat-to-int (len (rotate zero (rotate zero _v_34)))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_26 _qv_27) _qv_28)=(plus _qv_26 (plus _qv_27 _qv_28))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate zero (rotate (succ zero) _v_34))))))=(nat-to-int (len (rotate zero (rotate zero _v_34)))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_29)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate zero (rotate (succ zero) _v_34))))))=(nat-to-int (len (rotate zero (rotate zero _v_34)))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_30))=(nat-to-int _qv_30)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate zero (rotate (succ zero) _v_34))))))=(nat-to-int (len (rotate zero (rotate zero _v_34)))))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_31))=(nat-to-int _qv_31)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate zero (rotate (succ zero) _v_34))))))=(nat-to-int (len (rotate zero (rotate zero _v_34)))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_32 _qv_33))=(plus (succ _qv_32) (succ _qv_33))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate zero (rotate (succ zero) _v_34))))))=(nat-to-int (len (rotate zero (rotate zero _v_34)))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_32 _qv_33))=(plus (succ _qv_33) (succ _qv_32))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate zero (rotate (succ zero) _v_34)))))))=(nat-to-int (len (rotate zero (rotate zero _v_34)))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_18))=_qv_18))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate zero (rotate (succ zero) _v_34)))))))=(nat-to-int (len (rotate zero (rotate zero _v_34)))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_19 _qv_20)=(append _qv_20 _qv_19)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate zero (rotate (succ zero) _v_34)))))))=(nat-to-int (len (rotate zero (rotate zero _v_34)))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_21 _qv_22) _qv_23)=(append _qv_21 (append _qv_22 _qv_23))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate zero (rotate (succ zero) _v_34)))))))=(nat-to-int (len (rotate zero (rotate zero _v_34)))))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_24 _qv_25)=(plus _qv_25 _qv_24)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate zero (rotate (succ zero) _v_34)))))))=(nat-to-int (len (rotate zero (rotate zero _v_34)))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_26 _qv_27) _qv_28)=(plus _qv_26 (plus _qv_27 _qv_28))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate zero (rotate (succ zero) _v_34)))))))=(nat-to-int (len (rotate zero (rotate zero _v_34)))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_29)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate zero (rotate (succ zero) _v_34)))))))=(nat-to-int (len (rotate zero (rotate zero _v_34)))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_30))=(nat-to-int _qv_30)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate zero (rotate (succ zero) _v_34)))))))=(nat-to-int (len (rotate zero (rotate zero _v_34)))))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_31))=(nat-to-int _qv_31)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate zero (rotate (succ zero) _v_34)))))))=(nat-to-int (len (rotate zero (rotate zero _v_34)))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_32 _qv_33))=(plus (succ _qv_32) (succ _qv_33))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate zero (rotate (succ zero) _v_34)))))))=(nat-to-int (len (rotate zero (rotate zero _v_34)))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_32 _qv_33))=(plus (succ _qv_33) (succ _qv_32))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate zero (rotate (succ zero) _v_34)))))))=(nat-to-int (len (rotate zero (rotate zero _v_34)))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_18))=_qv_18))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate zero (rotate (succ zero) _v_34)))))))=(nat-to-int (len (rotate zero (rotate zero _v_34)))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_19 _qv_20)=(append _qv_20 _qv_19)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate zero (rotate (succ zero) _v_34)))))))=(nat-to-int (len (rotate zero (rotate zero _v_34)))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_21 _qv_22) _qv_23)=(append _qv_21 (append _qv_22 _qv_23))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate zero (rotate (succ zero) _v_34)))))))=(nat-to-int (len (rotate zero (rotate zero _v_34)))))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_24 _qv_25)=(plus _qv_25 _qv_24)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate zero (rotate (succ zero) _v_34)))))))=(nat-to-int (len (rotate zero (rotate zero _v_34)))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_26 _qv_27) _qv_28)=(plus _qv_26 (plus _qv_27 _qv_28))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate zero (rotate (succ zero) _v_34)))))))=(nat-to-int (len (rotate zero (rotate zero _v_34)))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_29)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate zero (rotate (succ zero) _v_34)))))))=(nat-to-int (len (rotate zero (rotate zero _v_34)))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_30))=(nat-to-int _qv_30)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate zero (rotate (succ zero) _v_34)))))))=(nat-to-int (len (rotate zero (rotate zero _v_34)))))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_31))=(nat-to-int _qv_31)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate zero (rotate (succ zero) _v_34)))))))=(nat-to-int (len (rotate zero (rotate zero _v_34)))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_32 _qv_33))=(plus (succ _qv_32) (succ _qv_33))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate zero (rotate (succ zero) _v_34)))))))=(nat-to-int (len (rotate zero (rotate zero _v_34)))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_32 _qv_33))=(plus (succ _qv_33) (succ _qv_32))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate zero (rotate (succ zero) _v_34)))))))=(nat-to-int (len (rotate zero (rotate zero _v_34)))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_18))=_qv_18))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate zero (rotate (succ zero) _v_34)))))))=(nat-to-int (len (rotate zero (rotate zero _v_34)))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_19 _qv_20)=(append _qv_20 _qv_19)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate zero (rotate (succ zero) _v_34)))))))=(nat-to-int (len (rotate zero (rotate zero _v_34)))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_21 _qv_22) _qv_23)=(append _qv_21 (append _qv_22 _qv_23))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate zero (rotate (succ zero) _v_34)))))))=(nat-to-int (len (rotate zero (rotate zero _v_34)))))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_24 _qv_25)=(plus _qv_25 _qv_24)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate zero (rotate (succ zero) _v_34)))))))=(nat-to-int (len (rotate zero (rotate zero _v_34)))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_26 _qv_27) _qv_28)=(plus _qv_26 (plus _qv_27 _qv_28))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate zero (rotate (succ zero) _v_34)))))))=(nat-to-int (len (rotate zero (rotate zero _v_34)))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_29)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate zero (rotate (succ zero) _v_34)))))))=(nat-to-int (len (rotate zero (rotate zero _v_34)))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_30))=(nat-to-int _qv_30)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate zero (rotate (succ zero) _v_34)))))))=(nat-to-int (len (rotate zero (rotate zero _v_34)))))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_31))=(nat-to-int _qv_31)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate zero (rotate (succ zero) _v_34)))))))=(nat-to-int (len (rotate zero (rotate zero _v_34)))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_32 _qv_33))=(plus (succ _qv_32) (succ _qv_33))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate zero (rotate (succ zero) _v_34)))))))=(nat-to-int (len (rotate zero (rotate zero _v_34)))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_32 _qv_33))=(plus (succ _qv_33) (succ _qv_32))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate zero (rotate (succ zero) _v_34)))))))=(nat-to-int (len (rotate zero (rotate zero _v_34)))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_18))=_qv_18))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate zero (rotate (succ zero) _v_34)))))))=(nat-to-int (len (rotate zero (rotate zero _v_34)))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_19 _qv_20)=(append _qv_20 _qv_19)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate zero (rotate (succ zero) _v_34)))))))=(nat-to-int (len (rotate zero (rotate zero _v_34)))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_21 _qv_22) _qv_23)=(append _qv_21 (append _qv_22 _qv_23))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate zero (rotate (succ zero) _v_34)))))))=(nat-to-int (len (rotate zero (rotate zero _v_34)))))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_24 _qv_25)=(plus _qv_25 _qv_24)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate zero (rotate (succ zero) _v_34)))))))=(nat-to-int (len (rotate zero (rotate zero _v_34)))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_26 _qv_27) _qv_28)=(plus _qv_26 (plus _qv_27 _qv_28))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate zero (rotate (succ zero) _v_34)))))))=(nat-to-int (len (rotate zero (rotate zero _v_34)))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_29)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate zero (rotate (succ zero) _v_34)))))))=(nat-to-int (len (rotate zero (rotate zero _v_34)))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_30))=(nat-to-int _qv_30)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate zero (rotate (succ zero) _v_34)))))))=(nat-to-int (len (rotate zero (rotate zero _v_34)))))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_31))=(nat-to-int _qv_31)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate zero (rotate (succ zero) _v_34)))))))=(nat-to-int (len (rotate zero (rotate zero _v_34)))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_32 _qv_33))=(plus (succ _qv_32) (succ _qv_33))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate zero (rotate (succ zero) _v_34)))))))=(nat-to-int (len (rotate zero (rotate zero _v_34)))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_32 _qv_33))=(plus (succ _qv_33) (succ _qv_32))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate zero (rotate (succ zero) _v_34))))))=(nat-to-int (len (rotate zero (rotate zero _v_34)))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_18))=_qv_18))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate zero (rotate (succ zero) _v_34))))))=(nat-to-int (len (rotate zero (rotate zero _v_34)))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_19 _qv_20)=(append _qv_20 _qv_19)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate zero (rotate (succ zero) _v_34))))))=(nat-to-int (len (rotate zero (rotate zero _v_34)))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_21 _qv_22) _qv_23)=(append _qv_21 (append _qv_22 _qv_23))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate zero (rotate (succ zero) _v_34))))))=(nat-to-int (len (rotate zero (rotate zero _v_34)))))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_24 _qv_25)=(plus _qv_25 _qv_24)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate zero (rotate (succ zero) _v_34))))))=(nat-to-int (len (rotate zero (rotate zero _v_34)))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_26 _qv_27) _qv_28)=(plus _qv_26 (plus _qv_27 _qv_28))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate zero (rotate (succ zero) _v_34))))))=(nat-to-int (len (rotate zero (rotate zero _v_34)))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_29)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate zero (rotate (succ zero) _v_34))))))=(nat-to-int (len (rotate zero (rotate zero _v_34)))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_30))=(nat-to-int _qv_30)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate zero (rotate (succ zero) _v_34))))))=(nat-to-int (len (rotate zero (rotate zero _v_34)))))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_31))=(nat-to-int _qv_31)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate zero (rotate (succ zero) _v_34))))))=(nat-to-int (len (rotate zero (rotate zero _v_34)))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_32 _qv_33))=(plus (succ _qv_32) (succ _qv_33))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate zero (rotate (succ zero) _v_34))))))=(nat-to-int (len (rotate zero (rotate zero _v_34)))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_32 _qv_33))=(plus (succ _qv_33) (succ _qv_32))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate zero (rotate (succ zero) _v_34)))))=(nat-to-int (len (rotate zero (rotate zero _v_34)))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_18))=_qv_18))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate zero (rotate (succ zero) _v_34)))))=(nat-to-int (len (rotate zero (rotate zero _v_34)))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_19 _qv_20)=(append _qv_20 _qv_19)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate zero (rotate (succ zero) _v_34)))))=(nat-to-int (len (rotate zero (rotate zero _v_34)))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_21 _qv_22) _qv_23)=(append _qv_21 (append _qv_22 _qv_23))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate zero (rotate (succ zero) _v_34)))))=(nat-to-int (len (rotate zero (rotate zero _v_34)))))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_24 _qv_25)=(plus _qv_25 _qv_24)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate zero (rotate (succ zero) _v_34)))))=(nat-to-int (len (rotate zero (rotate zero _v_34)))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_26 _qv_27) _qv_28)=(plus _qv_26 (plus _qv_27 _qv_28))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate zero (rotate (succ zero) _v_34)))))=(nat-to-int (len (rotate zero (rotate zero _v_34)))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_29)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate zero (rotate (succ zero) _v_34)))))=(nat-to-int (len (rotate zero (rotate zero _v_34)))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_30))=(nat-to-int _qv_30)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate zero (rotate (succ zero) _v_34)))))=(nat-to-int (len (rotate zero (rotate zero _v_34)))))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_31))=(nat-to-int _qv_31)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate zero (rotate (succ zero) _v_34)))))=(nat-to-int (len (rotate zero (rotate zero _v_34)))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_32 _qv_33))=(plus (succ _qv_32) (succ _qv_33))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate zero (rotate (succ zero) _v_34)))))=(nat-to-int (len (rotate zero (rotate zero _v_34)))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_32 _qv_33))=(plus (succ _qv_33) (succ _qv_32))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate zero (rotate (succ zero) _v_34))))))=(nat-to-int (len (rotate _t_17 (rotate zero (rotate zero _v_34))))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_18))=_qv_18))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate zero (rotate (succ zero) _v_34))))))=(nat-to-int (len (rotate _t_17 (rotate zero (rotate zero _v_34))))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_19 _qv_20)=(append _qv_20 _qv_19)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate zero (rotate (succ zero) _v_34))))))=(nat-to-int (len (rotate _t_17 (rotate zero (rotate zero _v_34))))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_21 _qv_22) _qv_23)=(append _qv_21 (append _qv_22 _qv_23))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate zero (rotate (succ zero) _v_34))))))=(nat-to-int (len (rotate _t_17 (rotate zero (rotate zero _v_34))))))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_24 _qv_25)=(plus _qv_25 _qv_24)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate zero (rotate (succ zero) _v_34))))))=(nat-to-int (len (rotate _t_17 (rotate zero (rotate zero _v_34))))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_26 _qv_27) _qv_28)=(plus _qv_26 (plus _qv_27 _qv_28))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate zero (rotate (succ zero) _v_34))))))=(nat-to-int (len (rotate _t_17 (rotate zero (rotate zero _v_34))))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_29)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate zero (rotate (succ zero) _v_34))))))=(nat-to-int (len (rotate _t_17 (rotate zero (rotate zero _v_34))))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_30))=(nat-to-int _qv_30)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate zero (rotate (succ zero) _v_34))))))=(nat-to-int (len (rotate _t_17 (rotate zero (rotate zero _v_34))))))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_31))=(nat-to-int _qv_31)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate zero (rotate (succ zero) _v_34))))))=(nat-to-int (len (rotate _t_17 (rotate zero (rotate zero _v_34))))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_32 _qv_33))=(plus (succ _qv_32) (succ _qv_33))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate zero (rotate (succ zero) _v_34))))))=(nat-to-int (len (rotate _t_17 (rotate zero (rotate zero _v_34))))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_32 _qv_33))=(plus (succ _qv_33) (succ _qv_32))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate zero (rotate (succ zero) _v_34))))))=(nat-to-int (len (rotate _t_17 (rotate zero (rotate zero _v_34))))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_18))=_qv_18))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate zero (rotate (succ zero) _v_34))))))=(nat-to-int (len (rotate _t_17 (rotate zero (rotate zero _v_34))))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_19 _qv_20)=(append _qv_20 _qv_19)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate zero (rotate (succ zero) _v_34))))))=(nat-to-int (len (rotate _t_17 (rotate zero (rotate zero _v_34))))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_21 _qv_22) _qv_23)=(append _qv_21 (append _qv_22 _qv_23))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate zero (rotate (succ zero) _v_34))))))=(nat-to-int (len (rotate _t_17 (rotate zero (rotate zero _v_34))))))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_24 _qv_25)=(plus _qv_25 _qv_24)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate zero (rotate (succ zero) _v_34))))))=(nat-to-int (len (rotate _t_17 (rotate zero (rotate zero _v_34))))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_26 _qv_27) _qv_28)=(plus _qv_26 (plus _qv_27 _qv_28))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate zero (rotate (succ zero) _v_34))))))=(nat-to-int (len (rotate _t_17 (rotate zero (rotate zero _v_34))))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_29)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate zero (rotate (succ zero) _v_34))))))=(nat-to-int (len (rotate _t_17 (rotate zero (rotate zero _v_34))))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_30))=(nat-to-int _qv_30)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate zero (rotate (succ zero) _v_34))))))=(nat-to-int (len (rotate _t_17 (rotate zero (rotate zero _v_34))))))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_31))=(nat-to-int _qv_31)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate zero (rotate (succ zero) _v_34))))))=(nat-to-int (len (rotate _t_17 (rotate zero (rotate zero _v_34))))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_32 _qv_33))=(plus (succ _qv_32) (succ _qv_33))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate zero (rotate (succ zero) _v_34))))))=(nat-to-int (len (rotate _t_17 (rotate zero (rotate zero _v_34))))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_32 _qv_33))=(plus (succ _qv_33) (succ _qv_32))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate zero (rotate (succ zero) _v_34))))))=(nat-to-int (len (rotate _t_17 (rotate zero (rotate zero _v_34))))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_18))=_qv_18))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate zero (rotate (succ zero) _v_34))))))=(nat-to-int (len (rotate _t_17 (rotate zero (rotate zero _v_34))))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_19 _qv_20)=(append _qv_20 _qv_19)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate zero (rotate (succ zero) _v_34))))))=(nat-to-int (len (rotate _t_17 (rotate zero (rotate zero _v_34))))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_21 _qv_22) _qv_23)=(append _qv_21 (append _qv_22 _qv_23))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate zero (rotate (succ zero) _v_34))))))=(nat-to-int (len (rotate _t_17 (rotate zero (rotate zero _v_34))))))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_24 _qv_25)=(plus _qv_25 _qv_24)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate zero (rotate (succ zero) _v_34))))))=(nat-to-int (len (rotate _t_17 (rotate zero (rotate zero _v_34))))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_26 _qv_27) _qv_28)=(plus _qv_26 (plus _qv_27 _qv_28))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate zero (rotate (succ zero) _v_34))))))=(nat-to-int (len (rotate _t_17 (rotate zero (rotate zero _v_34))))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_29)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate zero (rotate (succ zero) _v_34))))))=(nat-to-int (len (rotate _t_17 (rotate zero (rotate zero _v_34))))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_30))=(nat-to-int _qv_30)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate zero (rotate (succ zero) _v_34))))))=(nat-to-int (len (rotate _t_17 (rotate zero (rotate zero _v_34))))))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_31))=(nat-to-int _qv_31)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate zero (rotate (succ zero) _v_34))))))=(nat-to-int (len (rotate _t_17 (rotate zero (rotate zero _v_34))))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_32 _qv_33))=(plus (succ _qv_32) (succ _qv_33))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate zero (rotate (succ zero) _v_34))))))=(nat-to-int (len (rotate _t_17 (rotate zero (rotate zero _v_34))))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_32 _qv_33))=(plus (succ _qv_33) (succ _qv_32))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate zero (rotate (succ zero) _v_34))))))=(nat-to-int (len (rotate _t_17 (rotate zero (rotate zero _v_34))))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_18))=_qv_18))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate zero (rotate (succ zero) _v_34))))))=(nat-to-int (len (rotate _t_17 (rotate zero (rotate zero _v_34))))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_19 _qv_20)=(append _qv_20 _qv_19)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate zero (rotate (succ zero) _v_34))))))=(nat-to-int (len (rotate _t_17 (rotate zero (rotate zero _v_34))))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_21 _qv_22) _qv_23)=(append _qv_21 (append _qv_22 _qv_23))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate zero (rotate (succ zero) _v_34))))))=(nat-to-int (len (rotate _t_17 (rotate zero (rotate zero _v_34))))))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_24 _qv_25)=(plus _qv_25 _qv_24)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate zero (rotate (succ zero) _v_34))))))=(nat-to-int (len (rotate _t_17 (rotate zero (rotate zero _v_34))))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_26 _qv_27) _qv_28)=(plus _qv_26 (plus _qv_27 _qv_28))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate zero (rotate (succ zero) _v_34))))))=(nat-to-int (len (rotate _t_17 (rotate zero (rotate zero _v_34))))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_29)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate zero (rotate (succ zero) _v_34))))))=(nat-to-int (len (rotate _t_17 (rotate zero (rotate zero _v_34))))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_30))=(nat-to-int _qv_30)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate zero (rotate (succ zero) _v_34))))))=(nat-to-int (len (rotate _t_17 (rotate zero (rotate zero _v_34))))))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_31))=(nat-to-int _qv_31)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate zero (rotate (succ zero) _v_34))))))=(nat-to-int (len (rotate _t_17 (rotate zero (rotate zero _v_34))))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_32 _qv_33))=(plus (succ _qv_32) (succ _qv_33))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate zero (rotate (succ zero) _v_34))))))=(nat-to-int (len (rotate _t_17 (rotate zero (rotate zero _v_34))))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_32 _qv_33))=(plus (succ _qv_33) (succ _qv_32))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate zero (rotate (succ zero) _v_34))))))=(nat-to-int (len (rotate zero (rotate zero _v_34)))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_18))=_qv_18))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate zero (rotate (succ zero) _v_34))))))=(nat-to-int (len (rotate zero (rotate zero _v_34)))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_19 _qv_20)=(append _qv_20 _qv_19)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate zero (rotate (succ zero) _v_34))))))=(nat-to-int (len (rotate zero (rotate zero _v_34)))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_21 _qv_22) _qv_23)=(append _qv_21 (append _qv_22 _qv_23))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate zero (rotate (succ zero) _v_34))))))=(nat-to-int (len (rotate zero (rotate zero _v_34)))))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_24 _qv_25)=(plus _qv_25 _qv_24)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate zero (rotate (succ zero) _v_34))))))=(nat-to-int (len (rotate zero (rotate zero _v_34)))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_26 _qv_27) _qv_28)=(plus _qv_26 (plus _qv_27 _qv_28))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate zero (rotate (succ zero) _v_34))))))=(nat-to-int (len (rotate zero (rotate zero _v_34)))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_29)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate zero (rotate (succ zero) _v_34))))))=(nat-to-int (len (rotate zero (rotate zero _v_34)))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_30))=(nat-to-int _qv_30)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate zero (rotate (succ zero) _v_34))))))=(nat-to-int (len (rotate zero (rotate zero _v_34)))))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_31))=(nat-to-int _qv_31)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate zero (rotate (succ zero) _v_34))))))=(nat-to-int (len (rotate zero (rotate zero _v_34)))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_32 _qv_33))=(plus (succ _qv_32) (succ _qv_33))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate zero (rotate (succ zero) _v_34))))))=(nat-to-int (len (rotate zero (rotate zero _v_34)))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_32 _qv_33))=(plus (succ _qv_33) (succ _qv_32))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate zero (rotate (succ zero) _v_34)))))))=(nat-to-int (len (rotate zero (rotate zero _v_34)))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_18))=_qv_18))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate zero (rotate (succ zero) _v_34)))))))=(nat-to-int (len (rotate zero (rotate zero _v_34)))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_19 _qv_20)=(append _qv_20 _qv_19)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate zero (rotate (succ zero) _v_34)))))))=(nat-to-int (len (rotate zero (rotate zero _v_34)))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_21 _qv_22) _qv_23)=(append _qv_21 (append _qv_22 _qv_23))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate zero (rotate (succ zero) _v_34)))))))=(nat-to-int (len (rotate zero (rotate zero _v_34)))))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_24 _qv_25)=(plus _qv_25 _qv_24)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate zero (rotate (succ zero) _v_34)))))))=(nat-to-int (len (rotate zero (rotate zero _v_34)))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_26 _qv_27) _qv_28)=(plus _qv_26 (plus _qv_27 _qv_28))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate zero (rotate (succ zero) _v_34)))))))=(nat-to-int (len (rotate zero (rotate zero _v_34)))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_29)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate zero (rotate (succ zero) _v_34)))))))=(nat-to-int (len (rotate zero (rotate zero _v_34)))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_30))=(nat-to-int _qv_30)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate zero (rotate (succ zero) _v_34)))))))=(nat-to-int (len (rotate zero (rotate zero _v_34)))))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_31))=(nat-to-int _qv_31)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate zero (rotate (succ zero) _v_34)))))))=(nat-to-int (len (rotate zero (rotate zero _v_34)))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_32 _qv_33))=(plus (succ _qv_32) (succ _qv_33))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate zero (rotate (succ zero) _v_34)))))))=(nat-to-int (len (rotate zero (rotate zero _v_34)))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_32 _qv_33))=(plus (succ _qv_33) (succ _qv_32))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate zero (rotate (succ zero) _v_34)))))))=(nat-to-int (len (rotate zero (rotate zero _v_34)))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_18))=_qv_18))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate zero (rotate (succ zero) _v_34)))))))=(nat-to-int (len (rotate zero (rotate zero _v_34)))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_19 _qv_20)=(append _qv_20 _qv_19)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate zero (rotate (succ zero) _v_34)))))))=(nat-to-int (len (rotate zero (rotate zero _v_34)))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_21 _qv_22) _qv_23)=(append _qv_21 (append _qv_22 _qv_23))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate zero (rotate (succ zero) _v_34)))))))=(nat-to-int (len (rotate zero (rotate zero _v_34)))))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_24 _qv_25)=(plus _qv_25 _qv_24)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate zero (rotate (succ zero) _v_34)))))))=(nat-to-int (len (rotate zero (rotate zero _v_34)))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_26 _qv_27) _qv_28)=(plus _qv_26 (plus _qv_27 _qv_28))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate zero (rotate (succ zero) _v_34)))))))=(nat-to-int (len (rotate zero (rotate zero _v_34)))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_29)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate zero (rotate (succ zero) _v_34)))))))=(nat-to-int (len (rotate zero (rotate zero _v_34)))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_30))=(nat-to-int _qv_30)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate zero (rotate (succ zero) _v_34)))))))=(nat-to-int (len (rotate zero (rotate zero _v_34)))))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_31))=(nat-to-int _qv_31)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate zero (rotate (succ zero) _v_34)))))))=(nat-to-int (len (rotate zero (rotate zero _v_34)))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_32 _qv_33))=(plus (succ _qv_32) (succ _qv_33))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate zero (rotate (succ zero) _v_34)))))))=(nat-to-int (len (rotate zero (rotate zero _v_34)))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_32 _qv_33))=(plus (succ _qv_33) (succ _qv_32))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate zero (rotate (succ zero) _v_34)))))))=(nat-to-int (len (rotate zero (rotate zero _v_34)))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_18))=_qv_18))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate zero (rotate (succ zero) _v_34)))))))=(nat-to-int (len (rotate zero (rotate zero _v_34)))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_19 _qv_20)=(append _qv_20 _qv_19)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate zero (rotate (succ zero) _v_34)))))))=(nat-to-int (len (rotate zero (rotate zero _v_34)))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_21 _qv_22) _qv_23)=(append _qv_21 (append _qv_22 _qv_23))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate zero (rotate (succ zero) _v_34)))))))=(nat-to-int (len (rotate zero (rotate zero _v_34)))))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_24 _qv_25)=(plus _qv_25 _qv_24)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate zero (rotate (succ zero) _v_34)))))))=(nat-to-int (len (rotate zero (rotate zero _v_34)))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_26 _qv_27) _qv_28)=(plus _qv_26 (plus _qv_27 _qv_28))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate zero (rotate (succ zero) _v_34)))))))=(nat-to-int (len (rotate zero (rotate zero _v_34)))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_29)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate zero (rotate (succ zero) _v_34)))))))=(nat-to-int (len (rotate zero (rotate zero _v_34)))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_30))=(nat-to-int _qv_30)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate zero (rotate (succ zero) _v_34)))))))=(nat-to-int (len (rotate zero (rotate zero _v_34)))))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_31))=(nat-to-int _qv_31)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate zero (rotate (succ zero) _v_34)))))))=(nat-to-int (len (rotate zero (rotate zero _v_34)))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_32 _qv_33))=(plus (succ _qv_32) (succ _qv_33))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate zero (rotate (succ zero) _v_34)))))))=(nat-to-int (len (rotate zero (rotate zero _v_34)))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_32 _qv_33))=(plus (succ _qv_33) (succ _qv_32))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate zero (rotate (succ zero) _v_34)))))))=(nat-to-int (len (rotate zero (rotate zero _v_34)))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_18))=_qv_18))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate zero (rotate (succ zero) _v_34)))))))=(nat-to-int (len (rotate zero (rotate zero _v_34)))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_19 _qv_20)=(append _qv_20 _qv_19)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate zero (rotate (succ zero) _v_34)))))))=(nat-to-int (len (rotate zero (rotate zero _v_34)))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_21 _qv_22) _qv_23)=(append _qv_21 (append _qv_22 _qv_23))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate zero (rotate (succ zero) _v_34)))))))=(nat-to-int (len (rotate zero (rotate zero _v_34)))))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_24 _qv_25)=(plus _qv_25 _qv_24)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate zero (rotate (succ zero) _v_34)))))))=(nat-to-int (len (rotate zero (rotate zero _v_34)))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_26 _qv_27) _qv_28)=(plus _qv_26 (plus _qv_27 _qv_28))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate zero (rotate (succ zero) _v_34)))))))=(nat-to-int (len (rotate zero (rotate zero _v_34)))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_29)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate zero (rotate (succ zero) _v_34)))))))=(nat-to-int (len (rotate zero (rotate zero _v_34)))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_30))=(nat-to-int _qv_30)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate zero (rotate (succ zero) _v_34)))))))=(nat-to-int (len (rotate zero (rotate zero _v_34)))))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_31))=(nat-to-int _qv_31)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate zero (rotate (succ zero) _v_34)))))))=(nat-to-int (len (rotate zero (rotate zero _v_34)))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_32 _qv_33))=(plus (succ _qv_32) (succ _qv_33))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate zero (rotate (succ zero) _v_34)))))))=(nat-to-int (len (rotate zero (rotate zero _v_34)))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_32 _qv_33))=(plus (succ _qv_33) (succ _qv_32))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate zero (rotate (succ zero) _v_34))))))=(nat-to-int (len (rotate zero (rotate zero _v_34)))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_18))=_qv_18))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate zero (rotate (succ zero) _v_34))))))=(nat-to-int (len (rotate zero (rotate zero _v_34)))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_19 _qv_20)=(append _qv_20 _qv_19)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate zero (rotate (succ zero) _v_34))))))=(nat-to-int (len (rotate zero (rotate zero _v_34)))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_21 _qv_22) _qv_23)=(append _qv_21 (append _qv_22 _qv_23))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate zero (rotate (succ zero) _v_34))))))=(nat-to-int (len (rotate zero (rotate zero _v_34)))))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_24 _qv_25)=(plus _qv_25 _qv_24)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate zero (rotate (succ zero) _v_34))))))=(nat-to-int (len (rotate zero (rotate zero _v_34)))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_26 _qv_27) _qv_28)=(plus _qv_26 (plus _qv_27 _qv_28))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate zero (rotate (succ zero) _v_34))))))=(nat-to-int (len (rotate zero (rotate zero _v_34)))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_29)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate zero (rotate (succ zero) _v_34))))))=(nat-to-int (len (rotate zero (rotate zero _v_34)))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_30))=(nat-to-int _qv_30)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate zero (rotate (succ zero) _v_34))))))=(nat-to-int (len (rotate zero (rotate zero _v_34)))))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_31))=(nat-to-int _qv_31)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate zero (rotate (succ zero) _v_34))))))=(nat-to-int (len (rotate zero (rotate zero _v_34)))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_32 _qv_33))=(plus (succ _qv_32) (succ _qv_33))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate zero (rotate (succ zero) _v_34))))))=(nat-to-int (len (rotate zero (rotate zero _v_34)))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_32 _qv_33))=(plus (succ _qv_33) (succ _qv_32))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate zero (rotate (succ zero) _v_34))))))=(nat-to-int (len (rotate _t_17 (rotate zero (rotate zero _v_34))))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_18))=_qv_18))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate zero (rotate (succ zero) _v_34))))))=(nat-to-int (len (rotate _t_17 (rotate zero (rotate zero _v_34))))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_19 _qv_20)=(append _qv_20 _qv_19)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate zero (rotate (succ zero) _v_34))))))=(nat-to-int (len (rotate _t_17 (rotate zero (rotate zero _v_34))))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_21 _qv_22) _qv_23)=(append _qv_21 (append _qv_22 _qv_23))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate zero (rotate (succ zero) _v_34))))))=(nat-to-int (len (rotate _t_17 (rotate zero (rotate zero _v_34))))))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_24 _qv_25)=(plus _qv_25 _qv_24)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate zero (rotate (succ zero) _v_34))))))=(nat-to-int (len (rotate _t_17 (rotate zero (rotate zero _v_34))))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_26 _qv_27) _qv_28)=(plus _qv_26 (plus _qv_27 _qv_28))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate zero (rotate (succ zero) _v_34))))))=(nat-to-int (len (rotate _t_17 (rotate zero (rotate zero _v_34))))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_29)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate zero (rotate (succ zero) _v_34))))))=(nat-to-int (len (rotate _t_17 (rotate zero (rotate zero _v_34))))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_30))=(nat-to-int _qv_30)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate zero (rotate (succ zero) _v_34))))))=(nat-to-int (len (rotate _t_17 (rotate zero (rotate zero _v_34))))))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_31))=(nat-to-int _qv_31)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate zero (rotate (succ zero) _v_34))))))=(nat-to-int (len (rotate _t_17 (rotate zero (rotate zero _v_34))))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_32 _qv_33))=(plus (succ _qv_32) (succ _qv_33))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate zero (rotate (succ zero) _v_34))))))=(nat-to-int (len (rotate _t_17 (rotate zero (rotate zero _v_34))))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_32 _qv_33))=(plus (succ _qv_33) (succ _qv_32))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate zero (rotate (succ zero) _v_34))))))=(nat-to-int (len (rotate _t_17 (rotate zero (rotate zero _v_34))))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_18))=_qv_18))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate zero (rotate (succ zero) _v_34))))))=(nat-to-int (len (rotate _t_17 (rotate zero (rotate zero _v_34))))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_19 _qv_20)=(append _qv_20 _qv_19)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate zero (rotate (succ zero) _v_34))))))=(nat-to-int (len (rotate _t_17 (rotate zero (rotate zero _v_34))))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_21 _qv_22) _qv_23)=(append _qv_21 (append _qv_22 _qv_23))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate zero (rotate (succ zero) _v_34))))))=(nat-to-int (len (rotate _t_17 (rotate zero (rotate zero _v_34))))))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_24 _qv_25)=(plus _qv_25 _qv_24)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate zero (rotate (succ zero) _v_34))))))=(nat-to-int (len (rotate _t_17 (rotate zero (rotate zero _v_34))))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_26 _qv_27) _qv_28)=(plus _qv_26 (plus _qv_27 _qv_28))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate zero (rotate (succ zero) _v_34))))))=(nat-to-int (len (rotate _t_17 (rotate zero (rotate zero _v_34))))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_29)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate zero (rotate (succ zero) _v_34))))))=(nat-to-int (len (rotate _t_17 (rotate zero (rotate zero _v_34))))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_30))=(nat-to-int _qv_30)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate zero (rotate (succ zero) _v_34))))))=(nat-to-int (len (rotate _t_17 (rotate zero (rotate zero _v_34))))))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_31))=(nat-to-int _qv_31)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate zero (rotate (succ zero) _v_34))))))=(nat-to-int (len (rotate _t_17 (rotate zero (rotate zero _v_34))))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_32 _qv_33))=(plus (succ _qv_32) (succ _qv_33))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate zero (rotate (succ zero) _v_34))))))=(nat-to-int (len (rotate _t_17 (rotate zero (rotate zero _v_34))))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_32 _qv_33))=(plus (succ _qv_33) (succ _qv_32))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate zero (rotate (succ zero) _v_34))))))=(nat-to-int (len (rotate _t_17 (rotate zero (rotate zero _v_34))))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_18))=_qv_18))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate zero (rotate (succ zero) _v_34))))))=(nat-to-int (len (rotate _t_17 (rotate zero (rotate zero _v_34))))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_19 _qv_20)=(append _qv_20 _qv_19)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate zero (rotate (succ zero) _v_34))))))=(nat-to-int (len (rotate _t_17 (rotate zero (rotate zero _v_34))))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_21 _qv_22) _qv_23)=(append _qv_21 (append _qv_22 _qv_23))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate zero (rotate (succ zero) _v_34))))))=(nat-to-int (len (rotate _t_17 (rotate zero (rotate zero _v_34))))))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_24 _qv_25)=(plus _qv_25 _qv_24)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate zero (rotate (succ zero) _v_34))))))=(nat-to-int (len (rotate _t_17 (rotate zero (rotate zero _v_34))))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_26 _qv_27) _qv_28)=(plus _qv_26 (plus _qv_27 _qv_28))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate zero (rotate (succ zero) _v_34))))))=(nat-to-int (len (rotate _t_17 (rotate zero (rotate zero _v_34))))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_29)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate zero (rotate (succ zero) _v_34))))))=(nat-to-int (len (rotate _t_17 (rotate zero (rotate zero _v_34))))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_30))=(nat-to-int _qv_30)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate zero (rotate (succ zero) _v_34))))))=(nat-to-int (len (rotate _t_17 (rotate zero (rotate zero _v_34))))))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_31))=(nat-to-int _qv_31)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate zero (rotate (succ zero) _v_34))))))=(nat-to-int (len (rotate _t_17 (rotate zero (rotate zero _v_34))))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_32 _qv_33))=(plus (succ _qv_32) (succ _qv_33))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate zero (rotate (succ zero) _v_34))))))=(nat-to-int (len (rotate _t_17 (rotate zero (rotate zero _v_34))))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_32 _qv_33))=(plus (succ _qv_33) (succ _qv_32))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate zero (rotate (succ zero) _v_34))))))=(nat-to-int (len (rotate _t_17 (rotate zero (rotate zero _v_34))))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_18))=_qv_18))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate zero (rotate (succ zero) _v_34))))))=(nat-to-int (len (rotate _t_17 (rotate zero (rotate zero _v_34))))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_19 _qv_20)=(append _qv_20 _qv_19)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate zero (rotate (succ zero) _v_34))))))=(nat-to-int (len (rotate _t_17 (rotate zero (rotate zero _v_34))))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_21 _qv_22) _qv_23)=(append _qv_21 (append _qv_22 _qv_23))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate zero (rotate (succ zero) _v_34))))))=(nat-to-int (len (rotate _t_17 (rotate zero (rotate zero _v_34))))))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_24 _qv_25)=(plus _qv_25 _qv_24)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate zero (rotate (succ zero) _v_34))))))=(nat-to-int (len (rotate _t_17 (rotate zero (rotate zero _v_34))))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_26 _qv_27) _qv_28)=(plus _qv_26 (plus _qv_27 _qv_28))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate zero (rotate (succ zero) _v_34))))))=(nat-to-int (len (rotate _t_17 (rotate zero (rotate zero _v_34))))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_29)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate zero (rotate (succ zero) _v_34))))))=(nat-to-int (len (rotate _t_17 (rotate zero (rotate zero _v_34))))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_30))=(nat-to-int _qv_30)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate zero (rotate (succ zero) _v_34))))))=(nat-to-int (len (rotate _t_17 (rotate zero (rotate zero _v_34))))))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_31))=(nat-to-int _qv_31)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate zero (rotate (succ zero) _v_34))))))=(nat-to-int (len (rotate _t_17 (rotate zero (rotate zero _v_34))))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_32 _qv_33))=(plus (succ _qv_32) (succ _qv_33))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate zero (rotate (succ zero) _v_34))))))=(nat-to-int (len (rotate _t_17 (rotate zero (rotate zero _v_34))))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_32 _qv_33))=(plus (succ _qv_33) (succ _qv_32))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate zero (rotate (succ zero) _v_34))))))=(nat-to-int (len (rotate zero (rotate zero _v_34)))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_18))=_qv_18))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate zero (rotate (succ zero) _v_34))))))=(nat-to-int (len (rotate zero (rotate zero _v_34)))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_19 _qv_20)=(append _qv_20 _qv_19)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate zero (rotate (succ zero) _v_34))))))=(nat-to-int (len (rotate zero (rotate zero _v_34)))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_21 _qv_22) _qv_23)=(append _qv_21 (append _qv_22 _qv_23))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate zero (rotate (succ zero) _v_34))))))=(nat-to-int (len (rotate zero (rotate zero _v_34)))))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_24 _qv_25)=(plus _qv_25 _qv_24)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate zero (rotate (succ zero) _v_34))))))=(nat-to-int (len (rotate zero (rotate zero _v_34)))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_26 _qv_27) _qv_28)=(plus _qv_26 (plus _qv_27 _qv_28))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate zero (rotate (succ zero) _v_34))))))=(nat-to-int (len (rotate zero (rotate zero _v_34)))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_29)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate zero (rotate (succ zero) _v_34))))))=(nat-to-int (len (rotate zero (rotate zero _v_34)))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_30))=(nat-to-int _qv_30)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate zero (rotate (succ zero) _v_34))))))=(nat-to-int (len (rotate zero (rotate zero _v_34)))))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_31))=(nat-to-int _qv_31)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate zero (rotate (succ zero) _v_34))))))=(nat-to-int (len (rotate zero (rotate zero _v_34)))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_32 _qv_33))=(plus (succ _qv_32) (succ _qv_33))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate zero (rotate (succ zero) _v_34))))))=(nat-to-int (len (rotate zero (rotate zero _v_34)))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_32 _qv_33))=(plus (succ _qv_33) (succ _qv_32))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate zero (rotate (succ zero) _v_34)))))))=(nat-to-int (len (rotate zero (rotate zero _v_34)))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_18))=_qv_18))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate zero (rotate (succ zero) _v_34)))))))=(nat-to-int (len (rotate zero (rotate zero _v_34)))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_19 _qv_20)=(append _qv_20 _qv_19)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate zero (rotate (succ zero) _v_34)))))))=(nat-to-int (len (rotate zero (rotate zero _v_34)))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_21 _qv_22) _qv_23)=(append _qv_21 (append _qv_22 _qv_23))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate zero (rotate (succ zero) _v_34)))))))=(nat-to-int (len (rotate zero (rotate zero _v_34)))))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_24 _qv_25)=(plus _qv_25 _qv_24)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate zero (rotate (succ zero) _v_34)))))))=(nat-to-int (len (rotate zero (rotate zero _v_34)))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_26 _qv_27) _qv_28)=(plus _qv_26 (plus _qv_27 _qv_28))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate zero (rotate (succ zero) _v_34)))))))=(nat-to-int (len (rotate zero (rotate zero _v_34)))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_29)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate zero (rotate (succ zero) _v_34)))))))=(nat-to-int (len (rotate zero (rotate zero _v_34)))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_30))=(nat-to-int _qv_30)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate zero (rotate (succ zero) _v_34)))))))=(nat-to-int (len (rotate zero (rotate zero _v_34)))))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_31))=(nat-to-int _qv_31)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate zero (rotate (succ zero) _v_34)))))))=(nat-to-int (len (rotate zero (rotate zero _v_34)))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_32 _qv_33))=(plus (succ _qv_32) (succ _qv_33))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate zero (rotate (succ zero) _v_34)))))))=(nat-to-int (len (rotate zero (rotate zero _v_34)))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_32 _qv_33))=(plus (succ _qv_33) (succ _qv_32))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate zero (rotate (succ zero) _v_34)))))))=(nat-to-int (len (rotate zero (rotate zero _v_34)))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_18))=_qv_18))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate zero (rotate (succ zero) _v_34)))))))=(nat-to-int (len (rotate zero (rotate zero _v_34)))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_19 _qv_20)=(append _qv_20 _qv_19)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate zero (rotate (succ zero) _v_34)))))))=(nat-to-int (len (rotate zero (rotate zero _v_34)))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_21 _qv_22) _qv_23)=(append _qv_21 (append _qv_22 _qv_23))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate zero (rotate (succ zero) _v_34)))))))=(nat-to-int (len (rotate zero (rotate zero _v_34)))))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_24 _qv_25)=(plus _qv_25 _qv_24)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate zero (rotate (succ zero) _v_34)))))))=(nat-to-int (len (rotate zero (rotate zero _v_34)))))
NOW TESTING (forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_26 _qv_27) _qv_28)=(plus _qv_26 (plus _qv_27 _qv_28))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate zero (rotate (succ zero) _v_34)))))))=(nat-to-int (len (rotate zero (rotate zero _v_34)))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_29)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate zero (rotate (succ zero) _v_34)))))))=(nat-to-int (len (rotate zero (rotate zero _v_34)))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_30))=(nat-to-int _qv_30)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate zero (rotate (succ zero) _v_34)))))))=(nat-to-int (len (rotate zero (rotate zero _v_34)))))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_31))=(nat-to-int _qv_31)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate zero (rotate (succ zero) _v_34)))))))=(nat-to-int (len (rotate zero (rotate zero _v_34)))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_32 _qv_33))=(plus (succ _qv_32) (succ _qv_33))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate zero (rotate (succ zero) _v_34)))))))=(nat-to-int (len (rotate zero (rotate zero _v_34)))))
NOW TESTING (forall ((Nat) (Nat)) ((succ (plus _qv_32 _qv_33))=(plus (succ _qv_33) (succ _qv_32))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate zero (rotate (succ zero) _v_34)))))))=(nat-to-int (len (rotate zero (rotate zero _v_34)))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_18))=_qv_18))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate zero (rotate (succ zero) _v_34)))))))=(nat-to-int (len (rotate zero (rotate zero _v_34)))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_19 _qv_20)=(append _qv_20 _qv_19)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate zero (rotate (succ zero) _v_34)))))))=(nat-to-int (len (rotate zero (rotate zero _v_34)))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_21 _qv_22) _qv_23)=(append _qv_21 (append _qv_22 _qv_23))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((nat-to-int (len (rotate _t_17 (rotate _t_17 (rotate _t_17 (rotate zero (rotate (succ zero) _v_34)))))))=(nat-to-int (len (rotate zero (rotate zero _v_34)))))
NOW TESTING (forall ((Nat) (Nat)) ((plus _qv_24 _qv_25)=(p