
The Knowledge Scheme currently contains the following lemmas:
	(forall ((Nat) (Nat)) ((plus _qv_0 _qv_1)=(plus _qv_1 _qv_0)))
	(forall ((Nat) (Nat) (Nat)) ((plus (plus _qv_2 _qv_3) _qv_4)=(plus _qv_2 (plus _qv_3 _qv_4))))

Simplified goal: (forall ((Nat) (Nat) (Lst)) ((plus (count n (cons h nil)) (count n t))=(count n (cons h t))))


Base case:       ((plus (count zero (cons _v_5 nil)) (count zero _v_6))=(count zero (cons _v_5 _v_6)))
{
  proven trivially
}
Inductive step:  ((plus (count (succ _t_7) (cons _v_5 nil)) (count (succ _t_7) _v_6))=(count (succ _t_7) (cons _v_5 _v_6)))
{
  proven trivially
}

Proved
unsat
