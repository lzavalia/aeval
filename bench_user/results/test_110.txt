
The Knowledge Scheme currently contains the following lemmas:
	(forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
	(forall ((Nat)) (0<=(nat-to-int _qv_1)))
	(forall ((Nat) (Nat)) ((less _qv_2 _qv_3)=(less _qv_3 _qv_2)))
	(forall ((Nat)) ((nat-to-int (succ _qv_4))=(nat-to-int _qv_4)))
	(forall ((Lst)) ((nat-to-int (len _qv_5))=(nat-to-int _qv_5)))

Simplified goal: (forall ((Nat) (Lst)) (((len (delete x l))=(len l))||(less (len (delete x l)) (len l))))


Base case:       (((len (delete zero _v_6))=(len _v_6))||(less (len (delete zero _v_6)) (len _v_6)))
{
  {
    ====================
    | Assumptions [0]: (forall ((Nat)) ((nat-to-int _qv_1)>=0))
    | Assumptions [1]: (forall ((Nat) (Nat)) (((nat-to-int _qv_2)=(nat-to-int _qv_3))->(_qv_2=_qv_3)))
    | Assumptions [2]: (forall ((Nat)) ((nat-to-int (succ _qv_4))=(1+(nat-to-int _qv_4))))
    | Assumptions [3]: (forall ((Nat) (Nat)) ((less (succ _qv_7) (succ _qv_8))=(less _qv_7 _qv_8)))
    | Assumptions [4]: (forall ((Nat) (Nat)) ((less _qv_9 _qv_10)=((nat-to-int _qv_9)<(nat-to-int _qv_10))))
    | Assumptions [5]: (forall ((Nat) (Nat)) (((_qv_11=_qv_12)||(less _qv_11 _qv_12))=((nat-to-int _qv_11)<=(nat-to-int _qv_12))))
    | Assumptions [6]: (forall ((Nat) (Lst)) ((len (cons _qv_13 _qv_14))=(succ (len _qv_14))))
    | Assumptions [7]: (forall ((Nat)) ((delete _qv_15 nil)=nil))
    | Assumptions [8]: (forall ((Nat) (Nat) (Lst)) ((delete _qv_16 (cons _qv_17 _qv_18))=ite(_qv_16=_qv_17, (delete _qv_16 _qv_18), (cons _qv_17 (delete _qv_16 _qv_18)))))
    | Assumptions [9]: ((nat-to-int (len nil))=0)
    | Assumptions [10]: (forall ((Nat)) (!(less _qv_5 (len nil))))
    | Assumptions [11]: (forall ((Nat)) (less (len nil) (succ _qv_6)))
    ====================
  }
  rewritten [1]: (((nat-to-int (len (delete (len nil) _v_6)))=(nat-to-int (len _v_6)))||(less (len (delete (len nil) _v_6)) (len _v_6)))
  rewritten [4]: (((nat-to-int (len (delete (len nil) _v_6)))<(nat-to-int (len _v_6)))||(((nat-to-int (len (delete (len nil) _v_6)))+(-(nat-to-int (len _v_6))))=0))
  rewritten [9]: (((nat-to-int (len (delete (len nil) _v_6)))+(-1*(nat-to-int (len _v_6))))<1)

The Knowledge Scheme currently contains the following lemmas:
	(forall ((Nat)) ((succ (succ _qv_7))=_qv_7))
	(forall ((Nat)) (0<=(nat-to-int _qv_8)))
	(forall ((Nat) (Nat)) ((less _qv_9 _qv_10)=(less _qv_10 _qv_9)))
	(forall ((Nat)) ((nat-to-int (succ _qv_11))=(nat-to-int _qv_11)))
	(forall ((Lst)) ((nat-to-int (len _qv_12))=(nat-to-int _qv_12)))

  proven by induction: (((nat-to-int (len (delete (len nil) _v_6)))+(-1*(nat-to-int (len _v_6))))<1)
  rewriting done
  rewriting done
}
Inductive step:  (((len (delete (succ _t_7) _v_6))=(len _v_6))||(less (len (delete (succ _t_7) _v_6)) (len _v_6)))
{
  {
    ====================
    | Assumptions [0]: (forall ((Nat)) ((nat-to-int _qv_1)>=0))
    | Assumptions [1]: (forall ((Nat) (Nat)) (((nat-to-int _qv_2)=(nat-to-int _qv_3))->(_qv_2=_qv_3)))
    | Assumptions [2]: (forall ((Nat)) ((nat-to-int (succ _qv_4))=(1+(nat-to-int _qv_4))))
    | Assumptions [3]: (forall ((Nat) (Nat)) ((less (succ _qv_7) (succ _qv_8))=(less _qv_7 _qv_8)))
    | Assumptions [4]: (forall ((Nat) (Nat)) ((less _qv_9 _qv_10)=((nat-to-int _qv_9)<(nat-to-int _qv_10))))
    | Assumptions [5]: (forall ((Nat) (Nat)) (((_qv_11=_qv_12)||(less _qv_11 _qv_12))=((nat-to-int _qv_11)<=(nat-to-int _qv_12))))
    | Assumptions [6]: (forall ((Nat) (Lst)) ((len (cons _qv_13 _qv_14))=(succ (len _qv_14))))
    | Assumptions [7]: (forall ((Nat)) ((delete _qv_15 nil)=nil))
    | Assumptions [8]: (forall ((Nat) (Nat) (Lst)) ((delete _qv_16 (cons _qv_17 _qv_18))=ite(_qv_16=_qv_17, (delete _qv_16 _qv_18), (cons _qv_17 (delete _qv_16 _qv_18)))))
    | Assumptions [9]: (forall ((Lst)) (((len (delete _t_7 l))=(len l))||(less (len (delete _t_7 l)) (len l))))
    | Assumptions [10]: ((nat-to-int (len nil))=0)
    | Assumptions [11]: (forall ((Nat)) (!(less _qv_5 (len nil))))
    | Assumptions [12]: (forall ((Nat)) (less (len nil) (succ _qv_6)))
    ====================
  }
  rewritten [1]: (((nat-to-int (len (delete (succ _t_7) _v_6)))=(nat-to-int (len _v_6)))||(less (len (delete (succ _t_7) _v_6)) (len _v_6)))
  rewritten [4]: (((nat-to-int (len (delete (succ _t_7) _v_6)))<(nat-to-int (len _v_6)))||(((nat-to-int (len (delete (succ _t_7) _v_6)))+(-(nat-to-int (len _v_6))))=0))
  rewritten [10]: (((nat-to-int (len (delete (succ _t_7) _v_6)))+(-1*(nat-to-int (len _v_6))))<1)
CURRENT SUBGOAL (((nat-to-int (len (delete (succ _t_7) _v_6)))+(-(nat-to-int (len _v_6))))<1)
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (len (delete (succ _t_7) _v_6)))+(-(nat-to-int (len _v_6))))<1)
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (len (delete (succ _t_7) _v_6)))+(-(nat-to-int (len _v_6))))<1)
NOW TESTING (forall ((Nat) (Nat)) ((less _qv_2 _qv_3)=(less _qv_3 _qv_2)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (len (delete (succ _t_7) _v_6)))+(-(nat-to-int (len _v_6))))<1)
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_4))=(nat-to-int _qv_4)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (len (delete (succ _t_7) _v_6)))+(-(nat-to-int (len _v_6))))<1)
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_5))=(nat-to-int _qv_5)))
USE ASSUMPTION FAILED

  backtrack to: (((nat-to-int (len (delete (succ _t_7) _v_6)))+(-(nat-to-int (len _v_6))))<1)
  rewritten [10]: (((nat-to-int (len (delete (succ _t_7) _v_6)))+(-1*(nat-to-int (len _v_6))))<1)
CURRENT SUBGOAL (((nat-to-int (len (delete (succ _t_7) _v_6)))+(-(nat-to-int (len _v_6))))<1)
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (len (delete (succ _t_7) _v_6)))+(-(nat-to-int (len _v_6))))<1)
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (len (delete (succ _t_7) _v_6)))+(-(nat-to-int (len _v_6))))<1)
NOW TESTING (forall ((Nat) (Nat)) ((less _qv_2 _qv_3)=(less _qv_3 _qv_2)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (len (delete (succ _t_7) _v_6)))+(-(nat-to-int (len _v_6))))<1)
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_4))=(nat-to-int _qv_4)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (len (delete (succ _t_7) _v_6)))+(-(nat-to-int (len _v_6))))<1)
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_5))=(nat-to-int _qv_5)))
USE ASSUMPTION FAILED

  backtrack to: (((nat-to-int (len (delete (succ _t_7) _v_6)))+(-(nat-to-int (len _v_6))))<1)

The Knowledge Scheme currently contains the following lemmas:
	(forall ((Nat)) ((succ (succ _qv_11))=_qv_11))
	(forall ((Nat)) (0<=(nat-to-int _qv_12)))
	(forall ((Nat) (Nat)) ((less _qv_13 _qv_14)=(less _qv_14 _qv_13)))
	(forall ((Nat)) ((nat-to-int (succ _qv_15))=(nat-to-int _qv_15)))
	(forall ((Lst)) ((nat-to-int (len _qv_16))=(nat-to-int _qv_16)))

CURRENT SUBGOAL (((nat-to-int (len (delete zero _v_17)))+(-1*(nat-to-int (len _v_17))))<1)
NOW TESTING (forall ((Nat)) ((succ (succ _qv_11))=_qv_11))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (len (delete zero _v_17)))+(-1*(nat-to-int (len _v_17))))<1)
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (len (delete zero _v_17)))+(-1*(nat-to-int (len _v_17))))<1)
NOW TESTING (forall ((Nat) (Nat)) ((less _qv_13 _qv_14)=(less _qv_14 _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (len (delete zero _v_17)))+(-1*(nat-to-int (len _v_17))))<1)
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_15))=(nat-to-int _qv_15)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (len (delete zero _v_17)))+(-1*(nat-to-int (len _v_17))))<1)
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_16))=(nat-to-int _qv_16)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (len (delete zero _v_17)))+(-1*(nat-to-int (len _v_17))))<1)
NOW TESTING (forall ((Nat)) ((succ (succ _qv_11))=_qv_11))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (len (delete zero _v_17)))+(-1*(nat-to-int (len _v_17))))<1)
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (len (delete zero _v_17)))+(-1*(nat-to-int (len _v_17))))<1)
NOW TESTING (forall ((Nat) (Nat)) ((less _qv_13 _qv_14)=(less _qv_14 _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (len (delete zero _v_17)))+(-1*(nat-to-int (len _v_17))))<1)
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_15))=(nat-to-int _qv_15)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (len (delete zero _v_17)))+(-1*(nat-to-int (len _v_17))))<1)
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_16))=(nat-to-int _qv_16)))
USE ASSUMPTION FAILED


The Knowledge Scheme currently contains the following lemmas:
	(forall ((Nat)) ((succ (succ _qv_18))=_qv_18))
	(forall ((Nat)) (0<=(nat-to-int _qv_19)))
	(forall ((Nat) (Nat)) ((less _qv_20 _qv_21)=(less _qv_21 _qv_20)))
	(forall ((Nat)) ((nat-to-int (succ _qv_22))=(nat-to-int _qv_22)))
	(forall ((Lst)) ((nat-to-int (len _qv_23))=(nat-to-int _qv_23)))

CURRENT SUBGOAL (((nat-to-int (len (delete (succ _t_18) _v_17)))+(-1*(nat-to-int (len _v_17))))<1)
NOW TESTING (forall ((Nat)) ((succ (succ _qv_11))=_qv_11))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (len (delete (succ _t_18) _v_17)))+(-1*(nat-to-int (len _v_17))))<1)
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (len (delete (succ _t_18) _v_17)))+(-1*(nat-to-int (len _v_17))))<1)
NOW TESTING (forall ((Nat) (Nat)) ((less _qv_13 _qv_14)=(less _qv_14 _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (len (delete (succ _t_18) _v_17)))+(-1*(nat-to-int (len _v_17))))<1)
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_15))=(nat-to-int _qv_15)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (len (delete (succ _t_18) _v_17)))+(-1*(nat-to-int (len _v_17))))<1)
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_16))=(nat-to-int _qv_16)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (len (delete (succ _t_18) _v_17)))+(-1*(nat-to-int (len _v_17))))<1)
NOW TESTING (forall ((Nat)) ((succ (succ _qv_11))=_qv_11))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (len (delete (succ _t_18) _v_17)))+(-1*(nat-to-int (len _v_17))))<1)
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (len (delete (succ _t_18) _v_17)))+(-1*(nat-to-int (len _v_17))))<1)
NOW TESTING (forall ((Nat) (Nat)) ((less _qv_13 _qv_14)=(less _qv_14 _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (len (delete (succ _t_18) _v_17)))+(-1*(nat-to-int (len _v_17))))<1)
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_15))=(nat-to-int _qv_15)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (len (delete (succ _t_18) _v_17)))+(-1*(nat-to-int (len _v_17))))<1)
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_16))=(nat-to-int _qv_16)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((-(nat-to-int (len _v_17)))+(nat-to-int (len (delete (succ _t_18) _v_17))))<1)
NOW TESTING (forall ((Nat)) ((succ (succ _qv_11))=_qv_11))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((-(nat-to-int (len _v_17)))+(nat-to-int (len (delete (succ _t_18) _v_17))))<1)
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((-(nat-to-int (len _v_17)))+(nat-to-int (len (delete (succ _t_18) _v_17))))<1)
NOW TESTING (forall ((Nat) (Nat)) ((less _qv_13 _qv_14)=(less _qv_14 _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((-(nat-to-int (len _v_17)))+(nat-to-int (len (delete (succ _t_18) _v_17))))<1)
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_15))=(nat-to-int _qv_15)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((-(nat-to-int (len _v_17)))+(nat-to-int (len (delete (succ _t_18) _v_17))))<1)
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_16))=(nat-to-int _qv_16)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (len (delete (succ _t_18) _v_17)))+(-1*(nat-to-int (len _v_17))))<1)
NOW TESTING (forall ((Nat)) ((succ (succ _qv_11))=_qv_11))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (len (delete (succ _t_18) _v_17)))+(-1*(nat-to-int (len _v_17))))<1)
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (len (delete (succ _t_18) _v_17)))+(-1*(nat-to-int (len _v_17))))<1)
NOW TESTING (forall ((Nat) (Nat)) ((less _qv_13 _qv_14)=(less _qv_14 _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (len (delete (succ _t_18) _v_17)))+(-1*(nat-to-int (len _v_17))))<1)
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_15))=(nat-to-int _qv_15)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (len (delete (succ _t_18) _v_17)))+(-1*(nat-to-int (len _v_17))))<1)
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_16))=(nat-to-int _qv_16)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (len (delete (succ _t_18) _v_17)))+(-1*(nat-to-int (len _v_17))))<1)
NOW TESTING (forall ((Nat)) ((succ (succ _qv_11))=_qv_11))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (len (delete (succ _t_18) _v_17)))+(-1*(nat-to-int (len _v_17))))<1)
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (len (delete (succ _t_18) _v_17)))+(-1*(nat-to-int (len _v_17))))<1)
NOW TESTING (forall ((Nat) (Nat)) ((less _qv_13 _qv_14)=(less _qv_14 _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (len (delete (succ _t_18) _v_17)))+(-1*(nat-to-int (len _v_17))))<1)
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_15))=(nat-to-int _qv_15)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((nat-to-int (len (delete (succ _t_18) _v_17)))+(-1*(nat-to-int (len _v_17))))<1)
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_16))=(nat-to-int _qv_16)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((-(nat-to-int (len _v_17)))+(nat-to-int (len (delete (succ _t_18) _v_17))))<1)
NOW TESTING (forall ((Nat)) ((succ (succ _qv_11))=_qv_11))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((-(nat-to-int (len _v_17)))+(nat-to-int (len (delete (succ _t_18) _v_17))))<1)
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_12)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((-(nat-to-int (len _v_17)))+(nat-to-int (len (delete (succ _t_18) _v_17))))<1)
NOW TESTING (forall ((Nat) (Nat)) ((less _qv_13 _qv_14)=(less _qv_14 _qv_13)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((-(nat-to-int (len _v_17)))+(nat-to-int (len (delete (succ _t_18) _v_17))))<1)
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_15))=(nat-to-int _qv_15)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL (((-(nat-to-int (len _v_17)))+(nat-to-int (len (delete (succ _t_18) _v_17))))<1)
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_16))=(nat-to-int _qv_16)))
USE ASSUMPTION FAILED

  proven by induction: (((nat-to-int (len (delete _w_10 _v_6)))<(nat-to-int (len _v_6)))||(((nat-to-int (len (delete _w_10 _v_6)))+(-(nat-to-int (len _v_6))))=0))
  rewriting done
}

Proved
unsat
