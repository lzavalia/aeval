
The Knowledge Scheme currently contains the following lemmas:
	(forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
	(forall ((Nat)) (0<=(nat-to-int _qv_1)))
	(forall ((Lst) (Lst)) ((append _qv_2 _qv_3)=(append _qv_3 _qv_2)))
	(forall ((Lst) (Lst) (Lst)) ((append (append _qv_4 _qv_5) _qv_6)=(append _qv_4 (append _qv_5 _qv_6))))
	(forall ((Lst) (Lst)) ((zip _qv_7 _qv_8)=(zip _qv_8 _qv_7)))
	(forall ((ZLst) (ZLst)) ((zappend _qv_9 _qv_10)=(zappend _qv_10 _qv_9)))
	(forall ((ZLst) (ZLst) (ZLst)) ((zappend (zappend _qv_11 _qv_12) _qv_13)=(zappend _qv_11 (zappend _qv_12 _qv_13))))
	(forall ((Nat)) ((nat-to-int (succ _qv_14))=(nat-to-int _qv_14)))
	(forall ((Lst)) ((nat-to-int (len _qv_15))=(nat-to-int _qv_15)))
	(forall ((Nat) (Lst) (Lst)) ((take _qv_16 (drop _qv_17 _qv_18))=(drop (take _qv_16 _qv_17) (take _qv_16 _qv_18))))
	(forall ((Nat) (Lst) (Lst)) ((drop _qv_19 (take _qv_20 _qv_21))=(take (drop _qv_19 _qv_20) (drop _qv_19 _qv_21))))

Simplified goal: (forall ((Lst) (Lst) (Lst)) ((zip (append xs ys) zs)=(zappend (zip xs (take (len xs) zs)) (zip ys (drop (len xs) zs)))))


Base case:       ((zip (append nil _v_22) _v_23)=(zappend (zip nil (take (len nil) _v_23)) (zip _v_22 (drop (len nil) _v_23))))
{
  proven trivially
}
Inductive step:  ((zip (append (cons _t_24 _t_25) _v_22) _v_23)=(zappend (zip (cons _t_24 _t_25) (take (len (cons _t_24 _t_25)) _v_23)) (zip _v_22 (drop (len (cons _t_24 _t_25)) _v_23))))
{
  {
    ====================
    | Assumptions [0]: (forall ((Nat)) ((nat-to-int _qv_1)>=0))
    | Assumptions [1]: (forall ((Nat) (Nat)) (((nat-to-int _qv_2)=(nat-to-int _qv_3))->(_qv_2=_qv_3)))
    | Assumptions [2]: (forall ((Nat)) ((nat-to-int (succ _qv_4))=(1+(nat-to-int _qv_4))))
    | Assumptions [3]: (forall ((Lst)) ((append nil _qv_5)=_qv_5))
    | Assumptions [4]: (forall ((Nat) (Lst) (Lst)) ((append (cons _qv_6 _qv_7) _qv_8)=(cons _qv_6 (append _qv_7 _qv_8))))
    | Assumptions [5]: (forall ((Nat) (Lst)) ((len (cons _qv_9 _qv_10))=(succ (len _qv_10))))
    | Assumptions [6]: (forall ((Nat)) ((drop _qv_11 nil)=nil))
    | Assumptions [7]: (forall ((Nat) (Nat) (Lst)) ((drop (succ _qv_13) (cons _qv_14 _qv_15))=(drop _qv_13 _qv_15)))
    | Assumptions [8]: (forall ((Nat)) ((take _qv_16 nil)=nil))
    | Assumptions [9]: (forall ((Nat) (Nat) (Lst)) ((take (succ _qv_18) (cons _qv_19 _qv_20))=(cons _qv_19 (take _qv_18 _qv_20))))
    | Assumptions [10]: (forall ((Lst)) ((zip nil _qv_21)=znil))
    | Assumptions [11]: (forall ((Lst)) ((zip _qv_22 nil)=znil))
    | Assumptions [12]: (forall ((Nat) (Lst) (Nat) (Lst)) ((zip (cons _qv_23 _qv_24) (cons _qv_25 _qv_26))=(zcons (mkpair _qv_23 _qv_25) (zip _qv_24 _qv_26))))
    | Assumptions [13]: (forall ((ZLst)) ((zappend znil _qv_27)=_qv_27))
    | Assumptions [14]: (forall ((Pair) (ZLst) (ZLst)) ((zappend (zcons _qv_28 _qv_29) _qv_30)=(zcons _qv_28 (zappend _qv_29 _qv_30))))
    | Assumptions [15]: (forall ((Lst) (Lst)) ((zip (append _t_25 ys) zs)=(zappend (zip _t_25 (take (len _t_25) zs)) (zip ys (drop (len _t_25) zs)))))
    | Assumptions [16]: (forall ((Lst) (Lst)) ((zappend (zip _t_25 (take (len _t_25) zs)) (zip ys (drop (len _t_25) zs)))=(zip (append _t_25 ys) zs)))
    | Assumptions [17]: ((nat-to-int (len nil))=0)
    | Assumptions [18]: (forall ((Lst)) ((drop (len nil) _qv_12)=_qv_12))
    | Assumptions [19]: (forall ((Lst)) ((take (len nil) _qv_17)=nil))
    ====================
  }
  rewritten [4]: ((zip (cons _t_24 (append _t_25 _v_22)) _v_23)=(zappend (zip (cons _t_24 _t_25) (take (len (cons _t_24 _t_25)) _v_23)) (zip _v_22 (drop (len (cons _t_24 _t_25)) _v_23))))
  rewritten [5]: ((zip (cons _t_24 (append _t_25 _v_22)) _v_23)=(zappend (zip (cons _t_24 _t_25) (take (succ (len _t_25)) _v_23)) (zip _v_22 (drop (succ (len _t_25)) _v_23))))
CURRENT SUBGOAL ((zip (cons _t_24 (append _t_25 _v_22)) _v_23)=(zappend (zip (cons _t_24 _t_25) (take (len (cons _t_24 _t_25)) _v_23)) (zip _v_22 (drop (len (cons _t_24 _t_25)) _v_23))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((zip (cons _t_24 (append _t_25 _v_22)) _v_23)=(zappend (zip (cons _t_24 _t_25) (take (len (cons _t_24 _t_25)) _v_23)) (zip _v_22 (drop (len (cons _t_24 _t_25)) _v_23))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((zip (cons _t_24 (append _t_25 _v_22)) _v_23)=(zappend (zip (cons _t_24 _t_25) (take (len (cons _t_24 _t_25)) _v_23)) (zip _v_22 (drop (len (cons _t_24 _t_25)) _v_23))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_2 _qv_3)=(append _qv_3 _qv_2)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((zip (cons _t_24 (append _t_25 _v_22)) _v_23)=(zappend (zip (cons _t_24 _t_25) (take (len (cons _t_24 _t_25)) _v_23)) (zip _v_22 (drop (len (cons _t_24 _t_25)) _v_23))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_4 _qv_5) _qv_6)=(append _qv_4 (append _qv_5 _qv_6))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((zip (cons _t_24 (append _t_25 _v_22)) _v_23)=(zappend (zip (cons _t_24 _t_25) (take (len (cons _t_24 _t_25)) _v_23)) (zip _v_22 (drop (len (cons _t_24 _t_25)) _v_23))))
NOW TESTING (forall ((Lst) (Lst)) ((zip _qv_7 _qv_8)=(zip _qv_8 _qv_7)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((zip (cons _t_24 (append _t_25 _v_22)) _v_23)=(zappend (zip (cons _t_24 _t_25) (take (len (cons _t_24 _t_25)) _v_23)) (zip _v_22 (drop (len (cons _t_24 _t_25)) _v_23))))
NOW TESTING (forall ((ZLst) (ZLst)) ((zappend _qv_9 _qv_10)=(zappend _qv_10 _qv_9)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((zip (cons _t_24 (append _t_25 _v_22)) _v_23)=(zappend (zip (cons _t_24 _t_25) (take (len (cons _t_24 _t_25)) _v_23)) (zip _v_22 (drop (len (cons _t_24 _t_25)) _v_23))))
NOW TESTING (forall ((ZLst) (ZLst) (ZLst)) ((zappend (zappend _qv_11 _qv_12) _qv_13)=(zappend _qv_11 (zappend _qv_12 _qv_13))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((zip (cons _t_24 (append _t_25 _v_22)) _v_23)=(zappend (zip (cons _t_24 _t_25) (take (len (cons _t_24 _t_25)) _v_23)) (zip _v_22 (drop (len (cons _t_24 _t_25)) _v_23))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_14))=(nat-to-int _qv_14)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((zip (cons _t_24 (append _t_25 _v_22)) _v_23)=(zappend (zip (cons _t_24 _t_25) (take (len (cons _t_24 _t_25)) _v_23)) (zip _v_22 (drop (len (cons _t_24 _t_25)) _v_23))))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_15))=(nat-to-int _qv_15)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((zip (cons _t_24 (append _t_25 _v_22)) _v_23)=(zappend (zip (cons _t_24 _t_25) (take (len (cons _t_24 _t_25)) _v_23)) (zip _v_22 (drop (len (cons _t_24 _t_25)) _v_23))))
NOW TESTING (forall ((Nat) (Lst) (Lst)) ((take _qv_16 (drop _qv_17 _qv_18))=(drop (take _qv_16 _qv_17) (take _qv_16 _qv_18))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((zip (cons _t_24 (append _t_25 _v_22)) _v_23)=(zappend (zip (cons _t_24 _t_25) (take (len (cons _t_24 _t_25)) _v_23)) (zip _v_22 (drop (len (cons _t_24 _t_25)) _v_23))))
NOW TESTING (forall ((Nat) (Lst) (Lst)) ((drop _qv_19 (take _qv_20 _qv_21))=(take (drop _qv_19 _qv_20) (drop _qv_19 _qv_21))))
USE ASSUMPTION FAILED

  backtrack to: ((zip (cons _t_24 (append _t_25 _v_22)) _v_23)=(zappend (zip (cons _t_24 _t_25) (take (len (cons _t_24 _t_25)) _v_23)) (zip _v_22 (drop (len (cons _t_24 _t_25)) _v_23))))
  rewritten [5]: ((zip (cons _t_24 (append _t_25 _v_22)) _v_23)=(zappend (zip (cons _t_24 _t_25) (take (succ (len _t_25)) _v_23)) (zip _v_22 (drop (succ (len _t_25)) _v_23))))
CURRENT SUBGOAL ((zip (cons _t_24 (append _t_25 _v_22)) _v_23)=(zappend (zip (cons _t_24 _t_25) (take (len (cons _t_24 _t_25)) _v_23)) (zip _v_22 (drop (len (cons _t_24 _t_25)) _v_23))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((zip (cons _t_24 (append _t_25 _v_22)) _v_23)=(zappend (zip (cons _t_24 _t_25) (take (len (cons _t_24 _t_25)) _v_23)) (zip _v_22 (drop (len (cons _t_24 _t_25)) _v_23))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((zip (cons _t_24 (append _t_25 _v_22)) _v_23)=(zappend (zip (cons _t_24 _t_25) (take (len (cons _t_24 _t_25)) _v_23)) (zip _v_22 (drop (len (cons _t_24 _t_25)) _v_23))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_2 _qv_3)=(append _qv_3 _qv_2)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((zip (cons _t_24 (append _t_25 _v_22)) _v_23)=(zappend (zip (cons _t_24 _t_25) (take (len (cons _t_24 _t_25)) _v_23)) (zip _v_22 (drop (len (cons _t_24 _t_25)) _v_23))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_4 _qv_5) _qv_6)=(append _qv_4 (append _qv_5 _qv_6))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((zip (cons _t_24 (append _t_25 _v_22)) _v_23)=(zappend (zip (cons _t_24 _t_25) (take (len (cons _t_24 _t_25)) _v_23)) (zip _v_22 (drop (len (cons _t_24 _t_25)) _v_23))))
NOW TESTING (forall ((Lst) (Lst)) ((zip _qv_7 _qv_8)=(zip _qv_8 _qv_7)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((zip (cons _t_24 (append _t_25 _v_22)) _v_23)=(zappend (zip (cons _t_24 _t_25) (take (len (cons _t_24 _t_25)) _v_23)) (zip _v_22 (drop (len (cons _t_24 _t_25)) _v_23))))
NOW TESTING (forall ((ZLst) (ZLst)) ((zappend _qv_9 _qv_10)=(zappend _qv_10 _qv_9)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((zip (cons _t_24 (append _t_25 _v_22)) _v_23)=(zappend (zip (cons _t_24 _t_25) (take (len (cons _t_24 _t_25)) _v_23)) (zip _v_22 (drop (len (cons _t_24 _t_25)) _v_23))))
NOW TESTING (forall ((ZLst) (ZLst) (ZLst)) ((zappend (zappend _qv_11 _qv_12) _qv_13)=(zappend _qv_11 (zappend _qv_12 _qv_13))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((zip (cons _t_24 (append _t_25 _v_22)) _v_23)=(zappend (zip (cons _t_24 _t_25) (take (len (cons _t_24 _t_25)) _v_23)) (zip _v_22 (drop (len (cons _t_24 _t_25)) _v_23))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_14))=(nat-to-int _qv_14)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((zip (cons _t_24 (append _t_25 _v_22)) _v_23)=(zappend (zip (cons _t_24 _t_25) (take (len (cons _t_24 _t_25)) _v_23)) (zip _v_22 (drop (len (cons _t_24 _t_25)) _v_23))))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_15))=(nat-to-int _qv_15)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((zip (cons _t_24 (append _t_25 _v_22)) _v_23)=(zappend (zip (cons _t_24 _t_25) (take (len (cons _t_24 _t_25)) _v_23)) (zip _v_22 (drop (len (cons _t_24 _t_25)) _v_23))))
NOW TESTING (forall ((Nat) (Lst) (Lst)) ((take _qv_16 (drop _qv_17 _qv_18))=(drop (take _qv_16 _qv_17) (take _qv_16 _qv_18))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((zip (cons _t_24 (append _t_25 _v_22)) _v_23)=(zappend (zip (cons _t_24 _t_25) (take (len (cons _t_24 _t_25)) _v_23)) (zip _v_22 (drop (len (cons _t_24 _t_25)) _v_23))))
NOW TESTING (forall ((Nat) (Lst) (Lst)) ((drop _qv_19 (take _qv_20 _qv_21))=(take (drop _qv_19 _qv_20) (drop _qv_19 _qv_21))))
USE ASSUMPTION FAILED

  backtrack to: ((zip (cons _t_24 (append _t_25 _v_22)) _v_23)=(zappend (zip (cons _t_24 _t_25) (take (len (cons _t_24 _t_25)) _v_23)) (zip _v_22 (drop (len (cons _t_24 _t_25)) _v_23))))
CURRENT SUBGOAL ((zip (append (cons _t_24 _t_25) _v_22) _v_23)=(zappend (zip (cons _t_24 _t_25) (take (len (cons _t_24 _t_25)) _v_23)) (zip _v_22 (drop (len (cons _t_24 _t_25)) _v_23))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((zip (append (cons _t_24 _t_25) _v_22) _v_23)=(zappend (zip (cons _t_24 _t_25) (take (len (cons _t_24 _t_25)) _v_23)) (zip _v_22 (drop (len (cons _t_24 _t_25)) _v_23))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((zip (append (cons _t_24 _t_25) _v_22) _v_23)=(zappend (zip (cons _t_24 _t_25) (take (len (cons _t_24 _t_25)) _v_23)) (zip _v_22 (drop (len (cons _t_24 _t_25)) _v_23))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_2 _qv_3)=(append _qv_3 _qv_2)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((zip (append (cons _t_24 _t_25) _v_22) _v_23)=(zappend (zip (cons _t_24 _t_25) (take (len (cons _t_24 _t_25)) _v_23)) (zip _v_22 (drop (len (cons _t_24 _t_25)) _v_23))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_4 _qv_5) _qv_6)=(append _qv_4 (append _qv_5 _qv_6))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((zip (append (cons _t_24 _t_25) _v_22) _v_23)=(zappend (zip (cons _t_24 _t_25) (take (len (cons _t_24 _t_25)) _v_23)) (zip _v_22 (drop (len (cons _t_24 _t_25)) _v_23))))
NOW TESTING (forall ((Lst) (Lst)) ((zip _qv_7 _qv_8)=(zip _qv_8 _qv_7)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((zip (append (cons _t_24 _t_25) _v_22) _v_23)=(zappend (zip (cons _t_24 _t_25) (take (len (cons _t_24 _t_25)) _v_23)) (zip _v_22 (drop (len (cons _t_24 _t_25)) _v_23))))
NOW TESTING (forall ((ZLst) (ZLst)) ((zappend _qv_9 _qv_10)=(zappend _qv_10 _qv_9)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((zip (append (cons _t_24 _t_25) _v_22) _v_23)=(zappend (zip (cons _t_24 _t_25) (take (len (cons _t_24 _t_25)) _v_23)) (zip _v_22 (drop (len (cons _t_24 _t_25)) _v_23))))
NOW TESTING (forall ((ZLst) (ZLst) (ZLst)) ((zappend (zappend _qv_11 _qv_12) _qv_13)=(zappend _qv_11 (zappend _qv_12 _qv_13))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((zip (append (cons _t_24 _t_25) _v_22) _v_23)=(zappend (zip (cons _t_24 _t_25) (take (len (cons _t_24 _t_25)) _v_23)) (zip _v_22 (drop (len (cons _t_24 _t_25)) _v_23))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_14))=(nat-to-int _qv_14)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((zip (append (cons _t_24 _t_25) _v_22) _v_23)=(zappend (zip (cons _t_24 _t_25) (take (len (cons _t_24 _t_25)) _v_23)) (zip _v_22 (drop (len (cons _t_24 _t_25)) _v_23))))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_15))=(nat-to-int _qv_15)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((zip (append (cons _t_24 _t_25) _v_22) _v_23)=(zappend (zip (cons _t_24 _t_25) (take (len (cons _t_24 _t_25)) _v_23)) (zip _v_22 (drop (len (cons _t_24 _t_25)) _v_23))))
NOW TESTING (forall ((Nat) (Lst) (Lst)) ((take _qv_16 (drop _qv_17 _qv_18))=(drop (take _qv_16 _qv_17) (take _qv_16 _qv_18))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((zip (append (cons _t_24 _t_25) _v_22) _v_23)=(zappend (zip (cons _t_24 _t_25) (take (len (cons _t_24 _t_25)) _v_23)) (zip _v_22 (drop (len (cons _t_24 _t_25)) _v_23))))
NOW TESTING (forall ((Nat) (Lst) (Lst)) ((drop _qv_19 (take _qv_20 _qv_21))=(take (drop _qv_19 _qv_20) (drop _qv_19 _qv_21))))
USE ASSUMPTION FAILED

  backtrack to: ((zip (append (cons _t_24 _t_25) _v_22) _v_23)=(zappend (zip (cons _t_24 _t_25) (take (len (cons _t_24 _t_25)) _v_23)) (zip _v_22 (drop (len (cons _t_24 _t_25)) _v_23))))
  rewritten [5]: ((zip (append (cons _t_24 _t_25) _v_22) _v_23)=(zappend (zip (cons _t_24 _t_25) (take (succ (len _t_25)) _v_23)) (zip _v_22 (drop (succ (len _t_25)) _v_23))))
  rewritten [4]: ((zip (cons _t_24 (append _t_25 _v_22)) _v_23)=(zappend (zip (cons _t_24 _t_25) (take (succ (len _t_25)) _v_23)) (zip _v_22 (drop (succ (len _t_25)) _v_23))))
CURRENT SUBGOAL ((zip (append (cons _t_24 _t_25) _v_22) _v_23)=(zappend (zip (cons _t_24 _t_25) (take (succ (len _t_25)) _v_23)) (zip _v_22 (drop (succ (len _t_25)) _v_23))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((zip (append (cons _t_24 _t_25) _v_22) _v_23)=(zappend (zip (cons _t_24 _t_25) (take (succ (len _t_25)) _v_23)) (zip _v_22 (drop (succ (len _t_25)) _v_23))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((zip (append (cons _t_24 _t_25) _v_22) _v_23)=(zappend (zip (cons _t_24 _t_25) (take (succ (len _t_25)) _v_23)) (zip _v_22 (drop (succ (len _t_25)) _v_23))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_2 _qv_3)=(append _qv_3 _qv_2)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((zip (append (cons _t_24 _t_25) _v_22) _v_23)=(zappend (zip (cons _t_24 _t_25) (take (succ (len _t_25)) _v_23)) (zip _v_22 (drop (succ (len _t_25)) _v_23))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_4 _qv_5) _qv_6)=(append _qv_4 (append _qv_5 _qv_6))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((zip (append (cons _t_24 _t_25) _v_22) _v_23)=(zappend (zip (cons _t_24 _t_25) (take (succ (len _t_25)) _v_23)) (zip _v_22 (drop (succ (len _t_25)) _v_23))))
NOW TESTING (forall ((Lst) (Lst)) ((zip _qv_7 _qv_8)=(zip _qv_8 _qv_7)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((zip (append (cons _t_24 _t_25) _v_22) _v_23)=(zappend (zip (cons _t_24 _t_25) (take (succ (len _t_25)) _v_23)) (zip _v_22 (drop (succ (len _t_25)) _v_23))))
NOW TESTING (forall ((ZLst) (ZLst)) ((zappend _qv_9 _qv_10)=(zappend _qv_10 _qv_9)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((zip (append (cons _t_24 _t_25) _v_22) _v_23)=(zappend (zip (cons _t_24 _t_25) (take (succ (len _t_25)) _v_23)) (zip _v_22 (drop (succ (len _t_25)) _v_23))))
NOW TESTING (forall ((ZLst) (ZLst) (ZLst)) ((zappend (zappend _qv_11 _qv_12) _qv_13)=(zappend _qv_11 (zappend _qv_12 _qv_13))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((zip (append (cons _t_24 _t_25) _v_22) _v_23)=(zappend (zip (cons _t_24 _t_25) (take (succ (len _t_25)) _v_23)) (zip _v_22 (drop (succ (len _t_25)) _v_23))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_14))=(nat-to-int _qv_14)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((zip (append (cons _t_24 _t_25) _v_22) _v_23)=(zappend (zip (cons _t_24 _t_25) (take (succ (len _t_25)) _v_23)) (zip _v_22 (drop (succ (len _t_25)) _v_23))))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_15))=(nat-to-int _qv_15)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((zip (append (cons _t_24 _t_25) _v_22) _v_23)=(zappend (zip (cons _t_24 _t_25) (take (succ (len _t_25)) _v_23)) (zip _v_22 (drop (succ (len _t_25)) _v_23))))
NOW TESTING (forall ((Nat) (Lst) (Lst)) ((take _qv_16 (drop _qv_17 _qv_18))=(drop (take _qv_16 _qv_17) (take _qv_16 _qv_18))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((zip (append (cons _t_24 _t_25) _v_22) _v_23)=(zappend (zip (cons _t_24 _t_25) (take (succ (len _t_25)) _v_23)) (zip _v_22 (drop (succ (len _t_25)) _v_23))))
NOW TESTING (forall ((Nat) (Lst) (Lst)) ((drop _qv_19 (take _qv_20 _qv_21))=(take (drop _qv_19 _qv_20) (drop _qv_19 _qv_21))))
USE ASSUMPTION FAILED

  backtrack to: ((zip (append (cons _t_24 _t_25) _v_22) _v_23)=(zappend (zip (cons _t_24 _t_25) (take (succ (len _t_25)) _v_23)) (zip _v_22 (drop (succ (len _t_25)) _v_23))))
  rewritten [4]: ((zip (cons _t_24 (append _t_25 _v_22)) _v_23)=(zappend (zip (cons _t_24 _t_25) (take (succ (len _t_25)) _v_23)) (zip _v_22 (drop (succ (len _t_25)) _v_23))))
CURRENT SUBGOAL ((zip (append (cons _t_24 _t_25) _v_22) _v_23)=(zappend (zip (cons _t_24 _t_25) (take (succ (len _t_25)) _v_23)) (zip _v_22 (drop (succ (len _t_25)) _v_23))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((zip (append (cons _t_24 _t_25) _v_22) _v_23)=(zappend (zip (cons _t_24 _t_25) (take (succ (len _t_25)) _v_23)) (zip _v_22 (drop (succ (len _t_25)) _v_23))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((zip (append (cons _t_24 _t_25) _v_22) _v_23)=(zappend (zip (cons _t_24 _t_25) (take (succ (len _t_25)) _v_23)) (zip _v_22 (drop (succ (len _t_25)) _v_23))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_2 _qv_3)=(append _qv_3 _qv_2)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((zip (append (cons _t_24 _t_25) _v_22) _v_23)=(zappend (zip (cons _t_24 _t_25) (take (succ (len _t_25)) _v_23)) (zip _v_22 (drop (succ (len _t_25)) _v_23))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_4 _qv_5) _qv_6)=(append _qv_4 (append _qv_5 _qv_6))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((zip (append (cons _t_24 _t_25) _v_22) _v_23)=(zappend (zip (cons _t_24 _t_25) (take (succ (len _t_25)) _v_23)) (zip _v_22 (drop (succ (len _t_25)) _v_23))))
NOW TESTING (forall ((Lst) (Lst)) ((zip _qv_7 _qv_8)=(zip _qv_8 _qv_7)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((zip (append (cons _t_24 _t_25) _v_22) _v_23)=(zappend (zip (cons _t_24 _t_25) (take (succ (len _t_25)) _v_23)) (zip _v_22 (drop (succ (len _t_25)) _v_23))))
NOW TESTING (forall ((ZLst) (ZLst)) ((zappend _qv_9 _qv_10)=(zappend _qv_10 _qv_9)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((zip (append (cons _t_24 _t_25) _v_22) _v_23)=(zappend (zip (cons _t_24 _t_25) (take (succ (len _t_25)) _v_23)) (zip _v_22 (drop (succ (len _t_25)) _v_23))))
NOW TESTING (forall ((ZLst) (ZLst) (ZLst)) ((zappend (zappend _qv_11 _qv_12) _qv_13)=(zappend _qv_11 (zappend _qv_12 _qv_13))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((zip (append (cons _t_24 _t_25) _v_22) _v_23)=(zappend (zip (cons _t_24 _t_25) (take (succ (len _t_25)) _v_23)) (zip _v_22 (drop (succ (len _t_25)) _v_23))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_14))=(nat-to-int _qv_14)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((zip (append (cons _t_24 _t_25) _v_22) _v_23)=(zappend (zip (cons _t_24 _t_25) (take (succ (len _t_25)) _v_23)) (zip _v_22 (drop (succ (len _t_25)) _v_23))))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_15))=(nat-to-int _qv_15)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((zip (append (cons _t_24 _t_25) _v_22) _v_23)=(zappend (zip (cons _t_24 _t_25) (take (succ (len _t_25)) _v_23)) (zip _v_22 (drop (succ (len _t_25)) _v_23))))
NOW TESTING (forall ((Nat) (Lst) (Lst)) ((take _qv_16 (drop _qv_17 _qv_18))=(drop (take _qv_16 _qv_17) (take _qv_16 _qv_18))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((zip (append (cons _t_24 _t_25) _v_22) _v_23)=(zappend (zip (cons _t_24 _t_25) (take (succ (len _t_25)) _v_23)) (zip _v_22 (drop (succ (len _t_25)) _v_23))))
NOW TESTING (forall ((Nat) (Lst) (Lst)) ((drop _qv_19 (take _qv_20 _qv_21))=(take (drop _qv_19 _qv_20) (drop _qv_19 _qv_21))))
USE ASSUMPTION FAILED

  backtrack to: ((zip (append (cons _t_24 _t_25) _v_22) _v_23)=(zappend (zip (cons _t_24 _t_25) (take (succ (len _t_25)) _v_23)) (zip _v_22 (drop (succ (len _t_25)) _v_23))))
CURRENT SUBGOAL ((zip (append (cons _t_24 _t_25) _v_22) _v_23)=(zappend (zip (cons _t_24 _t_25) (take (len (cons _t_24 _t_25)) _v_23)) (zip _v_22 (drop (len (cons _t_24 _t_25)) _v_23))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((zip (append (cons _t_24 _t_25) _v_22) _v_23)=(zappend (zip (cons _t_24 _t_25) (take (len (cons _t_24 _t_25)) _v_23)) (zip _v_22 (drop (len (cons _t_24 _t_25)) _v_23))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((zip (append (cons _t_24 _t_25) _v_22) _v_23)=(zappend (zip (cons _t_24 _t_25) (take (len (cons _t_24 _t_25)) _v_23)) (zip _v_22 (drop (len (cons _t_24 _t_25)) _v_23))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_2 _qv_3)=(append _qv_3 _qv_2)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((zip (append (cons _t_24 _t_25) _v_22) _v_23)=(zappend (zip (cons _t_24 _t_25) (take (len (cons _t_24 _t_25)) _v_23)) (zip _v_22 (drop (len (cons _t_24 _t_25)) _v_23))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_4 _qv_5) _qv_6)=(append _qv_4 (append _qv_5 _qv_6))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((zip (append (cons _t_24 _t_25) _v_22) _v_23)=(zappend (zip (cons _t_24 _t_25) (take (len (cons _t_24 _t_25)) _v_23)) (zip _v_22 (drop (len (cons _t_24 _t_25)) _v_23))))
NOW TESTING (forall ((Lst) (Lst)) ((zip _qv_7 _qv_8)=(zip _qv_8 _qv_7)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((zip (append (cons _t_24 _t_25) _v_22) _v_23)=(zappend (zip (cons _t_24 _t_25) (take (len (cons _t_24 _t_25)) _v_23)) (zip _v_22 (drop (len (cons _t_24 _t_25)) _v_23))))
NOW TESTING (forall ((ZLst) (ZLst)) ((zappend _qv_9 _qv_10)=(zappend _qv_10 _qv_9)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((zip (append (cons _t_24 _t_25) _v_22) _v_23)=(zappend (zip (cons _t_24 _t_25) (take (len (cons _t_24 _t_25)) _v_23)) (zip _v_22 (drop (len (cons _t_24 _t_25)) _v_23))))
NOW TESTING (forall ((ZLst) (ZLst) (ZLst)) ((zappend (zappend _qv_11 _qv_12) _qv_13)=(zappend _qv_11 (zappend _qv_12 _qv_13))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((zip (append (cons _t_24 _t_25) _v_22) _v_23)=(zappend (zip (cons _t_24 _t_25) (take (len (cons _t_24 _t_25)) _v_23)) (zip _v_22 (drop (len (cons _t_24 _t_25)) _v_23))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_14))=(nat-to-int _qv_14)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((zip (append (cons _t_24 _t_25) _v_22) _v_23)=(zappend (zip (cons _t_24 _t_25) (take (len (cons _t_24 _t_25)) _v_23)) (zip _v_22 (drop (len (cons _t_24 _t_25)) _v_23))))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_15))=(nat-to-int _qv_15)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((zip (append (cons _t_24 _t_25) _v_22) _v_23)=(zappend (zip (cons _t_24 _t_25) (take (len (cons _t_24 _t_25)) _v_23)) (zip _v_22 (drop (len (cons _t_24 _t_25)) _v_23))))
NOW TESTING (forall ((Nat) (Lst) (Lst)) ((take _qv_16 (drop _qv_17 _qv_18))=(drop (take _qv_16 _qv_17) (take _qv_16 _qv_18))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((zip (append (cons _t_24 _t_25) _v_22) _v_23)=(zappend (zip (cons _t_24 _t_25) (take (len (cons _t_24 _t_25)) _v_23)) (zip _v_22 (drop (len (cons _t_24 _t_25)) _v_23))))
NOW TESTING (forall ((Nat) (Lst) (Lst)) ((drop _qv_19 (take _qv_20 _qv_21))=(take (drop _qv_19 _qv_20) (drop _qv_19 _qv_21))))
USE ASSUMPTION FAILED

  backtrack to: ((zip (append (cons _t_24 _t_25) _v_22) _v_23)=(zappend (zip (cons _t_24 _t_25) (take (len (cons _t_24 _t_25)) _v_23)) (zip _v_22 (drop (len (cons _t_24 _t_25)) _v_23))))
  rewritten [4]: ((zip (cons _t_24 (append _t_25 _v_22)) _v_23)=(zappend (zip (cons _t_24 _t_25) (take (len (cons _t_24 _t_25)) _v_23)) (zip _v_22 (drop (len (cons _t_24 _t_25)) _v_23))))
  rewritten [5]: ((zip (cons _t_24 (append _t_25 _v_22)) _v_23)=(zappend (zip (cons _t_24 _t_25) (take (succ (len _t_25)) _v_23)) (zip _v_22 (drop (succ (len _t_25)) _v_23))))
CURRENT SUBGOAL ((zip (cons _t_24 (append _t_25 _v_22)) _v_23)=(zappend (zip (cons _t_24 _t_25) (take (len (cons _t_24 _t_25)) _v_23)) (zip _v_22 (drop (len (cons _t_24 _t_25)) _v_23))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((zip (cons _t_24 (append _t_25 _v_22)) _v_23)=(zappend (zip (cons _t_24 _t_25) (take (len (cons _t_24 _t_25)) _v_23)) (zip _v_22 (drop (len (cons _t_24 _t_25)) _v_23))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((zip (cons _t_24 (append _t_25 _v_22)) _v_23)=(zappend (zip (cons _t_24 _t_25) (take (len (cons _t_24 _t_25)) _v_23)) (zip _v_22 (drop (len (cons _t_24 _t_25)) _v_23))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_2 _qv_3)=(append _qv_3 _qv_2)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((zip (cons _t_24 (append _t_25 _v_22)) _v_23)=(zappend (zip (cons _t_24 _t_25) (take (len (cons _t_24 _t_25)) _v_23)) (zip _v_22 (drop (len (cons _t_24 _t_25)) _v_23))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_4 _qv_5) _qv_6)=(append _qv_4 (append _qv_5 _qv_6))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((zip (cons _t_24 (append _t_25 _v_22)) _v_23)=(zappend (zip (cons _t_24 _t_25) (take (len (cons _t_24 _t_25)) _v_23)) (zip _v_22 (drop (len (cons _t_24 _t_25)) _v_23))))
NOW TESTING (forall ((Lst) (Lst)) ((zip _qv_7 _qv_8)=(zip _qv_8 _qv_7)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((zip (cons _t_24 (append _t_25 _v_22)) _v_23)=(zappend (zip (cons _t_24 _t_25) (take (len (cons _t_24 _t_25)) _v_23)) (zip _v_22 (drop (len (cons _t_24 _t_25)) _v_23))))
NOW TESTING (forall ((ZLst) (ZLst)) ((zappend _qv_9 _qv_10)=(zappend _qv_10 _qv_9)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((zip (cons _t_24 (append _t_25 _v_22)) _v_23)=(zappend (zip (cons _t_24 _t_25) (take (len (cons _t_24 _t_25)) _v_23)) (zip _v_22 (drop (len (cons _t_24 _t_25)) _v_23))))
NOW TESTING (forall ((ZLst) (ZLst) (ZLst)) ((zappend (zappend _qv_11 _qv_12) _qv_13)=(zappend _qv_11 (zappend _qv_12 _qv_13))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((zip (cons _t_24 (append _t_25 _v_22)) _v_23)=(zappend (zip (cons _t_24 _t_25) (take (len (cons _t_24 _t_25)) _v_23)) (zip _v_22 (drop (len (cons _t_24 _t_25)) _v_23))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_14))=(nat-to-int _qv_14)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((zip (cons _t_24 (append _t_25 _v_22)) _v_23)=(zappend (zip (cons _t_24 _t_25) (take (len (cons _t_24 _t_25)) _v_23)) (zip _v_22 (drop (len (cons _t_24 _t_25)) _v_23))))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_15))=(nat-to-int _qv_15)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((zip (cons _t_24 (append _t_25 _v_22)) _v_23)=(zappend (zip (cons _t_24 _t_25) (take (len (cons _t_24 _t_25)) _v_23)) (zip _v_22 (drop (len (cons _t_24 _t_25)) _v_23))))
NOW TESTING (forall ((Nat) (Lst) (Lst)) ((take _qv_16 (drop _qv_17 _qv_18))=(drop (take _qv_16 _qv_17) (take _qv_16 _qv_18))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((zip (cons _t_24 (append _t_25 _v_22)) _v_23)=(zappend (zip (cons _t_24 _t_25) (take (len (cons _t_24 _t_25)) _v_23)) (zip _v_22 (drop (len (cons _t_24 _t_25)) _v_23))))
NOW TESTING (forall ((Nat) (Lst) (Lst)) ((drop _qv_19 (take _qv_20 _qv_21))=(take (drop _qv_19 _qv_20) (drop _qv_19 _qv_21))))
USE ASSUMPTION FAILED

  backtrack to: ((zip (cons _t_24 (append _t_25 _v_22)) _v_23)=(zappend (zip (cons _t_24 _t_25) (take (len (cons _t_24 _t_25)) _v_23)) (zip _v_22 (drop (len (cons _t_24 _t_25)) _v_23))))
  rewritten [5]: ((zip (cons _t_24 (append _t_25 _v_22)) _v_23)=(zappend (zip (cons _t_24 _t_25) (take (succ (len _t_25)) _v_23)) (zip _v_22 (drop (succ (len _t_25)) _v_23))))
CURRENT SUBGOAL ((zip (cons _t_24 (append _t_25 _v_22)) _v_23)=(zappend (zip (cons _t_24 _t_25) (take (len (cons _t_24 _t_25)) _v_23)) (zip _v_22 (drop (len (cons _t_24 _t_25)) _v_23))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((zip (cons _t_24 (append _t_25 _v_22)) _v_23)=(zappend (zip (cons _t_24 _t_25) (take (len (cons _t_24 _t_25)) _v_23)) (zip _v_22 (drop (len (cons _t_24 _t_25)) _v_23))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((zip (cons _t_24 (append _t_25 _v_22)) _v_23)=(zappend (zip (cons _t_24 _t_25) (take (len (cons _t_24 _t_25)) _v_23)) (zip _v_22 (drop (len (cons _t_24 _t_25)) _v_23))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_2 _qv_3)=(append _qv_3 _qv_2)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((zip (cons _t_24 (append _t_25 _v_22)) _v_23)=(zappend (zip (cons _t_24 _t_25) (take (len (cons _t_24 _t_25)) _v_23)) (zip _v_22 (drop (len (cons _t_24 _t_25)) _v_23))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_4 _qv_5) _qv_6)=(append _qv_4 (append _qv_5 _qv_6))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((zip (cons _t_24 (append _t_25 _v_22)) _v_23)=(zappend (zip (cons _t_24 _t_25) (take (len (cons _t_24 _t_25)) _v_23)) (zip _v_22 (drop (len (cons _t_24 _t_25)) _v_23))))
NOW TESTING (forall ((Lst) (Lst)) ((zip _qv_7 _qv_8)=(zip _qv_8 _qv_7)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((zip (cons _t_24 (append _t_25 _v_22)) _v_23)=(zappend (zip (cons _t_24 _t_25) (take (len (cons _t_24 _t_25)) _v_23)) (zip _v_22 (drop (len (cons _t_24 _t_25)) _v_23))))
NOW TESTING (forall ((ZLst) (ZLst)) ((zappend _qv_9 _qv_10)=(zappend _qv_10 _qv_9)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((zip (cons _t_24 (append _t_25 _v_22)) _v_23)=(zappend (zip (cons _t_24 _t_25) (take (len (cons _t_24 _t_25)) _v_23)) (zip _v_22 (drop (len (cons _t_24 _t_25)) _v_23))))
NOW TESTING (forall ((ZLst) (ZLst) (ZLst)) ((zappend (zappend _qv_11 _qv_12) _qv_13)=(zappend _qv_11 (zappend _qv_12 _qv_13))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((zip (cons _t_24 (append _t_25 _v_22)) _v_23)=(zappend (zip (cons _t_24 _t_25) (take (len (cons _t_24 _t_25)) _v_23)) (zip _v_22 (drop (len (cons _t_24 _t_25)) _v_23))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_14))=(nat-to-int _qv_14)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((zip (cons _t_24 (append _t_25 _v_22)) _v_23)=(zappend (zip (cons _t_24 _t_25) (take (len (cons _t_24 _t_25)) _v_23)) (zip _v_22 (drop (len (cons _t_24 _t_25)) _v_23))))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_15))=(nat-to-int _qv_15)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((zip (cons _t_24 (append _t_25 _v_22)) _v_23)=(zappend (zip (cons _t_24 _t_25) (take (len (cons _t_24 _t_25)) _v_23)) (zip _v_22 (drop (len (cons _t_24 _t_25)) _v_23))))
NOW TESTING (forall ((Nat) (Lst) (Lst)) ((take _qv_16 (drop _qv_17 _qv_18))=(drop (take _qv_16 _qv_17) (take _qv_16 _qv_18))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((zip (cons _t_24 (append _t_25 _v_22)) _v_23)=(zappend (zip (cons _t_24 _t_25) (take (len (cons _t_24 _t_25)) _v_23)) (zip _v_22 (drop (len (cons _t_24 _t_25)) _v_23))))
NOW TESTING (forall ((Nat) (Lst) (Lst)) ((drop _qv_19 (take _qv_20 _qv_21))=(take (drop _qv_19 _qv_20) (drop _qv_19 _qv_21))))
USE ASSUMPTION FAILED

  backtrack to: ((zip (cons _t_24 (append _t_25 _v_22)) _v_23)=(zappend (zip (cons _t_24 _t_25) (take (len (cons _t_24 _t_25)) _v_23)) (zip _v_22 (drop (len (cons _t_24 _t_25)) _v_23))))
CURRENT SUBGOAL ((zip (append (cons _t_24 _t_25) _v_22) _v_23)=(zappend (zip (cons _t_24 _t_25) (take (len (cons _t_24 _t_25)) _v_23)) (zip _v_22 (drop (len (cons _t_24 _t_25)) _v_23))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((zip (append (cons _t_24 _t_25) _v_22) _v_23)=(zappend (zip (cons _t_24 _t_25) (take (len (cons _t_24 _t_25)) _v_23)) (zip _v_22 (drop (len (cons _t_24 _t_25)) _v_23))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((zip (append (cons _t_24 _t_25) _v_22) _v_23)=(zappend (zip (cons _t_24 _t_25) (take (len (cons _t_24 _t_25)) _v_23)) (zip _v_22 (drop (len (cons _t_24 _t_25)) _v_23))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_2 _qv_3)=(append _qv_3 _qv_2)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((zip (append (cons _t_24 _t_25) _v_22) _v_23)=(zappend (zip (cons _t_24 _t_25) (take (len (cons _t_24 _t_25)) _v_23)) (zip _v_22 (drop (len (cons _t_24 _t_25)) _v_23))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_4 _qv_5) _qv_6)=(append _qv_4 (append _qv_5 _qv_6))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((zip (append (cons _t_24 _t_25) _v_22) _v_23)=(zappend (zip (cons _t_24 _t_25) (take (len (cons _t_24 _t_25)) _v_23)) (zip _v_22 (drop (len (cons _t_24 _t_25)) _v_23))))
NOW TESTING (forall ((Lst) (Lst)) ((zip _qv_7 _qv_8)=(zip _qv_8 _qv_7)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((zip (append (cons _t_24 _t_25) _v_22) _v_23)=(zappend (zip (cons _t_24 _t_25) (take (len (cons _t_24 _t_25)) _v_23)) (zip _v_22 (drop (len (cons _t_24 _t_25)) _v_23))))
NOW TESTING (forall ((ZLst) (ZLst)) ((zappend _qv_9 _qv_10)=(zappend _qv_10 _qv_9)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((zip (append (cons _t_24 _t_25) _v_22) _v_23)=(zappend (zip (cons _t_24 _t_25) (take (len (cons _t_24 _t_25)) _v_23)) (zip _v_22 (drop (len (cons _t_24 _t_25)) _v_23))))
NOW TESTING (forall ((ZLst) (ZLst) (ZLst)) ((zappend (zappend _qv_11 _qv_12) _qv_13)=(zappend _qv_11 (zappend _qv_12 _qv_13))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((zip (append (cons _t_24 _t_25) _v_22) _v_23)=(zappend (zip (cons _t_24 _t_25) (take (len (cons _t_24 _t_25)) _v_23)) (zip _v_22 (drop (len (cons _t_24 _t_25)) _v_23))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_14))=(nat-to-int _qv_14)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((zip (append (cons _t_24 _t_25) _v_22) _v_23)=(zappend (zip (cons _t_24 _t_25) (take (len (cons _t_24 _t_25)) _v_23)) (zip _v_22 (drop (len (cons _t_24 _t_25)) _v_23))))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_15))=(nat-to-int _qv_15)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((zip (append (cons _t_24 _t_25) _v_22) _v_23)=(zappend (zip (cons _t_24 _t_25) (take (len (cons _t_24 _t_25)) _v_23)) (zip _v_22 (drop (len (cons _t_24 _t_25)) _v_23))))
NOW TESTING (forall ((Nat) (Lst) (Lst)) ((take _qv_16 (drop _qv_17 _qv_18))=(drop (take _qv_16 _qv_17) (take _qv_16 _qv_18))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((zip (append (cons _t_24 _t_25) _v_22) _v_23)=(zappend (zip (cons _t_24 _t_25) (take (len (cons _t_24 _t_25)) _v_23)) (zip _v_22 (drop (len (cons _t_24 _t_25)) _v_23))))
NOW TESTING (forall ((Nat) (Lst) (Lst)) ((drop _qv_19 (take _qv_20 _qv_21))=(take (drop _qv_19 _qv_20) (drop _qv_19 _qv_21))))
USE ASSUMPTION FAILED

  backtrack to: ((zip (append (cons _t_24 _t_25) _v_22) _v_23)=(zappend (zip (cons _t_24 _t_25) (take (len (cons _t_24 _t_25)) _v_23)) (zip _v_22 (drop (len (cons _t_24 _t_25)) _v_23))))
  rewritten [5]: ((zip (append (cons _t_24 _t_25) _v_22) _v_23)=(zappend (zip (cons _t_24 _t_25) (take (succ (len _t_25)) _v_23)) (zip _v_22 (drop (succ (len _t_25)) _v_23))))
  rewritten [4]: ((zip (cons _t_24 (append _t_25 _v_22)) _v_23)=(zappend (zip (cons _t_24 _t_25) (take (succ (len _t_25)) _v_23)) (zip _v_22 (drop (succ (len _t_25)) _v_23))))
CURRENT SUBGOAL ((zip (append (cons _t_24 _t_25) _v_22) _v_23)=(zappend (zip (cons _t_24 _t_25) (take (succ (len _t_25)) _v_23)) (zip _v_22 (drop (succ (len _t_25)) _v_23))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((zip (append (cons _t_24 _t_25) _v_22) _v_23)=(zappend (zip (cons _t_24 _t_25) (take (succ (len _t_25)) _v_23)) (zip _v_22 (drop (succ (len _t_25)) _v_23))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((zip (append (cons _t_24 _t_25) _v_22) _v_23)=(zappend (zip (cons _t_24 _t_25) (take (succ (len _t_25)) _v_23)) (zip _v_22 (drop (succ (len _t_25)) _v_23))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_2 _qv_3)=(append _qv_3 _qv_2)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((zip (append (cons _t_24 _t_25) _v_22) _v_23)=(zappend (zip (cons _t_24 _t_25) (take (succ (len _t_25)) _v_23)) (zip _v_22 (drop (succ (len _t_25)) _v_23))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_4 _qv_5) _qv_6)=(append _qv_4 (append _qv_5 _qv_6))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((zip (append (cons _t_24 _t_25) _v_22) _v_23)=(zappend (zip (cons _t_24 _t_25) (take (succ (len _t_25)) _v_23)) (zip _v_22 (drop (succ (len _t_25)) _v_23))))
NOW TESTING (forall ((Lst) (Lst)) ((zip _qv_7 _qv_8)=(zip _qv_8 _qv_7)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((zip (append (cons _t_24 _t_25) _v_22) _v_23)=(zappend (zip (cons _t_24 _t_25) (take (succ (len _t_25)) _v_23)) (zip _v_22 (drop (succ (len _t_25)) _v_23))))
NOW TESTING (forall ((ZLst) (ZLst)) ((zappend _qv_9 _qv_10)=(zappend _qv_10 _qv_9)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((zip (append (cons _t_24 _t_25) _v_22) _v_23)=(zappend (zip (cons _t_24 _t_25) (take (succ (len _t_25)) _v_23)) (zip _v_22 (drop (succ (len _t_25)) _v_23))))
NOW TESTING (forall ((ZLst) (ZLst) (ZLst)) ((zappend (zappend _qv_11 _qv_12) _qv_13)=(zappend _qv_11 (zappend _qv_12 _qv_13))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((zip (append (cons _t_24 _t_25) _v_22) _v_23)=(zappend (zip (cons _t_24 _t_25) (take (succ (len _t_25)) _v_23)) (zip _v_22 (drop (succ (len _t_25)) _v_23))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_14))=(nat-to-int _qv_14)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((zip (append (cons _t_24 _t_25) _v_22) _v_23)=(zappend (zip (cons _t_24 _t_25) (take (succ (len _t_25)) _v_23)) (zip _v_22 (drop (succ (len _t_25)) _v_23))))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_15))=(nat-to-int _qv_15)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((zip (append (cons _t_24 _t_25) _v_22) _v_23)=(zappend (zip (cons _t_24 _t_25) (take (succ (len _t_25)) _v_23)) (zip _v_22 (drop (succ (len _t_25)) _v_23))))
NOW TESTING (forall ((Nat) (Lst) (Lst)) ((take _qv_16 (drop _qv_17 _qv_18))=(drop (take _qv_16 _qv_17) (take _qv_16 _qv_18))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((zip (append (cons _t_24 _t_25) _v_22) _v_23)=(zappend (zip (cons _t_24 _t_25) (take (succ (len _t_25)) _v_23)) (zip _v_22 (drop (succ (len _t_25)) _v_23))))
NOW TESTING (forall ((Nat) (Lst) (Lst)) ((drop _qv_19 (take _qv_20 _qv_21))=(take (drop _qv_19 _qv_20) (drop _qv_19 _qv_21))))
USE ASSUMPTION FAILED

  backtrack to: ((zip (append (cons _t_24 _t_25) _v_22) _v_23)=(zappend (zip (cons _t_24 _t_25) (take (succ (len _t_25)) _v_23)) (zip _v_22 (drop (succ (len _t_25)) _v_23))))
  rewritten [4]: ((zip (cons _t_24 (append _t_25 _v_22)) _v_23)=(zappend (zip (cons _t_24 _t_25) (take (succ (len _t_25)) _v_23)) (zip _v_22 (drop (succ (len _t_25)) _v_23))))
CURRENT SUBGOAL ((zip (append (cons _t_24 _t_25) _v_22) _v_23)=(zappend (zip (cons _t_24 _t_25) (take (succ (len _t_25)) _v_23)) (zip _v_22 (drop (succ (len _t_25)) _v_23))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((zip (append (cons _t_24 _t_25) _v_22) _v_23)=(zappend (zip (cons _t_24 _t_25) (take (succ (len _t_25)) _v_23)) (zip _v_22 (drop (succ (len _t_25)) _v_23))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((zip (append (cons _t_24 _t_25) _v_22) _v_23)=(zappend (zip (cons _t_24 _t_25) (take (succ (len _t_25)) _v_23)) (zip _v_22 (drop (succ (len _t_25)) _v_23))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_2 _qv_3)=(append _qv_3 _qv_2)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((zip (append (cons _t_24 _t_25) _v_22) _v_23)=(zappend (zip (cons _t_24 _t_25) (take (succ (len _t_25)) _v_23)) (zip _v_22 (drop (succ (len _t_25)) _v_23))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_4 _qv_5) _qv_6)=(append _qv_4 (append _qv_5 _qv_6))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((zip (append (cons _t_24 _t_25) _v_22) _v_23)=(zappend (zip (cons _t_24 _t_25) (take (succ (len _t_25)) _v_23)) (zip _v_22 (drop (succ (len _t_25)) _v_23))))
NOW TESTING (forall ((Lst) (Lst)) ((zip _qv_7 _qv_8)=(zip _qv_8 _qv_7)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((zip (append (cons _t_24 _t_25) _v_22) _v_23)=(zappend (zip (cons _t_24 _t_25) (take (succ (len _t_25)) _v_23)) (zip _v_22 (drop (succ (len _t_25)) _v_23))))
NOW TESTING (forall ((ZLst) (ZLst)) ((zappend _qv_9 _qv_10)=(zappend _qv_10 _qv_9)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((zip (append (cons _t_24 _t_25) _v_22) _v_23)=(zappend (zip (cons _t_24 _t_25) (take (succ (len _t_25)) _v_23)) (zip _v_22 (drop (succ (len _t_25)) _v_23))))
NOW TESTING (forall ((ZLst) (ZLst) (ZLst)) ((zappend (zappend _qv_11 _qv_12) _qv_13)=(zappend _qv_11 (zappend _qv_12 _qv_13))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((zip (append (cons _t_24 _t_25) _v_22) _v_23)=(zappend (zip (cons _t_24 _t_25) (take (succ (len _t_25)) _v_23)) (zip _v_22 (drop (succ (len _t_25)) _v_23))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_14))=(nat-to-int _qv_14)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((zip (append (cons _t_24 _t_25) _v_22) _v_23)=(zappend (zip (cons _t_24 _t_25) (take (succ (len _t_25)) _v_23)) (zip _v_22 (drop (succ (len _t_25)) _v_23))))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_15))=(nat-to-int _qv_15)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((zip (append (cons _t_24 _t_25) _v_22) _v_23)=(zappend (zip (cons _t_24 _t_25) (take (succ (len _t_25)) _v_23)) (zip _v_22 (drop (succ (len _t_25)) _v_23))))
NOW TESTING (forall ((Nat) (Lst) (Lst)) ((take _qv_16 (drop _qv_17 _qv_18))=(drop (take _qv_16 _qv_17) (take _qv_16 _qv_18))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((zip (append (cons _t_24 _t_25) _v_22) _v_23)=(zappend (zip (cons _t_24 _t_25) (take (succ (len _t_25)) _v_23)) (zip _v_22 (drop (succ (len _t_25)) _v_23))))
NOW TESTING (forall ((Nat) (Lst) (Lst)) ((drop _qv_19 (take _qv_20 _qv_21))=(take (drop _qv_19 _qv_20) (drop _qv_19 _qv_21))))
USE ASSUMPTION FAILED

  backtrack to: ((zip (append (cons _t_24 _t_25) _v_22) _v_23)=(zappend (zip (cons _t_24 _t_25) (take (succ (len _t_25)) _v_23)) (zip _v_22 (drop (succ (len _t_25)) _v_23))))
CURRENT SUBGOAL ((zip (append (cons _t_24 _t_25) _v_22) _v_23)=(zappend (zip (cons _t_24 _t_25) (take (len (cons _t_24 _t_25)) _v_23)) (zip _v_22 (drop (len (cons _t_24 _t_25)) _v_23))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((zip (append (cons _t_24 _t_25) _v_22) _v_23)=(zappend (zip (cons _t_24 _t_25) (take (len (cons _t_24 _t_25)) _v_23)) (zip _v_22 (drop (len (cons _t_24 _t_25)) _v_23))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((zip (append (cons _t_24 _t_25) _v_22) _v_23)=(zappend (zip (cons _t_24 _t_25) (take (len (cons _t_24 _t_25)) _v_23)) (zip _v_22 (drop (len (cons _t_24 _t_25)) _v_23))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_2 _qv_3)=(append _qv_3 _qv_2)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((zip (append (cons _t_24 _t_25) _v_22) _v_23)=(zappend (zip (cons _t_24 _t_25) (take (len (cons _t_24 _t_25)) _v_23)) (zip _v_22 (drop (len (cons _t_24 _t_25)) _v_23))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_4 _qv_5) _qv_6)=(append _qv_4 (append _qv_5 _qv_6))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((zip (append (cons _t_24 _t_25) _v_22) _v_23)=(zappend (zip (cons _t_24 _t_25) (take (len (cons _t_24 _t_25)) _v_23)) (zip _v_22 (drop (len (cons _t_24 _t_25)) _v_23))))
NOW TESTING (forall ((Lst) (Lst)) ((zip _qv_7 _qv_8)=(zip _qv_8 _qv_7)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((zip (append (cons _t_24 _t_25) _v_22) _v_23)=(zappend (zip (cons _t_24 _t_25) (take (len (cons _t_24 _t_25)) _v_23)) (zip _v_22 (drop (len (cons _t_24 _t_25)) _v_23))))
NOW TESTING (forall ((ZLst) (ZLst)) ((zappend _qv_9 _qv_10)=(zappend _qv_10 _qv_9)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((zip (append (cons _t_24 _t_25) _v_22) _v_23)=(zappend (zip (cons _t_24 _t_25) (take (len (cons _t_24 _t_25)) _v_23)) (zip _v_22 (drop (len (cons _t_24 _t_25)) _v_23))))
NOW TESTING (forall ((ZLst) (ZLst) (ZLst)) ((zappend (zappend _qv_11 _qv_12) _qv_13)=(zappend _qv_11 (zappend _qv_12 _qv_13))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((zip (append (cons _t_24 _t_25) _v_22) _v_23)=(zappend (zip (cons _t_24 _t_25) (take (len (cons _t_24 _t_25)) _v_23)) (zip _v_22 (drop (len (cons _t_24 _t_25)) _v_23))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_14))=(nat-to-int _qv_14)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((zip (append (cons _t_24 _t_25) _v_22) _v_23)=(zappend (zip (cons _t_24 _t_25) (take (len (cons _t_24 _t_25)) _v_23)) (zip _v_22 (drop (len (cons _t_24 _t_25)) _v_23))))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_15))=(nat-to-int _qv_15)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((zip (append (cons _t_24 _t_25) _v_22) _v_23)=(zappend (zip (cons _t_24 _t_25) (take (len (cons _t_24 _t_25)) _v_23)) (zip _v_22 (drop (len (cons _t_24 _t_25)) _v_23))))
NOW TESTING (forall ((Nat) (Lst) (Lst)) ((take _qv_16 (drop _qv_17 _qv_18))=(drop (take _qv_16 _qv_17) (take _qv_16 _qv_18))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((zip (append (cons _t_24 _t_25) _v_22) _v_23)=(zappend (zip (cons _t_24 _t_25) (take (len (cons _t_24 _t_25)) _v_23)) (zip _v_22 (drop (len (cons _t_24 _t_25)) _v_23))))
NOW TESTING (forall ((Nat) (Lst) (Lst)) ((drop _qv_19 (take _qv_20 _qv_21))=(take (drop _qv_19 _qv_20) (drop _qv_19 _qv_21))))
USE ASSUMPTION FAILED

  backtrack to: ((zip (append (cons _t_24 _t_25) _v_22) _v_23)=(zappend (zip (cons _t_24 _t_25) (take (len (cons _t_24 _t_25)) _v_23)) (zip _v_22 (drop (len (cons _t_24 _t_25)) _v_23))))

Base case:       ((zip (append _v_52 nil) _v_53)=(zappend (zip _v_52 (take (len _v_52) _v_53)) (zip nil (drop (len _v_52) _v_53))))
{
  {
    ====================
    | Assumptions [0]: (forall ((Nat)) ((nat-to-int _qv_1)>=0))
    | Assumptions [1]: (forall ((Nat) (Nat)) (((nat-to-int _qv_2)=(nat-to-int _qv_3))->(_qv_2=_qv_3)))
    | Assumptions [2]: (forall ((Nat)) ((nat-to-int (succ _qv_4))=(1+(nat-to-int _qv_4))))
    | Assumptions [3]: (forall ((Lst)) ((append nil _qv_5)=_qv_5))
    | Assumptions [4]: (forall ((Nat) (Lst) (Lst)) ((append (cons _qv_6 _qv_7) _qv_8)=(cons _qv_6 (append _qv_7 _qv_8))))
    | Assumptions [5]: (forall ((Nat) (Lst)) ((len (cons _qv_9 _qv_10))=(succ (len _qv_10))))
    | Assumptions [6]: (forall ((Nat)) ((drop _qv_11 nil)=nil))
    | Assumptions [7]: (forall ((Nat) (Nat) (Lst)) ((drop (succ _qv_13) (cons _qv_14 _qv_15))=(drop _qv_13 _qv_15)))
    | Assumptions [8]: (forall ((Nat)) ((take _qv_16 nil)=nil))
    | Assumptions [9]: (forall ((Nat) (Nat) (Lst)) ((take (succ _qv_18) (cons _qv_19 _qv_20))=(cons _qv_19 (take _qv_18 _qv_20))))
    | Assumptions [10]: (forall ((Lst)) ((zip nil _qv_21)=znil))
    | Assumptions [11]: (forall ((Lst)) ((zip _qv_22 nil)=znil))
    | Assumptions [12]: (forall ((Nat) (Lst) (Nat) (Lst)) ((zip (cons _qv_23 _qv_24) (cons _qv_25 _qv_26))=(zcons (mkpair _qv_23 _qv_25) (zip _qv_24 _qv_26))))
    | Assumptions [13]: (forall ((ZLst)) ((zappend znil _qv_27)=_qv_27))
    | Assumptions [14]: (forall ((Pair) (ZLst) (ZLst)) ((zappend (zcons _qv_28 _qv_29) _qv_30)=(zcons _qv_28 (zappend _qv_29 _qv_30))))
    | Assumptions [15]: (forall ((Lst) (Lst)) ((zip (append _t_25 ys) zs)=(zappend (zip _t_25 (take (len _t_25) zs)) (zip ys (drop (len _t_25) zs)))))
    | Assumptions [16]: (forall ((Lst) (Lst)) ((zappend (zip _t_25 (take (len _t_25) zs)) (zip ys (drop (len _t_25) zs)))=(zip (append _t_25 ys) zs)))
    | Assumptions [17]: ((nat-to-int (len nil))=0)
    | Assumptions [18]: (forall ((Lst)) ((drop (len nil) _qv_12)=_qv_12))
    | Assumptions [19]: (forall ((Lst)) ((take (len nil) _qv_17)=nil))
    ====================
  }
  rewritten [10]: ((zip (append _v_52 nil) _v_53)=(zappend (zip _v_52 (take (len _v_52) _v_53)) znil))
CURRENT SUBGOAL ((zip (append _v_52 nil) _v_53)=(zappend (zip _v_52 (take (len _v_52) _v_53)) (zip nil (drop (len _v_52) _v_53))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((zip (append _v_52 nil) _v_53)=(zappend (zip _v_52 (take (len _v_52) _v_53)) (zip nil (drop (len _v_52) _v_53))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((zip (append _v_52 nil) _v_53)=(zappend (zip _v_52 (take (len _v_52) _v_53)) (zip nil (drop (len _v_52) _v_53))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_2 _qv_3)=(append _qv_3 _qv_2)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((zip (append _v_52 nil) _v_53)=(zappend (zip _v_52 (take (len _v_52) _v_53)) (zip nil (drop (len _v_52) _v_53))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_4 _qv_5) _qv_6)=(append _qv_4 (append _qv_5 _qv_6))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((zip (append _v_52 nil) _v_53)=(zappend (zip _v_52 (take (len _v_52) _v_53)) (zip nil (drop (len _v_52) _v_53))))
NOW TESTING (forall ((Lst) (Lst)) ((zip _qv_7 _qv_8)=(zip _qv_8 _qv_7)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((zip (append _v_52 nil) _v_53)=(zappend (zip _v_52 (take (len _v_52) _v_53)) (zip nil (drop (len _v_52) _v_53))))
NOW TESTING (forall ((ZLst) (ZLst)) ((zappend _qv_9 _qv_10)=(zappend _qv_10 _qv_9)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((zip (append _v_52 nil) _v_53)=(zappend (zip _v_52 (take (len _v_52) _v_53)) (zip nil (drop (len _v_52) _v_53))))
NOW TESTING (forall ((ZLst) (ZLst) (ZLst)) ((zappend (zappend _qv_11 _qv_12) _qv_13)=(zappend _qv_11 (zappend _qv_12 _qv_13))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((zip (append _v_52 nil) _v_53)=(zappend (zip _v_52 (take (len _v_52) _v_53)) (zip nil (drop (len _v_52) _v_53))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_14))=(nat-to-int _qv_14)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((zip (append _v_52 nil) _v_53)=(zappend (zip _v_52 (take (len _v_52) _v_53)) (zip nil (drop (len _v_52) _v_53))))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_15))=(nat-to-int _qv_15)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((zip (append _v_52 nil) _v_53)=(zappend (zip _v_52 (take (len _v_52) _v_53)) (zip nil (drop (len _v_52) _v_53))))
NOW TESTING (forall ((Nat) (Lst) (Lst)) ((take _qv_16 (drop _qv_17 _qv_18))=(drop (take _qv_16 _qv_17) (take _qv_16 _qv_18))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((zip (append _v_52 nil) _v_53)=(zappend (zip _v_52 (take (len _v_52) _v_53)) (zip nil (drop (len _v_52) _v_53))))
NOW TESTING (forall ((Nat) (Lst) (Lst)) ((drop _qv_19 (take _qv_20 _qv_21))=(take (drop _qv_19 _qv_20) (drop _qv_19 _qv_21))))
USE ASSUMPTION FAILED

  backtrack to: ((zip (append _v_52 nil) _v_53)=(zappend (zip _v_52 (take (len _v_52) _v_53)) (zip nil (drop (len _v_52) _v_53))))
  rewritten [10]: ((zip (append _v_52 nil) _v_53)=(zappend (zip _v_52 (take (len _v_52) _v_53)) znil))
CURRENT SUBGOAL ((zip (append _v_52 nil) _v_53)=(zappend (zip _v_52 (take (len _v_52) _v_53)) (zip nil (drop (len _v_52) _v_53))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((zip (append _v_52 nil) _v_53)=(zappend (zip _v_52 (take (len _v_52) _v_53)) (zip nil (drop (len _v_52) _v_53))))
NOW TESTING (forall ((Nat)) (0<=(nat-to-int _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((zip (append _v_52 nil) _v_53)=(zappend (zip _v_52 (take (len _v_52) _v_53)) (zip nil (drop (len _v_52) _v_53))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_2 _qv_3)=(append _qv_3 _qv_2)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((zip (append _v_52 nil) _v_53)=(zappend (zip _v_52 (take (len _v_52) _v_53)) (zip nil (drop (len _v_52) _v_53))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_4 _qv_5) _qv_6)=(append _qv_4 (append _qv_5 _qv_6))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((zip (append _v_52 nil) _v_53)=(zappend (zip _v_52 (take (len _v_52) _v_53)) (zip nil (drop (len _v_52) _v_53))))
NOW TESTING (forall ((Lst) (Lst)) ((zip _qv_7 _qv_8)=(zip _qv_8 _qv_7)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((zip (append _v_52 nil) _v_53)=(zappend (zip _v_52 (take (len _v_52) _v_53)) (zip nil (drop (len _v_52) _v_53))))
NOW TESTING (forall ((ZLst) (ZLst)) ((zappend _qv_9 _qv_10)=(zappend _qv_10 _qv_9)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((zip (append _v_52 nil) _v_53)=(zappend (zip _v_52 (take (len _v_52) _v_53)) (zip nil (drop (len _v_52) _v_53))))
NOW TESTING (forall ((ZLst) (ZLst) (ZLst)) ((zappend (zappend _qv_11 _qv_12) _qv_13)=(zappend _qv_11 (zappend _qv_12 _qv_13))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((zip (append _v_52 nil) _v_53)=(zappend (zip _v_52 (take (len _v_52) _v_53)) (zip nil (drop (len _v_52) _v_53))))
NOW TESTING (forall ((Nat)) ((nat-to-int (succ _qv_14))=(nat-to-int _qv_14)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((zip (append _v_52 nil) _v_53)=(zappend (zip _v_52 (take (len _v_52) _v_53)) (zip nil (drop (len _v_52) _v_53))))
NOW TESTING (forall ((Lst)) ((nat-to-int (len _qv_15))=(nat-to-int _qv_15)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((zip (append _v_52 nil) _v_53)=(zappend (zip _v_52 (take (len _v_52) _v_53)) (zip nil (drop (len _v_52) _v_53))))
NOW TESTING (forall ((Nat) (Lst) (Lst)) ((take _qv_16 (drop _qv_17 _qv_18))=(drop (take _qv_16 _qv_17) (take _qv_16 _qv_18))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((zip (append _v_52 nil) _v_53)=(zappend (zip _v_52 (take (len _v_52) _v_53)) (zip nil (drop (len _v_52) _v_53))))
NOW TESTING (forall ((Nat) (Lst) (Lst)) ((drop _qv_19 (take _qv_20 _qv_21))=(take (drop _qv_19 _qv_20) (drop _qv_19 _qv_21))))
USE ASSUMPTION FAILED

  backtrack to: ((zip (append _v_52 nil) _v_53)=(zappend (zip _v_52 (take (len _v_52) _v_53)) (zip nil (drop (len _v_52) _v_53))))
}

Base case:       ((zip (append _v_54 _v_55) nil)=(zappend (zip _v_54 (take (len _v_54) nil)) (zip _v_55 (drop (len _v_54) nil))))
{
  proven trivially
}
Inductive step:  ((zip (append _v_54 _v_55) (cons _t_56 _t_57))=(zappend (zip _v_54 (take (len _v_54) (cons _t_56 _t_57))) (zip _v_55 (drop (len _v_54) (cons _t_56 _t_57)))))
{
  {
    ====================
    | Assumptions [0]: (forall ((Nat)) ((nat-to-int _qv_1)>=0))
    | Assumptions [1]: (forall ((Nat) (Nat)) (((nat-to-int _qv_2)=(nat-to-int _qv_3))->(_qv_2=_qv_3)))
    | Assumptions [2]: (forall ((Nat)) ((nat-to-int (succ _qv_4))=(1+(nat-to-int _qv_4))))
    | Assumptions [3]: (forall ((Lst)) ((append nil _qv_5)=_qv_5))
    | Assumptions [4]: (forall ((Nat) (Lst) (Lst)) ((append (cons _qv_6 _qv_7) _qv_8)=(cons _qv_6 (append _qv_7 _qv_8))))
    | Assumptions [5]: (forall ((Nat) (Lst)) ((len (cons _qv_9 _qv_10))=(succ (len _qv_10))))
    | Assumptions [6]: (forall ((Nat)) ((drop _qv_11 nil)=nil))
    | Assumptions [7]: (forall ((Nat) (Nat) (Lst)) ((drop (succ _qv_13) (cons _qv_14 _qv_15))=(drop _qv_13 _qv_15)))
    | Assumptions [8]: (forall ((Nat)) ((take _qv_16 nil)=nil))
    | Assumptions [9]: (forall ((Nat) (Nat) (Lst)) ((take (succ _qv_18) (cons _qv_19 _qv_20))=(cons _qv_19 (take _qv_18 _qv_20))))
    | Assumptions [10]: (forall ((Lst)) ((zip nil _qv_21)=znil))
    | Assumptions [11]: (forall ((Lst)) ((zip _qv_22 nil)=znil))
    | Assumptions [12]: (forall ((Nat) (Lst) (Nat) (Lst)) ((zip (cons _qv_23 _qv_24) (cons _qv_25 _qv_26))=(zcons (mkpair _qv_23 _qv_25) (zip _qv_24 _qv_26))))
    | Assumptions [13]: (forall ((ZLst)) ((zappend znil _qv_27)=_qv_27))
    | Assumptions [14]: (forall ((Pair) (ZLst) (ZLst)) ((zappend (zcons _qv_28 _qv_29) _qv_30)=(zcons _qv_28 (zappend _qv_29 _qv_30))))
    | Assumptions [15]: (forall ((Lst) (Lst)) ((zip (append _t_25 ys) zs)=(zappend (zip _t_25 (take (len _t_25) zs)) (zip ys (drop (len _t_25) zs)))))
    | Assumptions [16]: (forall ((Lst) (Lst)) ((zappend (zip _t_25 (take (len _t_25) zs)) (zip ys (drop (len _t_25) zs)))=(zip (append _t_25 ys) zs)))
    | Assumptions [17]: ((nat-to-int (len nil))=0)
    | Assumptions [18]: (forall ((Lst)) ((drop (len nil) _qv_12)=_qv_12))
    | Assumptions [19]: (forall ((Lst)) ((take (len nil) _qv_17)=nil))
    | Assumptions [20]: (forall ((Lst) (Lst)) ((zip (append xs ys) _t_57)=(zappend (zip xs (take (len xs) _t_57)) (zip ys (drop (len xs) _t_57)))))
    | Assumptions [21]: (forall ((Lst) (Lst)) ((zappend (zip xs (take (len xs) _t_57)) (zip ys (drop (len xs) _t_57)))=(zip (append xs ys) _t_57)))
    ====================
  }
Unknown
sat
