
The Knowledge Scheme currently contains the following lemmas:
	(forall ((Lst)) (0<=(len _qv_0)))
	(forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
	(forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
	(forall (INT INT) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
	(forall (INT INT INT) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))

Simplified goal: (forall ((Lst) (Lst)) ((rotate (len x) (append x y))=(append y x)))


Base case:       ((rotate (len nil) (append nil _v_11))=(append _v_11 nil))
{
  {
    ====================
    | Assumptions [0]: ((len nil)=0)
    | Assumptions [1]: (forall (INT (Lst)) ((len (cons _qv_1 _qv_2))=(1+(len _qv_2))))
    | Assumptions [2]: (forall ((Lst)) ((len _qv_3)>=0))
    | Assumptions [3]: (forall ((Lst)) ((append nil _qv_4)=_qv_4))
    | Assumptions [4]: (forall (INT (Lst) (Lst)) ((append (cons _qv_5 _qv_6) _qv_7)=(cons _qv_5 (append _qv_6 _qv_7))))
    | Assumptions [5]: (forall ((Lst)) ((rotate 0 _qv_8)=_qv_8))
    | Assumptions [6]: (forall (INT) ((_qv_9>=0)->((rotate 1+_qv_9 nil)=nil)))
    | Assumptions [7]: (forall (INT INT (Lst)) ((_qv_10>=0)->((rotate 1+_qv_10 (cons _qv_11 _qv_12))=(rotate _qv_10 (append _qv_12 (cons _qv_11 nil))))))
    | Assumptions [8]: (forall (INT) ((_qv_13>=0)->((plus 0 _qv_13)=_qv_13)))
    | Assumptions [9]: (forall (INT INT) (((_qv_14>=0)&&(_qv_15>=0))->((plus 1+_qv_14 _qv_15)=(1+(plus _qv_14 _qv_15)))))
    | Assumptions [10]: (forall (INT INT) (((_qv_16>=0)&&(_qv_17>=0))->((plus _qv_16 _qv_17)=(_qv_16+_qv_17))))
    ====================
  }
  rewritten [0]: ((rotate 0 (append nil _v_11))=(append _v_11 nil))
  rewritten [3]: ((rotate 0 _v_11)=(append _v_11 nil))
  rewritten [5]: (_v_11=(append _v_11 nil))

The Knowledge Scheme currently contains the following lemmas:
	(forall ((Lst)) (0<=(len _qv_12)))
	(forall ((Lst) (Lst)) ((append _qv_13 _qv_14)=(append _qv_14 _qv_13)))
	(forall ((Lst) (Lst) (Lst)) ((append (append _qv_15 _qv_16) _qv_17)=(append _qv_15 (append _qv_16 _qv_17))))
	(forall (INT INT) ((plus _qv_18 _qv_19)=(plus _qv_19 _qv_18)))
	(forall (INT INT INT) ((plus (plus _qv_20 _qv_21) _qv_22)=(plus _qv_20 (plus _qv_21 _qv_22))))

  proven by induction: (_v_11=(append _v_11 nil))
  rewriting done
  rewriting done
}
Inductive step:  ((rotate (len (cons _t_12 _t_13)) (append (cons _t_12 _t_13) _v_11))=(append _v_11 (cons _t_12 _t_13)))
{
  {
    ====================
    | Assumptions [0]: ((len nil)=0)
    | Assumptions [1]: (forall (INT (Lst)) ((len (cons _qv_1 _qv_2))=(1+(len _qv_2))))
    | Assumptions [2]: (forall ((Lst)) ((len _qv_3)>=0))
    | Assumptions [3]: (forall ((Lst)) ((append nil _qv_4)=_qv_4))
    | Assumptions [4]: (forall (INT (Lst) (Lst)) ((append (cons _qv_5 _qv_6) _qv_7)=(cons _qv_5 (append _qv_6 _qv_7))))
    | Assumptions [5]: (forall ((Lst)) ((rotate 0 _qv_8)=_qv_8))
    | Assumptions [6]: (forall (INT) ((_qv_9>=0)->((rotate 1+_qv_9 nil)=nil)))
    | Assumptions [7]: (forall (INT INT (Lst)) ((_qv_10>=0)->((rotate 1+_qv_10 (cons _qv_11 _qv_12))=(rotate _qv_10 (append _qv_12 (cons _qv_11 nil))))))
    | Assumptions [8]: (forall (INT) ((_qv_13>=0)->((plus 0 _qv_13)=_qv_13)))
    | Assumptions [9]: (forall (INT INT) (((_qv_14>=0)&&(_qv_15>=0))->((plus 1+_qv_14 _qv_15)=(1+(plus _qv_14 _qv_15)))))
    | Assumptions [10]: (forall (INT INT) (((_qv_16>=0)&&(_qv_17>=0))->((plus _qv_16 _qv_17)=(_qv_16+_qv_17))))
    | Assumptions [11]: (forall ((Lst)) ((rotate (len _t_13) (append _t_13 y))=(append y _t_13)))
    | Assumptions [12]: (forall ((Lst)) ((append y _t_13)=(rotate (len _t_13) (append _t_13 y))))
    ====================
  }
  rewritten [1]: ((rotate 1+(len _t_13) (append (cons _t_12 _t_13) _v_11))=(append _v_11 (cons _t_12 _t_13)))
  rewritten [4]: ((rotate (len _t_13)+1 (cons _t_12 (append _t_13 _v_11)))=(append _v_11 (cons _t_12 _t_13)))
CURRENT SUBGOAL ((rotate (len _t_13)+1 (append (cons _t_12 _t_13) _v_11))=(append _v_11 (cons _t_12 _t_13)))
NOW TESTING (forall ((Lst)) (0<=(len _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len _t_13)+1 (append (cons _t_12 _t_13) _v_11))=(append _v_11 (cons _t_12 _t_13)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len _t_13)+1 (append (cons _t_12 _t_13) _v_11))=(append _v_11 (cons _t_12 _t_13)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len _t_13)+1 (append (cons _t_12 _t_13) _v_11))=(append _v_11 (cons _t_12 _t_13)))
NOW TESTING (forall (INT INT) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len _t_13)+1 (append (cons _t_12 _t_13) _v_11))=(append _v_11 (cons _t_12 _t_13)))
NOW TESTING (forall (INT INT INT) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

  backtrack to: ((rotate (len _t_13)+1 (append (cons _t_12 _t_13) _v_11))=(append _v_11 (cons _t_12 _t_13)))
  rewritten [4]: ((rotate (len _t_13)+1 (cons _t_12 (append _t_13 _v_11)))=(append _v_11 (cons _t_12 _t_13)))
CURRENT SUBGOAL ((rotate (len _t_13)+1 (append (cons _t_12 _t_13) _v_11))=(append _v_11 (cons _t_12 _t_13)))
NOW TESTING (forall ((Lst)) (0<=(len _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len _t_13)+1 (append (cons _t_12 _t_13) _v_11))=(append _v_11 (cons _t_12 _t_13)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len _t_13)+1 (append (cons _t_12 _t_13) _v_11))=(append _v_11 (cons _t_12 _t_13)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len _t_13)+1 (append (cons _t_12 _t_13) _v_11))=(append _v_11 (cons _t_12 _t_13)))
NOW TESTING (forall (INT INT) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len _t_13)+1 (append (cons _t_12 _t_13) _v_11))=(append _v_11 (cons _t_12 _t_13)))
NOW TESTING (forall (INT INT INT) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

  backtrack to: ((rotate (len _t_13)+1 (append (cons _t_12 _t_13) _v_11))=(append _v_11 (cons _t_12 _t_13)))
CURRENT SUBGOAL ((rotate (len (cons _t_12 _t_13)) (append (cons _t_12 _t_13) _v_11))=(append _v_11 (cons _t_12 _t_13)))
NOW TESTING (forall ((Lst)) (0<=(len _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (cons _t_12 _t_13)) (append (cons _t_12 _t_13) _v_11))=(append _v_11 (cons _t_12 _t_13)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (cons _t_12 _t_13)) (append (cons _t_12 _t_13) _v_11))=(append _v_11 (cons _t_12 _t_13)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (cons _t_12 _t_13)) (append (cons _t_12 _t_13) _v_11))=(append _v_11 (cons _t_12 _t_13)))
NOW TESTING (forall (INT INT) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (cons _t_12 _t_13)) (append (cons _t_12 _t_13) _v_11))=(append _v_11 (cons _t_12 _t_13)))
NOW TESTING (forall (INT INT INT) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

  backtrack to: ((rotate (len (cons _t_12 _t_13)) (append (cons _t_12 _t_13) _v_11))=(append _v_11 (cons _t_12 _t_13)))
  rewritten [4]: ((rotate (len (cons _t_12 _t_13)) (cons _t_12 (append _t_13 _v_11)))=(append _v_11 (cons _t_12 _t_13)))
  rewritten [1]: ((rotate 1+(len _t_13) (cons _t_12 (append _t_13 _v_11)))=(append _v_11 (cons _t_12 _t_13)))
CURRENT SUBGOAL ((rotate (len (cons _t_12 _t_13)) (cons _t_12 (append _t_13 _v_11)))=(append _v_11 (cons _t_12 _t_13)))
NOW TESTING (forall ((Lst)) (0<=(len _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (cons _t_12 _t_13)) (cons _t_12 (append _t_13 _v_11)))=(append _v_11 (cons _t_12 _t_13)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (cons _t_12 _t_13)) (cons _t_12 (append _t_13 _v_11)))=(append _v_11 (cons _t_12 _t_13)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (cons _t_12 _t_13)) (cons _t_12 (append _t_13 _v_11)))=(append _v_11 (cons _t_12 _t_13)))
NOW TESTING (forall (INT INT) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (cons _t_12 _t_13)) (cons _t_12 (append _t_13 _v_11)))=(append _v_11 (cons _t_12 _t_13)))
NOW TESTING (forall (INT INT INT) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

  backtrack to: ((rotate (len (cons _t_12 _t_13)) (cons _t_12 (append _t_13 _v_11)))=(append _v_11 (cons _t_12 _t_13)))
  rewritten [1]: ((rotate 1+(len _t_13) (cons _t_12 (append _t_13 _v_11)))=(append _v_11 (cons _t_12 _t_13)))
CURRENT SUBGOAL ((rotate (len (cons _t_12 _t_13)) (cons _t_12 (append _t_13 _v_11)))=(append _v_11 (cons _t_12 _t_13)))
NOW TESTING (forall ((Lst)) (0<=(len _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (cons _t_12 _t_13)) (cons _t_12 (append _t_13 _v_11)))=(append _v_11 (cons _t_12 _t_13)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (cons _t_12 _t_13)) (cons _t_12 (append _t_13 _v_11)))=(append _v_11 (cons _t_12 _t_13)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (cons _t_12 _t_13)) (cons _t_12 (append _t_13 _v_11)))=(append _v_11 (cons _t_12 _t_13)))
NOW TESTING (forall (INT INT) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (cons _t_12 _t_13)) (cons _t_12 (append _t_13 _v_11)))=(append _v_11 (cons _t_12 _t_13)))
NOW TESTING (forall (INT INT INT) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

  backtrack to: ((rotate (len (cons _t_12 _t_13)) (cons _t_12 (append _t_13 _v_11)))=(append _v_11 (cons _t_12 _t_13)))
CURRENT SUBGOAL ((rotate (len (cons _t_12 _t_13)) (append (cons _t_12 _t_13) _v_11))=(append _v_11 (cons _t_12 _t_13)))
NOW TESTING (forall ((Lst)) (0<=(len _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (cons _t_12 _t_13)) (append (cons _t_12 _t_13) _v_11))=(append _v_11 (cons _t_12 _t_13)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (cons _t_12 _t_13)) (append (cons _t_12 _t_13) _v_11))=(append _v_11 (cons _t_12 _t_13)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (cons _t_12 _t_13)) (append (cons _t_12 _t_13) _v_11))=(append _v_11 (cons _t_12 _t_13)))
NOW TESTING (forall (INT INT) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (cons _t_12 _t_13)) (append (cons _t_12 _t_13) _v_11))=(append _v_11 (cons _t_12 _t_13)))
NOW TESTING (forall (INT INT INT) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

  backtrack to: ((rotate (len (cons _t_12 _t_13)) (append (cons _t_12 _t_13) _v_11))=(append _v_11 (cons _t_12 _t_13)))
  rewritten [1]: ((rotate 1+(len _t_13) (append (cons _t_12 _t_13) _v_11))=(append _v_11 (cons _t_12 _t_13)))
  rewritten [4]: ((rotate (len _t_13)+1 (cons _t_12 (append _t_13 _v_11)))=(append _v_11 (cons _t_12 _t_13)))
CURRENT SUBGOAL ((rotate (len _t_13)+1 (append (cons _t_12 _t_13) _v_11))=(append _v_11 (cons _t_12 _t_13)))
NOW TESTING (forall ((Lst)) (0<=(len _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len _t_13)+1 (append (cons _t_12 _t_13) _v_11))=(append _v_11 (cons _t_12 _t_13)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len _t_13)+1 (append (cons _t_12 _t_13) _v_11))=(append _v_11 (cons _t_12 _t_13)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len _t_13)+1 (append (cons _t_12 _t_13) _v_11))=(append _v_11 (cons _t_12 _t_13)))
NOW TESTING (forall (INT INT) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len _t_13)+1 (append (cons _t_12 _t_13) _v_11))=(append _v_11 (cons _t_12 _t_13)))
NOW TESTING (forall (INT INT INT) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

  backtrack to: ((rotate (len _t_13)+1 (append (cons _t_12 _t_13) _v_11))=(append _v_11 (cons _t_12 _t_13)))
  rewritten [4]: ((rotate (len _t_13)+1 (cons _t_12 (append _t_13 _v_11)))=(append _v_11 (cons _t_12 _t_13)))
CURRENT SUBGOAL ((rotate (len _t_13)+1 (append (cons _t_12 _t_13) _v_11))=(append _v_11 (cons _t_12 _t_13)))
NOW TESTING (forall ((Lst)) (0<=(len _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len _t_13)+1 (append (cons _t_12 _t_13) _v_11))=(append _v_11 (cons _t_12 _t_13)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len _t_13)+1 (append (cons _t_12 _t_13) _v_11))=(append _v_11 (cons _t_12 _t_13)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len _t_13)+1 (append (cons _t_12 _t_13) _v_11))=(append _v_11 (cons _t_12 _t_13)))
NOW TESTING (forall (INT INT) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len _t_13)+1 (append (cons _t_12 _t_13) _v_11))=(append _v_11 (cons _t_12 _t_13)))
NOW TESTING (forall (INT INT INT) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

  backtrack to: ((rotate (len _t_13)+1 (append (cons _t_12 _t_13) _v_11))=(append _v_11 (cons _t_12 _t_13)))
CURRENT SUBGOAL ((rotate (len (cons _t_12 _t_13)) (append (cons _t_12 _t_13) _v_11))=(append _v_11 (cons _t_12 _t_13)))
NOW TESTING (forall ((Lst)) (0<=(len _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (cons _t_12 _t_13)) (append (cons _t_12 _t_13) _v_11))=(append _v_11 (cons _t_12 _t_13)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (cons _t_12 _t_13)) (append (cons _t_12 _t_13) _v_11))=(append _v_11 (cons _t_12 _t_13)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (cons _t_12 _t_13)) (append (cons _t_12 _t_13) _v_11))=(append _v_11 (cons _t_12 _t_13)))
NOW TESTING (forall (INT INT) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (cons _t_12 _t_13)) (append (cons _t_12 _t_13) _v_11))=(append _v_11 (cons _t_12 _t_13)))
NOW TESTING (forall (INT INT INT) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

  backtrack to: ((rotate (len (cons _t_12 _t_13)) (append (cons _t_12 _t_13) _v_11))=(append _v_11 (cons _t_12 _t_13)))
  rewritten [4]: ((rotate (len (cons _t_12 _t_13)) (cons _t_12 (append _t_13 _v_11)))=(append _v_11 (cons _t_12 _t_13)))
  rewritten [1]: ((rotate 1+(len _t_13) (cons _t_12 (append _t_13 _v_11)))=(append _v_11 (cons _t_12 _t_13)))
CURRENT SUBGOAL ((rotate (len (cons _t_12 _t_13)) (cons _t_12 (append _t_13 _v_11)))=(append _v_11 (cons _t_12 _t_13)))
NOW TESTING (forall ((Lst)) (0<=(len _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (cons _t_12 _t_13)) (cons _t_12 (append _t_13 _v_11)))=(append _v_11 (cons _t_12 _t_13)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (cons _t_12 _t_13)) (cons _t_12 (append _t_13 _v_11)))=(append _v_11 (cons _t_12 _t_13)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (cons _t_12 _t_13)) (cons _t_12 (append _t_13 _v_11)))=(append _v_11 (cons _t_12 _t_13)))
NOW TESTING (forall (INT INT) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (cons _t_12 _t_13)) (cons _t_12 (append _t_13 _v_11)))=(append _v_11 (cons _t_12 _t_13)))
NOW TESTING (forall (INT INT INT) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

  backtrack to: ((rotate (len (cons _t_12 _t_13)) (cons _t_12 (append _t_13 _v_11)))=(append _v_11 (cons _t_12 _t_13)))
  rewritten [1]: ((rotate 1+(len _t_13) (cons _t_12 (append _t_13 _v_11)))=(append _v_11 (cons _t_12 _t_13)))
CURRENT SUBGOAL ((rotate (len (cons _t_12 _t_13)) (cons _t_12 (append _t_13 _v_11)))=(append _v_11 (cons _t_12 _t_13)))
NOW TESTING (forall ((Lst)) (0<=(len _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (cons _t_12 _t_13)) (cons _t_12 (append _t_13 _v_11)))=(append _v_11 (cons _t_12 _t_13)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (cons _t_12 _t_13)) (cons _t_12 (append _t_13 _v_11)))=(append _v_11 (cons _t_12 _t_13)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (cons _t_12 _t_13)) (cons _t_12 (append _t_13 _v_11)))=(append _v_11 (cons _t_12 _t_13)))
NOW TESTING (forall (INT INT) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (cons _t_12 _t_13)) (cons _t_12 (append _t_13 _v_11)))=(append _v_11 (cons _t_12 _t_13)))
NOW TESTING (forall (INT INT INT) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

  backtrack to: ((rotate (len (cons _t_12 _t_13)) (cons _t_12 (append _t_13 _v_11)))=(append _v_11 (cons _t_12 _t_13)))
CURRENT SUBGOAL ((rotate (len (cons _t_12 _t_13)) (append (cons _t_12 _t_13) _v_11))=(append _v_11 (cons _t_12 _t_13)))
NOW TESTING (forall ((Lst)) (0<=(len _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (cons _t_12 _t_13)) (append (cons _t_12 _t_13) _v_11))=(append _v_11 (cons _t_12 _t_13)))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (cons _t_12 _t_13)) (append (cons _t_12 _t_13) _v_11))=(append _v_11 (cons _t_12 _t_13)))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (cons _t_12 _t_13)) (append (cons _t_12 _t_13) _v_11))=(append _v_11 (cons _t_12 _t_13)))
NOW TESTING (forall (INT INT) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (cons _t_12 _t_13)) (append (cons _t_12 _t_13) _v_11))=(append _v_11 (cons _t_12 _t_13)))
NOW TESTING (forall (INT INT INT) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

  backtrack to: ((rotate (len (cons _t_12 _t_13)) (append (cons _t_12 _t_13) _v_11))=(append _v_11 (cons _t_12 _t_13)))

Base case:       ((rotate (len _v_18) (append _v_18 nil))=(append nil _v_18))
{
  {
    ====================
    | Assumptions [0]: ((len nil)=0)
    | Assumptions [1]: (forall (INT (Lst)) ((len (cons _qv_1 _qv_2))=(1+(len _qv_2))))
    | Assumptions [2]: (forall ((Lst)) ((len _qv_3)>=0))
    | Assumptions [3]: (forall ((Lst)) ((append nil _qv_4)=_qv_4))
    | Assumptions [4]: (forall (INT (Lst) (Lst)) ((append (cons _qv_5 _qv_6) _qv_7)=(cons _qv_5 (append _qv_6 _qv_7))))
    | Assumptions [5]: (forall ((Lst)) ((rotate 0 _qv_8)=_qv_8))
    | Assumptions [6]: (forall (INT) ((_qv_9>=0)->((rotate 1+_qv_9 nil)=nil)))
    | Assumptions [7]: (forall (INT INT (Lst)) ((_qv_10>=0)->((rotate 1+_qv_10 (cons _qv_11 _qv_12))=(rotate _qv_10 (append _qv_12 (cons _qv_11 nil))))))
    | Assumptions [8]: (forall (INT) ((_qv_13>=0)->((plus 0 _qv_13)=_qv_13)))
    | Assumptions [9]: (forall (INT INT) (((_qv_14>=0)&&(_qv_15>=0))->((plus 1+_qv_14 _qv_15)=(1+(plus _qv_14 _qv_15)))))
    | Assumptions [10]: (forall (INT INT) (((_qv_16>=0)&&(_qv_17>=0))->((plus _qv_16 _qv_17)=(_qv_16+_qv_17))))
    | Assumptions [11]: (forall ((Lst)) ((rotate (len _t_13) (append _t_13 y))=(append y _t_13)))
    | Assumptions [12]: (forall ((Lst)) ((append y _t_13)=(rotate (len _t_13) (append _t_13 y))))
    ====================
  }
  rewritten [3]: ((rotate (len _v_18) (append _v_18 nil))=_v_18)

The Knowledge Scheme currently contains the following lemmas:
	(forall ((Lst)) (0<=(len _qv_19)))
	(forall ((Lst) (Lst)) ((append _qv_20 _qv_21)=(append _qv_21 _qv_20)))
	(forall ((Lst) (Lst) (Lst)) ((append (append _qv_22 _qv_23) _qv_24)=(append _qv_22 (append _qv_23 _qv_24))))
	(forall (INT INT) ((plus _qv_25 _qv_26)=(plus _qv_26 _qv_25)))
	(forall (INT INT INT) ((plus (plus _qv_27 _qv_28) _qv_29)=(plus _qv_27 (plus _qv_28 _qv_29))))

CURRENT SUBGOAL ((rotate (len _t_31)+1 (append (cons _t_30 _t_31) nil))=(cons _t_30 _t_31))
NOW TESTING (forall ((Lst)) (0<=(len _qv_19)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len _t_31)+1 (append (cons _t_30 _t_31) nil))=(cons _t_30 _t_31))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_20 _qv_21)=(append _qv_21 _qv_20)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len _t_31)+1 (append (cons _t_30 _t_31) nil))=(cons _t_30 _t_31))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_22 _qv_23) _qv_24)=(append _qv_22 (append _qv_23 _qv_24))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len _t_31)+1 (append (cons _t_30 _t_31) nil))=(cons _t_30 _t_31))
NOW TESTING (forall (INT INT) ((plus _qv_25 _qv_26)=(plus _qv_26 _qv_25)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len _t_31)+1 (append (cons _t_30 _t_31) nil))=(cons _t_30 _t_31))
NOW TESTING (forall (INT INT INT) ((plus (plus _qv_27 _qv_28) _qv_29)=(plus _qv_27 (plus _qv_28 _qv_29))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len _t_31)+1 (append (cons _t_30 _t_31) nil))=(cons _t_30 _t_31))
NOW TESTING (forall ((Lst)) (0<=(len _qv_19)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len _t_31)+1 (append (cons _t_30 _t_31) nil))=(cons _t_30 _t_31))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_20 _qv_21)=(append _qv_21 _qv_20)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len _t_31)+1 (append (cons _t_30 _t_31) nil))=(cons _t_30 _t_31))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_22 _qv_23) _qv_24)=(append _qv_22 (append _qv_23 _qv_24))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len _t_31)+1 (append (cons _t_30 _t_31) nil))=(cons _t_30 _t_31))
NOW TESTING (forall (INT INT) ((plus _qv_25 _qv_26)=(plus _qv_26 _qv_25)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len _t_31)+1 (append (cons _t_30 _t_31) nil))=(cons _t_30 _t_31))
NOW TESTING (forall (INT INT INT) ((plus (plus _qv_27 _qv_28) _qv_29)=(plus _qv_27 (plus _qv_28 _qv_29))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (cons _t_30 _t_31)) (append (cons _t_30 _t_31) nil))=(cons _t_30 _t_31))
NOW TESTING (forall ((Lst)) (0<=(len _qv_19)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (cons _t_30 _t_31)) (append (cons _t_30 _t_31) nil))=(cons _t_30 _t_31))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_20 _qv_21)=(append _qv_21 _qv_20)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (cons _t_30 _t_31)) (append (cons _t_30 _t_31) nil))=(cons _t_30 _t_31))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_22 _qv_23) _qv_24)=(append _qv_22 (append _qv_23 _qv_24))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (cons _t_30 _t_31)) (append (cons _t_30 _t_31) nil))=(cons _t_30 _t_31))
NOW TESTING (forall (INT INT) ((plus _qv_25 _qv_26)=(plus _qv_26 _qv_25)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (cons _t_30 _t_31)) (append (cons _t_30 _t_31) nil))=(cons _t_30 _t_31))
NOW TESTING (forall (INT INT INT) ((plus (plus _qv_27 _qv_28) _qv_29)=(plus _qv_27 (plus _qv_28 _qv_29))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (cons _t_30 _t_31)) (cons _t_30 (append _t_31 nil)))=(cons _t_30 _t_31))
NOW TESTING (forall ((Lst)) (0<=(len _qv_19)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (cons _t_30 _t_31)) (cons _t_30 (append _t_31 nil)))=(cons _t_30 _t_31))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_20 _qv_21)=(append _qv_21 _qv_20)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (cons _t_30 _t_31)) (cons _t_30 (append _t_31 nil)))=(cons _t_30 _t_31))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_22 _qv_23) _qv_24)=(append _qv_22 (append _qv_23 _qv_24))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (cons _t_30 _t_31)) (cons _t_30 (append _t_31 nil)))=(cons _t_30 _t_31))
NOW TESTING (forall (INT INT) ((plus _qv_25 _qv_26)=(plus _qv_26 _qv_25)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (cons _t_30 _t_31)) (cons _t_30 (append _t_31 nil)))=(cons _t_30 _t_31))
NOW TESTING (forall (INT INT INT) ((plus (plus _qv_27 _qv_28) _qv_29)=(plus _qv_27 (plus _qv_28 _qv_29))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (cons _t_30 _t_31)) (cons _t_30 (append _t_31 nil)))=(cons _t_30 _t_31))
NOW TESTING (forall ((Lst)) (0<=(len _qv_19)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (cons _t_30 _t_31)) (cons _t_30 (append _t_31 nil)))=(cons _t_30 _t_31))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_20 _qv_21)=(append _qv_21 _qv_20)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (cons _t_30 _t_31)) (cons _t_30 (append _t_31 nil)))=(cons _t_30 _t_31))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_22 _qv_23) _qv_24)=(append _qv_22 (append _qv_23 _qv_24))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (cons _t_30 _t_31)) (cons _t_30 (append _t_31 nil)))=(cons _t_30 _t_31))
NOW TESTING (forall (INT INT) ((plus _qv_25 _qv_26)=(plus _qv_26 _qv_25)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (cons _t_30 _t_31)) (cons _t_30 (append _t_31 nil)))=(cons _t_30 _t_31))
NOW TESTING (forall (INT INT INT) ((plus (plus _qv_27 _qv_28) _qv_29)=(plus _qv_27 (plus _qv_28 _qv_29))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (cons _t_30 _t_31)) (append (cons _t_30 _t_31) nil))=(cons _t_30 _t_31))
NOW TESTING (forall ((Lst)) (0<=(len _qv_19)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (cons _t_30 _t_31)) (append (cons _t_30 _t_31) nil))=(cons _t_30 _t_31))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_20 _qv_21)=(append _qv_21 _qv_20)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (cons _t_30 _t_31)) (append (cons _t_30 _t_31) nil))=(cons _t_30 _t_31))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_22 _qv_23) _qv_24)=(append _qv_22 (append _qv_23 _qv_24))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (cons _t_30 _t_31)) (append (cons _t_30 _t_31) nil))=(cons _t_30 _t_31))
NOW TESTING (forall (INT INT) ((plus _qv_25 _qv_26)=(plus _qv_26 _qv_25)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (cons _t_30 _t_31)) (append (cons _t_30 _t_31) nil))=(cons _t_30 _t_31))
NOW TESTING (forall (INT INT INT) ((plus (plus _qv_27 _qv_28) _qv_29)=(plus _qv_27 (plus _qv_28 _qv_29))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len _t_31)+1 (append (cons _t_30 _t_31) nil))=(cons _t_30 _t_31))
NOW TESTING (forall ((Lst)) (0<=(len _qv_19)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len _t_31)+1 (append (cons _t_30 _t_31) nil))=(cons _t_30 _t_31))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_20 _qv_21)=(append _qv_21 _qv_20)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len _t_31)+1 (append (cons _t_30 _t_31) nil))=(cons _t_30 _t_31))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_22 _qv_23) _qv_24)=(append _qv_22 (append _qv_23 _qv_24))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len _t_31)+1 (append (cons _t_30 _t_31) nil))=(cons _t_30 _t_31))
NOW TESTING (forall (INT INT) ((plus _qv_25 _qv_26)=(plus _qv_26 _qv_25)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len _t_31)+1 (append (cons _t_30 _t_31) nil))=(cons _t_30 _t_31))
NOW TESTING (forall (INT INT INT) ((plus (plus _qv_27 _qv_28) _qv_29)=(plus _qv_27 (plus _qv_28 _qv_29))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len _t_31)+1 (append (cons _t_30 _t_31) nil))=(cons _t_30 _t_31))
NOW TESTING (forall ((Lst)) (0<=(len _qv_19)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len _t_31)+1 (append (cons _t_30 _t_31) nil))=(cons _t_30 _t_31))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_20 _qv_21)=(append _qv_21 _qv_20)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len _t_31)+1 (append (cons _t_30 _t_31) nil))=(cons _t_30 _t_31))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_22 _qv_23) _qv_24)=(append _qv_22 (append _qv_23 _qv_24))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len _t_31)+1 (append (cons _t_30 _t_31) nil))=(cons _t_30 _t_31))
NOW TESTING (forall (INT INT) ((plus _qv_25 _qv_26)=(plus _qv_26 _qv_25)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len _t_31)+1 (append (cons _t_30 _t_31) nil))=(cons _t_30 _t_31))
NOW TESTING (forall (INT INT INT) ((plus (plus _qv_27 _qv_28) _qv_29)=(plus _qv_27 (plus _qv_28 _qv_29))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (cons _t_30 _t_31)) (append (cons _t_30 _t_31) nil))=(cons _t_30 _t_31))
NOW TESTING (forall ((Lst)) (0<=(len _qv_19)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (cons _t_30 _t_31)) (append (cons _t_30 _t_31) nil))=(cons _t_30 _t_31))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_20 _qv_21)=(append _qv_21 _qv_20)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (cons _t_30 _t_31)) (append (cons _t_30 _t_31) nil))=(cons _t_30 _t_31))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_22 _qv_23) _qv_24)=(append _qv_22 (append _qv_23 _qv_24))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (cons _t_30 _t_31)) (append (cons _t_30 _t_31) nil))=(cons _t_30 _t_31))
NOW TESTING (forall (INT INT) ((plus _qv_25 _qv_26)=(plus _qv_26 _qv_25)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (cons _t_30 _t_31)) (append (cons _t_30 _t_31) nil))=(cons _t_30 _t_31))
NOW TESTING (forall (INT INT INT) ((plus (plus _qv_27 _qv_28) _qv_29)=(plus _qv_27 (plus _qv_28 _qv_29))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (cons _t_30 _t_31)) (cons _t_30 (append _t_31 nil)))=(cons _t_30 _t_31))
NOW TESTING (forall ((Lst)) (0<=(len _qv_19)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (cons _t_30 _t_31)) (cons _t_30 (append _t_31 nil)))=(cons _t_30 _t_31))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_20 _qv_21)=(append _qv_21 _qv_20)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (cons _t_30 _t_31)) (cons _t_30 (append _t_31 nil)))=(cons _t_30 _t_31))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_22 _qv_23) _qv_24)=(append _qv_22 (append _qv_23 _qv_24))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (cons _t_30 _t_31)) (cons _t_30 (append _t_31 nil)))=(cons _t_30 _t_31))
NOW TESTING (forall (INT INT) ((plus _qv_25 _qv_26)=(plus _qv_26 _qv_25)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (cons _t_30 _t_31)) (cons _t_30 (append _t_31 nil)))=(cons _t_30 _t_31))
NOW TESTING (forall (INT INT INT) ((plus (plus _qv_27 _qv_28) _qv_29)=(plus _qv_27 (plus _qv_28 _qv_29))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (cons _t_30 _t_31)) (cons _t_30 (append _t_31 nil)))=(cons _t_30 _t_31))
NOW TESTING (forall ((Lst)) (0<=(len _qv_19)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (cons _t_30 _t_31)) (cons _t_30 (append _t_31 nil)))=(cons _t_30 _t_31))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_20 _qv_21)=(append _qv_21 _qv_20)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (cons _t_30 _t_31)) (cons _t_30 (append _t_31 nil)))=(cons _t_30 _t_31))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_22 _qv_23) _qv_24)=(append _qv_22 (append _qv_23 _qv_24))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (cons _t_30 _t_31)) (cons _t_30 (append _t_31 nil)))=(cons _t_30 _t_31))
NOW TESTING (forall (INT INT) ((plus _qv_25 _qv_26)=(plus _qv_26 _qv_25)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (cons _t_30 _t_31)) (cons _t_30 (append _t_31 nil)))=(cons _t_30 _t_31))
NOW TESTING (forall (INT INT INT) ((plus (plus _qv_27 _qv_28) _qv_29)=(plus _qv_27 (plus _qv_28 _qv_29))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (cons _t_30 _t_31)) (append (cons _t_30 _t_31) nil))=(cons _t_30 _t_31))
NOW TESTING (forall ((Lst)) (0<=(len _qv_19)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (cons _t_30 _t_31)) (append (cons _t_30 _t_31) nil))=(cons _t_30 _t_31))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_20 _qv_21)=(append _qv_21 _qv_20)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (cons _t_30 _t_31)) (append (cons _t_30 _t_31) nil))=(cons _t_30 _t_31))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_22 _qv_23) _qv_24)=(append _qv_22 (append _qv_23 _qv_24))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (cons _t_30 _t_31)) (append (cons _t_30 _t_31) nil))=(cons _t_30 _t_31))
NOW TESTING (forall (INT INT) ((plus _qv_25 _qv_26)=(plus _qv_26 _qv_25)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (cons _t_30 _t_31)) (append (cons _t_30 _t_31) nil))=(cons _t_30 _t_31))
NOW TESTING (forall (INT INT INT) ((plus (plus _qv_27 _qv_28) _qv_29)=(plus _qv_27 (plus _qv_28 _qv_29))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len _v_18) (append _v_18 nil))=(append nil _v_18))
NOW TESTING (forall ((Lst)) (0<=(len _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len _v_18) (append _v_18 nil))=(append nil _v_18))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len _v_18) (append _v_18 nil))=(append nil _v_18))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len _v_18) (append _v_18 nil))=(append nil _v_18))
NOW TESTING (forall (INT INT) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len _v_18) (append _v_18 nil))=(append nil _v_18))
NOW TESTING (forall (INT INT INT) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

  backtrack to: ((rotate (len _v_18) (append _v_18 nil))=(append nil _v_18))
  rewritten [3]: ((rotate (len _v_18) (append _v_18 nil))=_v_18)

The Knowledge Scheme currently contains the following lemmas:
	(forall ((Lst)) (0<=(len _qv_19)))
	(forall ((Lst) (Lst)) ((append _qv_20 _qv_21)=(append _qv_21 _qv_20)))
	(forall ((Lst) (Lst) (Lst)) ((append (append _qv_22 _qv_23) _qv_24)=(append _qv_22 (append _qv_23 _qv_24))))
	(forall (INT INT) ((plus _qv_25 _qv_26)=(plus _qv_26 _qv_25)))
	(forall (INT INT INT) ((plus (plus _qv_27 _qv_28) _qv_29)=(plus _qv_27 (plus _qv_28 _qv_29))))

CURRENT SUBGOAL ((rotate (len _t_31)+1 (append (cons _t_30 _t_31) nil))=(cons _t_30 _t_31))
NOW TESTING (forall ((Lst)) (0<=(len _qv_19)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len _t_31)+1 (append (cons _t_30 _t_31) nil))=(cons _t_30 _t_31))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_20 _qv_21)=(append _qv_21 _qv_20)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len _t_31)+1 (append (cons _t_30 _t_31) nil))=(cons _t_30 _t_31))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_22 _qv_23) _qv_24)=(append _qv_22 (append _qv_23 _qv_24))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len _t_31)+1 (append (cons _t_30 _t_31) nil))=(cons _t_30 _t_31))
NOW TESTING (forall (INT INT) ((plus _qv_25 _qv_26)=(plus _qv_26 _qv_25)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len _t_31)+1 (append (cons _t_30 _t_31) nil))=(cons _t_30 _t_31))
NOW TESTING (forall (INT INT INT) ((plus (plus _qv_27 _qv_28) _qv_29)=(plus _qv_27 (plus _qv_28 _qv_29))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len _t_31)+1 (append (cons _t_30 _t_31) nil))=(cons _t_30 _t_31))
NOW TESTING (forall ((Lst)) (0<=(len _qv_19)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len _t_31)+1 (append (cons _t_30 _t_31) nil))=(cons _t_30 _t_31))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_20 _qv_21)=(append _qv_21 _qv_20)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len _t_31)+1 (append (cons _t_30 _t_31) nil))=(cons _t_30 _t_31))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_22 _qv_23) _qv_24)=(append _qv_22 (append _qv_23 _qv_24))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len _t_31)+1 (append (cons _t_30 _t_31) nil))=(cons _t_30 _t_31))
NOW TESTING (forall (INT INT) ((plus _qv_25 _qv_26)=(plus _qv_26 _qv_25)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len _t_31)+1 (append (cons _t_30 _t_31) nil))=(cons _t_30 _t_31))
NOW TESTING (forall (INT INT INT) ((plus (plus _qv_27 _qv_28) _qv_29)=(plus _qv_27 (plus _qv_28 _qv_29))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (cons _t_30 _t_31)) (append (cons _t_30 _t_31) nil))=(cons _t_30 _t_31))
NOW TESTING (forall ((Lst)) (0<=(len _qv_19)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (cons _t_30 _t_31)) (append (cons _t_30 _t_31) nil))=(cons _t_30 _t_31))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_20 _qv_21)=(append _qv_21 _qv_20)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (cons _t_30 _t_31)) (append (cons _t_30 _t_31) nil))=(cons _t_30 _t_31))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_22 _qv_23) _qv_24)=(append _qv_22 (append _qv_23 _qv_24))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (cons _t_30 _t_31)) (append (cons _t_30 _t_31) nil))=(cons _t_30 _t_31))
NOW TESTING (forall (INT INT) ((plus _qv_25 _qv_26)=(plus _qv_26 _qv_25)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (cons _t_30 _t_31)) (append (cons _t_30 _t_31) nil))=(cons _t_30 _t_31))
NOW TESTING (forall (INT INT INT) ((plus (plus _qv_27 _qv_28) _qv_29)=(plus _qv_27 (plus _qv_28 _qv_29))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (cons _t_30 _t_31)) (cons _t_30 (append _t_31 nil)))=(cons _t_30 _t_31))
NOW TESTING (forall ((Lst)) (0<=(len _qv_19)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (cons _t_30 _t_31)) (cons _t_30 (append _t_31 nil)))=(cons _t_30 _t_31))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_20 _qv_21)=(append _qv_21 _qv_20)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (cons _t_30 _t_31)) (cons _t_30 (append _t_31 nil)))=(cons _t_30 _t_31))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_22 _qv_23) _qv_24)=(append _qv_22 (append _qv_23 _qv_24))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (cons _t_30 _t_31)) (cons _t_30 (append _t_31 nil)))=(cons _t_30 _t_31))
NOW TESTING (forall (INT INT) ((plus _qv_25 _qv_26)=(plus _qv_26 _qv_25)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (cons _t_30 _t_31)) (cons _t_30 (append _t_31 nil)))=(cons _t_30 _t_31))
NOW TESTING (forall (INT INT INT) ((plus (plus _qv_27 _qv_28) _qv_29)=(plus _qv_27 (plus _qv_28 _qv_29))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (cons _t_30 _t_31)) (cons _t_30 (append _t_31 nil)))=(cons _t_30 _t_31))
NOW TESTING (forall ((Lst)) (0<=(len _qv_19)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (cons _t_30 _t_31)) (cons _t_30 (append _t_31 nil)))=(cons _t_30 _t_31))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_20 _qv_21)=(append _qv_21 _qv_20)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (cons _t_30 _t_31)) (cons _t_30 (append _t_31 nil)))=(cons _t_30 _t_31))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_22 _qv_23) _qv_24)=(append _qv_22 (append _qv_23 _qv_24))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (cons _t_30 _t_31)) (cons _t_30 (append _t_31 nil)))=(cons _t_30 _t_31))
NOW TESTING (forall (INT INT) ((plus _qv_25 _qv_26)=(plus _qv_26 _qv_25)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (cons _t_30 _t_31)) (cons _t_30 (append _t_31 nil)))=(cons _t_30 _t_31))
NOW TESTING (forall (INT INT INT) ((plus (plus _qv_27 _qv_28) _qv_29)=(plus _qv_27 (plus _qv_28 _qv_29))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (cons _t_30 _t_31)) (append (cons _t_30 _t_31) nil))=(cons _t_30 _t_31))
NOW TESTING (forall ((Lst)) (0<=(len _qv_19)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (cons _t_30 _t_31)) (append (cons _t_30 _t_31) nil))=(cons _t_30 _t_31))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_20 _qv_21)=(append _qv_21 _qv_20)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (cons _t_30 _t_31)) (append (cons _t_30 _t_31) nil))=(cons _t_30 _t_31))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_22 _qv_23) _qv_24)=(append _qv_22 (append _qv_23 _qv_24))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (cons _t_30 _t_31)) (append (cons _t_30 _t_31) nil))=(cons _t_30 _t_31))
NOW TESTING (forall (INT INT) ((plus _qv_25 _qv_26)=(plus _qv_26 _qv_25)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (cons _t_30 _t_31)) (append (cons _t_30 _t_31) nil))=(cons _t_30 _t_31))
NOW TESTING (forall (INT INT INT) ((plus (plus _qv_27 _qv_28) _qv_29)=(plus _qv_27 (plus _qv_28 _qv_29))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len _t_31)+1 (append (cons _t_30 _t_31) nil))=(cons _t_30 _t_31))
NOW TESTING (forall ((Lst)) (0<=(len _qv_19)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len _t_31)+1 (append (cons _t_30 _t_31) nil))=(cons _t_30 _t_31))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_20 _qv_21)=(append _qv_21 _qv_20)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len _t_31)+1 (append (cons _t_30 _t_31) nil))=(cons _t_30 _t_31))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_22 _qv_23) _qv_24)=(append _qv_22 (append _qv_23 _qv_24))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len _t_31)+1 (append (cons _t_30 _t_31) nil))=(cons _t_30 _t_31))
NOW TESTING (forall (INT INT) ((plus _qv_25 _qv_26)=(plus _qv_26 _qv_25)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len _t_31)+1 (append (cons _t_30 _t_31) nil))=(cons _t_30 _t_31))
NOW TESTING (forall (INT INT INT) ((plus (plus _qv_27 _qv_28) _qv_29)=(plus _qv_27 (plus _qv_28 _qv_29))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len _t_31)+1 (append (cons _t_30 _t_31) nil))=(cons _t_30 _t_31))
NOW TESTING (forall ((Lst)) (0<=(len _qv_19)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len _t_31)+1 (append (cons _t_30 _t_31) nil))=(cons _t_30 _t_31))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_20 _qv_21)=(append _qv_21 _qv_20)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len _t_31)+1 (append (cons _t_30 _t_31) nil))=(cons _t_30 _t_31))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_22 _qv_23) _qv_24)=(append _qv_22 (append _qv_23 _qv_24))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len _t_31)+1 (append (cons _t_30 _t_31) nil))=(cons _t_30 _t_31))
NOW TESTING (forall (INT INT) ((plus _qv_25 _qv_26)=(plus _qv_26 _qv_25)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len _t_31)+1 (append (cons _t_30 _t_31) nil))=(cons _t_30 _t_31))
NOW TESTING (forall (INT INT INT) ((plus (plus _qv_27 _qv_28) _qv_29)=(plus _qv_27 (plus _qv_28 _qv_29))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (cons _t_30 _t_31)) (append (cons _t_30 _t_31) nil))=(cons _t_30 _t_31))
NOW TESTING (forall ((Lst)) (0<=(len _qv_19)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (cons _t_30 _t_31)) (append (cons _t_30 _t_31) nil))=(cons _t_30 _t_31))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_20 _qv_21)=(append _qv_21 _qv_20)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (cons _t_30 _t_31)) (append (cons _t_30 _t_31) nil))=(cons _t_30 _t_31))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_22 _qv_23) _qv_24)=(append _qv_22 (append _qv_23 _qv_24))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (cons _t_30 _t_31)) (append (cons _t_30 _t_31) nil))=(cons _t_30 _t_31))
NOW TESTING (forall (INT INT) ((plus _qv_25 _qv_26)=(plus _qv_26 _qv_25)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (cons _t_30 _t_31)) (append (cons _t_30 _t_31) nil))=(cons _t_30 _t_31))
NOW TESTING (forall (INT INT INT) ((plus (plus _qv_27 _qv_28) _qv_29)=(plus _qv_27 (plus _qv_28 _qv_29))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (cons _t_30 _t_31)) (cons _t_30 (append _t_31 nil)))=(cons _t_30 _t_31))
NOW TESTING (forall ((Lst)) (0<=(len _qv_19)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (cons _t_30 _t_31)) (cons _t_30 (append _t_31 nil)))=(cons _t_30 _t_31))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_20 _qv_21)=(append _qv_21 _qv_20)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (cons _t_30 _t_31)) (cons _t_30 (append _t_31 nil)))=(cons _t_30 _t_31))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_22 _qv_23) _qv_24)=(append _qv_22 (append _qv_23 _qv_24))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (cons _t_30 _t_31)) (cons _t_30 (append _t_31 nil)))=(cons _t_30 _t_31))
NOW TESTING (forall (INT INT) ((plus _qv_25 _qv_26)=(plus _qv_26 _qv_25)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (cons _t_30 _t_31)) (cons _t_30 (append _t_31 nil)))=(cons _t_30 _t_31))
NOW TESTING (forall (INT INT INT) ((plus (plus _qv_27 _qv_28) _qv_29)=(plus _qv_27 (plus _qv_28 _qv_29))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (cons _t_30 _t_31)) (cons _t_30 (append _t_31 nil)))=(cons _t_30 _t_31))
NOW TESTING (forall ((Lst)) (0<=(len _qv_19)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (cons _t_30 _t_31)) (cons _t_30 (append _t_31 nil)))=(cons _t_30 _t_31))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_20 _qv_21)=(append _qv_21 _qv_20)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (cons _t_30 _t_31)) (cons _t_30 (append _t_31 nil)))=(cons _t_30 _t_31))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_22 _qv_23) _qv_24)=(append _qv_22 (append _qv_23 _qv_24))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (cons _t_30 _t_31)) (cons _t_30 (append _t_31 nil)))=(cons _t_30 _t_31))
NOW TESTING (forall (INT INT) ((plus _qv_25 _qv_26)=(plus _qv_26 _qv_25)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (cons _t_30 _t_31)) (cons _t_30 (append _t_31 nil)))=(cons _t_30 _t_31))
NOW TESTING (forall (INT INT INT) ((plus (plus _qv_27 _qv_28) _qv_29)=(plus _qv_27 (plus _qv_28 _qv_29))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (cons _t_30 _t_31)) (append (cons _t_30 _t_31) nil))=(cons _t_30 _t_31))
NOW TESTING (forall ((Lst)) (0<=(len _qv_19)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (cons _t_30 _t_31)) (append (cons _t_30 _t_31) nil))=(cons _t_30 _t_31))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_20 _qv_21)=(append _qv_21 _qv_20)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (cons _t_30 _t_31)) (append (cons _t_30 _t_31) nil))=(cons _t_30 _t_31))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_22 _qv_23) _qv_24)=(append _qv_22 (append _qv_23 _qv_24))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (cons _t_30 _t_31)) (append (cons _t_30 _t_31) nil))=(cons _t_30 _t_31))
NOW TESTING (forall (INT INT) ((plus _qv_25 _qv_26)=(plus _qv_26 _qv_25)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len (cons _t_30 _t_31)) (append (cons _t_30 _t_31) nil))=(cons _t_30 _t_31))
NOW TESTING (forall (INT INT INT) ((plus (plus _qv_27 _qv_28) _qv_29)=(plus _qv_27 (plus _qv_28 _qv_29))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len _v_18) (append _v_18 nil))=(append nil _v_18))
NOW TESTING (forall ((Lst)) (0<=(len _qv_0)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len _v_18) (append _v_18 nil))=(append nil _v_18))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len _v_18) (append _v_18 nil))=(append nil _v_18))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len _v_18) (append _v_18 nil))=(append nil _v_18))
NOW TESTING (forall (INT INT) ((plus _qv_6 _qv_7)=(plus _qv_7 _qv_6)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((rotate (len _v_18) (append _v_18 nil))=(append nil _v_18))
NOW TESTING (forall (INT INT INT) ((plus (plus _qv_8 _qv_9) _qv_10)=(plus _qv_8 (plus _qv_9 _qv_10))))
USE ASSUMPTION FAILED

  backtrack to: ((rotate (len _v_18) (append _v_18 nil))=(append nil _v_18))
}
Unknown
sat
