
The Knowledge Scheme currently contains the following lemmas:
	(forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
	(forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
	(forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))

Simplified goal: (forall ((Lst) (Lst)) ((even (len (append x y)))=(even (len (append y x)))))


Base case:       ((even (len (append nil _v_6)))=(even (len (append _v_6 nil))))
{
  {
    ====================
    | Assumptions [0]: (forall ((Nat)) ((even (succ _qv_1))=(!(even _qv_1))))
    | Assumptions [1]: (forall ((Lst)) ((append nil _qv_2)=_qv_2))
    | Assumptions [2]: (forall ((Nat) (Lst) (Lst)) ((append (cons _qv_3 _qv_4) _qv_5)=(cons _qv_3 (append _qv_4 _qv_5))))
    | Assumptions [3]: (forall ((Nat) (Lst)) ((len (cons _qv_6 _qv_7))=(succ (len _qv_7))))
    | Assumptions [4]: (even (len nil))
    ====================
  }
  rewritten [1]: ((even (len _v_6))=(even (len (append _v_6 nil))))

The Knowledge Scheme currently contains the following lemmas:
	(forall ((Nat)) ((succ (succ _qv_7))=_qv_7))
	(forall ((Lst) (Lst)) ((append _qv_8 _qv_9)=(append _qv_9 _qv_8)))
	(forall ((Lst) (Lst) (Lst)) ((append (append _qv_10 _qv_11) _qv_12)=(append _qv_10 (append _qv_11 _qv_12))))

  proven by induction: ((even (len _v_6))=(even (len (append _v_6 nil))))
}
Inductive step:  ((even (len (append (cons _t_7 _t_8) _v_6)))=(even (len (append _v_6 (cons _t_7 _t_8)))))
{
  {
    ====================
    | Assumptions [0]: (forall ((Nat)) ((even (succ _qv_1))=(!(even _qv_1))))
    | Assumptions [1]: (forall ((Lst)) ((append nil _qv_2)=_qv_2))
    | Assumptions [2]: (forall ((Nat) (Lst) (Lst)) ((append (cons _qv_3 _qv_4) _qv_5)=(cons _qv_3 (append _qv_4 _qv_5))))
    | Assumptions [3]: (forall ((Nat) (Lst)) ((len (cons _qv_6 _qv_7))=(succ (len _qv_7))))
    | Assumptions [4]: (even (len nil))
    | Assumptions [5]: (forall ((Lst)) ((even (len (append _t_8 y)))=(even (len (append y _t_8)))))
    | Assumptions [6]: (forall ((Lst)) ((even (len (append y _t_8)))=(even (len (append _t_8 y)))))
    ====================
  }
  rewritten [2]: ((even (len (cons _t_7 (append _t_8 _v_6))))=(even (len (append _v_6 (cons _t_7 _t_8)))))
  rewritten [3]: ((even (succ (len (append _t_8 _v_6))))=(even (len (append _v_6 (cons _t_7 _t_8)))))
  rewritten [0]: ((!(even (len (append _t_8 _v_6))))=(even (len (append _v_6 (cons _t_7 _t_8)))))
  rewritten [5]: ((!(even (len (append _v_6 _t_8))))=(even (len (append _v_6 (cons _t_7 _t_8)))))
CURRENT SUBGOAL ((!(even (len (append _t_8 _v_6))))=(even (len (append _v_6 (cons _t_7 _t_8)))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((!(even (len (append _t_8 _v_6))))=(even (len (append _v_6 (cons _t_7 _t_8)))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((!(even (len (append _t_8 _v_6))))=(even (len (append _v_6 (cons _t_7 _t_8)))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

  backtrack to: ((!(even (len (append _t_8 _v_6))))=(even (len (append _v_6 (cons _t_7 _t_8)))))
  rewritten [5]: ((!(even (len (append _v_6 _t_8))))=(even (len (append _v_6 (cons _t_7 _t_8)))))
CURRENT SUBGOAL ((!(even (len (append _t_8 _v_6))))=(even (len (append _v_6 (cons _t_7 _t_8)))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((!(even (len (append _t_8 _v_6))))=(even (len (append _v_6 (cons _t_7 _t_8)))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((!(even (len (append _t_8 _v_6))))=(even (len (append _v_6 (cons _t_7 _t_8)))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

  backtrack to: ((!(even (len (append _t_8 _v_6))))=(even (len (append _v_6 (cons _t_7 _t_8)))))
CURRENT SUBGOAL ((even (succ (len (append _t_8 _v_6))))=(even (len (append _v_6 (cons _t_7 _t_8)))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((even (succ (len (append _t_8 _v_6))))=(even (len (append _v_6 (cons _t_7 _t_8)))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((even (succ (len (append _t_8 _v_6))))=(even (len (append _v_6 (cons _t_7 _t_8)))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

  backtrack to: ((even (succ (len (append _t_8 _v_6))))=(even (len (append _v_6 (cons _t_7 _t_8)))))
  rewritten [0]: ((!(even (len (append _t_8 _v_6))))=(even (len (append _v_6 (cons _t_7 _t_8)))))
  rewritten [5]: ((!(even (len (append _v_6 _t_8))))=(even (len (append _v_6 (cons _t_7 _t_8)))))
CURRENT SUBGOAL ((!(even (len (append _t_8 _v_6))))=(even (len (append _v_6 (cons _t_7 _t_8)))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((!(even (len (append _t_8 _v_6))))=(even (len (append _v_6 (cons _t_7 _t_8)))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((!(even (len (append _t_8 _v_6))))=(even (len (append _v_6 (cons _t_7 _t_8)))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

  backtrack to: ((!(even (len (append _t_8 _v_6))))=(even (len (append _v_6 (cons _t_7 _t_8)))))
  rewritten [5]: ((!(even (len (append _v_6 _t_8))))=(even (len (append _v_6 (cons _t_7 _t_8)))))
CURRENT SUBGOAL ((!(even (len (append _t_8 _v_6))))=(even (len (append _v_6 (cons _t_7 _t_8)))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((!(even (len (append _t_8 _v_6))))=(even (len (append _v_6 (cons _t_7 _t_8)))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((!(even (len (append _t_8 _v_6))))=(even (len (append _v_6 (cons _t_7 _t_8)))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

  backtrack to: ((!(even (len (append _t_8 _v_6))))=(even (len (append _v_6 (cons _t_7 _t_8)))))
CURRENT SUBGOAL ((even (succ (len (append _t_8 _v_6))))=(even (len (append _v_6 (cons _t_7 _t_8)))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((even (succ (len (append _t_8 _v_6))))=(even (len (append _v_6 (cons _t_7 _t_8)))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((even (succ (len (append _t_8 _v_6))))=(even (len (append _v_6 (cons _t_7 _t_8)))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

  backtrack to: ((even (succ (len (append _t_8 _v_6))))=(even (len (append _v_6 (cons _t_7 _t_8)))))
CURRENT SUBGOAL ((even (len (cons _t_7 (append _t_8 _v_6))))=(even (len (append _v_6 (cons _t_7 _t_8)))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((even (len (cons _t_7 (append _t_8 _v_6))))=(even (len (append _v_6 (cons _t_7 _t_8)))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((even (len (cons _t_7 (append _t_8 _v_6))))=(even (len (append _v_6 (cons _t_7 _t_8)))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

  backtrack to: ((even (len (cons _t_7 (append _t_8 _v_6))))=(even (len (append _v_6 (cons _t_7 _t_8)))))
  rewritten [3]: ((even (succ (len (append _t_8 _v_6))))=(even (len (append _v_6 (cons _t_7 _t_8)))))
  rewritten [0]: ((!(even (len (append _t_8 _v_6))))=(even (len (append _v_6 (cons _t_7 _t_8)))))
  rewritten [5]: ((!(even (len (append _v_6 _t_8))))=(even (len (append _v_6 (cons _t_7 _t_8)))))
CURRENT SUBGOAL ((!(even (len (append _t_8 _v_6))))=(even (len (append _v_6 (cons _t_7 _t_8)))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((!(even (len (append _t_8 _v_6))))=(even (len (append _v_6 (cons _t_7 _t_8)))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((!(even (len (append _t_8 _v_6))))=(even (len (append _v_6 (cons _t_7 _t_8)))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

  backtrack to: ((!(even (len (append _t_8 _v_6))))=(even (len (append _v_6 (cons _t_7 _t_8)))))
  rewritten [5]: ((!(even (len (append _v_6 _t_8))))=(even (len (append _v_6 (cons _t_7 _t_8)))))
CURRENT SUBGOAL ((!(even (len (append _t_8 _v_6))))=(even (len (append _v_6 (cons _t_7 _t_8)))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((!(even (len (append _t_8 _v_6))))=(even (len (append _v_6 (cons _t_7 _t_8)))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((!(even (len (append _t_8 _v_6))))=(even (len (append _v_6 (cons _t_7 _t_8)))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

  backtrack to: ((!(even (len (append _t_8 _v_6))))=(even (len (append _v_6 (cons _t_7 _t_8)))))
CURRENT SUBGOAL ((even (succ (len (append _t_8 _v_6))))=(even (len (append _v_6 (cons _t_7 _t_8)))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((even (succ (len (append _t_8 _v_6))))=(even (len (append _v_6 (cons _t_7 _t_8)))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((even (succ (len (append _t_8 _v_6))))=(even (len (append _v_6 (cons _t_7 _t_8)))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

  backtrack to: ((even (succ (len (append _t_8 _v_6))))=(even (len (append _v_6 (cons _t_7 _t_8)))))
  rewritten [0]: ((!(even (len (append _t_8 _v_6))))=(even (len (append _v_6 (cons _t_7 _t_8)))))
  rewritten [5]: ((!(even (len (append _v_6 _t_8))))=(even (len (append _v_6 (cons _t_7 _t_8)))))
CURRENT SUBGOAL ((!(even (len (append _t_8 _v_6))))=(even (len (append _v_6 (cons _t_7 _t_8)))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((!(even (len (append _t_8 _v_6))))=(even (len (append _v_6 (cons _t_7 _t_8)))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((!(even (len (append _t_8 _v_6))))=(even (len (append _v_6 (cons _t_7 _t_8)))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

  backtrack to: ((!(even (len (append _t_8 _v_6))))=(even (len (append _v_6 (cons _t_7 _t_8)))))
  rewritten [5]: ((!(even (len (append _v_6 _t_8))))=(even (len (append _v_6 (cons _t_7 _t_8)))))
CURRENT SUBGOAL ((!(even (len (append _t_8 _v_6))))=(even (len (append _v_6 (cons _t_7 _t_8)))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((!(even (len (append _t_8 _v_6))))=(even (len (append _v_6 (cons _t_7 _t_8)))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((!(even (len (append _t_8 _v_6))))=(even (len (append _v_6 (cons _t_7 _t_8)))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

  backtrack to: ((!(even (len (append _t_8 _v_6))))=(even (len (append _v_6 (cons _t_7 _t_8)))))
CURRENT SUBGOAL ((even (succ (len (append _t_8 _v_6))))=(even (len (append _v_6 (cons _t_7 _t_8)))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((even (succ (len (append _t_8 _v_6))))=(even (len (append _v_6 (cons _t_7 _t_8)))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((even (succ (len (append _t_8 _v_6))))=(even (len (append _v_6 (cons _t_7 _t_8)))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

  backtrack to: ((even (succ (len (append _t_8 _v_6))))=(even (len (append _v_6 (cons _t_7 _t_8)))))
CURRENT SUBGOAL ((even (len (cons _t_7 (append _t_8 _v_6))))=(even (len (append _v_6 (cons _t_7 _t_8)))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((even (len (cons _t_7 (append _t_8 _v_6))))=(even (len (append _v_6 (cons _t_7 _t_8)))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((even (len (cons _t_7 (append _t_8 _v_6))))=(even (len (append _v_6 (cons _t_7 _t_8)))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

  backtrack to: ((even (len (cons _t_7 (append _t_8 _v_6))))=(even (len (append _v_6 (cons _t_7 _t_8)))))
CURRENT SUBGOAL ((even (len (append (cons _t_7 _t_8) _v_6)))=(even (len (append _v_6 (cons _t_7 _t_8)))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((even (len (append (cons _t_7 _t_8) _v_6)))=(even (len (append _v_6 (cons _t_7 _t_8)))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((even (len (append (cons _t_7 _t_8) _v_6)))=(even (len (append _v_6 (cons _t_7 _t_8)))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

  backtrack to: ((even (len (append (cons _t_7 _t_8) _v_6)))=(even (len (append _v_6 (cons _t_7 _t_8)))))
  rewritten [2]: ((even (len (cons _t_7 (append _t_8 _v_6))))=(even (len (append _v_6 (cons _t_7 _t_8)))))
  rewritten [3]: ((even (succ (len (append _t_8 _v_6))))=(even (len (append _v_6 (cons _t_7 _t_8)))))
  rewritten [0]: ((!(even (len (append _t_8 _v_6))))=(even (len (append _v_6 (cons _t_7 _t_8)))))
  rewritten [5]: ((!(even (len (append _v_6 _t_8))))=(even (len (append _v_6 (cons _t_7 _t_8)))))
CURRENT SUBGOAL ((!(even (len (append _t_8 _v_6))))=(even (len (append _v_6 (cons _t_7 _t_8)))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((!(even (len (append _t_8 _v_6))))=(even (len (append _v_6 (cons _t_7 _t_8)))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((!(even (len (append _t_8 _v_6))))=(even (len (append _v_6 (cons _t_7 _t_8)))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

  backtrack to: ((!(even (len (append _t_8 _v_6))))=(even (len (append _v_6 (cons _t_7 _t_8)))))
  rewritten [5]: ((!(even (len (append _v_6 _t_8))))=(even (len (append _v_6 (cons _t_7 _t_8)))))
CURRENT SUBGOAL ((!(even (len (append _t_8 _v_6))))=(even (len (append _v_6 (cons _t_7 _t_8)))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((!(even (len (append _t_8 _v_6))))=(even (len (append _v_6 (cons _t_7 _t_8)))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((!(even (len (append _t_8 _v_6))))=(even (len (append _v_6 (cons _t_7 _t_8)))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

  backtrack to: ((!(even (len (append _t_8 _v_6))))=(even (len (append _v_6 (cons _t_7 _t_8)))))
CURRENT SUBGOAL ((even (succ (len (append _t_8 _v_6))))=(even (len (append _v_6 (cons _t_7 _t_8)))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((even (succ (len (append _t_8 _v_6))))=(even (len (append _v_6 (cons _t_7 _t_8)))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((even (succ (len (append _t_8 _v_6))))=(even (len (append _v_6 (cons _t_7 _t_8)))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

  backtrack to: ((even (succ (len (append _t_8 _v_6))))=(even (len (append _v_6 (cons _t_7 _t_8)))))
  rewritten [0]: ((!(even (len (append _t_8 _v_6))))=(even (len (append _v_6 (cons _t_7 _t_8)))))
  rewritten [5]: ((!(even (len (append _v_6 _t_8))))=(even (len (append _v_6 (cons _t_7 _t_8)))))
CURRENT SUBGOAL ((!(even (len (append _t_8 _v_6))))=(even (len (append _v_6 (cons _t_7 _t_8)))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((!(even (len (append _t_8 _v_6))))=(even (len (append _v_6 (cons _t_7 _t_8)))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((!(even (len (append _t_8 _v_6))))=(even (len (append _v_6 (cons _t_7 _t_8)))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

  backtrack to: ((!(even (len (append _t_8 _v_6))))=(even (len (append _v_6 (cons _t_7 _t_8)))))
  rewritten [5]: ((!(even (len (append _v_6 _t_8))))=(even (len (append _v_6 (cons _t_7 _t_8)))))
CURRENT SUBGOAL ((!(even (len (append _t_8 _v_6))))=(even (len (append _v_6 (cons _t_7 _t_8)))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((!(even (len (append _t_8 _v_6))))=(even (len (append _v_6 (cons _t_7 _t_8)))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((!(even (len (append _t_8 _v_6))))=(even (len (append _v_6 (cons _t_7 _t_8)))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

  backtrack to: ((!(even (len (append _t_8 _v_6))))=(even (len (append _v_6 (cons _t_7 _t_8)))))
CURRENT SUBGOAL ((even (succ (len (append _t_8 _v_6))))=(even (len (append _v_6 (cons _t_7 _t_8)))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((even (succ (len (append _t_8 _v_6))))=(even (len (append _v_6 (cons _t_7 _t_8)))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((even (succ (len (append _t_8 _v_6))))=(even (len (append _v_6 (cons _t_7 _t_8)))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

  backtrack to: ((even (succ (len (append _t_8 _v_6))))=(even (len (append _v_6 (cons _t_7 _t_8)))))
CURRENT SUBGOAL ((even (len (cons _t_7 (append _t_8 _v_6))))=(even (len (append _v_6 (cons _t_7 _t_8)))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((even (len (cons _t_7 (append _t_8 _v_6))))=(even (len (append _v_6 (cons _t_7 _t_8)))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((even (len (cons _t_7 (append _t_8 _v_6))))=(even (len (append _v_6 (cons _t_7 _t_8)))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

  backtrack to: ((even (len (cons _t_7 (append _t_8 _v_6))))=(even (len (append _v_6 (cons _t_7 _t_8)))))
  rewritten [3]: ((even (succ (len (append _t_8 _v_6))))=(even (len (append _v_6 (cons _t_7 _t_8)))))
  rewritten [0]: ((!(even (len (append _t_8 _v_6))))=(even (len (append _v_6 (cons _t_7 _t_8)))))
  rewritten [5]: ((!(even (len (append _v_6 _t_8))))=(even (len (append _v_6 (cons _t_7 _t_8)))))
CURRENT SUBGOAL ((!(even (len (append _t_8 _v_6))))=(even (len (append _v_6 (cons _t_7 _t_8)))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((!(even (len (append _t_8 _v_6))))=(even (len (append _v_6 (cons _t_7 _t_8)))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((!(even (len (append _t_8 _v_6))))=(even (len (append _v_6 (cons _t_7 _t_8)))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

  backtrack to: ((!(even (len (append _t_8 _v_6))))=(even (len (append _v_6 (cons _t_7 _t_8)))))
  rewritten [5]: ((!(even (len (append _v_6 _t_8))))=(even (len (append _v_6 (cons _t_7 _t_8)))))
CURRENT SUBGOAL ((!(even (len (append _t_8 _v_6))))=(even (len (append _v_6 (cons _t_7 _t_8)))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((!(even (len (append _t_8 _v_6))))=(even (len (append _v_6 (cons _t_7 _t_8)))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((!(even (len (append _t_8 _v_6))))=(even (len (append _v_6 (cons _t_7 _t_8)))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

  backtrack to: ((!(even (len (append _t_8 _v_6))))=(even (len (append _v_6 (cons _t_7 _t_8)))))
CURRENT SUBGOAL ((even (succ (len (append _t_8 _v_6))))=(even (len (append _v_6 (cons _t_7 _t_8)))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((even (succ (len (append _t_8 _v_6))))=(even (len (append _v_6 (cons _t_7 _t_8)))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((even (succ (len (append _t_8 _v_6))))=(even (len (append _v_6 (cons _t_7 _t_8)))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

  backtrack to: ((even (succ (len (append _t_8 _v_6))))=(even (len (append _v_6 (cons _t_7 _t_8)))))
  rewritten [0]: ((!(even (len (append _t_8 _v_6))))=(even (len (append _v_6 (cons _t_7 _t_8)))))
  rewritten [5]: ((!(even (len (append _v_6 _t_8))))=(even (len (append _v_6 (cons _t_7 _t_8)))))
CURRENT SUBGOAL ((!(even (len (append _t_8 _v_6))))=(even (len (append _v_6 (cons _t_7 _t_8)))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((!(even (len (append _t_8 _v_6))))=(even (len (append _v_6 (cons _t_7 _t_8)))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((!(even (len (append _t_8 _v_6))))=(even (len (append _v_6 (cons _t_7 _t_8)))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

  backtrack to: ((!(even (len (append _t_8 _v_6))))=(even (len (append _v_6 (cons _t_7 _t_8)))))
  rewritten [5]: ((!(even (len (append _v_6 _t_8))))=(even (len (append _v_6 (cons _t_7 _t_8)))))
CURRENT SUBGOAL ((!(even (len (append _t_8 _v_6))))=(even (len (append _v_6 (cons _t_7 _t_8)))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((!(even (len (append _t_8 _v_6))))=(even (len (append _v_6 (cons _t_7 _t_8)))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((!(even (len (append _t_8 _v_6))))=(even (len (append _v_6 (cons _t_7 _t_8)))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

  backtrack to: ((!(even (len (append _t_8 _v_6))))=(even (len (append _v_6 (cons _t_7 _t_8)))))
CURRENT SUBGOAL ((even (succ (len (append _t_8 _v_6))))=(even (len (append _v_6 (cons _t_7 _t_8)))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((even (succ (len (append _t_8 _v_6))))=(even (len (append _v_6 (cons _t_7 _t_8)))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((even (succ (len (append _t_8 _v_6))))=(even (len (append _v_6 (cons _t_7 _t_8)))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

  backtrack to: ((even (succ (len (append _t_8 _v_6))))=(even (len (append _v_6 (cons _t_7 _t_8)))))
CURRENT SUBGOAL ((even (len (cons _t_7 (append _t_8 _v_6))))=(even (len (append _v_6 (cons _t_7 _t_8)))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((even (len (cons _t_7 (append _t_8 _v_6))))=(even (len (append _v_6 (cons _t_7 _t_8)))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((even (len (cons _t_7 (append _t_8 _v_6))))=(even (len (append _v_6 (cons _t_7 _t_8)))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

  backtrack to: ((even (len (cons _t_7 (append _t_8 _v_6))))=(even (len (append _v_6 (cons _t_7 _t_8)))))
CURRENT SUBGOAL ((even (len (append (cons _t_7 _t_8) _v_6)))=(even (len (append _v_6 (cons _t_7 _t_8)))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((even (len (append (cons _t_7 _t_8) _v_6)))=(even (len (append _v_6 (cons _t_7 _t_8)))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((even (len (append (cons _t_7 _t_8) _v_6)))=(even (len (append _v_6 (cons _t_7 _t_8)))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

  backtrack to: ((even (len (append (cons _t_7 _t_8) _v_6)))=(even (len (append _v_6 (cons _t_7 _t_8)))))

Base case:       ((even (len (append _v_9 nil)))=(even (len (append nil _v_9))))
{
  {
    ====================
    | Assumptions [0]: (forall ((Nat)) ((even (succ _qv_1))=(!(even _qv_1))))
    | Assumptions [1]: (forall ((Lst)) ((append nil _qv_2)=_qv_2))
    | Assumptions [2]: (forall ((Nat) (Lst) (Lst)) ((append (cons _qv_3 _qv_4) _qv_5)=(cons _qv_3 (append _qv_4 _qv_5))))
    | Assumptions [3]: (forall ((Nat) (Lst)) ((len (cons _qv_6 _qv_7))=(succ (len _qv_7))))
    | Assumptions [4]: (even (len nil))
    | Assumptions [5]: (forall ((Lst)) ((even (len (append _t_8 y)))=(even (len (append y _t_8)))))
    | Assumptions [6]: (forall ((Lst)) ((even (len (append y _t_8)))=(even (len (append _t_8 y)))))
    ====================
  }
  rewritten [1]: ((even (len (append _v_9 nil)))=(even (len _v_9)))

The Knowledge Scheme currently contains the following lemmas:
	(forall ((Nat)) ((succ (succ _qv_10))=_qv_10))
	(forall ((Lst) (Lst)) ((append _qv_11 _qv_12)=(append _qv_12 _qv_11)))
	(forall ((Lst) (Lst) (Lst)) ((append (append _qv_13 _qv_14) _qv_15)=(append _qv_13 (append _qv_14 _qv_15))))

  proven by induction: ((even (len (append _v_9 nil)))=(even (len _v_9)))
}
Inductive step:  ((even (len (append _v_9 (cons _t_10 _t_11))))=(even (len (append (cons _t_10 _t_11) _v_9))))
{
  {
    ====================
    | Assumptions [0]: (forall ((Nat)) ((even (succ _qv_1))=(!(even _qv_1))))
    | Assumptions [1]: (forall ((Lst)) ((append nil _qv_2)=_qv_2))
    | Assumptions [2]: (forall ((Nat) (Lst) (Lst)) ((append (cons _qv_3 _qv_4) _qv_5)=(cons _qv_3 (append _qv_4 _qv_5))))
    | Assumptions [3]: (forall ((Nat) (Lst)) ((len (cons _qv_6 _qv_7))=(succ (len _qv_7))))
    | Assumptions [4]: (even (len nil))
    | Assumptions [5]: (forall ((Lst)) ((even (len (append _t_8 y)))=(even (len (append y _t_8)))))
    | Assumptions [6]: (forall ((Lst)) ((even (len (append y _t_8)))=(even (len (append _t_8 y)))))
    | Assumptions [7]: (forall ((Lst)) ((even (len (append x _t_11)))=(even (len (append _t_11 x)))))
    | Assumptions [8]: (forall ((Lst)) ((even (len (append _t_11 x)))=(even (len (append x _t_11)))))
    ====================
  }
  rewritten [2]: ((even (len (append _v_9 (cons _t_10 _t_11))))=(even (len (cons _t_10 (append _t_11 _v_9)))))
  rewritten [3]: ((even (len (append _v_9 (cons _t_10 _t_11))))=(even (succ (len (append _t_11 _v_9)))))
  rewritten [0]: ((even (len (append _v_9 (cons _t_10 _t_11))))=(!(even (len (append _t_11 _v_9)))))
  rewritten [8]: ((even (len (append _v_9 (cons _t_10 _t_11))))=(!(even (len (append _v_9 _t_11)))))
CURRENT SUBGOAL ((even (len (append _v_9 (cons _t_10 _t_11))))=(!(even (len (append _t_11 _v_9)))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((even (len (append _v_9 (cons _t_10 _t_11))))=(!(even (len (append _t_11 _v_9)))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((even (len (append _v_9 (cons _t_10 _t_11))))=(!(even (len (append _t_11 _v_9)))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

  backtrack to: ((even (len (append _v_9 (cons _t_10 _t_11))))=(!(even (len (append _t_11 _v_9)))))
  rewritten [8]: ((even (len (append _v_9 (cons _t_10 _t_11))))=(!(even (len (append _v_9 _t_11)))))
CURRENT SUBGOAL ((even (len (append _v_9 (cons _t_10 _t_11))))=(!(even (len (append _t_11 _v_9)))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((even (len (append _v_9 (cons _t_10 _t_11))))=(!(even (len (append _t_11 _v_9)))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((even (len (append _v_9 (cons _t_10 _t_11))))=(!(even (len (append _t_11 _v_9)))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

  backtrack to: ((even (len (append _v_9 (cons _t_10 _t_11))))=(!(even (len (append _t_11 _v_9)))))
CURRENT SUBGOAL ((even (len (append _v_9 (cons _t_10 _t_11))))=(even (succ (len (append _t_11 _v_9)))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((even (len (append _v_9 (cons _t_10 _t_11))))=(even (succ (len (append _t_11 _v_9)))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((even (len (append _v_9 (cons _t_10 _t_11))))=(even (succ (len (append _t_11 _v_9)))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

  backtrack to: ((even (len (append _v_9 (cons _t_10 _t_11))))=(even (succ (len (append _t_11 _v_9)))))
  rewritten [0]: ((even (len (append _v_9 (cons _t_10 _t_11))))=(!(even (len (append _t_11 _v_9)))))
  rewritten [8]: ((even (len (append _v_9 (cons _t_10 _t_11))))=(!(even (len (append _v_9 _t_11)))))
CURRENT SUBGOAL ((even (len (append _v_9 (cons _t_10 _t_11))))=(!(even (len (append _t_11 _v_9)))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((even (len (append _v_9 (cons _t_10 _t_11))))=(!(even (len (append _t_11 _v_9)))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((even (len (append _v_9 (cons _t_10 _t_11))))=(!(even (len (append _t_11 _v_9)))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

  backtrack to: ((even (len (append _v_9 (cons _t_10 _t_11))))=(!(even (len (append _t_11 _v_9)))))
  rewritten [8]: ((even (len (append _v_9 (cons _t_10 _t_11))))=(!(even (len (append _v_9 _t_11)))))
CURRENT SUBGOAL ((even (len (append _v_9 (cons _t_10 _t_11))))=(!(even (len (append _t_11 _v_9)))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((even (len (append _v_9 (cons _t_10 _t_11))))=(!(even (len (append _t_11 _v_9)))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((even (len (append _v_9 (cons _t_10 _t_11))))=(!(even (len (append _t_11 _v_9)))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

  backtrack to: ((even (len (append _v_9 (cons _t_10 _t_11))))=(!(even (len (append _t_11 _v_9)))))
CURRENT SUBGOAL ((even (len (append _v_9 (cons _t_10 _t_11))))=(even (succ (len (append _t_11 _v_9)))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((even (len (append _v_9 (cons _t_10 _t_11))))=(even (succ (len (append _t_11 _v_9)))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((even (len (append _v_9 (cons _t_10 _t_11))))=(even (succ (len (append _t_11 _v_9)))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

  backtrack to: ((even (len (append _v_9 (cons _t_10 _t_11))))=(even (succ (len (append _t_11 _v_9)))))
CURRENT SUBGOAL ((even (len (append _v_9 (cons _t_10 _t_11))))=(even (len (cons _t_10 (append _t_11 _v_9)))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((even (len (append _v_9 (cons _t_10 _t_11))))=(even (len (cons _t_10 (append _t_11 _v_9)))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((even (len (append _v_9 (cons _t_10 _t_11))))=(even (len (cons _t_10 (append _t_11 _v_9)))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

  backtrack to: ((even (len (append _v_9 (cons _t_10 _t_11))))=(even (len (cons _t_10 (append _t_11 _v_9)))))
  rewritten [3]: ((even (len (append _v_9 (cons _t_10 _t_11))))=(even (succ (len (append _t_11 _v_9)))))
  rewritten [0]: ((even (len (append _v_9 (cons _t_10 _t_11))))=(!(even (len (append _t_11 _v_9)))))
  rewritten [8]: ((even (len (append _v_9 (cons _t_10 _t_11))))=(!(even (len (append _v_9 _t_11)))))
CURRENT SUBGOAL ((even (len (append _v_9 (cons _t_10 _t_11))))=(!(even (len (append _t_11 _v_9)))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((even (len (append _v_9 (cons _t_10 _t_11))))=(!(even (len (append _t_11 _v_9)))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((even (len (append _v_9 (cons _t_10 _t_11))))=(!(even (len (append _t_11 _v_9)))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

  backtrack to: ((even (len (append _v_9 (cons _t_10 _t_11))))=(!(even (len (append _t_11 _v_9)))))
  rewritten [8]: ((even (len (append _v_9 (cons _t_10 _t_11))))=(!(even (len (append _v_9 _t_11)))))
CURRENT SUBGOAL ((even (len (append _v_9 (cons _t_10 _t_11))))=(!(even (len (append _t_11 _v_9)))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((even (len (append _v_9 (cons _t_10 _t_11))))=(!(even (len (append _t_11 _v_9)))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((even (len (append _v_9 (cons _t_10 _t_11))))=(!(even (len (append _t_11 _v_9)))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

  backtrack to: ((even (len (append _v_9 (cons _t_10 _t_11))))=(!(even (len (append _t_11 _v_9)))))
CURRENT SUBGOAL ((even (len (append _v_9 (cons _t_10 _t_11))))=(even (succ (len (append _t_11 _v_9)))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((even (len (append _v_9 (cons _t_10 _t_11))))=(even (succ (len (append _t_11 _v_9)))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((even (len (append _v_9 (cons _t_10 _t_11))))=(even (succ (len (append _t_11 _v_9)))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

  backtrack to: ((even (len (append _v_9 (cons _t_10 _t_11))))=(even (succ (len (append _t_11 _v_9)))))
  rewritten [0]: ((even (len (append _v_9 (cons _t_10 _t_11))))=(!(even (len (append _t_11 _v_9)))))
  rewritten [8]: ((even (len (append _v_9 (cons _t_10 _t_11))))=(!(even (len (append _v_9 _t_11)))))
CURRENT SUBGOAL ((even (len (append _v_9 (cons _t_10 _t_11))))=(!(even (len (append _t_11 _v_9)))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((even (len (append _v_9 (cons _t_10 _t_11))))=(!(even (len (append _t_11 _v_9)))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((even (len (append _v_9 (cons _t_10 _t_11))))=(!(even (len (append _t_11 _v_9)))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

  backtrack to: ((even (len (append _v_9 (cons _t_10 _t_11))))=(!(even (len (append _t_11 _v_9)))))
  rewritten [8]: ((even (len (append _v_9 (cons _t_10 _t_11))))=(!(even (len (append _v_9 _t_11)))))
CURRENT SUBGOAL ((even (len (append _v_9 (cons _t_10 _t_11))))=(!(even (len (append _t_11 _v_9)))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((even (len (append _v_9 (cons _t_10 _t_11))))=(!(even (len (append _t_11 _v_9)))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((even (len (append _v_9 (cons _t_10 _t_11))))=(!(even (len (append _t_11 _v_9)))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

  backtrack to: ((even (len (append _v_9 (cons _t_10 _t_11))))=(!(even (len (append _t_11 _v_9)))))
CURRENT SUBGOAL ((even (len (append _v_9 (cons _t_10 _t_11))))=(even (succ (len (append _t_11 _v_9)))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((even (len (append _v_9 (cons _t_10 _t_11))))=(even (succ (len (append _t_11 _v_9)))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((even (len (append _v_9 (cons _t_10 _t_11))))=(even (succ (len (append _t_11 _v_9)))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

  backtrack to: ((even (len (append _v_9 (cons _t_10 _t_11))))=(even (succ (len (append _t_11 _v_9)))))
CURRENT SUBGOAL ((even (len (append _v_9 (cons _t_10 _t_11))))=(even (len (cons _t_10 (append _t_11 _v_9)))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((even (len (append _v_9 (cons _t_10 _t_11))))=(even (len (cons _t_10 (append _t_11 _v_9)))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((even (len (append _v_9 (cons _t_10 _t_11))))=(even (len (cons _t_10 (append _t_11 _v_9)))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

  backtrack to: ((even (len (append _v_9 (cons _t_10 _t_11))))=(even (len (cons _t_10 (append _t_11 _v_9)))))
CURRENT SUBGOAL ((even (len (append _v_9 (cons _t_10 _t_11))))=(even (len (append (cons _t_10 _t_11) _v_9))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((even (len (append _v_9 (cons _t_10 _t_11))))=(even (len (append (cons _t_10 _t_11) _v_9))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((even (len (append _v_9 (cons _t_10 _t_11))))=(even (len (append (cons _t_10 _t_11) _v_9))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

  backtrack to: ((even (len (append _v_9 (cons _t_10 _t_11))))=(even (len (append (cons _t_10 _t_11) _v_9))))
  rewritten [2]: ((even (len (append _v_9 (cons _t_10 _t_11))))=(even (len (cons _t_10 (append _t_11 _v_9)))))
  rewritten [3]: ((even (len (append _v_9 (cons _t_10 _t_11))))=(even (succ (len (append _t_11 _v_9)))))
  rewritten [0]: ((even (len (append _v_9 (cons _t_10 _t_11))))=(!(even (len (append _t_11 _v_9)))))
  rewritten [8]: ((even (len (append _v_9 (cons _t_10 _t_11))))=(!(even (len (append _v_9 _t_11)))))
CURRENT SUBGOAL ((even (len (append _v_9 (cons _t_10 _t_11))))=(!(even (len (append _t_11 _v_9)))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((even (len (append _v_9 (cons _t_10 _t_11))))=(!(even (len (append _t_11 _v_9)))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((even (len (append _v_9 (cons _t_10 _t_11))))=(!(even (len (append _t_11 _v_9)))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

  backtrack to: ((even (len (append _v_9 (cons _t_10 _t_11))))=(!(even (len (append _t_11 _v_9)))))
  rewritten [8]: ((even (len (append _v_9 (cons _t_10 _t_11))))=(!(even (len (append _v_9 _t_11)))))
CURRENT SUBGOAL ((even (len (append _v_9 (cons _t_10 _t_11))))=(!(even (len (append _t_11 _v_9)))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((even (len (append _v_9 (cons _t_10 _t_11))))=(!(even (len (append _t_11 _v_9)))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((even (len (append _v_9 (cons _t_10 _t_11))))=(!(even (len (append _t_11 _v_9)))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

  backtrack to: ((even (len (append _v_9 (cons _t_10 _t_11))))=(!(even (len (append _t_11 _v_9)))))
CURRENT SUBGOAL ((even (len (append _v_9 (cons _t_10 _t_11))))=(even (succ (len (append _t_11 _v_9)))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((even (len (append _v_9 (cons _t_10 _t_11))))=(even (succ (len (append _t_11 _v_9)))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((even (len (append _v_9 (cons _t_10 _t_11))))=(even (succ (len (append _t_11 _v_9)))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

  backtrack to: ((even (len (append _v_9 (cons _t_10 _t_11))))=(even (succ (len (append _t_11 _v_9)))))
  rewritten [0]: ((even (len (append _v_9 (cons _t_10 _t_11))))=(!(even (len (append _t_11 _v_9)))))
  rewritten [8]: ((even (len (append _v_9 (cons _t_10 _t_11))))=(!(even (len (append _v_9 _t_11)))))
CURRENT SUBGOAL ((even (len (append _v_9 (cons _t_10 _t_11))))=(!(even (len (append _t_11 _v_9)))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((even (len (append _v_9 (cons _t_10 _t_11))))=(!(even (len (append _t_11 _v_9)))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((even (len (append _v_9 (cons _t_10 _t_11))))=(!(even (len (append _t_11 _v_9)))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

  backtrack to: ((even (len (append _v_9 (cons _t_10 _t_11))))=(!(even (len (append _t_11 _v_9)))))
  rewritten [8]: ((even (len (append _v_9 (cons _t_10 _t_11))))=(!(even (len (append _v_9 _t_11)))))
CURRENT SUBGOAL ((even (len (append _v_9 (cons _t_10 _t_11))))=(!(even (len (append _t_11 _v_9)))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((even (len (append _v_9 (cons _t_10 _t_11))))=(!(even (len (append _t_11 _v_9)))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((even (len (append _v_9 (cons _t_10 _t_11))))=(!(even (len (append _t_11 _v_9)))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

  backtrack to: ((even (len (append _v_9 (cons _t_10 _t_11))))=(!(even (len (append _t_11 _v_9)))))
CURRENT SUBGOAL ((even (len (append _v_9 (cons _t_10 _t_11))))=(even (succ (len (append _t_11 _v_9)))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((even (len (append _v_9 (cons _t_10 _t_11))))=(even (succ (len (append _t_11 _v_9)))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((even (len (append _v_9 (cons _t_10 _t_11))))=(even (succ (len (append _t_11 _v_9)))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

  backtrack to: ((even (len (append _v_9 (cons _t_10 _t_11))))=(even (succ (len (append _t_11 _v_9)))))
CURRENT SUBGOAL ((even (len (append _v_9 (cons _t_10 _t_11))))=(even (len (cons _t_10 (append _t_11 _v_9)))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((even (len (append _v_9 (cons _t_10 _t_11))))=(even (len (cons _t_10 (append _t_11 _v_9)))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((even (len (append _v_9 (cons _t_10 _t_11))))=(even (len (cons _t_10 (append _t_11 _v_9)))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

  backtrack to: ((even (len (append _v_9 (cons _t_10 _t_11))))=(even (len (cons _t_10 (append _t_11 _v_9)))))
  rewritten [3]: ((even (len (append _v_9 (cons _t_10 _t_11))))=(even (succ (len (append _t_11 _v_9)))))
  rewritten [0]: ((even (len (append _v_9 (cons _t_10 _t_11))))=(!(even (len (append _t_11 _v_9)))))
  rewritten [8]: ((even (len (append _v_9 (cons _t_10 _t_11))))=(!(even (len (append _v_9 _t_11)))))
CURRENT SUBGOAL ((even (len (append _v_9 (cons _t_10 _t_11))))=(!(even (len (append _t_11 _v_9)))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((even (len (append _v_9 (cons _t_10 _t_11))))=(!(even (len (append _t_11 _v_9)))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((even (len (append _v_9 (cons _t_10 _t_11))))=(!(even (len (append _t_11 _v_9)))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

  backtrack to: ((even (len (append _v_9 (cons _t_10 _t_11))))=(!(even (len (append _t_11 _v_9)))))
  rewritten [8]: ((even (len (append _v_9 (cons _t_10 _t_11))))=(!(even (len (append _v_9 _t_11)))))
CURRENT SUBGOAL ((even (len (append _v_9 (cons _t_10 _t_11))))=(!(even (len (append _t_11 _v_9)))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((even (len (append _v_9 (cons _t_10 _t_11))))=(!(even (len (append _t_11 _v_9)))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((even (len (append _v_9 (cons _t_10 _t_11))))=(!(even (len (append _t_11 _v_9)))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

  backtrack to: ((even (len (append _v_9 (cons _t_10 _t_11))))=(!(even (len (append _t_11 _v_9)))))
CURRENT SUBGOAL ((even (len (append _v_9 (cons _t_10 _t_11))))=(even (succ (len (append _t_11 _v_9)))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((even (len (append _v_9 (cons _t_10 _t_11))))=(even (succ (len (append _t_11 _v_9)))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((even (len (append _v_9 (cons _t_10 _t_11))))=(even (succ (len (append _t_11 _v_9)))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

  backtrack to: ((even (len (append _v_9 (cons _t_10 _t_11))))=(even (succ (len (append _t_11 _v_9)))))
  rewritten [0]: ((even (len (append _v_9 (cons _t_10 _t_11))))=(!(even (len (append _t_11 _v_9)))))
  rewritten [8]: ((even (len (append _v_9 (cons _t_10 _t_11))))=(!(even (len (append _v_9 _t_11)))))
CURRENT SUBGOAL ((even (len (append _v_9 (cons _t_10 _t_11))))=(!(even (len (append _t_11 _v_9)))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((even (len (append _v_9 (cons _t_10 _t_11))))=(!(even (len (append _t_11 _v_9)))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((even (len (append _v_9 (cons _t_10 _t_11))))=(!(even (len (append _t_11 _v_9)))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

  backtrack to: ((even (len (append _v_9 (cons _t_10 _t_11))))=(!(even (len (append _t_11 _v_9)))))
  rewritten [8]: ((even (len (append _v_9 (cons _t_10 _t_11))))=(!(even (len (append _v_9 _t_11)))))
CURRENT SUBGOAL ((even (len (append _v_9 (cons _t_10 _t_11))))=(!(even (len (append _t_11 _v_9)))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((even (len (append _v_9 (cons _t_10 _t_11))))=(!(even (len (append _t_11 _v_9)))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((even (len (append _v_9 (cons _t_10 _t_11))))=(!(even (len (append _t_11 _v_9)))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

  backtrack to: ((even (len (append _v_9 (cons _t_10 _t_11))))=(!(even (len (append _t_11 _v_9)))))
CURRENT SUBGOAL ((even (len (append _v_9 (cons _t_10 _t_11))))=(even (succ (len (append _t_11 _v_9)))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((even (len (append _v_9 (cons _t_10 _t_11))))=(even (succ (len (append _t_11 _v_9)))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((even (len (append _v_9 (cons _t_10 _t_11))))=(even (succ (len (append _t_11 _v_9)))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

  backtrack to: ((even (len (append _v_9 (cons _t_10 _t_11))))=(even (succ (len (append _t_11 _v_9)))))
CURRENT SUBGOAL ((even (len (append _v_9 (cons _t_10 _t_11))))=(even (len (cons _t_10 (append _t_11 _v_9)))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((even (len (append _v_9 (cons _t_10 _t_11))))=(even (len (cons _t_10 (append _t_11 _v_9)))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((even (len (append _v_9 (cons _t_10 _t_11))))=(even (len (cons _t_10 (append _t_11 _v_9)))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

  backtrack to: ((even (len (append _v_9 (cons _t_10 _t_11))))=(even (len (cons _t_10 (append _t_11 _v_9)))))
CURRENT SUBGOAL ((even (len (append _v_9 (cons _t_10 _t_11))))=(even (len (append (cons _t_10 _t_11) _v_9))))
NOW TESTING (forall ((Nat)) ((succ (succ _qv_0))=_qv_0))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((even (len (append _v_9 (cons _t_10 _t_11))))=(even (len (append (cons _t_10 _t_11) _v_9))))
NOW TESTING (forall ((Lst) (Lst)) ((append _qv_1 _qv_2)=(append _qv_2 _qv_1)))
USE ASSUMPTION FAILED

CURRENT SUBGOAL ((even (len (append _v_9 (cons _t_10 _t_11))))=(even (len (append (cons _t_10 _t_11) _v_9))))
NOW TESTING (forall ((Lst) (Lst) (Lst)) ((append (append _qv_3 _qv_4) _qv_5)=(append _qv_3 (append _qv_4 _qv_5))))
USE ASSUMPTION FAILED

  backtrack to: ((even (len (append _v_9 (cons _t_10 _t_11))))=(even (len (append (cons _t_10 _t_11) _v_9))))
Unknown
sat
